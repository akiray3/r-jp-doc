x
数値ベクトル、複素数ベクトル、またはそのように強制できるオブジェクト、またはメソッドが書かれた他のオブジェクト。
日付オブジェクト
日付オブジェクトまたは文字ベクトル。  (文字ベクトルは as.Date によって変換されます)。
数値ベクトル（日単位）またはクラス "difftime "のオブジェクト。
は、==, !=, <, <=, >=のいずれかです。
date-timeクラスの1つから、出力または要約されるオブジェクト。
format.POSIXctに渡されます。
出力するエントリの最大数を指定します。  デフォルトでは、NULL の場合、getOption("max.print") が使用されます。
計算の有効桁数: 最も重要でない時間単位を正確に表すのに十分な桁数でなければならない。
他のメソッドから、あるいは他のメソッドに渡す引数。
日時オブジェクト
日時オブジェクトまたは文字ベクトル。  (文字ベクトルはas.POSIXct.によって変換される)
数値ベクトル（秒単位）
==, !=, <, <=, >=のいずれか。
シーケンスの開始値。
シーケンスの(最大)終了値。
同じ長さの因子。
パッケージ名：シンボルまたはリテラル文字列。
変数名：シンボルまたはリテラル文字列
パッケージ名：シンボルまたはリテラル文字列。
変数名：シンボルまたはリテラル文字列。
生ベクトル、論理ベクトル、'数値のような'ベクトル（つまり、double型（数値クラス）、整数型、複素数型）、またはメソッドが書かれたオブジェクト。
クラス "hexmode "を継承したメソッド用のオブジェクト。
NULL または、使用する最小フィールド幅を指定する正の整数。
大文字と小文字のどちらを使うかを示す論理値（デフォルト）。
他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
クラス "octmode" を継承するメソッド用のオブジェクト。
NULL または、使用する最小フィールド幅を指定する正の整数。
他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
アトミック・ベクタ、シンボル、コール、またはメソッドが書かれた他のオブジェクト。
要素を取り出す、または要素を置き換えるオブジェクト。
抽出または置換する要素を指定するインデックス。  インデックスは数値または文字ベクトル、あるいは空（欠損）またはNULLです。  文字ベクトルはオブジェクトの名前(行列/配列の場合はdimnames)にマッチします: 詳細は後述の'文字インデックス'を参照してください。  i,j,・・・は、選択から外す要素/スライスを示す負の整数にもできます。[ 1つの引数で配列にインデックスを付ける場合、iはxの次元数と同じ数の列を持つ行列にすることができます。
リテラル文字列または名前（バックティック引用符で囲むこともできる）。  抽出の場合、これは通常（'環境'の項を参照）オブジェクトの名前に部分的にマッチします。
行列と配列の場合。  TRUE の場合、結果は可能な限り小さい次元に強制されます（例を参照）。  これは要素の抽出にのみ有効で、置換には使えません。  詳細はseedropを参照してください。
文字ベクトルによる抽出の際に、[[ の部分一致の可能性を制御します (ほとんどのオブジェクトに適用されますが、'環境' の項を参照してください)。  デフォルトは部分一致なし。  値NAは部分マッチングを許可しますが、部分マッチングが発生すると警告を発します。  FALSEを指定すると、警告なしで部分マッチングを行うことができます。
典型的には、xと同様のクラスの配列のようなRオブジェクトです。
オブジェクト
データ・フレーム。
抽出または置換する要素。  と[[ では、これらは数値か文字、[[ のみでは空か論理です。  数値はifby as.integerとして整数に強制されます。  による置換では、logicalmatrixが許される。
リテラル文字列または名前（バックチッ ク引用符で囲むこともできる）。
論理行列。  TRUE の場合、結果は可能な限り小さい次元に強制されます。  デフォルトでは、1列しか残っていない場合は削除されますが、1行しか残っていない場合は削除されません。
適切な置換値: 必要であれば何度でも繰り返され、強制されることもあります: Coercionセクションを参照してください。  NULLの場合、単一列が選択されるとその列を削除します。
論理: [ を参照してください。
要約または印刷される日付オブジェクト。
計算の有効桁数。
数値またはNULLで、表示するエントリの最大数を指定します。  デフォルトでは、NULL の場合は getOption("max.print") が使用されます。
他のメソッドから、または他のメソッドに渡す引数。
date-time または date オブジェクト。
主に "POSIXlt "オブジェクトで変換に使用されるオプションのタイムゾーン指定。
文字列。  結果の単位。  省略可能。
文字列。  単位と同様だが、省略はできない。
時間間隔を指定する文字列または数値。
timの書式を指定する文字。  デフォルトはロケール固有の時間フォーマットです。
クラス "difftime "を継承したオブジェクト。
他のメソッドに渡す引数。
要素の抽出元または置換先のオブジェクト。
抽出または置換する要素を指定するインデックス。  インデックスは、数値または文字ベクトル、あるいは空（欠損）またはNULLです。  文字ベクトルはオブジェクトの名前(行列/配列の場合はdimnames)にマッチします: 詳細は後述の'文字インデックス'を参照してください。  i,j,・・・は、選択から外す要素/スライスを示す負の整数にもできます。[ 1つの引数で配列にインデックスを付ける場合、iはxの次元数と同じ数の列を持つ行列にすることができます。
リテラル文字列または名前（バックティック引用符で囲むこともできる）。  抽出の場合、これは通常（'環境'の項を参照）オブジェクトの名前に部分的にマッチします。
行列と配列の場合。  TRUE の場合、結果は可能な限り小さい次元に強制されます（例を参照）。  これは要素の抽出にのみ有効で、置換には使えません。  詳細はseedropを参照してください。
文字ベクトルによる抽出の際に、[[ の部分一致の可能性を制御します (ほとんどのオブジェクトに適用されますが、'環境' の項を参照してください)。  デフォルトは部分一致なし。  値NAは部分マッチングを許可するが、部分マッチングが発生すると警告を発する。  FALSEを指定すると、警告なしで部分マッチングを行うことができます。
典型的には、xと同様のクラスの配列のようなRオブジェクトです。
係数
インデックスの指定。
論理。  真の場合、未使用のレベルは削除される。
character: レベルの集合。  因子値はcharacterに強制されます。
クラス "hexmode" を継承するメソッド用のオブジェクト。
NULL または使用する最小フィールド幅を指定する正の整数。
大文字を使うか小文字を使うかを示す論理値（デフォルト）。
他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
要素を抽出する、または要素を置換するオブジェクト。
抽出または置換する要素を指定するインデックス。  インデックスは、数値または文字ベクトル、あるいは空（欠損）またはNULLです。  文字ベクトルはオブジェクトの名前(行列/配列の場合はdimnames)にマッチします: 詳細は後述の'文字インデックス'を参照してください。  i,j,・・・は、選択から外す要素/スライスを示す負の整数にもできます。[ 1つの引数で配列にインデックスを付ける場合、iはxの次元数と同じ数の列を持つ行列にすることができます。
リテラル文字列または名前（バックティック引用符で囲むこともできる）。  抽出の場合、これは通常（'環境'の項を参照）オブジェクトの名前に部分的にマッチします。
行列と配列の場合。  TRUE の場合、結果は可能な限り小さい次元に強制されます（例を参照）。  これは要素の抽出にのみ有効で、置換には使えません。  詳細はseedropを参照してください。
文字ベクトルによる抽出の際に、[[ の部分一致の可能性を制御します (ほとんどのオブジェクトに適用されますが、'環境' の項を参照してください)。  デフォルトは部分一致なし。  値NAは部分マッチングを許可しますが、部分マッチングが発生すると警告を発します。  FALSEを指定すると、警告なしで部分マッチングを行うことができます。
通常は、x と同様のクラスの配列のような R オブジェクト。
任意のRオブジェクト、通常は文字列のベクトル。
print.default()で使用され、文字列を右揃えにするかどうかを示す。
noquote "クラスのオブジェクト。
printなどの次のメソッドに渡されるオプション。
汎用c関数との互換性のため。
package_versionの場合は、R.versionで得られるRversionオブジェクト。
無効な数値バージョンはエラー(デフォルト)になるかどうかを示す論理。
クラス "octmode "を継承したメソッド用のオブジェクト。
NULL または、使用する最小フィールド幅を指定する正の整数。
他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
date-timeクラスのいずれかから出力または要約されるオブジェクト。
format.POSIXctに渡されます。
出力するエントリの最大数を指定します。  デフォルトでは、NULL の場合、getOption("max.print") が使用されます。
計算の有効桁数: 最も重要でない時間単位を正確に表すのに十分な桁数でなければならない。
他のメソッドから、あるいは他のメソッドに渡す引数。
日時オブジェクト
日時オブジェクトまたは文字ベクトル。  (文字ベクトルはas.POSIXct.によって変換される)
数値ベクトル（秒単位）
==, !=, <, <=, >=のいずれか。
date-timeクラスの1つから出力または要約されるオブジェクト。
format.POSIXctに渡されます。
出力するエントリの最大数を指定します。  デフォルトでは、NULL の場合、getOption("max.print") が使用されます。
計算の有効桁数: 最も重要でない時間単位を正確に表すのに十分な桁数でなければならない。
他のメソッドから、あるいは他のメソッドに渡す引数。
日時オブジェクト
日時オブジェクトまたは文字ベクトル。  (文字ベクトルはas.POSIXct.によって変換される)
数値ベクトル（秒単位）
==, !=, <, <=, >=のいずれか。
要素を抽出する、または要素を置換するオブジェクト。
抽出または置換する要素を指定するインデックス。  インデックスは、数値または文字ベクトル、あるいは空（欠損）またはNULLです。  文字ベクトルはオブジェクトの名前(行列/配列の場合はdimnames)にマッチします: 詳細は後述の'文字インデックス'を参照してください。  i,j,・・・は、選択から外す要素/スライスを示す負の整数にもできます。[ 1つの引数で配列にインデックスを付ける場合、iはxの次元数と同じ数の列を持つ行列にすることができます。
リテラル文字列または名前（バックティック引用符で囲むこともできる）。  抽出の場合、これは通常（'環境'の項を参照）オブジェクトの名前に部分的にマッチします。
行列と配列の場合。  TRUE の場合、結果は可能な限り小さい次元に強制されます（例を参照）。  これは要素の抽出にのみ有効で、置換には使えません。  詳細はseedropを参照してください。
文字ベクトルによる抽出の際に、[[ の部分一致の可能性を制御します (ほとんどのオブジェクトに適用されますが、'環境' の項を参照してください)。  デフォルトは部分一致なし。  値NAは部分マッチングを許可するが、部分マッチングが発生すると警告を発する。  FALSEを指定すると、警告なしで部分マッチングを行うことができます。
通常は、xと同様のクラスの配列のようなRオブジェクトです。
要素（文字列を含む）として解釈できる1つ以上のオブジェクト、またはそのように解釈できる要素を持つリスト（またはデータフレーム）。  (as.tableの場合は特定のメソッドに渡される引数、as.data.frameの場合は未使用)
...のすべての要素について削除するレベル。  NAを含まず、useNAが指定されていない場合は、useNA = "ifany "を意味する。  非因子引数に対する解釈は'詳細'を参照。
NA値を表に含めるかどうか。  省略可能。
結果の次元に付ける名前（dimnames 名）。
デフォルトの dnn の構築方法を制御します。  詳細'を参照。
任意のRオブジェクト、またはas.data.frameメソッドのクラス "table "を継承したオブジェクト。as.data.frame.table(x,*)は、配列の "リシェーピング "のために、テーブルでないxに対して明示的に呼び出されることに注意してください。
データフレームの行名を指定する文字ベクトル。
表エントリの列に使用される名前（通常は counts）。
論理: 分類因子は、因子（デフォルト）として返すべきか、文字ベクトルとして返すべきか？
provideDimnames に渡されます。
cat (forwarnings()) に渡す引数。
warnings()が返す "warnings "オブジェクト。
warnings "または "summary.warnings "オブジェクト。
メッセージに "ラベル "を付けるための、xと同じ長さの文字ベクトル。  デフォルトは paste0(seq_len(n), ": ") forn >= 2 where n <- length(x).
メッセージが出力される前に cat()される文字列。
要素を取り出したり、要素を置き換えたりするオブジェクト。
抽出または置換する要素を指定するインデックス。  インデックスは、数値または文字ベクトル、あるいは空（欠損）またはNULLです。  文字ベクトルはオブジェクトの名前(行列/配列の場合はdimnames)にマッチします: 詳細は後述の'文字インデックス'を参照してください。  i,j,・・・は、選択から外す要素/スライスを示す負の整数にもできます。[ 1つの引数で配列にインデックスを付ける場合、iはxの次元数と同じ数の列を持つ行列にすることができます。
リテラル文字列または名前（バックティック引用符で囲むこともできる）。  抽出の場合、これは通常（'環境'の項を参照）オブジェクトの名前に部分的にマッチします。
行列と配列の場合。  TRUE の場合、結果は可能な限り小さい次元に強制されます（例を参照）。  これは要素の抽出にのみ有効で、置換には使えません。  詳細はseedropを参照してください。
文字ベクトルによる抽出の際に、[[ の部分一致の可能性を制御します (ほとんどのオブジェクトに適用されますが、'環境' の項を参照してください)。  デフォルトは部分一致なし。  値NAは部分マッチングを許可しますが、部分マッチングが発生すると警告を発します。  FALSEを指定すると、警告なしで部分マッチングを行うことができます。
典型的には、x と同様のクラスの配列のような R オブジェクトです。
データ・フレーム。
抽出または置換する要素。  と[[ では、これらは数値または文字、[[ のみでは空または論理です。  数値はifby as.integerのように整数に強制されます。  による置換では、logicalmatrixが許される。
リテラル文字列または名前（バックチッ ク引用符で囲むこともできる）。
論理行列。  TRUE の場合、結果は可能な限り小さい次元に強制されます。  デフォルトでは、1列しか残っていない場合は削除されますが、1行しか残っていない場合は削除されません。
適切な置換値: 必要であれば何度でも繰り返され、強制されることもあります: Coercionセクションを参照してください。  NULLの場合、単一列が選択されるとその列を削除します。
論理: [ を参照してください。
要約または印刷される日付オブジェクト。
計算の有効桁数。
数値またはNULLで、表示するエントリの最大数を指定します。  デフォルトでは、NULL の場合は getOption("max.print") が使用されます。
他のメソッドから渡される、または他のメソッドに渡されるさらなる引数。
要素
インデックスの指定 - Extract を参照。
論理。  true の場合、未使用レベルは削除される。
character ： レベルのセット。  因子値はcharacterに強制されます。
package_version の場合は、R.version によって取得される Rversion オブジェクト。
無効な数値バージョンはエラーになる (デフォルト) かどうかを示す論理。
date-timeクラスの1つから出力または要約されるオブジェクト。
format.POSIXctに渡されます。
出力するエントリの最大数を指定します。  デフォルトでは、NULL の場合、getOption("max.print") が使用されます。
計算の有効桁数: 最も重要でない時間単位を正確に表すのに十分な桁数でなければならない。
他のメソッドから、あるいは他のメソッドに渡す引数。
日時オブジェクト
日時オブジェクトまたは文字ベクトル。  (文字ベクトルはas.POSIXct.によって変換される)
数値ベクトル（秒単位）
==, !=, <, <=, >=のいずれか。
date-timeクラスの1つから出力または要約されるオブジェクト。
format.POSIXctに渡されます。
出力するエントリの最大数を指定します。  デフォルトでは、NULL の場合、getOption("max.print") が使用されます。
計算の有効桁数: 最も重要でない時間単位を正確に表すのに十分な桁数でなければならない。
他のメソッドから、あるいは他のメソッドに渡す引数。
日時オブジェクト
日時オブジェクトまたは文字ベクトル。  (文字ベクトルはas.POSIXct.によって変換される)
数値ベクトル（秒単位）
==, !=, <, <=, >=のいずれか。
要素を抽出する、または要素を置換するオブジェクト。
抽出または置換する要素を指定するインデックス。  インデックスは、数値または文字ベクトル、あるいは空（欠損）またはNULLです。  文字ベクトルはオブジェクトの名前(行列/配列の場合はdimnames)にマッチします: 詳細は後述の'文字インデックス'を参照してください。  i,j,・・・は、選択から外す要素/スライスを示す負の整数にもできます。[ 1つの引数で配列にインデックスを付ける場合、iはxの次元数と同じ数の列を持つ行列にすることができます。
リテラル文字列または名前（バックティック引用符で囲むこともできる）。  抽出の場合、これは通常（'環境'の項を参照）オブジェクトの名前に部分的にマッチします。
行列と配列の場合。  TRUE の場合、結果は可能な限り小さい次元に強制されます（例を参照）。  これは要素の抽出にのみ有効で、置換には使えません。  詳細はseedropを参照してください。
文字ベクトルによる抽出の際に、[[ の部分一致の可能性を制御します (ほとんどのオブジェクトに適用されますが、'環境' の項を参照してください)。  デフォルトは部分一致なし。  値NAは部分マッチングを許可するが、部分マッチングが発生すると警告を発する。  FALSEを指定すると、警告なしで部分マッチングを行うことができます。
典型的には、x と同様のクラスの配列のような R オブジェクトです。
データ・フレーム。
抽出または置換する要素。  と[[ では、これらは数値または文字、[[ のみでは空または論理です。  数値はifby as.integerのように整数に強制されます。  による置換では、logicalmatrixが許される。
リテラル文字列または名前（バックチッ ク引用符で囲むこともできる）。
論理行列。  TRUE の場合、結果は可能な限り小さい次元に強制されます。  デフォルトでは、1列しか残っていない場合は削除されますが、1行しか残っていない場合は削除されません。
適切な置換値: 必要であれば何度でも繰り返され、強制されることもあります: Coercionセクションを参照してください。  NULLの場合、単一列が選択されるとその列を削除します。
論理: [ を参照。
係数
インデックスの指定 - Extract を参照。
論理。  true の場合、未使用のレベルは削除されます。
character: レベルのセット。  因子値はcharacterに強制されます。
package_version の場合は、R.version によって取得される Rversion オブジェクト。
無効な数値バージョンはエラーになる (デフォルト) かどうかを示す論理。
date-timeクラスの1つから出力または要約されるオブジェクト。
format.POSIXctに渡されます。
出力するエントリの最大数を指定します。  デフォルトでは、NULL の場合、getOption("max.print") が使用されます。
計算の有効桁数: 最も重要でない時間単位を正確に表すのに十分な桁数でなければならない。
他のメソッドから、あるいは他のメソッドに渡す引数。
日時オブジェクト
日時オブジェクトまたは文字ベクトル。  (文字ベクトルはas.POSIXct.によって変換される)
数値ベクトル（秒単位）
==, !=, <, <=, >=のいずれか。
要素を抽出する、または要素を置換するオブジェクト。
抽出または置換する要素を指定するインデックス。  インデックスは、数値または文字ベクトル、あるいは空（欠損）またはNULLです。  文字ベクトルはオブジェクトの名前(行列/配列の場合はdimnames)にマッチします: 詳細は後述の'文字インデックス'を参照してください。  i,j,・・・は、選択から外す要素/スライスを示す負の整数にもできます。[ 1つの引数で配列にインデックスを付ける場合、iはxの次元数と同じ数の列を持つ行列にすることができます。
リテラル文字列または名前（バックティック引用符で囲むこともできる）。  抽出の場合、これは通常（'環境'の項を参照）オブジェクトの名前に部分的にマッチします。
行列と配列の場合。  TRUE の場合、結果は可能な限り小さい次元に強制されます（例を参照）。  これは要素の抽出にのみ有効で、置換には使えません。  詳細はseedropを参照してください。
文字ベクトルによる抽出の際に、[[ の部分一致の可能性を制御します (ほとんどのオブジェクトに適用されますが、'環境' の項を参照してください)。  デフォルトは部分一致なし。  値NAは部分マッチングを許可するが、部分マッチングが発生すると警告を発する。  FALSEを指定すると、警告なしで部分マッチングを行うことができます。
典型的には、x と同様のクラスの配列のような R オブジェクトです。
データ・フレーム。
抽出または置換する要素。  と[[ では、これらは数値または文字、[[ のみでは空または論理です。  数値はifby as.integerのように整数に強制されます。  による置換では、logicalmatrixが許される。
リテラル文字列または名前（バックチッ ク引用符で囲むこともできる）。
論理行列。  TRUE の場合、結果は可能な限り小さい次元に強制されます。  デフォルトでは、1列しか残っていない場合は削除されますが、1行しか残っていない場合は削除されません。
適切な置換値: 必要であれば何度でも繰り返され、強制されることもあります: Coercionセクションを参照してください。  NULLの場合、単一列が選択されるとその列を削除します。
論理: [ を参照してください。
要約または印刷される日付オブジェクト。
計算の有効桁数。
数値またはNULLで、表示するエントリの最大数を指定します。  デフォルトでは、NULL の場合は getOption("max.print") が使用されます。
他のメソッドから、または他のメソッドに渡す引数。
date-time または date オブジェクト。
主に "POSIXlt "オブジェクトで変換に使用されるオプションのタイムゾーン指定。
文字列。  結果の単位。  省略可能。
文字列。  単位と同様だが、省略はできない。
時間間隔を指定する文字列または数値。
timの書式を指定する文字。  デフォルトはロケール固有の時間フォーマットです。
クラス "difftime "を継承したオブジェクト。
他のメソッドに渡す引数。
係数
インデックスの指定。
論理。  true の場合、未使用レベルは削除されます。
character ： レベルのセット。  因子値はcharacterに強制されます。
package_version の場合は、R.version によって取得される Rversion オブジェクト。
無効な数値バージョンはエラーになる (デフォルト) かどうかを示す論理。
date-timeクラスの1つから出力または要約されるオブジェクト。
format.POSIXctに渡されます。
出力するエントリの最大数を指定します。  デフォルトでは、NULL の場合、getOption("max.print") が使用されます。
計算の有効桁数: 最も重要でない時間単位を正確に表すのに十分な桁数でなければならない。
他のメソッドから、あるいは他のメソッドに渡す引数。
日時オブジェクト
日時オブジェクトまたは文字ベクトル。  (文字ベクトルはas.POSIXct.によって変換される)
数値ベクトル（秒単位）
==, !=, <, <=, >=のいずれか。
date-timeクラスの1つから出力または要約されるオブジェクト。
format.POSIXctに渡されます。
出力するエントリの最大数を指定します。  デフォルトでは、NULL の場合、getOption("max.print") が使用されます。
計算の有効桁数: 最も重要でない時間単位を正確に表すのに十分な桁数でなければならない。
他のメソッドから、あるいは他のメソッドに渡す引数。
日時オブジェクト
日時オブジェクトまたは文字ベクトル。  (文字ベクトルはas.POSIXct.によって変換される)
数値ベクトル（秒単位）
==, !=, <, <=, >=のいずれか。
正式に定義された（S4）クラスのオブジェクト。
スロットの文字列名（引用符で囲むかどうか）。  classofオブジェクトの定義にあるスロット名でなければなりません。
この値は、オブジェクトのクラスの定義でこのスロットに対して定義されているクラスと互換性のあるクラスのものでなければならない。
正式に定義された(S4)クラスのオブジェクト。
スロットの文字列名。  オブジェクトのクラスの定義におけるスロットの名前でなければなりません。
この値は、オブジェクトのクラスの定義でこのスロットに対して定義されたクラスと互換性のあるクラスのものでなければなりません。
数値ベクトルまたは複素数ベクトル、またはそのようなベクトルに強制できるオブジェクト、またはメソッドが記述されているその他のオブジェクト。
date-time または date オブジェクト。
主に "POSIXlt "オブジェクトで変換に使用するオプションのタイムゾーン指定。
文字列。  結果の単位。  省略可能。
文字列。  単位と同様だが、省略はできない。
時間間隔を指定する文字列または数値。
timの書式を指定する文字。  デフォルトはロケール固有の時間フォーマットです。
クラス "difftime "を継承したオブジェクト。
他のメソッドに渡す引数。
数値ベクトルや複素数ベクトル、またはそのように強制できるオブジェクト、またはメソッドが書かれた他のオブジェクト。
date-time または date オブジェクト。
主に "POSIXlt "オブジェクトに使用される、変換に使用されるオプションのタイムゾーン指定。
文字列。  結果の単位。  省略可能。
文字列。  単位と同様だが、省略はできない。
時間間隔を指定する文字列または数値。
timの書式を指定する文字。  デフォルトはロケール固有の時間フォーマットです。
クラス "difftime "を継承したオブジェクト。
他のメソッドに渡す引数。
生ベクトル、論理ベクトル、'数値に似た'ベクトル（double型（numericクラス）、 integer型、complex型）、またはメソッドが書かれたオブジェクト。
クラス "hexmode "を継承したメソッド用のオブジェクト。
NULL または、使用する最小フィールド幅を指定する正の整数。
大文字と小文字のどちらを使うかを示す論理値（デフォルト）。
他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
クラス "octmode" を継承するメソッド用のオブジェクト。
NULL または、使用する最小フィールド幅を指定する正の整数。
他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
生ベクトル、論理ベクトル、'数値のような'ベクトル（double型（numericクラス）、 integer型、複素数型）、またはメソッドが書かれたオブジェクト。
数値または複素数の行列またはベクトル。
数値または複素数ベクトル、またはそのように強制できるオブジェクト、またはメソッドが記述されているその他のオブジェクト。
数値ベクトルまたは複素数ベクトル、またはそのような値に強制できるオブジェクト、またはメソッドが書かれた他のオブジェクト。
vector または NULL: マッチする値。長いベクトルがサポートされます。
vector または NULL: マッチされる値。長いベクトルはサポートされません。
マッチしなかった場合に返される値。  integer に強制されることに注意してください。
マッチできない値のベクトル。  このベクトル内の値にマッチするx内の値には、マッチ値が代入されます。  歴史的な理由から、FALSEはNULLに等しい。
通常、ベクトルまたは配列。
外積で使用する関数。viamatch.funで見つかる（特殊なケース "*"を除く）。
FUNに渡されるオプション引数。
ベクトルまたは配列。
ベクトルまたは配列。
引用符で囲まれた文字列でもよい。
XとYのdimnamesの積であるdimnamesを指定する。
FUNに渡すオプション引数。
数値ベクトル、複素数ベクトル、またはそのように強制できるオブジェクト、またはメソッドが書かれた他のオブジェクト。
数値ベクトルまたは複素数ベクトル、またはそのようなオブジェクトに強制することができるオブジェクト、またはそのようなオブジェクトのためのメソッドが書かれている他のオブジェクト。
日付オブジェクト
日付オブジェクトまたは文字ベクトル。  (文字ベクトルは as.Date によって変換されます)。
数値ベクトル（日単位）またはクラス "difftime "のオブジェクト。
は、==, !=, <, <=, >=のいずれかです。
date-timeクラスの1つから出力または要約されるオブジェクト。
format.POSIXctに渡されます。
出力するエントリの最大数を指定します。  デフォルトでは、NULL の場合、getOption("max.print") が使用されます。
計算の有効桁数: 最も重要でない時間単位を正確に表すのに十分な桁数でなければならない。
他のメソッドから、あるいは他のメソッドに渡す引数。
日時オブジェクト
日時オブジェクトまたは文字ベクトル。  (文字ベクトルはas.POSIXct.によって変換される)
数値ベクトル（秒単位）
==, !=, <, <=, >=のいずれか。
アトミック・ベクタ、シンボル、コール、またはメソッドが書かれた他のオブジェクト。
変数名（引用符で囲むこともできる）。
xに代入される値。
変数名（引用符で囲むこともできる）。
xに代入される値。
atomicベクター、シンボル、呼び出し、またはその他のオブジェクト。
変数名（引用符で囲まれることもある）。
xに代入される値。
アトミック・ベクター、シンボル、コール、またはその他のオブジェクト。
アトミック・ベクター、シンボル、コール、またはメソッドが書かれた他のオブジェクト。
アトミック・ベクター、シンボル、コール、またはメソッドが書かれた他のオブジェクト。
生ベクトル、論理ベクトル、'数値のような'ベクトル（double型（numericクラス）、 integer型、complex型）、またはメソッドが書かれたオブジェクト。
クラス "hexmode "を継承したメソッド用のオブジェクト。
NULL または、使用する最小フィールド幅を指定する正の整数。
大文字と小文字のどちらを使うかを示す論理値（デフォルト）。
他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
クラス "octmode" を継承するメソッド用のオブジェクト。
NULL または、使用する最小フィールド幅を指定する正の整数。
他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
生ベクトル、論理ベクトル、'数値のような' ベクトル (double 型 (numeric クラス)、 integer 型、 complex 型)、またはメソッドが書かれたオブジェクト。
記号式。
要素を取り出す、あるいは要素を置き換えるオブジェクト。
抽出または置換する要素を指定するインデックス。  インデックスは数値または文字ベクトル、あるいは空（欠損）またはNULLです。  文字ベクトルはオブジェクトの名前(行列/配列の場合はdimnames)にマッチします: 詳細は後述の'文字インデックス'を参照してください。  i,j,・・・は、選択から外す要素/スライスを示す負の整数にもできます。[ 1つの引数で配列にインデックスを付ける場合、iはxの次元数と同じ数の列を持つ行列にすることができます。
リテラル文字列または名前（バックティック引用符で囲むこともできる）。  抽出の場合、これは通常（'環境'の項を参照）オブジェクトの名前に部分的にマッチします。
行列と配列の場合。  TRUE の場合、結果は可能な限り小さい次元に強制されます（例を参照）。  これは要素の抽出にのみ有効で、置換には使えません。  詳細はseedropを参照してください。
文字ベクトルによる抽出の際に、[[ の部分一致の可能性を制御します (ほとんどのオブジェクトに適用されますが、'環境' の項を参照してください)。  デフォルトは部分マッチングなし。  値NAは部分マッチングを許可するが、部分マッチングが発生すると警告を発する。  FALSEを指定すると、警告なしで部分マッチングを行うことができます。
典型的には、xと同様のクラスの配列のようなRオブジェクトです。
package_versionの場合は、R.versionで得られるRversionオブジェクト。
無効な数値バージョンはエラーになる (デフォルト) かどうかを示す論理。
要素を抽出する、あるいは要素を置換するオブジェクト。
抽出または置換する要素を指定するインデックス。  インデックスは、数値または文字ベクトル、あるいは空（欠損）またはNULLです。  文字ベクトルはオブジェクトの名前(行列/配列の場合はdimnames)にマッチします: 詳細は後述の'文字インデックス'を参照してください。  i,j,・・・は、選択から外す要素/スライスを示す負の整数にもできます。[ 1つの引数で配列にインデックスを付ける場合、iはxの次元数と同じ数の列を持つ行列にすることができます。
リテラル文字列または名前（バックティック引用符で囲むこともできる）。  抽出の場合、これは通常（'環境'の項を参照）オブジェクトの名前に部分的にマッチします。
行列と配列の場合。  TRUE の場合、結果は可能な限り小さい次元に強制されます（例を参照）。  これは要素の抽出にのみ有効で、置換には使えません。  詳細はseedropを参照してください。
文字ベクトルによる抽出の際に、[[ の部分一致の可能性を制御します (ほとんどのオブジェクトに適用されますが、'環境' の項を参照してください)。  デフォルトは部分一致なし。  値NAは部分マッチングを許可するが、部分マッチングが発生すると警告を発する。  FALSEを指定すると、警告なしで部分マッチングを行うことができます。
典型的には、x と同様のクラスの配列のような R オブジェクトです。
データ・フレーム。
抽出または置換する要素。  と[[ では、これらは数値または文字、[[ のみでは空または論理です。  数値はifby as.integerのように整数に強制されます。  による置換では、logicalmatrixが許される。
リテラル文字列または名前（バックチッ ク引用符で囲むこともできる）。
論理行列。  TRUE の場合、結果は可能な限り小さい次元に強制されます。  デフォルトでは、1列しか残っていない場合は削除されますが、1行しか残っていない場合は削除されません。
適切な置換値: 必要であれば何度でも繰り返され、強制されることもあります: Coercionセクションを参照してください。  NULLの場合、単一列が選択されるとその列を削除します。
論理: [ を参照。
省略される名前の文字ベクトル、またはas.characterによって文字ベクトルに強制されるオブジェクト。
省略形の最小長。
論理: 小文字を最初に削除すべきか。
論理：ドット(".")を付加すべきか？
論理：最小長を厳密に守るべきか？strict = TRUEに設定すると、一意でない文字列が返される可能性があることに注意。
デフォルトの "left.keeped "で使用される方法を指定する文字列。  部分一致を許す。
logical: 名前（元のベクトル付き）を返すかどうか。
数値または複素数のベクトルまたは配列。
数値または複素数ベクトル。
数値または複素数ベクトル。
環境。
バインディングをロックすべきかどうかを指定する論理。
名前オブジェクトまたは文字列。
0個または1個の引数をとる関数。
データのベクトルで、通常は少数の異なる値を取ります。
xが取り得るユニークな値（文字列）を表すオプションのベクトル。  デフォルトは、as.character(x)が取った値の一意な集合をxの昇順にソートしたものである。
ラベルの重複値は、x の異なる値を同じ因子レベルに対応付けるために使用できます。
レベルのセットを形成するときに除外される値のベクトル。  これは、x と同じレベル・セットを持つ因子であるか、または文字である必要があります。
レベルを (指定された順序で) 並べ替えられたものと見なすかどうかを決定する論理フラグ。
詳細'を参照。
(in ordered(.)) ：ordered 自体を除いた上記のいずれか。
NA レベルが使用される場合のみ、つまり if any(is.na(x)) の場合のみ追加されます。
最上位タスクが正常に完了するたびに呼び出される関数。  戻り値は、コールバックをアクティブなコールバックのリストに保持するか、破棄するかを示す論理値でなければならない。
指定された場合、これはコールバック関数fの呼び出しにおける5番目の引数である。
整数の添字は1ベースであり、つまり最初の要素は1である。現在登録されているハンドラの名前は、getTaskCallbackNamesを使用して利用可能であり、addTaskCallbackの呼び出しでも返される。
character: 使用する名前。
マッチする空でない文字列。  fixed = FALSE の場合、拡張正規表現が含まれる。可能であれば、as.characterによって文字列に強制される。
可能であれば、as.characterによって文字ベクトルに強制されます。
マッチに許される最大距離。  整数、またはパターン長×最大変換コスト（対応する分数以下の最も小さい整数に置き換えられる）の分数、または可能な構成要素のリストで表されるcost:最大数/マッチコスト（一般化レーベンシュタイン距離）の分数all.Max.Max.Max.Max.Max.Max.Max.Max.Max.Max.Max.Max.Max：挿入：挿入の最大数/分数削除：削除の最大数/分数置換：置換の最大数/分数costが与えられない場合、allのデフォルトは10%になり、その他の変換数の境界のデフォルトはallになる。構成要素名は省略可能です。
一般化レーベンシュタイン距離を計算するためのそれぞれのコストを与える挿入、削除、置換に部分的にマッチする名前を持つ数値ベクトルまたはリスト、または可能であればas.integerを介して整数に強制されるNULL（デフォルト）。
FALSEの場合、パターンマッチングは大文字小文字を区別し、TRUEの場合、マッチング中に大文字小文字は無視されます。
FALSEの場合は、決定されたマッチの(整数)インデックスを含むベクトルが返され、 TRUEの場合は、マッチした要素そのものを含むベクトルが返されます。
論理。  TRUE (デフォルト) の場合、パターンは文字通り (そのまま) マッチされます。  それ以外の場合は、正規表現としてマッチします。
論理。マルチバイトのロケールでは、比較は文字単位 (デフォルト) かバイト単位かを指定します。
マッチする空でない文字列。  fixed = FALSEの場合、拡張正規表現を含む必要がある。可能であれば、as.characterによって文字列に強制されます。
可能であれば、as.characterによって文字ベクトルに強制されます。
マッチに許される最大距離。  整数、またはパターン長×最大変換コスト（対応する分数以下の最も小さい整数に置き換えられる）の分数、または可能な構成要素のリストで表されるcost:最大数/マッチコスト（一般化レーベンシュタイン距離）の分数all.Max.Max.Max.Max.Max.Max.Max.Max.Max.Max.Max.Max.Max：挿入：挿入の最大数/分数削除：削除の最大数/分数置換：置換の最大数/分数costが与えられない場合、allのデフォルトは10%になり、その他の変換数の境界のデフォルトはallになる。構成要素名は省略可能です。
一般化レーベンシュタイン距離を計算するためのそれぞれのコストを与える挿入、削除、置換に部分的にマッチする名前を持つ数値ベクトルまたはリスト、または可能であればas.integerを介して整数に強制されるNULL（デフォルト）。
FALSEの場合、パターンマッチングは大文字小文字を区別し、TRUEの場合、マッチング中に大文字小文字は無視されます。
FALSEの場合は、決定されたマッチの(整数)インデックスを含むベクトルが返され、 TRUEの場合は、マッチした要素そのものを含むベクトルが返されます。
論理。  TRUE (デフォルト) の場合、パターンは文字通り (そのまま) マッチされます。  それ以外の場合は、正規表現としてマッチします。
マルチバイトのロケールでは、比較を文字単位 (デフォルト) にするか バイト単位にするかを指定します。
オブジェクトを指定します。
強制またはテストされるオブジェクト。
すべての値をコピーするか、(デフォルトでは)名前がドットで始まらないものだけをコピーするかを示す論理。
結果のリストの名前をソートするかどうかを示す論理。  これは多少コストがかかるが、環境の比較には有用であることに注意。
0個以上の論理ベクトル。  長さがゼロの他のオブジェクトは無視され、残りはどのクラスも無視した論理に強制される。
を論理的に無視する。  trueの場合、結果が計算される前にNAの値が取り除かれる。
Rオブジェクト。
ターゲットと比較される他のRオブジェクト。
特に以下の2つは数値比較のためのものである：
numeric≧0。許容値より小さい差は報告されない。  デフォルト値は1.5e-8に近い。
NULL または numeric > 0, 通常は長さ1またはlength(target)。  詳細'を参照。
平均(絶対または相対)差を計算する際に、 target == currentcases をカウントするかどうかを示す論理値。  デフォルトのFALSEは、targetとcurrentが数箇所しか違わないような場合、誤解を招く可能性があります。
errは相対誤差、絶対誤差、またはスケーリングされた誤差、whatは誤差の種類を示す文字列の2つの引数からなる関数である。
ターゲットとカレントの属性（名前以外）を比較するかどうかを示す論理。
リスト比較を、整数インデックスではなく、名前（一致する場合）で異なる構成要素を報告すべきかどうかを示す論理。  これは ... の後に来るので、フルネームで指定しなければならないことに注意。
lsに渡される論理は、"隠された "オブジェクトも環境で考慮すべきかどうかを示す。
environmentメソッドに対して: 「約束を強制」するかどうか、つまり、典型的な形式関数の引数が比較のために評価されるかどうかを示す論理。  falseの場合、2つの環境のオブジェクトの名前のみが等しいかどうかチェックされる。
2つのnls()フィットを比較する場合など、予期しない場合にはcheck.environment=FALSEを設定する必要があります。
ターゲットとカレントの "tzone "属性を比較すべきかどうかを示す論理。
ターゲットとカレントの名前(.)を比較するかどうかを示す論理。
Rオブジェクト。
targetと比較される他のRオブジェクト。
特に以下の2つは数値比較のためのものである：
数値≧0。許容誤差より小さい差は報告されない。  デフォルト値は1.5e-8に近い。
NULL または numeric > 0, 通常は長さ1またはlength(target)。  詳細'を参照。
平均(絶対または相対)差を計算する際に、 target == currentcases をカウントするかどうかを示す論理値。  デフォルトのFALSEは、targetとcurrentが数ヶ所しか違わないような場合に誤解を招く可能性がある。
errは相対誤差、絶対誤差、またはスケーリングされた誤差、whatは誤差の種類を示す文字列の2つの引数からなる関数である。
ターゲットとカレントの属性（名前以外）を比較するかどうかを示す論理。
リスト比較を、整数インデックスではなく、名前（一致する場合）で異なる構成要素を報告すべきかどうかを示す論理。  これは ... の後に来るので、フルネームで指定しなければならないことに注意。
lsに渡される論理は、"隠された "オブジェクトも環境で考慮すべきかどうかを示す。
environmentメソッドに対して: 「約束を強制」するかどうか、つまり、典型的な形式関数の引数が比較のために評価されるかどうかを示す論理。  falseの場合、2つの環境のオブジェクトの名前のみが等しいかどうかチェックされる。
2つのnls()フィットを比較する場合など、予期しない場合にはcheck.environment=FALSEを設定する必要があります。
ターゲットとカレントの "tzone "属性を比較すべきかどうかを示す論理。
ターゲットとカレントの名前(.)を比較するかどうかを示す論理。
Rオブジェクト。
targetと比較される他のRオブジェクト。
特に以下の2つは数値比較のためのものである：
数値≧0。許容誤差より小さい差は報告されない。  デフォルト値は1.5e-8に近い。
NULL または numeric > 0, 通常は長さ1またはlength(target)。  詳細'を参照。
平均(絶対または相対)差を計算する際に、 target == currentcases をカウントするかどうかを示す論理値。  デフォルトのFALSEは、targetとcurrentが数箇所しか違わないような場合、誤解を招く可能性がある。
errは相対誤差、絶対誤差、またはスケーリングされた誤差、whatは誤差の種類を示す文字列の2つの引数からなる関数である。
ターゲットとカレントの属性（名前以外）を比較するかどうかを示す論理。
リスト比較を、整数インデックスではなく、名前（一致する場合）で異なる構成要素を報告すべきかどうかを示す論理。  これは ... の後に来るので、フルネームで指定しなければならないことに注意。
lsに渡される論理は、"隠された "オブジェクトも環境で考慮すべきかどうかを示す。
environmentメソッドの場合：「約束を強制」するかどうか、つまり、通常、形式的な関数の引数が比較のために評価されるかどうかを示す論理。  falseの場合、2つの環境のオブジェクトの名前のみが等しいかどうかチェックされる。
2つのnls()フィットを比較する場合など、予期しない場合にはcheck.environment=FALSEを設定する必要があります。
ターゲットとカレントの "tzone "属性を比較すべきかどうかを示す論理。
ターゲットとカレントの名前(.)を比較するかどうかを示す論理。
Rオブジェクト。
targetと比較される他のRオブジェクト。
特に以下の2つは数値比較のためのものである：
数値≥0。許容誤差より小さい差は報告されない。  デフォルト値は1.5e-8に近い。
NULL または numeric > 0, 通常は長さ1またはlength(target)。  詳細'を参照。
平均(絶対または相対)差を計算する際に、 target == currentcases をカウントするかどうかを示す論理値。  デフォルトのFALSEは、targetとcurrentが数箇所しか違わないような場合、誤解を招く可能性がある。
errは相対誤差、絶対誤差、またはスケーリングされた誤差、whatは誤差の種類を示す文字列の2つの引数からなる関数である。
ターゲットとカレントの属性（名前以外）を比較するかどうかを示す論理。
リスト比較を、整数インデックスではなく、名前（一致する場合）で異なる構成要素を報告すべきかどうかを示す論理。  これは ... の後に来るので、フルネームで指定しなければならないことに注意。
lsに渡される論理は、"隠された "オブジェクトも環境で考慮すべきかどうかを示す。
environmentメソッドに対して: 「約束を強制」するかどうか、つまり、典型的な形式関数の引数が比較のために評価されるかどうかを示す論理。  falseの場合、2つの環境のオブジェクトの名前のみが等しいかどうかチェックされる。
2つのnls()フィットを比較する場合など、予期しない場合にはcheck.environment=FALSEを設定する必要があります。
ターゲットとカレントの "tzone "属性を比較すべきかどうかを示す論理。
ターゲットとカレントの名前(.)を比較するかどうかを示す論理。
Rオブジェクト。
targetと比較される他のRオブジェクト。
特に以下の2つは数値比較のためのものである：
数値≧0。許容誤差より小さい差は報告されない。  デフォルト値は1.5e-8に近い。
NULL または numeric > 0, 通常は長さ1または長さ(target)。  詳細'を参照。
平均(絶対または相対)差を計算する際に、 target == currentcases をカウントするかどうかを示す論理値。  デフォルトのFALSEは、targetとcurrentが数箇所しか違わないような場合、誤解を招く可能性があります。
errは相対誤差、絶対誤差、またはスケーリングされた誤差、whatは誤差の種類を示す文字列の2つの引数からなる関数である。
ターゲットとカレントの属性（名前以外）を比較するかどうかを示す論理。
リスト比較を、整数インデックスではなく、名前（一致する場合）で異なる構成要素を報告すべきかどうかを示す論理。  これは ... の後に来るので、フルネームで指定しなければならないことに注意。
lsに渡される論理は、"隠された "オブジェクトも環境で考慮すべきかどうかを示す。
environmentメソッドの場合：「約束を強制」するかどうか、つまり、通常、形式的な関数の引数が比較のために評価されるかどうかを示す論理。  falseの場合、2つの環境のオブジェクトの名前のみが等しいかどうかチェックされる。
2つのnls()フィットを比較する場合など、予期しない場合にはcheck.environment=FALSEを設定する必要があります。
ターゲットとカレントの "tzone "属性を比較すべきかどうかを示す論理。
ターゲットとカレントの名前(.)を比較するかどうかを示す論理。
Rオブジェクト。
targetと比較される他のRオブジェクト。
特に以下の2つは数値比較のためのものである：
数値≧0。許容誤差より小さい差は報告されない。  デフォルト値は1.5e-8に近い。
NULL または numeric > 0, 通常は長さ1またはlength(target)。  詳細'を参照。
平均(絶対または相対)差を計算する際に、 target == currentcases をカウントするかどうかを示す論理値。  デフォルトのFALSEは、targetとcurrentが数箇所しか違わないような場合、誤解を招く可能性がある。
errは相対誤差、絶対誤差、またはスケーリングされた誤差、whatは誤差の種類を示す文字列の2つの引数からなる関数である。
ターゲットとカレントの属性（名前以外）を比較するかどうかを示す論理。
リスト比較を、整数インデックスではなく、名前（一致する場合）で異なる構成要素を報告すべきかどうかを示す論理。  これは ... の後に来るので、フルネームで指定しなければならないことに注意。
lsに渡される論理は、"隠された "オブジェクトも環境で考慮すべきかどうかを示す。
environmentメソッドの場合：「約束を強制」するかどうか、つまり、通常、形式的な関数の引数が比較のために評価されるかどうかを示す論理。  falseの場合、2つの環境のオブジェクトの名前のみが等しいかどうかチェックされる。
2つのnls()フィットを比較する場合など、予期しない場合にはcheck.environment=FALSEを設定する必要があります。
ターゲットとカレントの "tzone "属性を比較すべきかどうかを示す論理。
ターゲットとカレントの名前(.)を比較するかどうかを示す論理。
Rオブジェクト。
targetと比較される他のRオブジェクト。
特に以下の2つは数値比較のためのものである：
数値≥0。許容誤差より小さい差は報告されない。  デフォルト値は1.5e-8に近い。
NULL または numeric > 0, 通常は長さ1またはlength(target)。  詳細'を参照。
平均(絶対または相対)差を計算する際に、 target == currentcases をカウントするかどうかを示す論理値。  デフォルトのFALSEは、targetとcurrentが数箇所しか違わないような場合、誤解を招く可能性がある。
errは相対誤差、絶対誤差、またはスケーリングされた誤差、whatは誤差の種類を示す文字列の2つの引数からなる関数である。
ターゲットとカレントの属性（名前以外）を比較するかどうかを示す論理。
リスト比較を、整数インデックスではなく、名前（一致する場合）で異なる構成要素を報告すべきかどうかを示す論理。  これは ... の後に来るので、フルネームで指定しなければならないことに注意。
lsに渡される論理は、"隠された "オブジェクトも環境で考慮すべきかどうかを示す。
environmentメソッドに対して: 「約束を強制」するかどうか、つまり、典型的な形式関数の引数が比較のために評価されるかどうかを示す論理。  falseの場合、2つの環境のオブジェクトの名前のみが等しいかどうかチェックされる。
2つのnls()フィットを比較する場合など、予期しない場合にはcheck.environment=FALSEを設定する必要があります。
ターゲットとカレントの "tzone "属性を比較すべきかどうかを示す論理。
ターゲットとカレントの名前(.)を比較するかどうかを示す論理。
Rオブジェクト。
targetと比較される他のRオブジェクト。
特に以下の2つは数値比較のためのものである：
数値≧0。許容誤差より小さい差は報告されない。  デフォルト値は1.5e-8に近い。
NULL または numeric > 0, 通常は長さ1またはlength(target)。  詳細'を参照。
平均(絶対または相対)差を計算する際に、 target == currentcases をカウントするかどうかを示す論理値。  デフォルトのFALSEは、targetとcurrentが数ヶ所しか違わないような場合に誤解を招く可能性がある。
errは相対誤差、絶対誤差、またはスケーリングされた誤差、whatは誤差の種類を示す文字列の2つの引数からなる関数である。
ターゲットとカレントの属性（名前以外）を比較するかどうかを示す論理。
リスト比較を、整数インデックスではなく、名前（一致する場合）で異なる構成要素を報告すべきかどうかを示す論理。  これは ... の後に来るので、フルネームで指定しなければならないことに注意。
lsに渡される論理は、"隠された "オブジェクトも環境で考慮すべきかどうかを示す。
environmentメソッドに対して: 「約束を強制」するかどうか、つまり、典型的な形式関数の引数が比較のために評価されるかどうかを示す論理。  falseの場合、2つの環境のオブジェクトの名前のみが等しいかどうかチェックされる。
2つのnls()フィットを比較する場合など、予期しない場合にはcheck.environment=FALSEを設定する必要があります。
ターゲットとカレントの "tzone "属性を比較すべきかどうかを示す論理。
ターゲットとカレントの名前(.)を比較するかどうかを示す論理。
Rオブジェクト。
targetと比較される他のRオブジェクト。
特に以下の2つは数値比較のためのものである：
数値≥0。許容誤差より小さい差は報告されない。  デフォルト値は1.5e-8に近い。
NULL または numeric > 0, 通常は長さ1またはlength(target)。  詳細'を参照。
平均(絶対または相対)差を計算する際に、 target == currentcases をカウントするかどうかを示す論理値。  デフォルトのFALSEは、targetとcurrentが数箇所しか違わないような場合、誤解を招く可能性があります。
errは相対誤差、絶対誤差、またはスケーリングされた誤差、whatは誤差の種類を示す文字列の2つの引数からなる関数である。
ターゲットとカレントの属性（名前以外）を比較するかどうかを示す論理。
リスト比較を、整数インデックスではなく、名前（一致する場合）で異なる構成要素を報告すべきかどうかを示す論理。  これは ... の後に来るので、フルネームで指定しなければならないことに注意。
lsに渡される論理は、"隠された "オブジェクトも環境で考慮すべきかどうかを示す。
environmentメソッドに対して: 「約束を強制」するかどうか、つまり、典型的な形式関数の引数が比較のために評価されるかどうかを示す論理。  falseの場合、2つの環境のオブジェクトの名前のみが等しいかどうかチェックされる。
2つのnls()フィットを比較する場合など、予期しない場合にはcheck.environment=FALSEを設定する必要があります。
ターゲットとカレントの "tzone "属性を比較すべきかどうかを示す論理。
ターゲットとカレントの名前(.)を比較するかどうかを示す論理。
Rオブジェクト。
targetと比較される他のRオブジェクト。
特に以下の2つは数値比較のためのものである：
数値≧0。許容誤差より小さい差は報告されない。  デフォルト値は1.5e-8に近い。
NULL または numeric > 0, 通常は長さ1または長さ(target)。  詳細'を参照。
平均(絶対または相対)差を計算する際に、 target == currentcases をカウントするかどうかを示す論理値。  デフォルトのFALSEは、targetとcurrentが数ヶ所しか違わないような場合に誤解を招く可能性がある。
errは相対誤差、絶対誤差、またはスケーリングされた誤差、whatは誤差の種類を示す文字列の2つの引数からなる関数である。
ターゲットとカレントの属性（名前以外）を比較するかどうかを示す論理。
リスト比較を、整数インデックスではなく、名前（一致する場合）で異なる構成要素を報告すべきかどうかを示す論理。  これは ... の後に来るので、フルネームで指定しなければならないことに注意。
lsに渡される論理は、"隠された "オブジェクトも環境で考慮すべきかどうかを示す。
environmentメソッドに対して: 「約束を強制」するかどうか、つまり、典型的な形式関数の引数が比較のために評価されるかどうかを示す論理。  falseの場合、2つの環境のオブジェクトの名前のみが等しいかどうかチェックされる。
2つのnls()フィットを比較する場合など、予期しない場合にはcheck.environment=FALSEを設定する必要があります。
ターゲットとカレントの "tzone "属性を比較すべきかどうかを示す論理。
ターゲットとカレントの名前(.)を比較するかどうかを示す論理。
Rオブジェクト。
targetと比較される他のRオブジェクト。
特に以下の2つは数値比較のためのものである：
数値≧0。許容誤差より小さい差は報告されない。  デフォルト値は1.5e-8に近い。
NULL または numeric > 0, 通常は長さ1またはlength(target)。  詳細'を参照。
平均(絶対または相対)差を計算する際に、 target == currentcases をカウントするかどうかを示す論理値。  デフォルトのFALSEは、targetとcurrentが数箇所しか違わないような場合、誤解を招く可能性がある。
errは相対誤差、絶対誤差、またはスケーリングされた誤差、whatは誤差の種類を示す文字列の2つの引数からなる関数である。
ターゲットとカレントの属性（名前以外）を比較するかどうかを示す論理。
リスト比較を、整数インデックスではなく、名前（一致する場合）で異なる構成要素を報告すべきかどうかを示す論理。  これは ... の後に来るので、フルネームで指定しなければならないことに注意。
lsに渡される論理は、"隠された "オブジェクトも環境で考慮すべきかどうかを示す。
environmentメソッドの場合：「約束を強制」するかどうか、つまり、通常、形式的な関数の引数が比較のために評価されるかどうかを示す論理。  falseの場合、2つの環境のオブジェクトの名前のみが等しいかどうかチェックされる。
2つのnls()フィットを比較する場合など、予期しない場合にはcheck.environment=FALSEを設定する必要があります。
ターゲットとカレントの "tzone "属性を比較すべきかどうかを示す論理。
ターゲットとカレントの名前(.)を比較するかどうかを示す論理。
Rオブジェクト。
targetと比較される他のRオブジェクト。
特に以下の2つは数値比較のためのものである：
数値≧0。許容誤差より小さい差は報告されない。  デフォルト値は1.5e-8に近い。
NULL または numeric > 0, 通常は長さ1またはlength(target)。  詳細'を参照。
平均(絶対または相対)差を計算する際に、 target == currentcases をカウントするかどうかを示す論理値。  デフォルトのFALSEは、targetとcurrentが数箇所しか違わないような場合、誤解を招く可能性がある。
errは相対誤差、絶対誤差、またはスケーリングされた誤差、whatは誤差の種類を示す文字列の2つの引数からなる関数である。
ターゲットとカレントの属性（名前以外）を比較するかどうかを示す論理。
リスト比較を、整数インデックスではなく、名前（一致する場合）で異なる構成要素を報告すべきかどうかを示す論理。  これは ... の後に来るので、フルネームで指定しなければならないことに注意。
lsに渡される論理は、"隠された "オブジェクトも環境で考慮すべきかどうかを示す。
environmentメソッドに対して: 「約束を強制」するかどうか、つまり、典型的な形式関数の引数が比較のために評価されるかどうかを示す論理。  falseの場合、2つの環境のオブジェクトの名前のみが等しいかどうかチェックされる。
2つのnls()フィットを比較する場合など、予期しない場合にはcheck.environment=FALSEを設定する必要があります。
ターゲットとカレントの "tzone "属性を比較すべきかどうかを示す論理。
ターゲットとカレントの名前(.)を比較するかどうかを示す論理。
Rオブジェクト。
targetと比較される他のRオブジェクト。
特に以下の2つは数値比較のためのものである：
数値≧0。許容誤差より小さい差は報告されない。  デフォルト値は1.5e-8に近い。
NULL または numeric > 0, 通常は長さ1またはlength(target)。  詳細'を参照。
平均(絶対または相対)差を計算する際に、 target == currentcases をカウントするかどうかを示す論理値。  デフォルトのFALSEは、targetとcurrentが数箇所しか違わないような場合、誤解を招く可能性があります。
errは相対誤差、絶対誤差、またはスケーリングされた誤差、whatは誤差の種類を示す文字列の2つの引数からなる関数である。
ターゲットとカレントの属性（名前以外）を比較するかどうかを示す論理。
リスト比較を、整数インデックスではなく、名前（一致する場合）で異なる構成要素を報告すべきかどうかを示す論理。  これは ... の後に来るので、フルネームで指定しなければならないことに注意。
lsに渡される論理は、"隠された "オブジェクトも環境で考慮すべきかどうかを示す。
environmentメソッドに対して: 「約束を強制」するかどうか、つまり、典型的な形式関数の引数が比較のために評価されるかどうかを示す論理。  falseの場合、2つの環境のオブジェクトの名前のみが等しいかどうかチェックされる。
2つのnls()フィットを比較する場合など、予期しない場合にはcheck.environment=FALSEを設定する必要があります。
ターゲットとカレントの "tzone "属性を比較すべきかどうかを示す論理。
ターゲットとカレントの名前(.)を比較するかどうかを示す論理。
名前を抽出する式または呼び出し。
関数名を結果に含めるかどうかを示す論理値。
返す名前の最大数。  -1 は制限なしを示します (ベクトル・サイズの制限を除く)。
重複する名前を値から削除するかどうかを示す論理値。
名前を抽出する式または呼び出し。
関数名を結果に含めるかどうかを示す論理値。
返す名前の最大数。  -1 は制限なしを示します (ベクトル・サイズの制限を除く)。
重複する名前を値から削除するかどうかを示す論理値。
条件オブジェクト。
呼び出し式。
条件オブジェクト。
評価される式。
リターンまたは終了する前に評価される式。
関数
文字列
文字列
リスタートを指定する文字列
restartオブジェクト。
オブジェクトを指定します。
条件クラスの名前を指定する文字列。
追加の引数。
0個以上の論理ベクトル。  長さ0の他のオブジェクトは無視され、残りは任意のクラスを無視した論理に強制される。
に強制されます。  真の場合、結果が計算される前にNAの値が削除されます。
ベクトル、データ・フレーム、配列、NULL。
FALSE は特殊な値で、すべての値が比較可能であることを意味し、デフォルト以外のメソッドでは唯一の値である可能性があります。  内部的にはxと同じ型に強制される。
重複を裏側から考慮するかどうかを示す論理値。つまり、同一要素の最後（または右端）は duplicated = FALSE に対応する。
期待される一意な項目の最大数（1より大きい）。
特定のメソッドの引数。
MARGIN=0が有用であることに注意。
ベクトル、データフレーム、配列、NULL。
FALSEは特別な値で、すべての値が比較可能であることを意味し、デフォルト以外のメソッドで受け入れられる唯一の値かもしれません。  内部的にはxと同じ型に強制される。
重複を裏側から考慮するかどうかを示す論理値。つまり、同一要素の最後（または右端）は duplicated = FALSE に対応する。
期待される一意な項目の最大数（1より大きい）。
特定のメソッドの引数。
MARGIN=0が有用であることに注意。
ベクトル、データフレーム、配列、NULL。
FALSEは特別な値で、すべての値が比較可能であることを意味し、デフォルト以外のメソッドで受け入れられる唯一の値かもしれません。  内部的にはxと同じ型に強制される。
重複を裏側から考慮するかどうかを示す論理値。つまり、同一要素の最後（または右端）は duplicated = FALSE に対応する。
期待される一意な項目の最大数（1より大きい）。
特定のメソッドの引数。
MARGIN=0が有用であることに注意。
ベクトル、データフレーム、配列、NULL。
FALSEは特別な値で、すべての値が比較可能であることを意味し、デフォルト以外のメソッドで受け入れられる唯一の値かもしれません。  内部的にはxと同じ型に強制される。
重複を裏側から考慮するかどうかを示す論理値。つまり、同一要素の最後（または右端）は duplicated = FALSE に対応する。
期待される一意な項目の最大数（1より大きい）。
特定のメソッドの引数。
MARGIN=0が有用であることに注意。
ベクトル、データフレーム、配列、NULL。
FALSEは特別な値で、すべての値が比較可能であることを意味し、デフォルト以外のメソッドで受け入れられる唯一の値かもしれません。  内部的にはxと同じ型に強制される。
重複を裏側から考慮するかどうかを示す論理値。つまり、同一要素の最後（または右端）は duplicated = FALSE に対応する。
期待される一意な項目の最大数（1より大きい）。
特定のメソッドの引数。
固定される配列のマージン: MARGIN = 0 が有用であることに注意。
is.naとanyNAのデフォルト・メソッドは、原子ベクトル、リスト、ペアリスト、NULLを扱う。
論理：anyNAはリストやペアリストに再帰的に適用すべきか？
xで使用する適切なインデックス・ベクトル。
is.naとanyNAのデフォルトメソッドは、アトミックベクトル、リスト、ペアリスト、NULLを扱う。
論理：anyNAはリストやペアリストに再帰的に適用されるべきか？
xで使用するための適切なインデックス・ベクトル。
package_versionの場合は、R.versionで得られるRversionオブジェクトでもよい。
無効な数値バージョンはエラーになる (デフォルト) かどうかを示す論理。
date-timeクラスの1つから出力または要約されるオブジェクト。
format.POSIXctに渡されます。
出力するエントリの最大数を指定します。  デフォルトでは、NULL の場合、getOption("max.print") が使用されます。
計算の有効桁数: 最も重要でない時間単位を正確に表すのに十分な桁数でなければならない。
他のメソッドから、あるいは他のメソッドに渡す引数。
日時オブジェクト
日時オブジェクトまたは文字ベクトル。  (文字ベクトルはas.POSIXct.によって変換される)
数値ベクトル（秒単位）
==, !=, <, <=, >=のいずれか。
転置される配列。
添え字の並べ替えベクトル。通常は1:nの整数の並べ替えで、nはaの次元数である。デフォルト(permの長さがゼロの場合は常に使用される)は、次元の順序を逆にする。
要素の並び替えだけでなく、ベクトルのサイズ変更も行うかどうかを示すフラグ (デフォルトは TRUE)。
結果を a と同じクラスにするかどうかを示す論理値。
メソッドのさらなる引数の可能性。
転置される配列。
ここで、n は a の次元数です。 a が dimnames という名前を持つ場合、その名前の並べ替えを示す n の長さの文字ベク トルを指定できます。デフォルト(permの長さがゼロの場合は常に使用される)は、次元の順序を逆にする。
要素の並び替えだけでなく、ベクトルのサイズ変更も行うかどうかを示すフラグ (デフォルトは TRUE)。
結果を a と同じクラスにするかどうかを示す論理値。
メソッドのさらなる引数の可能性。
転置される配列。
ここで、n は a の次元数です。 a が dimnames という名前を持つ場合、その名前の並べ替えを示す n の長さの文字ベク トルを指定できます。デフォルト(permの長さがゼロの場合は常に使用される)は、次元の順序を逆にする。
要素の並び替えだけでなく、ベクトルのサイズ変更も行うかどうかを示すフラグ (デフォルトは TRUE)。
結果を a と同じクラスにするかどうかを示す論理値。
メソッドのさらなる引数の可能性。
値が追加されるベクトル。
変更後のベクトルに含まれる
値が追加される添え字。
行列を含む配列。
関数を適用する添え字を指定するベクトル。  例えば、行列の場合、1は行、2は列を表し、c(1, 2)は行と列を表します。Xがdimnamesという名前を持つ場合、次元名を選択する文字ベクトルとすることができる。
適用する関数： '詳細'を参照。+、%*% などの関数の場合、関数名はバッククォートまたは引用符で囲む必要がある。
FUNのオプション引数。
可能であれば、結果を簡略化するかどうかを示す論理。
数値。  入力は必要に応じて再利用される。
数値ベクトル。
数値ベクトル.
数値ベクトル。
数値ベクトル。
おそらく複合モードのオブジェクト。
複合モードのオブジェクト、またはメソッドが定義されているクラスのオブジェクト。
他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
関数（クロージャまたはプリミティブ）。nameが文字列の場合、その名前の関数が検索され、使用されます。
配列を埋めるデータを与えるベクトル（リストや式ベクトルを含む）。  アトミックでないクラス化されたオブジェクトは、as.vectorによって強制されます。
作成される配列のdim属性で、各次元の最大添字を与える1以上の長さの整数ベクトルです。
これは、各次元に1つの要素を持つリストでなければなりません（無視されます）。NULLか、その次元のdimで指定された長さの文字ベクトルです。  リストには名前を付けることができ、リスト名は次元の名前として使用されます。  リストが次元数より短い場合は、必要な長さまでNULLで拡張されます。
Rオブジェクト。
メソッドまたはメソッドから渡される追加の引数。
論理ベクトルまたは配列。  NAは省略可能です（FALSEのように扱われます）。
xが配列の場合、配列のインデックスを返すべきか？
which(x)の結果のような整数値インデックス・ベクトル。
dim(.) 整数ベクトル
useNamesがtrueの場合、arrayInd()（したがってwhich(*, arr.ind=TRUE)）のためのdimnamesの構築に使用されます。names(.dimnames)が空でない場合、これらは列名として使用されます。  .dimnames[[1]]は行名として使用されます。
arrayInd()の値が(nullでない)dimnamesを持つかどうかを論理的に示します。
ベクトル（リストまたは式ベクトルを含む）。  アトミックでないクラス化されたオブジェクトは、as.vectorによって強制されます。
作成される配列のdim属性で、各次元の最大添字を与える1以上の長さの整数ベクトルです。
これは、各次元に1つの要素を持つリストでなければなりません（無視されます）。NULLか、その次元のdimで指定された長さの文字ベクトルです。  リストには名前を付けることができ、リスト名は次元の名前として使用されます。  リストが次元数より短い場合は、必要な長さまでNULLで拡張されます。
Rオブジェクト。
メソッドまたはメソッドから渡される追加の引数。
配列を埋めるデータを与えるベクトル（リストまたは式ベクトルを含む）。  アトミックでないクラス化されたオブジェクトは、as.vectorによって強制されます。
作成される配列の dim 属性、つまり各次元の最大インデックスを指定する長さ1以上の整数ベクトル。
これは、各次元に1つの要素を持つリストでなければなりません（無視されます）。NULLか、その次元のdimで指定された長さの文字ベクトルです。  リストには名前を付けることができ、リスト名は次元の名前として使用されます。  リストが次元数より短い場合は、必要な長さまでNULLで拡張されます。
Rオブジェクト。
メソッドまたはメソッドから渡される追加の引数。
呼び出される関数を指定する、空でない文字列。
呼び出しの一部となる引数。
任意の R オブジェクト。
Double値はintegerに強制されます。1以外の長さの引数を指定するとエラーになります。
強制またはテストされるオブジェクト。
他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
条件オブジェクト。
呼び出し式。
条件オブジェクト。
評価される式。
リターンまたは終了する前に評価される式。
関数
文字列
文字列
リスタートを指定する文字列
restartオブジェクト。
オブジェクトを指定します。
条件クラスの名前を指定する文字列。
追加の引数。
変換されるオブジェクト。
文字列。  指定されていない場合、最初の非NA要素に対して1つずつFormatsを試し、1つも機能しなけ ればエラーを出す。  そうでない場合、処理は viastrptime()で行われ、そのヘルプページには利用可能な変換仕様が記述されている。
formatが指定されていない場合に試すフォーマット文字列の文字ベクトル。
フォーマット推測が成功しなかった場合に(エラーを通知する代わりに) NAを返すことを示す論理。
Dateオブジェクト、またはas.Date(origin, ...)によってそのようなオブジェクトに強制できるもの。
タイムゾーン名。
as.characterメソッドやas.Dateメソッドの書式を含む、他のメソッドから渡される引数。
double 値は integer に強制されます: 1 以外の長さの引数を与えるとエラーになります。
オブジェクトが強制されるかテストされます。
他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
条件オブジェクト。
呼び出し式。
条件オブジェクト。
評価される式。
リターンまたは終了する前に評価される式。
関数
文字列
文字列
リスタートを指定する文字列
restartオブジェクト。
オブジェクトを指定します。
条件クラスの名前を指定する文字列。
詳細は以下を参照。
Double 値は integer に強制されます。1 以外の長さの引数を指定するとエラーになります。
強制されるかテストされるオブジェクト。
他のメソッドに渡される、あるいは他のメソッドから渡されるさらなる引数。
クラス "hexmode "を継承するメソッド用のオブジェクト。
NULL または、使用する最小フィールド幅を指定する正の整数。
大文字を使うか小文字を使うかを示す論理値（デフォルト）。
他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
package_version の場合は、R.version で取得した Rversion オブジェクト。
無効な数値バージョンはエラーになる (デフォルト) かどうかを示す論理。
クラス "octmode "を継承したメソッド用のオブジェクト。
NULL または、使用する最小フィールド幅を指定する正の整数。
他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
変換するオブジェクト。strptimeの場合は文字ベクトル、 strftimeの場合は "POSIXlt "に変換できるオブジェクト。
変換に使用するタイムゾーンを指定する文字列。  システム固有(as.POSIXltを参照)ですが、""は現在のタイムゾーンで、"GMT "はUTCです。無効な値はUTCとして扱われるのが一般的で、プラットフォームによっては警告が表示されます。
文字列。  formatmethodsのデフォルトは、要素に深夜以外の時間要素がある場合は"%Y-%m-%d %H:%M:%S"、そうでない場合は"%Y-%m-%d "です。  options("digits.secs")が設定されている場合は、指定した桁数までの秒数を表示します。
他のメソッドから、または他のメソッドに渡されるさらなる引数。
論理的に指定します。  タイムゾーンの省略形を出力に付加するか。  これは時刻を出力する際に使用され、"%Z "を使用するよりも信頼性が高い。
 ファイル名。
 ファイルの文字エンコーディング。
 文字列を作成する際のエンコーディング： parseのencoding引数を参照のこと。
 ソース行の文字ベクトル。  他のRオブジェクトは文字に強制される。
 ファイルのコピーに使用するタイムスタンプ。
 この srcfilecopy がファイルシステムファイルから取得されたものであることが知られているか？
 srcfile オブジェクト。
 行番号。
 ソースの位置を示す 4 個、6 個、または 8 個の値からなるベクトル。
 適切なクラスのオブジェクト。
 srcref のテキストを取得するために srcfile を読み込むかどうか。
 文字範囲の終わりを示すオプションの 2 番目の srcref オブジェクト。
 メソッドに対する追加の引数。
数値。  必要に応じて再利用される入力。
数値ベクトル.
数値ベクトル。
数値ベクトル。
数値ベクトル。
おそらく複合モードのオブジェクト。
複合モードのオブジェクト、またはメソッドが定義されているクラスのオブジェクト。
他のメソッドに渡される、または他のメソッドから渡される引数。
任意のRオブジェクト。
NULL またはデータフレームのローネームを示す文字ベクトル。  欠損値は許されない。
論理値。TRUE の場合、行名の設定と列名の変換(構文名: seemake.names)はオプションです。  R の基底パッケージ as.data.frame() のすべてのメソッドでは、基本的に data.frame(*, check.names = !optional) の themeaning と同様に、列名の処理にのみ optional を使用することに注意してください。
メソッドに渡す、またはメソッドから渡す追加引数。
論理: 文字ベクトルを係数に変換するか？
256文字（数値の場合はcut.names）以上の列名を短縮する（最後の6文字を" ... "に置き換える）かどうかを指定します。
(オプション) 列名の文字ベクトル。
空の列名、すなわち""が（data.frame内で）修正されるべきかどうかを示す論理。
data.frame()呼び出しに渡される。
(matrixxの)行名が無効な場合にどうするかを示す論理。  もし無効であれば、デフォルトの TRUE は make.names(*, unique=TRUE) を呼び出します。make.names=NA は "自動的な "行名を使用し、FALSE は無効な行名に対するエラーを通知します。
任意のRオブジェクト。
NULL またはデータフレームの行名を指定する文字ベクトル。  欠損値は許されない。
論理値。TRUE の場合、行名の設定と列名の変換（構文名: seemake.names）はオプションです。  R の基底パッケージ as.data.frame() のすべてのメソッドでは、基本的に data.frame(*, check.names = !optional) の themeaning と同様に、列名の処理にのみ optional を使用することに注意してください。
メソッドに渡す、またはメソッドから渡す追加引数。
論理: 文字ベクトルを係数に変換するか？
256文字（数値の場合はcut.names）以上の列名を短縮する（最後の6文字を" ... "に置き換える）かどうかを指定します。
(オプション) 列名の文字ベクトル。
空の列名、すなわち""が（data.frame内で）修正されるべきかどうかを示す論理。
data.frame()呼び出しに渡される。
(matrixxの)行名が無効な場合にどうするかを示す論理。  もし無効であれば、デフォルトの TRUE は make.names(*, unique=TRUE) を呼び出します。make.names=NA は "自動的な "行名を使用し、FALSE は無効な行名に対するエラーを通知します。
任意のRオブジェクト。
NULL またはデータフレームの行名を指定する文字ベクトル。  欠損値は許されない。
論理値。TRUE の場合、行名の設定と列名の変換（構文名: seemake.names）はオプションです。  R の基底パッケージ as.data.frame() のすべてのメソッドでは、基本的に data.frame(*, check.names = !optional) のテーマ化によって、列名の処理にのみ optional が使用されることに注意してください。
メソッドに渡す、またはメソッドから渡す追加引数。
論理: 文字ベクトルを係数に変換するか？
256文字（数値の場合はcut.names）以上の列名を短縮する（最後の6文字を" ... "に置き換える）かどうかを指定します。
(オプション) 列名の文字ベクトル。
空の列名、すなわち""が（data.frame内で）修正されるべきかどうかを示す論理。
data.frame()呼び出しに渡される。
(matrixxの)行名が無効な場合にどうするかを示す論理。  もし無効であれば、デフォルトの TRUE は make.names(*, unique=TRUE) を呼び出します。make.names=NA は "自動的な "行名を使用し、FALSE は無効な行名に対するエラーを通知します。
任意のRオブジェクト。
NULL またはデータフレームの行名を指定する文字ベクトル。  欠損値は許されない。
論理値。TRUE の場合、行名の設定と列名の変換（構文名: seemake.names）はオプションです。  R の基底パッケージ as.data.frame() のすべてのメソッドでは、基本的に data.frame(*, check.names = !optional) のテーマ化によって、列名の処理にのみ optional が使用されることに注意してください。
メソッドに渡す、またはメソッドから渡す追加引数。
論理: 文字ベクトルを係数に変換するか？
256文字（数値の場合はcut.names）以上の列名を短縮する（最後の6文字を" ... "に置き換える）かどうかを指定します。
(オプション) 列名の文字ベクトル。
空の列名、すなわち""が（data.frame内で）修正されるべきかどうかを示す論理。
data.frame()呼び出しに渡される。
(matrixxの)行名が無効な場合にどうするかを示す論理。  もし無効であれば、デフォルトの TRUE は make.names(*, unique=TRUE) を呼び出します。make.names=NA は "自動的な "行名を使用し、FALSE は無効な行名に対するエラーを通知します。
任意のRオブジェクト。
NULL またはデータフレームの行名を指定する文字ベクトル。  欠損値は許されない。
論理値。TRUE の場合、行名の設定と列名の変換（構文名: seemake.names）はオプションです。  R の基底パッケージ as.data.frame() のすべてのメソッドでは、基本的に data.frame(*, check.names = !optional) のテーマ化によって、列名の処理にのみ optional が使用されることに注意してください。
メソッドに渡す、またはメソッドから渡す追加引数。
論理: 文字ベクトルを係数に変換するか？
256文字（数値の場合はcut.names）以上の列名を短縮する（最後の6文字を" ... "に置き換える）かどうかを指定します。
(オプション) 列名の文字ベクトル。
空の列名、すなわち""が（data.frame内で）修正されるべきかどうかを示す論理。
data.frame()呼び出しに渡される。
(matrixxの)行名が無効な場合にどうするかを示す論理。  もし無効であれば、デフォルトの TRUE は make.names(*, unique=TRUE) を呼び出します。make.names=NA は "自動的な "行名を使用し、FALSE は無効な行名に対するエラーを通知します。
任意のRオブジェクト。
NULL またはデータフレームの行名を指定する文字ベクトル。  欠損値は許されない。
論理値。TRUE の場合、行名の設定と列名の変換（構文名: seemake.names）はオプションです。  R の基底パッケージ as.data.frame() のすべてのメソッドでは、基本的に data.frame(*, check.names = !optional) の themeaning と同様に、列名の処理にのみ optional を使用することに注意してください。
メソッドに渡す、またはメソッドから渡す追加引数。
論理: 文字ベクトルを係数に変換するか？
256文字（数値の場合はcut.names）以上の列名を短縮する（最後の6文字を" ... "に置き換える）かどうかを指定します。
(オプション) 列名の文字ベクトル。
空の列名、すなわち""が（data.frame内で）修正されるべきかどうかを示す論理。
data.frame()呼び出しに渡される。
(matrixxの)行名が無効な場合にどうするかを示す論理。  行名が無効な場合、デフォルトの TRUE は make.names(*, unique=TRUE) を呼び出します。make.names=NA は "自動的な" 行名を使用し、FALSE は無効な行名に対するエラーを通知します。
要約または印刷される日付オブジェクト。
計算の有効桁数。
数値またはNULLで、表示するエントリの最大数を指定します。  デフォルトでは、NULL の場合は getOption("max.print") が使用されます。
他のメソッドから、または他のメソッドに渡す引数。
任意の R オブジェクト。
NULL またはデータフレームのローネームを与える文字ベクトル。  欠損値は許されない。
論理値。TRUE の場合、行名の設定と列名の変換（構文名: seemake.names）はオプションです。  R の基底パッケージ as.data.frame() のすべてのメソッドでは、基本的に data.frame(*, check.names = !optional) の themeaning と同様に、列名の処理にのみ optional を使用することに注意してください。
メソッドに渡す、またはメソッドから渡す追加引数。
論理: 文字ベクトルを係数に変換するか？
256文字（数値の場合はcut.names）以上の列名を短縮する（最後の6文字を" ... "に置き換える）かどうかを指定します。
(オプション) 列名の文字ベクトル。
空の列名、すなわち""が（data.frame内で）修正されるべきかどうかを示す論理。
data.frame()呼び出しに渡される。
(matrixxの)行名が無効な場合にどうするかを示す論理。  もし無効であれば、デフォルトの TRUE は make.names(*, unique=TRUE) を呼び出します。make.names=NA は "自動的な "行名を使用し、FALSE は無効な行名に対するエラーを通知します。
任意のRオブジェクト。
NULL またはデータフレームの行名を指定する文字ベクトル。  欠損値は許されない。
論理値。TRUE の場合、行名の設定と列名の変換（構文名: seemake.names）はオプションです。  R の基底パッケージ as.data.frame() のすべてのメソッドでは、基本的に data.frame(*, check.names = !optional) の themeaning と同様に、列名の処理にのみ optional を使用することに注意してください。
メソッドに渡す、またはメソッドから渡す追加引数。
論理: 文字ベクトルを係数に変換するか？
256文字（数値の場合はcut.names）以上の列名を短縮する（最後の6文字を" ... "に置き換える）かどうかを指定します。
(オプション) 列名の文字ベクトル。
空の列名、すなわち""が（data.frame内で）修正されるべきかどうかを示す論理。
data.frame()呼び出しに渡される。
(matrixxの)行名が無効な場合にどうするかを示す論理。  もし無効であれば、デフォルトの TRUE は make.names(*, unique=TRUE) を呼び出します。make.names=NA は "自動的な "行名を使用し、FALSE は無効な行名に対するエラーを通知します。
任意のRオブジェクト。
NULL またはデータフレームの行名を指定する文字ベクトル。  欠損値は許されない。
論理値。TRUE の場合、行名の設定と列名の変換（構文名: seemake.names）はオプションです。  R の基底パッケージ as.data.frame() のすべてのメソッドでは、基本的に data.frame(*, check.names = !optional) のテーマ化によって、列名の処理にのみ optional が使用されることに注意してください。
メソッドに渡す、またはメソッドから渡す追加引数。
論理: 文字ベクトルを係数に変換するか？
256文字（数値の場合はcut.names）以上の列名を短縮する（最後の6文字を" ... "に置き換える）かどうかを指定します。
(オプション) 列名の文字ベクトル。
空の列名、すなわち""が（data.frame内で）修正されるべきかどうかを示す論理。
data.frame()呼び出しに渡される。
(matrixxの)行名が無効な場合にどうするかを示す論理。  もし無効であれば、デフォルトの TRUE は make.names(*, unique=TRUE) を呼び出します。make.names=NA は "自動的な "行名を使用し、FALSE は無効な行名に対するエラーを通知します。
任意のRオブジェクト。
NULL またはデータフレームの行名を指定する文字ベクトル。  欠損値は許されない。
論理値。TRUE の場合、行名の設定と列名の変換（構文名: seemake.names）はオプションです。  R の基底パッケージ as.data.frame() のすべてのメソッドでは、基本的に data.frame(*, check.names = !optional) のテーマ化によって、列名の処理にのみ optional が使用されることに注意してください。
メソッドに渡す、またはメソッドから渡す追加引数。
論理: 文字ベクトルを係数に変換するか？
256文字（数値の場合はcut.names）以上の列名を短縮する（最後の6文字を" ... "に置き換える）かどうかを指定します。
(オプション) 列名の文字ベクトル。
空の列名、すなわち""が（data.frame内で）修正されるべきかどうかを示す論理。
data.frame()呼び出しに渡される。
(matrixxの)行名が無効な場合にどうするかを示す論理。  もし無効であれば、デフォルトの TRUE は make.names(*, unique=TRUE) を呼び出します。make.names=NA は "自動的な "行名を使用し、FALSE は無効な行名に対するエラーを通知します。
任意のRオブジェクト。
NULL またはデータフレームの行名を指定する文字ベクトル。  欠損値は許されない。
論理値。TRUE の場合、行名の設定と列名の変換（構文名: seemake.names）はオプションです。  R の基底パッケージ as.data.frame() のすべてのメソッドでは、基本的に data.frame(*, check.names = !optional) のテーマ化によって、列名の処理にのみ optional が使用されることに注意してください。
メソッドに渡す、またはメソッドから渡す追加引数。
論理: 文字ベクトルを係数に変換するか？
256文字（数値の場合はcut.names）以上の列名を短縮する（最後の6文字を" ... "に置き換える）かどうかを指定します。
(オプション) 列名の文字ベクトル。
空の列名、すなわち""が（data.frame内で）修正されるべきかどうかを示す論理。
data.frame()呼び出しに渡される。
(matrixxの)行名が無効な場合にどうするかを示す論理。  もし無効であれば、デフォルトの TRUE は make.names(*, unique=TRUE) を呼び出します。make.names=NA は "自動的な "行名を使用し、FALSE は無効な行名に対するエラーを通知します。
任意のRオブジェクト。
NULL またはデータフレームの行名を指定する文字ベクトル。  欠損値は許されない。
論理値。TRUE の場合、行名の設定と列名の変換（構文名: seemake.names）はオプションです。  R の基底パッケージ as.data.frame() のすべてのメソッドでは、基本的に data.frame(*, check.names = !optional) のテーマ化によって、列名の処理にのみ optional が使用されることに注意してください。
メソッドに渡す、またはメソッドから渡す追加引数。
論理: 文字ベクトルを係数に変換するか？
256文字（数値の場合はcut.names）以上の列名を短縮する（最後の6文字を" ... "に置き換える）かどうかを指定します。
(オプション) 列名の文字ベクトル。
空の列名、すなわち""が（data.frame内で）修正されるべきかどうかを示す論理。
data.frame()呼び出しに渡される。
(matrixxの)行名が無効な場合にどうするかを示す論理。  もし無効であれば、デフォルトの TRUE は make.names(*, unique=TRUE) を呼び出します。make.names=NA は "自動的な "行名を使用し、FALSE は無効な行名に対するエラーを通知します。
任意のRオブジェクト。
NULL またはデータフレームの行名を指定する文字ベクトル。  欠損値は許されない。
論理値。TRUE の場合、行名の設定と列名の変換（構文名: seemake.names）はオプションです。  R の基底パッケージ as.data.frame() のすべてのメソッドでは、基本的に data.frame(*, check.names = !optional) のテーマ化によって、列名の処理にのみ optional が使用されることに注意してください。
メソッドに渡す、またはメソッドから渡す追加引数。
論理: 文字ベクトルを係数に変換するか？
256文字（数値の場合はcut.names）以上の列名を短縮する（最後の6文字を" ... "に置き換える）かどうかを指定します。
(オプション) 列名の文字ベクトル。
空の列名、すなわち""が（data.frame内で）修正されるべきかどうかを示す論理。
data.frame()呼び出しに渡される。
(matrixxの)行名が無効な場合にどうするかを示す論理。  もし無効であれば、デフォルトの TRUE は make.names(*, unique=TRUE) を呼び出します。make.names=NA は "自動的な "行名を使用し、FALSE は無効な行名に対するエラーを通知します。
任意のRオブジェクト。
NULL またはデータフレームの行名を指定する文字ベクトル。  欠損値は許されない。
論理値。TRUE の場合、行名の設定と列名の変換（構文名: seemake.names）はオプションです。  R の基底パッケージ as.data.frame() のすべてのメソッドでは、基本的に data.frame(*, check.names = !optional) の themeaning と同様に、列名の処理にのみ optional を使用することに注意してください。
メソッドに渡す、またはメソッドから渡す追加引数。
論理: 文字ベクトルを係数に変換するか？
256文字（数値の場合はcut.names）以上の列名を短縮する（最後の6文字を" ... "に置き換える）かどうかを指定します。
(オプション) 列名の文字ベクトル。
空の列名、すなわち""が（data.frame内で）修正されるべきかどうかを示す論理。
data.frame()呼び出しに渡される。
(matrixxの)行名が無効な場合にどうするかを示す論理。  もし無効であれば、デフォルトの TRUE は make.names(*, unique=TRUE) を呼び出します。make.names=NA は "自動的な "行名を使用し、FALSE は無効な行名に対するエラーを通知します。
任意のRオブジェクト。
NULL またはデータフレームの行名を指定する文字ベクトル。  欠損値は許されない。
論理値。TRUE の場合、行名の設定と列名の変換（構文名: seemake.names）はオプションです。  R の基底パッケージ as.data.frame() のすべてのメソッドでは、基本的に data.frame(*, check.names = !optional) の themeaning と同様に、列名の処理にのみ optional を使用することに注意してください。
メソッドに渡す、またはメソッドから渡す追加引数。
論理: 文字ベクトルを係数に変換するか？
256文字（数値の場合はcut.names）以上の列名を短縮する（最後の6文字を" ... "に置き換える）かどうかを指定します。
(オプション) 列名の文字ベクトル。
空の列名、すなわち""が（data.frame内で）修正されるべきかどうかを示す論理。
data.frame()呼び出しに渡される。
(matrixxの)行名が無効な場合にどうするかを示す論理。  もし無効であれば、デフォルトの TRUE は make.names(*, unique=TRUE) を呼び出します。make.names=NA は "自動的な "行名を使用し、FALSE は無効な行名に対するエラーを通知します。
任意のRオブジェクト。
NULL またはデータフレームの行名を指定する文字ベクトル。  欠損値は許されない。
論理値。TRUE の場合、行名の設定と列名の変換（構文名: seemake.names）はオプションです。  R の基底パッケージ as.data.frame() のすべてのメソッドでは、基本的に data.frame(*, check.names = !optional) の themeaning と同様に、列名の処理にのみ optional を使用することに注意してください。
メソッドに渡す、またはメソッドから渡す追加引数。
論理: 文字ベクトルを係数に変換するか？
256文字（数値の場合はcut.names）以上の列名を短縮する（最後の6文字を" ... "に置き換える）かどうかを指定します。
(オプション) 列名の文字ベクトル。
空の列名、すなわち""が（data.frame内で）修正されるべきかどうかを示す論理。
data.frame()呼び出しに渡される。
(matrixxの)行名が無効な場合にどうするかを示す論理。  もし無効であれば、デフォルトの TRUE は make.names(*, unique=TRUE) を呼び出します。make.names=NA は "自動的な "行名を使用し、FALSE は無効な行名に対するエラーを通知します。
package_version の場合は、R.version で取得した Rversion オブジェクト。
無効な数値バージョンはエラーになる (デフォルト) かどうかを示す論理値。
任意の R オブジェクト。
NULL またはデータフレームの Rwnames を示す文字ベクトル。  欠損値は許されない。
論理値。TRUE の場合、行名の設定と列名の変換（構文名: seemake.names）はオプション。  R の基底パッケージ as.data.frame() のすべてのメソッドでは、基本的に data.frame(*, check.names = !optional) のテーマ化によって、列名の処理にのみ optional が使用されることに注意してください。
メソッドに渡す、またはメソッドから渡す追加引数。
論理: 文字ベクトルを係数に変換するか？
256文字（数値の場合はcut.names）以上の列名を短縮する（最後の6文字を" ... "に置き換える）かどうかを指定します。
(オプション) 列名の文字ベクトル。
空の列名、すなわち""が（data.frame内で）修正されるべきかどうかを示す論理。
data.frame()呼び出しに渡される。
(matrixxの)行名が無効な場合にどうするかを示す論理。  行名が無効な場合、デフォルトの TRUE は make.names(*, unique=TRUE) を呼び出します。make.names=NA は「自動的な」行名を使用し、FALSE は無効な行名に対するエラーを通知します。
date-timeクラスの1つから、出力または要約されるオブジェクトを指定します。
format.POSIXctに渡されます。
出力するエントリの最大数を指定します。  デフォルトでは、NULL の場合、getOption("max.print") が使用されます。
計算の有効桁数: 最も重要でない時間単位を正確に表すのに十分な桁数でなければならない。
他のメソッドから、あるいは他のメソッドに渡す引数。
日時オブジェクト
日時オブジェクトまたは文字ベクトル。  (文字ベクトルはas.POSIXct.によって変換される)
数値ベクトル（秒単位）
==, !=, <, <=, >=のいずれか。
date-timeクラスの1つから出力または要約されるオブジェクト。
format.POSIXctに渡されます。
出力するエントリの最大数を指定します。  デフォルトでは、NULL の場合、getOption("max.print") が使用されます。
計算の有効桁数: 最も重要でない時間単位を正確に表すのに十分な桁数でなければならない。
他のメソッドから、あるいは他のメソッドに渡す引数。
日時オブジェクト
日時オブジェクトまたは文字ベクトル。  (文字ベクトルはas.POSIXct.によって変換される)
数値ベクトル（秒単位）
==, !=, <, <=, >=のいずれか。
任意のRオブジェクト。
NULL またはデータフレームのローネームを指定する文字ベクトル。  欠損値は許されない。
論理。TRUE の場合、行名の設定と列名の変換（構文名: seemake.names）はオプションです。  R の基底パッケージ as.data.frame() のすべてのメソッドでは、基本的に data.frame(*, check.names = !optional) のテーマ化によって、列名の処理にのみ optional が使用されることに注意してください。
メソッドに渡す、またはメソッドから渡す追加引数。
論理: 文字ベクトルを係数に変換するか？
256文字（数値の場合はcut.names）以上の列名を短縮する（最後の6文字を" ... "に置き換える）かどうかを指定します。
(オプション) 列名の文字ベクトル。
空の列名、すなわち""が（data.frame内で）修正されるべきかどうかを示す論理。
data.frame()呼び出しに渡される。
(matrixxの)行名が無効な場合にどうするかを示す論理。  もし無効であれば、デフォルトの TRUE は make.names(*, unique=TRUE) を呼び出します。make.names=NA は "自動的な "行名を使用し、FALSE は無効な行名に対するエラーを通知します。
make.names=NAは "自動 "行名を使用し、FALSEは無効な行名のエラーを通知します。  (as.tableでは、特定のメソッドに渡される引数。as.data.frameでは、未使用。)
...のすべての要素について削除するレベル。  NAを含まず、useNAが指定されていない場合は、useNA = "ifany "を意味する。  非因子引数に対する解釈は'詳細'を参照。
NA値を表に含めるかどうか。  省略可能。
結果の次元に付ける名前（dimnames 名）。
デフォルトの dnn の構築方法を制御します。  詳細'を参照。
任意のRオブジェクト、またはas.data.frameメソッドのクラス "table "を継承したオブジェクト。as.data.frame.table(x,*)は、配列の "リシェーピング "のために、テーブルでないxに対して明示的に呼び出されることに注意してください。
データフレームの行名を指定する文字ベクトル。
表エントリの列に使用される名前（通常は counts）。
論理: 分類因子は、因子（デフォルト）として返すべきか、文字ベクトルとして返すべきか？
provideDimnames に渡されます。
任意のRオブジェクト。
NULL またはデータフレームの Rwnames を与える文字ベクトル。  欠損値は許されない。
論理値。TRUE の場合、行名の設定と列名の変換 (構文名: seemake.names) はオプションです。  R の基底パッケージ as.data.frame() のすべてのメソッドでは、基本的に data.frame(*, check.names = !optional) の themeaning と同様に、列名の処理にのみ optional を使用することに注意してください。
メソッドに渡す、またはメソッドから渡す追加引数。
論理: 文字ベクトルを係数に変換するか？
256文字（数値の場合はcut.names）以上の列名を短縮する（最後の6文字を" ... "に置き換える）かどうかを指定します。
(オプション) 列名の文字ベクトル。
空の列名、すなわち""が（data.frame内で）修正されるべきかどうかを示す論理。
data.frame()呼び出しに渡される。
(matrixxの)行名が無効な場合にどうするかを示す論理。  もし無効であれば、デフォルトの TRUE は make.names(*, unique=TRUE) を呼び出します。make.names=NA は "自動的な "行名を使用し、FALSE は無効な行名に対するエラーを通知します。
任意のRオブジェクト。
NULL またはデータフレームの行名を指定する文字ベクトル。  欠損値は許されない。
論理値。TRUE の場合、行名の設定と列名の変換（構文名: seemake.names）はオプションです。  R の基底パッケージ as.data.frame() のすべてのメソッドでは、基本的に data.frame(*, check.names = !optional) の themeaning と同様に、列名の処理にのみ optional を使用することに注意してください。
メソッドに渡す、またはメソッドから渡す追加引数。
論理: 文字ベクトルを係数に変換するか？
256文字（数値の場合はcut.names）以上の列名を短縮する（最後の6文字を" ... "に置き換える）かどうかを指定します。
(オプション) 列名の文字ベクトル。
空の列名、すなわち""が（data.frame内で）修正されるべきかどうかを示す論理。
data.frame()呼び出しに渡される。
(matrixxの)行名が無効な場合にどうするかを示す論理。  もし無効であれば、デフォルトの TRUE は make.names(*, unique=TRUE) を呼び出します。make.names=NA は "自動的な "行名を使用し、FALSE は無効な行名に対するエラーを通知します。
変換するオブジェクト。
文字列。  指定されなければ、最初の非NA要素に対して1つずつFormatsを試し、どれもうまくいかなければエラーを出す。  そうでなければ、処理はviastrptime()で行われ、そのヘルプ・ページに 利用可能な変換仕様が記述されています。
formatが指定されていない場合に試すフォーマット文字列の文字ベクトル。
フォーマット推測が成功しなかった場合に(エラーを通知する代わりに) NAを返すことを示す論理。
Dateオブジェクト、またはas.Date(origin, ...)によってそのようなオブジェクトに強制できるもの。
タイムゾーン名。
as.characterメソッドやas.Dateメソッドの書式を含む、他のメソッドから渡される引数。
変換されるオブジェクト。
文字列。  指定されていない場合、最初の非NA要素に対して1つずつFormatsを試し、どれもうまくいかなかった場合はエラーを出します。  そうでない場合、処理は viastrptime()で行われ、そのヘルプページには利用可能な変換仕様が記述されています。
formatが指定されていない場合に試すフォーマット文字列の文字ベクトル。
フォーマット推測が成功しなかった場合に(エラーを通知する代わりに) NAを返すことを示す論理。
Dateオブジェクト、またはas.Date(origin, ...)によってそのようなオブジェクトに強制できるもの。
タイムゾーン名。
as.characterメソッドやas.Dateメソッドの書式を含む、他のメソッドから渡される引数。
変換されるオブジェクト。
文字列。  指定されていない場合、最初の非NA要素に対して1つずつFormatsを試し、どれもうまくいかなかった場合はエラーを出します。  そうでない場合、処理は viastrptime()で行われ、そのヘルプページには利用可能な変換仕様が記述されています。
formatが指定されていない場合に試すフォーマット文字列の文字ベクトル。
フォーマット推測が成功しなかった場合に(エラーを通知する代わりに) NAを返すことを示す論理。
Dateオブジェクト、またはas.Date(origin, ...)によってそのようなオブジェクトに強制できるもの。
タイムゾーン名。
as.characterメソッドやas.Dateメソッドの書式を含む、他のメソッドから渡される引数。
変換されるオブジェクト。
文字列。  指定されていない場合、最初の非NA要素に対して1つずつFormatsを試し、どれもうまくいかなかった場合はエラーを出します。  そうでない場合、処理は viastrptime()で行われ、そのヘルプページには利用可能な変換仕様が記述されています。
formatが指定されていない場合に試すフォーマット文字列の文字ベクトル。
フォーマット推測が成功しなかった場合に(エラーを通知する代わりに) NAを返すことを示す論理。
Dateオブジェクト、またはas.Date(origin, ...)によってそのようなオブジェクトに強制できるもの。
タイムゾーン名。
as.characterメソッドやas.Dateメソッドの書式を含む、他のメソッドから渡される引数。
変換されるオブジェクト。
文字列。  指定されていない場合、最初の非NA要素に対して1つずつFormatsを試し、どれもうまくいかなかった場合はエラーを出します。  そうでない場合、処理は viastrptime()で行われ、そのヘルプページには利用可能な変換仕様が記述されています。
formatが指定されていない場合に試すフォーマット文字列の文字ベクトル。
フォーマット推測が成功しなかった場合に(エラーを通知する代わりに) NAを返すことを示す論理。
Dateオブジェクト、またはas.Date(origin, ...)によってそのようなオブジェクトに強制できるもの。
タイムゾーン名。
as.characterメソッドやas.Dateメソッドの書式を含む、他のメソッドから渡される引数。
変換されるオブジェクト。
文字列。  指定されていない場合、最初の非NA要素に対して1つずつFormatsを試し、どれもうまくいかなかった場合はエラーを出します。  そうでない場合、処理は viastrptime()で行われ、そのヘルプページには利用可能な変換仕様が記述されています。
formatが指定されていない場合に試すフォーマット文字列の文字ベクトル。
フォーマット推測が成功しなかった場合に(エラーを通知する代わりに) NAを返すことを示す論理。
Dateオブジェクト、またはas.Date(origin, ...)によってそのようなオブジェクトに強制できるもの。
タイムゾーン名。
as.characterメソッドやas.Dateメソッドの書式を含む、他のメソッドから渡される引数。
変換されるオブジェクト。
文字列。  指定されていない場合、最初の非NA要素に対して1つずつFormatsを試し、どれもうまくいかなかった場合はエラーを出します。  そうでない場合、処理は viastrptime()で行われ、そのヘルプページには利用可能な変換仕様が記述されています。
formatが指定されていない場合に試すフォーマット文字列の文字ベクトル。
フォーマット推測が成功しなかった場合に(エラーを通知する代わりに) NAを返すことを示す論理。
Dateオブジェクト、またはas.Date(origin, ...)によってそのようなオブジェクトに強制できるもの。
タイムゾーン名。
as.characterメソッドやas.Dateメソッドの書式を含む、他のメソッドから渡される引数。
date-time または date オブジェクト。
主に "POSIXlt "オブジェクトで変換に使用されるオプションのタイムゾーン指定。
文字列。  変換結果の単位。  省略可能。
文字列。  単位と同様だが、省略はできない。
時間間隔を指定する文字列または数値。
timの書式を指定する文字。  デフォルトはロケール固有の時間フォーマットです。
クラス "difftime "を継承したオブジェクト。
他のメソッドに渡す引数。
Double 値は integer に強制されます。1 以外の長さの引数を指定するとエラーになります。
強制またはテストされるオブジェクト。
他のメソッドに渡される、あるいは他のメソッドから渡される引数。
date-time または date オブジェクト。
主に "POSIXlt" オブジェクトで使用されます。
文字列。  結果の単位。  省略可能。
文字列。  単位と同様だが、省略はできない。
時間間隔を指定する文字列または数値。
timの書式を指定する文字。  デフォルトはロケール固有の時間フォーマットです。
クラス "difftime "を継承したオブジェクト。
他のメソッドに渡す、または他のメソッドから渡される引数。
変換されるRオブジェクト。
変換に使用するタイムゾーン指定（必要な場合）。  システム固有（タイムゾーンを参照）ですが、""は現在のタイムゾーン、"GMT "はUTC（協定世界時）です。  無効な値はほとんどの場合UTCとして扱われ、プラットフォームによっては警告が表示される。
他のメソッドに渡す引数。
strptimeが使用する日付-時刻フォーマットを指定する文字列。
formatが指定されなかった場合に試すフォーマット文字列の文字ベクトル。
フォーマット推測が成功しなかった場合に（エラーを通知する代わりに）NAを返すことを示す論理。
日付時刻オブジェクト、またはas.POSIXct(tz = "GMT")によってそのようなオブジェクトに強制できるもの。
変換するRオブジェクト。  それがすでにenvironmentであれば、それを返します。  それが正の数であれば、検索リストのその位置に対応する環境を返します。それが -1 なら、それが呼び出された環境。  is.object(x)が真で、as.environmentメソッドが見つかるクラスを持っている場合、それが使用されます。
式が使用されます：as.expression：メソッドに渡される引数。
任意のRオブジェクト。
式：expression：Rオブジェクト、通常は呼び出し、シンボルまたは定数。as.expression：メソッドに渡される引数。
任意のRオブジェクト。
expression：メソッドに渡される引数。
xが取り得るユニークな値（文字列）を表すオプションのベクトル。  デフォルトは、as.character(x)が取る値の一意な集合をxの昇順にソートしたものです。
ラベルの重複値は、x の異なる値を同じ因子レベルに対応付けるために使用できます。
レベルのセットを形成するときに除外される値のベクトル。  これは、x と同じレベル・セットを持つ因子であるか、または文字である必要があります。
レベルを (指定された順序で) 並べ替えられたものと見なすかどうかを決定する論理フラグ。
詳細'を参照。
(in ordered(.)) ：ordered 自体を除いた上記のいずれか。
すなわち、if any(is.na(x)).
変換するオブジェクト、デフォルト・メソッドのリスト。
追加引数。
関数が定義されるべき環境
変換するオブジェクト、デフォルトメソッドのリスト。
追加引数。
関数が定義されるべき環境
クラス "hexmode" を継承するメソッド用のオブジェクト。
NULL または、使用する最小フィールド幅を指定する正の整数。
大文字と小文字のどちらを使うかを示す論理値（デフォルト）。
他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
Double 値は integer に強制されます。1 以外の長さの引数を指定するとエラーになります。
強制またはテストされるオブジェクト。
他のメソッドに渡される、あるいは他のメソッドから渡されるさらなる引数。
オブジェクト。
強制またはテストされるオブジェクト。
すべての値をコピーするか、(デフォルトでは) 名前がドットで始まらないものだけをコピーするかを示す論理。
結果のリストの名前をソートするかどうかを示す論理。  これは多少コストがかかるが、環境の比較には有用であることに注意。
オブジェクト。
強制またはテストされるオブジェクト。
すべての値をコピーするか、(デフォルトでは)名前がドットで始まらないものだけをコピーするかを示す論理。
結果のリストの名前をソートするかどうかを示す論理。  これは多少コストがかかるが、環境の比較には有用であることに注意。
要約または印刷される日付オブジェクト。
計算の有効桁数。
出力するエントリの最大数を指定します。  デフォルトでは、NULLの場合、getOption("max.print")が使用される。
他のメソッドから、または他のメソッドに渡す引数。
オブジェクト。
強制またはテストされるオブジェクト。
すべての値をコピーするか、(デフォルトでは) 名前がドットで始まらないものだけをコピーするかを示す論理。
結果のリストの名前をソートするかどうかを示す論理。  これは多少コストがかかるが、環境の比較には有用であることに注意。
date-timeまたはdateオブジェクト。
主に "POSIXlt "オブジェクトで使用される。
文字列。  結果の単位。  省略可能。
文字列。  単位と同様だが、省略はできない。
時間間隔を指定する文字列または数値。
timの書式を指定する文字。  デフォルトはロケール固有の時間フォーマットです。
クラス "difftime "を継承したオブジェクト。
他のメソッドに渡す引数。
オブジェクト。
強制またはテストされるオブジェクト。
すべての値をコピーするか、(デフォルトでは) 名前がドットで始まらないものだけをコピーするかを示す論理。
結果のリストの名前をソートするかどうかを示す論理。  これは多少コストがかかるが、環境の比較には有用であることに注意。
オブジェクト。
強制またはテストされるオブジェクト。
すべての値をコピーするか、(デフォルトでは)名前がドットで始まらないものだけをコピーするかを示す論理。
結果のリストの名前をソートするかどうかを示す論理。  これは多少コストがかかるが、環境の比較には有用であることに注意。
オブジェクト。
強制またはテストされるオブジェクト。
すべての値をコピーするか、(デフォルトでは)名前がドットで始まらないものだけをコピーするかを示す論理。
結果のリストの名前をソートするかどうかを示す論理。  これは多少コストがかかるが、環境の比較には有用であることに注意。
package_versionの場合は、R.versionで得られるRversionオブジェクトでもよい。
無効な数値バージョンはエラーになる (デフォルト) かどうかを示す論理。
date-timeクラスの1つから出力または要約されるオブジェクト。
format.POSIXctに渡されます。
出力するエントリの最大数を指定します。  デフォルトでは、NULL の場合、getOption("max.print") が使用されます。
計算の有効桁数: 最も重要でない時間単位を正確に表すのに十分な桁数でなければならない。
他のメソッドから、あるいは他のメソッドに渡す引数。
日時オブジェクト
日時オブジェクトまたは文字ベクトル。  (文字ベクトルはas.POSIXct.によって変換される)
数値ベクトル（秒単位）
==, !=, <, <=, >=のいずれか。
date-timeクラスの1つから出力または要約されるオブジェクト。
format.POSIXctに渡されます。
出力するエントリの最大数を指定します。  デフォルトでは、NULL の場合、getOption("max.print") が使用されます。
計算の有効桁数: 最も重要でない時間単位を正確に表すのに十分な桁数でなければならない。
他のメソッドから、あるいは他のメソッドに渡す引数。
日時オブジェクト
日時オブジェクトまたは文字ベクトル。  (文字ベクトルはas.POSIXct.によって変換される)
数値ベクトル（秒単位）
==, !=, <, <=, >=のいずれか。
2倍値は整数に強制されます。1以外の長さの引数を与えるとエラーになります。
強制されるかテストされるオブジェクト。
他のメソッドに渡される、あるいは他のメソッドから渡されるさらなる引数。
Double 値は integer に強制されます: 1 以外の長さの引数を与えるとエラーになります。
強制またはテストされるオブジェクト。
他のメソッドに渡される、あるいは他のメソッドから渡されるさらなる引数。
オプションのデータ・ベクトル（リストまたは式ベクトルを含む）。  原子クラスでないRオブジェクトは、as.vectorによって強制され、すべての属性は破棄されます。
必要な行数。
希望する列数。
論理値。FALSE（デフォルト）の場合、行列は列で埋められ、そうでない場合は行で埋められます。
行列の dimnames 属性：NULL または、行名と列名をそれぞれ指定する長さ 2 のリスト。  空のリストはNULLとして扱われ、長さ1のリストは行名として扱われます。  リストには名前を付けることができ，そのリスト名は次元の名前として使用されます．
R オブジェクト。
メソッドに渡される、またはメソッドから渡される追加引数。
結果の行列が（NULL ではなく）文字列名を持つかどうかを示す論理値．  デフォルトの NA は，データフレームに '自動' 行名がある場合，または 0 行データフレームの場合に NULLrownames を使用します．
オプションのデータ・ベクトル（リストまたは式ベクトルを含む）。  アトミックでないクラス化されたRオブジェクトはas.vectorで強制され、全ての属性は破棄されます。
必要な行数。
希望の列数。
論理値。FALSE（デフォルト）の場合、行列は列で埋められ、そうでない場合は行で埋められます。
行列の dimnames 属性：NULL または、行名と列名をそれぞれ指定する長さ 2 のリスト。  空のリストはNULLとして扱われ、長さ1のリストは行名として扱われます。  リストには名前を付けることができ，そのリスト名は次元の名前として使用されます．
R オブジェクト。
メソッドに渡される、またはメソッドから渡される追加引数。
結果の行列が（NULL ではなく）文字列名を持つかどうかを示す論理値．  デフォルトの NA は，データフレームに '自動' 行名がある場合，または 0 行データフレームの場合に NULLrownames を使用します．
オプションのデータ・ベクトル（リストまたは式ベクトルを含む）。  アトミックでないクラス化されたRオブジェクトはas.vectorで強制され、全ての属性は破棄されます。
必要な行数。
希望の列数。
論理値。FALSE（デフォルト）の場合、行列は列で埋められ、そうでない場合は行で埋められます。
行列の dimnames 属性：NULL または、行名と列名をそれぞれ指定する長さ 2 のリスト。  空のリストはNULLとして扱われ、長さ1のリストは行名として扱われます。  リストには名前を付けることができ，そのリスト名は次元の名前として使用されます．
R オブジェクト。
メソッドに渡される、またはメソッドから渡される追加引数。
結果の行列が（NULL ではなく）文字列名を持つかどうかを示す論理値．  デフォルトの NA は，データフレームに '自動' 行名がある場合，または 0 行データフレームの場合に NULLrownames を使用します．
任意のRオブジェクト、通常は文字列のベクトル。
print.default() で使用され、文字列を右揃えにするかどうかを示す。
noquote "クラスのオブジェクト。
printなどの次のメソッドに渡されるオプション。
汎用c関数との互換性のため。
date-timeクラスの1つから出力または要約されるオブジェクト。
format.POSIXctに渡されます。
出力するエントリの最大数を指定します。  デフォルトでは、NULL の場合、getOption("max.print") が使用されます。
計算の有効桁数: 最も重要でない時間単位を正確に表すのに十分な桁数でなければならない。
他のメソッドから、あるいは他のメソッドに渡す引数。
日時オブジェクト
日時オブジェクトまたは文字ベクトル。  (文字ベクトルはas.POSIXct.によって変換される)
数値ベクトル（秒単位）
==, !=, <, <=, >=のいずれか。
強制またはテストされるオブジェクト。
テストまたは強制されるオブジェクト。
無視される。
テストまたは強制されるオブジェクト。
無視される。
Double 値は integer に強制されます。1 以外の長さの引数を指定するとエラーになります。
強制またはテストされるオブジェクト。
他のメソッドに渡される、あるいは他のメソッドから渡されるさらなる引数。
package_version の場合は、R.version で取得した Rversion オブジェクト。
無効な数値バージョンはエラーになる (デフォルト) かどうかを示す論理。
クラス "octmode "を継承したメソッド用のオブジェクト。
NULL または、使用する最小フィールド幅を指定する正の整数。
他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
データのベクトルで、通常は少数の値を取ります。
xが取り得るユニークな値（文字列）のオプションのベクトル。  デフォルトは、as.character(x)が取った値の一意な集合をxの昇順に並べたものです。この集合は、 sort(unique(x))よりも小さく指定できることに注意してください。
ラベルの重複値は、x の異なる値を同じ因子レベルに対応付けるために使用できます。
レベルのセットを形成するときに除外される値のベクトル。  これは、x と同じレベル・セットを持つ因子であるか、または文字である必要があります。
レベルを (指定された順序で) 並べ替えられたものと見なすかどうかを決定する論理フラグ。
詳細'を参照。
(in ordered(.)) ：ordered 自体を除いた上記のいずれか。
NA レベルが使用される場合のみ、つまり if any(is.na(x))の場合のみ追加されます。
package_version の場合は、R.version で得られる Rversion オブジェクト。
無効な数値バージョンはエラーになる (デフォルト) かどうかを示す論理。
オブジェクト。
強制またはテストされるオブジェクト。
すべての値をコピーするか、(デフォルトでは)名前がドットで始まらないものだけをコピーするかを示す論理。
結果のリストの名前をソートするかどうかを示す論理。  これは多少コストがかかるが、環境の比較には有用であることに注意。
変換されるRオブジェクト。
変換に使用するタイムゾーン指定（必要な場合）。  システム固有（タイムゾーン参照）だが、""は現在のタイムゾーン、"GMT "はUTC（協定世界時）である。  無効な値はほとんどの場合UTCとして扱われ、プラットフォームによっては警告が表示される。
他のメソッドに渡す引数。
strptimeが使用する日付-時刻フォーマットを指定する文字列。
formatが指定されなかった場合に試すフォーマット文字列の文字ベクトル。
フォーマット推測が成功しなかった場合に（エラーを通知する代わりに）NAを返すことを示す論理。
日付時刻オブジェクト、またはas.POSIXct(tz = "GMT")によってそのようなオブジェクトに強制できるもの。
変換対象のRオブジェクト。
変換に使用するタイムゾーン指定（必要な場合）。  システム固有（タイムゾーン参照）ですが、""は現在のタイムゾーン、"GMT "はUTC（協定世界時）です。  無効な値はほとんどの場合UTCとして扱われ、プラットフォームによっては警告が表示される。
他のメソッドに渡す引数。
strptimeが使用する日付-時刻フォーマットを指定する文字列。
formatが指定されなかった場合に試すフォーマット文字列の文字ベクトル。
フォーマット推測が成功しなかった場合に（エラーを通知する代わりに）NAを返すことを示す論理。
日付時刻オブジェクト、またはas.POSIXct(tz = "GMT")によってそのようなオブジェクトに強制できるもの。
変換対象のRオブジェクト。
変換に使用するタイムゾーン指定（必要な場合）。  システム固有（タイムゾーン参照）ですが、""は現在のタイムゾーン、"GMT "はUTC（協定世界時）です。  無効な値はほとんどの場合UTCとして扱われ、プラットフォームによっては警告が表示される。
他のメソッドに渡す引数。
strptimeが使用する日付-時刻フォーマットを指定する文字列。
formatが指定されなかった場合に試すフォーマット文字列の文字ベクトル。
フォーマット推測が成功しなかった場合に（エラーを通知する代わりに）NAを返すことを示す論理。
日付時刻オブジェクト、またはas.POSIXct(tz = "GMT")によってそのようなオブジェクトに強制できるもの。
変換対象のRオブジェクト。
変換に使用するタイムゾーン指定（必要な場合）。  システム固有（タイムゾーン参照）ですが、""は現在のタイムゾーン、"GMT "はUTC（協定世界時）です。  無効な値はほとんどの場合UTCとして扱われ、プラットフォームによっては警告が表示される。
他のメソッドに渡す引数。
strptimeが使用する日付-時刻フォーマットを指定する文字列。
formatが指定されなかった場合に試すフォーマット文字列の文字ベクトル。
フォーマット推測が成功しなかった場合に（エラーを通知する代わりに）NAを返すことを示す論理。
日付時刻オブジェクト、またはas.POSIXct(tz = "GMT")によってそのようなオブジェクトに強制できるもの。
変換対象のRオブジェクト。
変換に使用するタイムゾーン指定（必要な場合）。  システム固有（タイムゾーン参照）ですが、""は現在のタイムゾーン、"GMT "はUTC（協定世界時）です。  無効な値はほとんどの場合UTCとして扱われ、プラットフォームによっては警告が表示される。
他のメソッドに渡す引数。
strptimeが使用する日付-時刻フォーマットを指定する文字列。
formatが指定されなかった場合に試すフォーマット文字列の文字ベクトル。
フォーマット推測が成功しなかった場合に（エラーを通知する代わりに）NAを返すことを示す論理。
日付時刻オブジェクト、またはas.POSIXct(tz = "GMT")によってそのようなオブジェクトに強制できるもの。
変換対象のRオブジェクト。
変換に使用するタイムゾーン指定（必要な場合）。  システム固有（タイムゾーン参照）ですが、""は現在のタイムゾーン、"GMT "はUTC（協定世界時）です。  無効な値はほとんどの場合UTCとして扱われ、プラットフォームによっては警告が表示される。
他のメソッドに渡す引数。
strptimeが使用する日付-時刻フォーマットを指定する文字列。
formatが指定されなかった場合に試すフォーマット文字列の文字ベクトル。
フォーマット推測が成功しなかった場合に（エラーを通知する代わりに）NAを返すことを示す論理。
日付時刻オブジェクト、またはas.POSIXct(tz = "GMT")によってそのようなオブジェクトに強制できるもの。
変換対象のRオブジェクト。
変換に使用するタイムゾーン指定（必要な場合）。  システム固有（タイムゾーン参照）ですが、""は現在のタイムゾーン、"GMT "はUTC（協定世界時）です。  無効な値はほとんどの場合UTCとして扱われ、プラットフォームによっては警告が表示される。
他のメソッドに渡す引数。
strptimeが使用する日付-時刻フォーマットを指定する文字列。
formatが指定されなかった場合に試すフォーマット文字列の文字ベクトル。
フォーマット推測が成功しなかった場合に（エラーを通知する代わりに）NAを返すことを示す論理。
日付時刻オブジェクト、またはas.POSIXct(tz = "GMT")によってそのようなオブジェクトに強制できるもの。
変換対象のRオブジェクト。
変換に使用するタイムゾーン指定（必要な場合）。  システム固有（タイムゾーン参照）ですが、""は現在のタイムゾーン、"GMT "はUTC（協定世界時）です。  無効な値はほとんどの場合UTCとして扱われ、プラットフォームによっては警告が表示される。
他のメソッドに渡す引数。
strptimeが使用する日付-時刻フォーマットを指定する文字列。
formatが指定されなかった場合に試すフォーマット文字列の文字ベクトル。
フォーマット推測が成功しなかった場合に（エラーを通知する代わりに）NAを返すことを示す論理。
日付時刻オブジェクト、またはas.POSIXct(tz = "GMT")によってそのようなオブジェクトに強制できるもの。
変換対象のRオブジェクト。
変換に使用するタイムゾーン指定（必要な場合）。  システム固有（タイムゾーン参照）ですが、""は現在のタイムゾーン、"GMT "はUTC（協定世界時）です。  無効な値はほとんどの場合UTCとして扱われ、プラットフォームによっては警告が表示される。
他のメソッドに渡す引数。
strptimeが使用する日付-時刻フォーマットを指定する文字列。
formatが指定されなかった場合に試すフォーマット文字列の文字ベクトル。
フォーマット推測が成功しなかった場合に（エラーを通知する代わりに）NAを返すことを示す論理。
日付時刻オブジェクト、またはas.POSIXct(tz = "GMT")によってそのようなオブジェクトに強制できるもの。
変換対象のRオブジェクト。
変換に使用するタイムゾーン指定（必要な場合）。  システム固有（タイムゾーン参照）ですが、""は現在のタイムゾーン、"GMT "はUTC（協定世界時）です。  無効な値はほとんどの場合UTCとして扱われ、プラットフォームによっては警告が表示される。
他のメソッドに渡す引数。
strptimeが使用する日付-時刻フォーマットを指定する文字列。
formatが指定されなかった場合に試すフォーマット文字列の文字ベクトル。
フォーマット推測が成功しなかった場合に（エラーを通知する代わりに）NAを返すことを示す論理。
日付時刻オブジェクト、またはas.POSIXct(tz = "GMT")によってそのようなオブジェクトに強制できるもの。
変換対象のRオブジェクト。
変換に使用するタイムゾーン指定（必要な場合）。  システム固有（タイムゾーン参照）ですが、""は現在のタイムゾーン、"GMT "はUTC（協定世界時）です。  無効な値はほとんどの場合UTCとして扱われ、プラットフォームによっては警告が表示される。
他のメソッドに渡す引数。
strptimeが使用する日付-時刻フォーマットを指定する文字列。
formatが指定されなかった場合に試すフォーマット文字列の文字ベクトル。
フォーマット推測が成功しなかった場合に（エラーを通知する代わりに）NAを返すことを示す論理。
日付時刻オブジェクト、またはas.POSIXct(tz = "GMT")によってそのようなオブジェクトに強制できるもの。
変換対象のRオブジェクト。
変換に使用するタイムゾーン指定（必要な場合）。  システム固有（タイムゾーン参照）ですが、""は現在のタイムゾーン、"GMT "はUTC（協定世界時）です。  無効な値はほとんどの場合UTCとして扱われ、プラットフォームによっては警告が表示される。
他のメソッドに渡す引数。
strptimeが使用する日付-時刻フォーマットを指定する文字列。
formatが指定されなかった場合に試すフォーマット文字列の文字ベクトル。
フォーマット推測が成功しなかった場合に（エラーを通知する代わりに）NAを返すことを示す論理。
日付時刻オブジェクト、またはas.POSIXct(tz = "GMT")によってそのようなオブジェクトに強制できるもの。
QR分解を行う数値行列または複素行列。  論理行列は数値に強制される。
LAPACKが偽でxが実数の場合にのみ使用される。
qr によって計算されるタイプの QR 分解。
方程式の右辺のベクトルまたは行列。
QR 分解または（qr.solve のみ）矩形行列。
実効ランク．
論理。  実数 x の場合, true なら LAPACK を使用し, それ以外なら LINPACK (デフォルト) を使用する.
他のメソッドに渡される、または他のメソッドから渡されるその他の引数
希望する長さ。
強制されるオブジェクト。
2倍値は整数に強制されます。1以外の長さの引数を与えるとエラーになります。
強制されるかテストされるオブジェクト。
他のメソッドに渡される、あるいは他のメソッドから渡されるさらなる引数。
Double 値は integer に強制されます: 1 以外の長さの引数を与えるとエラーになります。
強制またはテストされるオブジェクト。
他のメソッドに渡される、あるいは他のメソッドから渡されるさらなる引数。
強制またはテストされるオブジェクト。
(文字列を含む)要素として解釈できる1つ以上のオブジェクト、またはそのように解釈できる要素を持つリスト(またはデータフレーム)。  (as.tableの場合は、特定のメソッドに渡される引数。as.data.frameの場合は、未使用。)
...のすべての要素について削除するレベル。  NAを含まず、useNAが指定されていない場合は、useNA = "ifany "を意味する。  非因子引数に対する解釈は'詳細'を参照。
NA値を表に含めるかどうか。  省略可能。
結果の次元に与える名前（dimnames 名）。
デフォルトの dnn の構築方法を制御します。  詳細'を参照。
任意のRオブジェクト、またはas.data.frameメソッドのクラス "table "を継承したオブジェクト。as.data.frame.table(x,*)は、配列の "リシェーピング "のために、テーブルでないxに対して明示的に呼び出されることに注意してください。
データフレームの行名を指定する文字ベクトル。
表エントリの列に使用される名前（通常は counts）。
論理: 分類因子は、因子（デフォルト）として返すべきか、文字ベクトルとして返すべきか？
provideDimnames に渡されます。
因子（文字列を含む）として解釈できる1つ以上のオブジェクト、またはそのように解釈できる要素を持つリスト（またはデータフレーム）。  (as.tableの場合は、特定のメソッドに渡される引数。as.data.frameの場合は、未使用。)
...のすべての要素について削除するレベル。  NAを含まず、useNAが指定されていない場合は、useNA = "ifany "を意味する。  非因子引数に対する解釈は'詳細'を参照。
NA値を表に含めるかどうか。  省略可能。
結果の次元に付ける名前（dimnames 名）。
デフォルトの dnn の構築方法を制御します。  詳細'を参照。
任意のRオブジェクト、またはas.data.frameメソッドのクラス "table "を継承したオブジェクト。as.data.frame.table(x,*)は、配列の "リシェーピング "のために、テーブルでないxに対して明示的に呼び出されることに注意してください。
データフレームの行名を指定する文字ベクトル。
表エントリの列に使用される名前（通常は counts）。
論理: 分類因子は、因子（デフォルト）として返すべきか、文字ベクトルとして返すべきか？
provideDimnames に渡されます。
アトミックモード、"リスト"、"式"、または(vectorを除く) "any "を指定する文字列。  現在のところ、is.vector()はmodeに任意の型(seetypeof)を指定でき、modeが "any "でない場合、is.vector(x, mode)はtypeof(x) == modeとほぼ同じです。
は、必要な長さを指定する非負整数です。  長いベクトル、すなわち length > .Machine$integer.maxの場合、"double "型でなければなりません。  長さが 1 以外の引数を指定するとエラーになります。
R オブジェクト。
アトミック・モード、"リスト"、"式"、または（vectorを除く）"any "を指定する文字列。  現在のところ、is.vector() は mode に任意の型(seetypeof)を指定することができ、 mode が "any "でない場合、is.vector(x, mode) は typeof(x) == mode とほぼ同じです。
は、必要な長さを指定する非負整数です。  長いベクトル、すなわち length > .Machine$integer.maxの場合、"double "型でなければなりません。  長さが 1 以外の引数を指定するとエラーになります。
R オブジェクト。
数値ベクトルまたは複素ベクトル。
数値ベクトルまたは複素ベクトル。
文字列または名前空間環境。
論理。
環境。
名前空間環境。
文字ベクトル。
オプションの文字ベクトル。
名前空間環境。
ロードするパッケージ/名前空間を指定する文字列。
ジェネリックと並列なパッケージ名のベクトル。
ライブラリを指定する文字ベクトル。
論理。
文字。
文字。
環境。
3列の文字行列。
文字。
任意のオブジェクト
文字引数。
メソッド・テーブル名。
symbol: 名前空間の名前。
インポートから除外するシンボルを指定する文字ベクトル。
行列を含む配列。
例えば、行列の場合、1は行、2は列を表し、c(1, 2)は行と列を表す。
任意のRオブジェクト。
オプション, 論理: 変換の方向を示す。
オプション, 論理: S3への変換が完了したかどうか。  通常は必要ないが、詳細セクションを参照。
任意の R オブジェクト。
オプション、論理：変換の方向を示す。
オプション、論理：S3への変換が完了したかどうか。  通常は必要ないが、詳細セクションを参照。
文字列として与えられる変数名。  強制は行われず、警告とともに、長さが1より大きい文字ベクトルの最初の要素が使用される。
xに代入される値。
代入先。  デフォルトでは、現在の環境に代入されます。  他の可能性については、'詳細' を参照してください。
使用する環境。  詳細' を参照。
環境を囲むフレームを検査するか。
無視される互換性機能です。
数値ベクトルまたは複素数ベクトル。
数値または複素数ベクトル。
数値または複素数ベクトル
'データベース'。  adata.frame、リスト、saveまたはNULLで作成されたRデータファイル、または環境。  詳細'も参照してください。
アタッチする search() の位置を指定する整数。
アタッチするデータベースに使用する名前。package:で始まる名前はライブラリ用に予約されています。
論理値。  TRUEを指定すると、データベースのアタッチによる競合について警告が表示されます。ただし、そのデータベースにオブジェクト.conflict.OKが含まれている場合は除きます。  コンフリクトとは、関数をマスクする関数、または非関数をマスクする非関数のことです。
文字列または名前空間オブジェクト。
アタッチする位置を指定する整数。
NULL、またはパッケージの依存オブジェクト.Dependに記録される依存関係の文字ベクトル。
ロードするパッケージ/名前空間を指定する文字列。
ライブラリ検索パスを指定する文字ベクトル。
パッケージのインストール時以外は無視されます。
パッケージのインストール中以外は無視されます。
trueの場合、コードをロードした直後に停止する。
NULLまたはバージョン指定（opとversionで構成されるリスト）。
logical: 進捗メッセージとエラーメッセージを抑制するか。
文字列またはパッケージの「名前」、as.symbolを参照。
文字ベクトル。
loadNamespaceに渡すその他の引数。
アクセスする属性を持つオブジェクト。
どの属性にアクセスするかを指定する、空でない文字列。
論理：正確に一致させるか？
オブジェクト、属性の新しい値、または属性を削除する NULL。
Rオブジェクト。
ターゲットと比較される他のRオブジェクト。
特に以下の2つは数値比較のためのものです：
数値≥0。許容範囲より小さい差は報告されない。  デフォルト値は1.5e-8に近い。
NULL または numeric > 0, 通常は長さ1またはlength(target)。  詳細'を参照。
平均(絶対または相対)差を計算する際に、 target == currentcases をカウントするかどうかを示す論理値。  デフォルトのFALSEは、targetとcurrentが数ヶ所しか違わないような場合に誤解を招く可能性がある。
errは相対誤差、絶対誤差、またはスケーリングされた誤差、whatは誤差の種類を示す文字列の2つの引数からなる関数である。
ターゲットとカレントの属性（名前以外）を比較するかどうかを示す論理。
リスト比較を、整数インデックスではなく、名前（一致する場合）で異なる構成要素を報告すべきかどうかを示す論理。  これは ... の後に来るので、フルネームで指定しなければならないことに注意。
lsに渡される論理は、"隠された "オブジェクトも環境で考慮すべきかどうかを示す。
environmentメソッドに対して: 「約束を強制」するかどうか、つまり、典型的な形式関数の引数が比較のために評価されるかどうかを示す論理。  falseの場合、2つの環境のオブジェクトの名前のみが等しいかどうかチェックされる。
2つのnls()フィットを比較する場合など、予期しない場合にはcheck.environment=FALSEを設定する必要があります。
ターゲットとカレントの "tzone "属性を比較すべきかどうかを示す論理。
ターゲットとカレントの名前(.)を比較するかどうかを示す論理。
アクセスされる属性を持つオブジェクト。
どの属性にアクセスするかを指定する、空でない文字列。
論理：どちらを正確にマッチさせるか。
オブジェクト、属性の新しい値、または属性を削除する NULL。
任意のRオブジェクト
属性の適切な名前付きリスト、またはNULL。
任意のRオブジェクト
属性の適切な名前付きリスト、またはNULL。
オブジェクトの名前を指定する文字列
オブジェクトを含むパッケージ名を表す文字列。
logical: オートローダー内部で使用。
その他のライブラリへの引数。
オブジェクトの名前を指定する文字列。
オブジェクトを含むパッケージ名を指定する文字列。
logical: オートローダー内部で使用。
ライブラリへのその他の引数。
解くべき系の係数を与える上（または下）三角行列。  対角より下(上)の値は無視される。
列が方程式の右辺を与える行列.
使用する r の列数と x の行数.
TRUE (デフォルト) の場合, r の上三角形部分が使用される.  TRUE（デフォルト）の場合、rの上三角形部分が使用される。
論理; TRUEの場合、r' * y = x fory、つまりt(r) %*% y == xを解く。
関数、数式、またはNULL（デフォルト）。
関数に関連付ける環境
任意のRオブジェクト。
TRUE の場合、環境はハッシュ・テーブルを使用します。
作成された環境のエンクロージャとして使用される環境。
環境
ハッシュ環境の初期サイズを指定する整数。  size が NA またはゼロの場合、内部のデフォルト値が使用されます。  この引数は、hash が FALSE の場合は無視されます。
パス名を含む文字ベクトル。
数値, ≥ 0.
数値; 対応するBessel関数の次数(分数や負の場合もある)。
論理; TRUEの場合, オーバーフロー(I(nu))またはアンダーフロー(K(nu))を避けるために, 結果はそれぞれ指数関数的にスケーリングされる。
数値, ≥ 0.
数値; 対応するBessel関数の次数(分数で負かもしれない)。
論理; TRUEの場合, オーバーフロー(I(nu))またはアンダーフロー(K(nu))を避けるために, 結果はそれぞれ指数関数的にスケーリングされます.
数値, ≥ 0.
数値; 対応するBessel関数の次数(分数で負かもしれない)。
論理; TRUEの場合, オーバーフロー(I(nu))またはアンダーフロー(K(nu))を避けるために, 結果はそれぞれ指数関数的にスケーリングされます.
数値, ≥ 0.
数値; 対応するBessel関数の次数(分数で負かもしれない)。
論理; TRUEの場合, オーバーフロー(I(nu))またはアンダーフロー(K(nu))を避けるために, 結果はそれぞれ指数関数的にスケーリングされる.
非負の数値ベクトル.
数値ベクトル。
整数ベクトル。
環境。
バインディングをロックするかどうかを指定する論理。
名前オブジェクトまたは文字列。
0個または1個の引数をとる関数
環境。
バインディングをロックするかどうかを指定する論理。
名前オブジェクトまたは文字列。
0個または1個の引数をとる関数。
1つ以上の文字ベクトル。
翻訳の「ドメイン」。
非負の整数。
n = 1のときに英語で使われるメッセージ。
n = 0, 2, 3, ...のときに英語で使われるメッセージ。
ドメインの翻訳されたメッセージカタログを見つけるディレクトリ。
整数ベクトル。数値ベクトルは整数ベクトルに強制される。
31 までの非負整数ベクトル。
数値ベクトルは整数ベクトルに強制されます。
31までの非負整数ベクトル。
数値ベクトルは整数ベクトルに強制されます。
31までの非負整数ベクトル。
数値ベクトルは整数ベクトルに強制されます。
31までの非負整数ベクトル。
数値ベクトルは整数ベクトルに強制されます。
31までの非負整数ベクトル。
数値ベクトルは整数ベクトルに強制されます。
31までの非負整数ベクトル。
関数オブジェクト、または'詳細'を参照。
関数を定義する環境。
オブジェクト、通常は言語オブジェクト。
関数オブジェクト。
関数を定義する環境。
オブジェクト。通常は言語オブジェクト。
言語オブジェクト。
環境。
TRUEスプライシングが有効な場合。
1以上の長さの条件は、現在のところ警告付きで受け入れられますが、最初の要素だけが使用されます。  環境変数_R_CHECK_LENGTH_1_CONDITION_がtrueに設定されると、代わりにエラーが通知されます。  その他の型は、可能であれば論理型に強制され、クラスは無視される。
変数の構文名。
ベクトル（リストと式を含む）、ペアリスト、NULLを評価する式。  因子値は文字ベクトルに強制される。  R4.0.0から、これは長いベクタになる。
形式的な意味での式。  通常は { expr1 ; expr2 } のような形式です。
ブラウザが起動されると取得できるテキスト文字列。
ブラウザが起動されると取得できる条件。
条件"。  デフォルトでは、論理に強制された後、falseでない場合はデバッガが起動され、そうでない場合は制御が直接返されます。
呼び出されたコンテキストを報告するときに、いくつ前の呼び出しをスキップするか。
スキップするコンテキストの数。
スキップするコンテキストの数。
スキップするコンテキストの数。
内部関数（.Internalを介して呼び出すことができる）のみを返すかどうかを示す論理値。
R オブジェクト、通常はデータフレーム、場合によっては行列。
各要素の長さはnrow(data)です。
データの（通常はデータフレームの）部分集合に適用される関数。
FUNへのさらなる引数。
logical: tapplyを参照。
Rオブジェクト、通常はデータフレーム、場合によっては行列。
それぞれnrow(data)の長さの因子または因子のリスト。
dataの（通常はデータフレームの）部分集合に適用される関数。
FUNへのさらなる引数。
logical: tapplyを参照。
Rオブジェクト、通常はデータフレーム、場合によっては行列。
それぞれnrow(data)の長さの因子または因子のリスト。
dataの（通常はデータフレームの）部分集合に適用される関数。
FUNへのさらなる引数。
logical: tapplyを参照。
文字列。  接続の説明： '詳細'を参照。
文字列。  接続のオープン方法(最初にオープンする場合)。  指定できる値については「モード」のセクションを参照のこと。
論理値。  ブロック」のセクションを参照。
想定するエンコーディングの名前。  エンコーディング」のセクションを参照。
論理値。  trueを指定すると、'raw'インターフェイスが使用され、 通常のファイルではない引数、例えばキャラクタデバイスなどに適している。  これは、テキストモードでの読み込みのためにオープンする際に、 圧縮ファイルであるかどうかのチェックを抑制し、「ファイル」がシーク可能でない可能性があることを表明する。
文字列、部分的に一致するtoc("default", "internal", "wininet", "libcurl"):「詳細」を参照。
HTTPrequests で使用する HTTP ヘッダの名前付き文字ベクトル。  非 HTTP URL では無視されます。  HTTPUserAgent オプション (options を参照) で指定した User-Agent ヘッダが自動的に最初のヘッダとして使用されます。
0-9 の整数。  書き込み時に適用する圧縮の量を、なしから最大まで指定します。  forxzfile には負の値を指定することもできます: '圧縮'のセクションを参照ください。
数値: この接続で使用するタイムアウト (秒単位)。  OSによっては、非常に大きな値をゼロとして扱うことがあるので注意すること。ただし、POSIX標準では31日までの値をサポートしている。
オプションの文字ベクトル。現在のところ、TCPソケットでは "no-delay "のみがサポートされている。
zip ファイル内のファイル名。
文字列。  ポートのホスト名。
整数。  TCP ポート番号。
論理。  ソケットをクライアントにするかサーバーにするか。
接続をリッスンするサーバソケット。
コネクション。
文字列。  現在は無視される。
文字列。  空文字列または "read "または "write"、部分一致可。
他のメソッドに渡される、または他のメソッドから渡される引数。
連結されるオブジェクト。  引数リストの先頭でない限り、すべての NULL エントリはメソッド・ディスパッチ前に削除されます。
論理的。  recursive = TRUE の場合、関数はリスト（およびペアリスト）を再帰的に下降し、すべての要素をベクトルに結合します。
名前を保存するかどうかを示す論理値。
要約または印刷される日付オブジェクト。
計算の有効桁数。
出力されるエントリの最大数を数値またはNULLで指定します。  デフォルトでは、NULLの場合、getOption("max.print")が使用される。
他のメソッドから、または他のメソッドに渡す引数。
date-time または date オブジェクト。
主に "POSIXlt "オブジェクトで変換に使用されるオプションのタイムゾーン指定。
文字列。  結果の単位。  省略可能。
文字列。  単位と同様だが、省略はできない。
時間間隔を指定する文字列または数値。
timの書式を指定する文字。  デフォルトはロケール固有の時間フォーマットです。
クラス "difftime "を継承したオブジェクト。
他のメソッドに渡す引数。
データのベクトルで、通常は少数の異なる値を取ります。
xが取りうるユニークな値（文字列）を表すオプションのベクトル。  デフォルトは、as.character(x)が取る値の一意な集合を、xの昇順にソートしたものです。
ラベルの重複値は、x の異なる値を同じ因子レベルに対応付けるために使用できます。
レベルのセットを形成するときに除外される値のベクトル。  これは、x と同じレベル・セットを持つ因子であるか、または文字である必要があります。
レベルを (指定された順序で) 並べ替えられたものと見なすかどうかを決定する論理フラグ。
詳細'を参照。
(in ordered(.)) ：ordered 自体を除いた上記のいずれか。
NA レベルが使用される場合のみ追加されます。つまり、any(is.na(x)).
任意のRオブジェクト、通常は文字列のベクトル。
print()に渡される、print.default()で使用される、文字列を右揃えにするかどうかを示すオプションの論理値。
noquote "クラスのオブジェクト。
printなどの次のメソッドに渡されるオプション。
汎用c関数との互換性のため。
package_versionの場合は、R.versionで得られるRversionオブジェクト。
無効な数値バージョンはエラーになるか(デフォルト)、ならないかを示す論理。
date-timeクラスの1つから出力または要約されるオブジェクト。
format.POSIXctに渡されます。
出力するエントリの最大数を指定します。  デフォルトでは、NULL の場合、getOption("max.print") が使用されます。
計算の有効桁数: 最も重要でない時間単位を正確に表すのに十分な桁数でなければならない。
他のメソッドから、あるいは他のメソッドに渡す引数。
日時オブジェクト
日時オブジェクトまたは文字ベクトル。  (文字ベクトルはas.POSIXct.によって変換される)
数値ベクトル（秒単位）
==, !=, <, <=, >=のいずれか。
date-timeクラスの1つから出力または要約されるオブジェクト。
format.POSIXctに渡されます。
出力するエントリの最大数を指定します。  デフォルトでは、NULL の場合、getOption("max.print") が使用されます。
計算の有効桁数: 最も重要でない時間単位を正確に表すのに十分な桁数でなければならない。
他のメソッドから、あるいは他のメソッドに渡す引数。
日時オブジェクト
日時オブジェクトまたは文字ベクトル。  (文字ベクトルはas.POSIXct.によって変換される)
数値ベクトル（秒単位）
==, !=, <, <=, >=のいずれか。
cat (forwarnings())に渡す引数。
warnings()が返す "warnings "オブジェクト。
warnings "または "summary.warnings "オブジェクト。
メッセージに "ラベル "を付けるための、xと同じ長さの文字ベクトル。  デフォルトは paste0(seq_len(n), ": ") forn >= 2 where n <- length(x).
メッセージが表示される前に cat() される文字列。
呼び出される関数の名前を示す、空でない文字列。
呼び出しの一部となる引数。
任意のRオブジェクト。
引数1つの関数、終了手続き。
必要なコンポーネントを指定する文字ベクトルまたはNULL。  NULLは、すべてが必要であることを意味する。
falseに設定すると、"No protocol specified "という警告を避けることができ、例えば "X11 "ケイパビリティをNAとして返すことができる。
文字ベクトル、またはas.characterによって文字に強制できるオブジェクト。
翻訳される文字を指定する文字列。  長さが2以上の文字ベクトルが与えられた場合、警告とともに最初の要素が使われる。
翻訳を指定する文字列。長さが2以上の文字ベクトルが与えられた場合、警告とともに最初の要素が使用される。
論理: 大文字または小文字に変換しますか?
Rオブジェクト（許可されるオブジェクトのタイプは「詳細」を参照）。
接続、または印刷先ファイルを指定する文字列。  ""(デフォルト)の場合、catは標準出力接続、つまり、sinkによってリダイレクトされない限りコンソールに出力する。
各要素の後に追加する文字列の文字ベクトル。
論理値または(正の)数値で、出力を連続した行に分割する方法を制御する。  FALSE(デフォルト)の場合、" \n "で明示的に作成された改行のみが出力される。  それ以外の場合、出力は、fill が TRUE ならオプション width に等しい印字幅で、数値なら fill の値で改行される。  改行は要素間にのみ挿入され、fill よりも幅の広い文字列は折り返されない。  正でない fill 値は無視され、警告が表示されます。
fillがFALSEの場合は無視されます。
論理。引数fileがfileの名前（接続や"|cmd "ではない）である場合のみ使用される。
(一般化された)ベクトルまたは行列。  これらは名前付き引数として与えることができる。  他のRオブジェクトは適宜強制されるか、S4methodsが使用される。  (cbindの "data.frame "メソッドでは、data.frameにstringsAsFactorsのような引数を与えることができます)。
(cbindの "data.frame "メソッドでは、data.frameの引数として、stringsAsFactorsなどを指定することができます。) (デフォルトのメソッドでは) deparse.level = 0 はラベルを作成しません。
(データフレームメソッドのみ:) logical引数からユニークで有効な行名を作成するかどうかを指定します。
as.data.frameに渡されるlogicalは、...引数に(data.frameでない)文字が含まれる場合のみ有効です。
データフレームに因子が含まれている場合、デフォルトのTRUEは、因子のNAレベルが保持されることを保証します。  Rの3.6.xまでのバージョンでは、factor.exclude = NAは暗黙のハードコード(R <= 3.6.0)またはデフォルト(R = 3.6.x, x >= 1)になっています。
(一般化された)ベクトルまたは行列。  これらは名前付き引数として与えることができる。  他のRオブジェクトは適宜強制されるか、S4methodsが使用される: セクション'詳細'と'値'を参照。  (cbindの "data.frame "メソッドでは、data.frameにstringsAsFactorsのような引数を与えることができます)。
(cbindの "data.frame "メソッドでは、data.frameの引数として、stringsAsFactorsなどを指定することができます。) (デフォルトのメソッドでは) deparse.level = 0 はラベルを作成しません。
(データフレームメソッドのみ:) logical引数からユニークで有効な行名を作成するかどうかを指定します。
as.data.frameに渡されるlogicalは、...引数に(data.frameでない)文字が含まれる場合のみ有効です。
データフレームに因子が含まれている場合、デフォルトのTRUEは、因子のNAレベルが保持されることを保証します。  Rの3.6.xまでのバージョンでは、factor.exclude = NAは暗黙のハードコード(R <= 3.6.0)またはデフォルト(R = 3.6.x, x >= 1)。
数値ベクトル。  あるいは、roundとsignifの場合は複素数ベクトル。
使用する小数点以下の桁数(round)または有効桁数(signif)を示す整数。
メソッドに渡す引数。
展開する文字列。
マッチする値を持つ文字ベクトル。
展開できなかった場合に評価される R 式。
Double 値は integer に強制されます。1 以外の長さの引数を指定するとエラーになります。
強制またはテストされるオブジェクト。
他のメソッドに渡される、あるいは他のメソッドから渡されるさらなる引数。
as.characterによって文字ベクトルに変換されます。  長いベクトルがサポートされています。
照合される値: 文字ベクトルに変換されます。  長いベクトルはサポートされていません。
マッチしない位置で返される(整数)値。
変換またはシフトされるオブジェクト。
論理：変換対象は単一文字列か、複数の文字列か。
シフトするビット数。  正の数は右にシフトし、負の数は左にシフトします。
結果の型。
文字ベクトル、またはas.characterによってcharacterに強制できるオブジェクト。
翻訳される文字を指定する文字列。  長さが2以上の文字ベクトルが与えられた場合、警告とともに最初の要素が使用される。
翻訳を指定する文字列。長さが2以上の文字ベクトルが与えられた場合、警告とともに最初の要素が使用される。
論理: 大文字または小文字に変換しますか?
date-timeクラスの1つから出力または要約されるオブジェクト。
format.POSIXctに渡されます。
出力するエントリの最大数を指定します。  デフォルトでは、NULL の場合、getOption("max.print") が使用されます。
計算の有効桁数: 最も重要でない時間単位を正確に表すのに十分な桁数でなければならない。
他のメソッドから、あるいは他のメソッドに渡す引数。
日時オブジェクト
日時オブジェクトまたは文字ベクトル。  (文字ベクトルはas.POSIXct.によって変換される)
数値ベクトル（秒単位）
==, !=, <, <=, >=のいずれか。
呼び出し元から渡された "ドット"。
sys.call()に渡される。  呼び出し元は、メッセージが呼び出し元について言及する必要がある場合、 -2を使用することができる。
未実装: ...の名前付き要素の文字ベクトル。
メソッドが存在するオブジェクト。  デフォルトのメソッドは、数値（または論理）対称の正定値行列に適用されます。
メソッドへの、あるいはメソッドからの引数。
ピボット処理を使用するか？
論理を使用するか。  LINPACK を使用しますか (現在はエラー)。
pivot = TRUE で使用する数値許容誤差。
メソッドが存在するオブジェクト。  既定のメソッドは、数値（または論理）対称の正定値行列に適用されます。
メソッドへの、またはメソッドからの引数。
ピボット処理を使用しますか?
論理を使用するか。  LINPACK を使用しますか (現在はエラー)。
pivot = TRUE で使用する数値許容誤差。
行列。  上三角形の最初のサイズの列は、反転される行列のコレスキー分解を含む。
コレスキー分解を含む x の列数。
論理。  無効でエラーを返す。
非負の数値ベクトル。
数値ベクトル。
整数ベクトル。
R オブジェクト。
valueにはNULLを指定することもできる。
戻り値に影響を与える論理値: '詳細'を参照。
R オブジェクト
valuec には NULL を指定することもできます。
戻り値に影響を与える論理: '詳細'を参照。
文字ベクトル。
接続。
論理値。  trueの場合、押し戻された各文字列に改行が追加されます。
部分的にマッチした文字列。  詳細を参照。
文字列。  詳細」を参照のこと。
文字列。  接続のオープン方法の説明(最初にオープンする場合)。  指定できる値についてはセクション「モード」を参照。
論理値。  ブロック」のセクションを参照。
想定するエンコーディングの名前。  エンコーディング」のセクションを参照。
論理値。  trueを指定すると、'raw'インターフェイスが使用され、 通常のファイルではない引数、例えばキャラクタデバイスに適している。  これは、テキストモードでの読み込みのためにオープンする際に 圧縮ファイルであるかどうかのチェックを抑制し、'ファイル'がシーク可能でない可能性があることを表明する。
文字列、部分的に一致するtoc("default", "internal", "wininet", "libcurl"):「詳細」を参照。
HTTPrequests で使用する HTTP ヘッダの名前付き文字ベクトル。  非 HTTP URL では無視されます。  HTTPUserAgent オプション (options を参照) で指定した User-Agent ヘッダが自動的に最初のヘッダとして使用されます。
0-9 の整数。  書き込み時に適用する圧縮の量を、なしから最大まで指定します。  forxzfile には負の値を指定することもできます: '圧縮'のセクションを参照ください。
数値: この接続で使用するタイムアウト (秒単位)。  OSによっては、非常に大きな値をゼロとして扱うことがあるので注意すること。ただし、POSIX標準では31日までの値をサポートしている。
オプションの文字ベクトル。現在のところ、TCPソケットでは "no-delay "のみがサポートされている。
zip ファイル内のファイル名。
文字列。  ポートのホスト名。
整数。  TCP ポート番号。
論理。  ソケットをクライアントにするかサーバーにするか。
接続をリッスンするサーバソケット。
コネクション。
文字列。  現在は無視される。
文字列。  空文字列または "read "または "write"、部分一致可。
他のメソッドに渡される、または他のメソッドから渡される引数。
文字列。  接続の説明。'詳細' を参照。
文字列。  接続のオープン方法の説明(最初にオープンする場合)。  指定できる値についてはセクション 'モード' を参照。
論理値。  ブロック」のセクションを参照。
想定するエンコーディングの名前。  エンコーディング」のセクションを参照。
論理値。  trueを指定すると、'raw'インターフェイスが使用され、 通常のファイルではない引数、例えばキャラクタデバイスに適している。  これは、テキストモードでの読み込みのためにオープンする際に、 圧縮ファイルであるかどうかのチェックを抑制し、「ファイル」がシーク可能でない可能性があることを表明する。
文字列、部分的に一致するtoc("default", "internal", "wininet", "libcurl"):「詳細」を参照。
HTTPrequests で使用する HTTP ヘッダの名前付き文字ベクトル。  非 HTTP URL では無視されます。  HTTPUserAgent オプション (options を参照) で指定した User-Agent ヘッダが自動的に最初のヘッダとして使用されます。
0-9 の整数。  書き込み時に適用する圧縮の量を、なしから最大まで指定します。  forxzfile には負の値を指定することもできます: '圧縮'のセクションを参照ください。
数値: この接続で使用するタイムアウト (秒単位)。  OSによっては、非常に大きな値をゼロとして扱うことがあるので注意すること。ただし、POSIX標準では31日までの値をサポートしている。
オプションの文字ベクトル。現在のところ、TCPソケットでは "no-delay "のみがサポートされている。
zip ファイル内のファイル名。
文字列。  ポートのホスト名。
整数。  TCP ポート番号。
論理。  ソケットをクライアントにするかサーバーにするか。
接続をリッスンするサーバソケット。
コネクション。
文字列。  現在は無視される。
文字列。  空文字列または "read "または "write"、部分一致可。
他のメソッドに渡される、または他のメソッドから渡される引数。
 ファイル名。
 ファイルの文字エンコーディング。
 文字列を作成する際のエンコーディング： parseのencoding引数を参照。
 ソース行の文字ベクトル。  他のRオブジェクトは文字に強制される。
 ファイルのコピーに使用するタイムスタンプ。
 この srcfilecopy がファイルシステムファイルから取得されたものであることが知られているか？
 srcfile オブジェクト。
 行番号。
 ソースの位置を示す 4 個、6 個、または 8 個の値からなるベクトル。
 適切なクラスのオブジェクト。
 srcref のテキストを取得するために srcfile を読み込むかどうか。
 文字範囲の終わりを示すオプションの 2 番目の srcref オブジェクト。
 メソッドに対する追加の引数。
 ファイル名。
 ファイルの文字エンコーディング。
 文字列を作成する際のエンコーディング： parseのencoding引数を参照してください。
 ソース行の文字ベクトル。  他のRオブジェクトは文字に強制される。
 ファイルのコピーに使用するタイムスタンプ。
 この srcfilecopy がファイルシステムファイルから取得されたものであることが知られているか？
 srcfile オブジェクト。
 行番号。
 ソースの位置を示す 4 個、6 個、または 8 個の値のベクトル。
 適切なクラスのオブジェクト。
 srcref のテキストを取得するために srcfile を読み込むかどうか。
 文字範囲の終わりを示すオプションの 2 番目の srcref オブジェクト。
 メソッドに対する追加の引数。
logical: true の場合、閉じた接続と標準の接続を含むすべての接続が表示されます。  false の場合は、ユーザが作成したオープンな接続のみが含まれます。
integer: showConnections で指定したテーブルの行番号。
コネクション。
行列のようなオブジェクト、つまり 2 次元の次元を持つオブジェクト。
行列の次元、つまり長さ 2 の整数値の数値ベクトル (非負のエントリを持つ)。
値を数値としてではなく、列ラベルの係数（必要に応じて作成）として返すかどうかを示す論理値。
数値、複素数、整数、または論理値を含む 2 次元以上の配列、または数値データ・フレーム。  colSums() などでは、数値、整数、または論理行列（または長さ m * n のベクトル）。
論理。  欠損値(NaNを含む)は計算から省かれるべきか?
整数：どの次元を '行' または '列' とみなして総和を求めるか。  行* の場合、和または平均は dims+1, ... の次元に渡る。
行列 x の次元 for.colSums() など。
行列のような R オブジェクトで、少なくとも 2 次元の forcolnames。
論理。FALSEでnamesがNULLの場合、namesが作成される。
作成された名前。
dimnames(x)の構成要素に対して有効な値。  行列または配列の場合，これはNULLか，適切な次元に等しい長さの0でない文字ベクトルです．
colnames の場合は，少なくとも2つの次元を持つ，行列のような R オブジェクト．
論理。FALSEでnamesがNULLの場合，namesが作成されます．
作成された名前。
dimnames(x)の構成要素に対して有効な値。  行列または配列の場合，これはNULLか，適切な次元に等しい長さの0以外の文字ベクトルです．
数値、複素数、整数、または論理値を含む 2 次元以上の配列、または数値データフレーム。  colSums() などでは、数値、整数、または論理行列（または長さ m * n のベクトル）。
論理。  欠損値(NaNを含む)は計算から省かれるべきか?
整数：どの次元を '行' または '列' とみなして合計するか。  行* の場合、和または平均は dims+1, ... の次元に渡る。
行列 x の次元 for.colSums() など。
論理的である。  argsの後の引数のみを返すべきか？
任意のRオブジェクト
文字ベクトル、または NULL。
任意のRオブジェクト
文字ベクトル、または NULL。
数値。  出力ベクトルの希望する長さ。
数値ベクトル.
数値ベクトル.
数値ベクトル。
数値ベクトル。
おそらく複合モードのオブジェクト。
複合モードのオブジェクト、またはメソッドが定義されているクラスのオブジェクト。
他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
条件オブジェクト。
呼び出し式。
条件オブジェクト。
評価される式。
リターンまたは終了する前に評価される式。
関数
文字列
文字列
リスタートを指定する文字列
restartオブジェクト。
オブジェクトを指定します。
条件クラスの名前を指定する文字列。
追加の引数。
条件オブジェクト。
呼び出し式。
条件オブジェクト。
評価される式。
リターンまたは終了する前に評価される式。
関数
文字列
文字列
リスタートを指定する文字列
restartオブジェクト。
オブジェクトを指定します。
条件クラスの名前を指定する文字列。
追加の引数。
条件オブジェクト。
呼び出し式。
条件オブジェクト。
評価される式。
リターンまたは終了する前に評価される式。
関数
文字列
文字列
リスタートを指定する文字列
restartオブジェクト。
オブジェクトを指定します。
条件クラスの名前を指定する文字列。
追加の引数。
条件オブジェクト。
呼び出し式。
条件オブジェクト。
評価される式。
リターンまたは終了する前に評価される式。
関数
文字列
文字列
リスタートを指定する文字列
restartオブジェクト。
オブジェクトを指定します。
条件クラスの名前を指定する文字列。
追加の引数。
条件オブジェクト。
呼び出し式。
条件オブジェクト。
評価される式。
リターンまたは終了する前に評価される式。
関数
文字列
文字列
リスタートを指定する文字列
restartオブジェクト。
オブジェクトを指定します。
条件クラスの名前を指定する文字列。
詳細は後述する。
パッケージ名。名前またはリテラル文字列、または character.only が FALSE (既定) か TRUE かによって異なる文字列で指定します。
ロードされた名前空間をアタッチする検索リストの位置。  また、search() で指定された現在の検索リスト上の位置の名前でもかまいません。
検索する Rlibrary ツリーの位置を表す文字ベクトル、または NULL。  デフォルト値の NULL は、現在 libPaths() で知られているすべてのライブラリに対応します。
packageまたはhelpを文字列とみなすかどうかを示す論理。
論理値。  TRUE の場合は FALSE、TRUE の場合は TRUE を返す。
論理値。  TRUE の場合、新しいパッケージのアタッチによる競合について警告が表示されます。  競合とは、関数をマスクする関数、または非関数をマスクする非関数のことです。conflicts.policy オプションで FALSE を指定しない限り、デフォルトは TRUE です。
論理。  TRUE の場合、追加の診断が表示される。
a 論理。  TRUE の場合、パッケージのアタッチを確認するメッセージは表示されず、 パッケージのアタッチに失敗してもエラーや警告は表示されないことが 多い。
パッケージ名を示す文字列。
ストリクト・コンフリクト・チェックが有効になっている場合に、 エラーを通知することなく検索パス上のオブジェクトをマスクできる オブジェクト名の文字ベクトル。
アタッチされたフレームに除外または含めるオブジェクト名の文字ベクトル。libraryまたはrequireの呼び出しでは、これらの引数のうち1つのみを使用することができる。
DESCRIPTION ファイルの Depends 節にリストされている必須パッケージを自動的にアタッチするかどうかを指定する論理。
検索パスのサブセット、デフォルトでは検索パス全体。
TRUE の場合、検索パスのすべてのメンバに対してマスクまたはマスク関数を与えます。
数値。  入力は必要に応じて再利用される。
数値ベクトル.
数値ベクトル.
数値ベクトル.
数値ベクトル。
おそらく複合モードのオブジェクト。
複合モードのオブジェクト、またはメソッドが定義されているクラスのオブジェクト。
他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
数値ベクトルまたは複素数ベクトル。
数値または複素数ベクトル
数値または複素ベクトル。
数値または複素行列（またはベクトル）： y = NULL は x と同じ行列とみなされます。ベクトルは、文脈に応じて、単列行列または単行行列に昇格します。
数値または複素数（cumminやcummaxではない）オブジェクト、またはこれらのいずれかに強制できるオブジェクト。
数値または複素数（cumminまたはcummaxではない）オブジェクト、またはこれらのいずれかに強制できるオブジェクト。
数値または複素数(cumminまたはcummaxではない)オブジェクト、またはこれらのいずれかに強制できるオブジェクト。
数値または複素数(cumminまたはcummaxではない)オブジェクト、またはこれらのいずれかに強制できるオブジェクト。
URLを指定する文字列。
論理：リダイレクトに従うべきか。
論理: 証明書が有効で、そのホストに適用されていることを検証すべきか。
integer: リクエストが許容される最大時間(秒)。  正でない値や無効な値は無視されます (デフォルトを含む)。  (R 4.1.0で追加)。
文字: https:// URLに使用されるTLSプロトコルの最小バージョン: デフォルト("")は、基礎となるlibcurl(通常は1.0)以上の制限はありません。  その他の有効な値は、"1.1"、"1.2" (libcurl7.34.0 以降の両方)、"1.3" (7.52.0 以降) です (libcurl の基盤となるバージョンおよび使用する SSL ライブラリでサポートされている場合)。
カッティングによって係数に変換される数値ベクトル。
2つ以上のユニークなカットポイントの数値ベクトル、または x がカットされる区間数を示す1つの数値 (2以上)。
結果のカテゴリのレベルのラベル。  デフォルトでは、ラベルは"(a,b]"区間表記法を使用して構築されます。  labels = FALSE の場合、係数の代わりに単純な整数コードが返されます。
論理。最低値（right = FALSE の場合は最高値）の 'breaks' 値に等しい 'x[i]' を含めるかどうかを指定します。
論理値。区間を右閉じ（左開き）にするか、その逆にするかを指定する。
ラベルが与えられていない場合に使用される整数。  区切り番号の書式設定に使用する桁数を決定する。
論理: 結果を順序付き因数にするか。
他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
クラス "POSIXt "または "Date "を継承したオブジェクト。
カットポイントのベクトル、または x を分割する区間数を示す数値、または区間指定。"sec"、"min"、"hour"、"day"、"DSTday"、"week"、"month"、"quarter"、"year" のいずれか。"sec "の後に整数と空白、または "s "が続く。"Date "オブジェクトでは、"day"、"week"、"month"、"quarter"、"year" を使った区間指定のみが許される)
結果のカテゴリのレベルのラベル。  デフォルトでは、ラベルは区間の左端から作成されます（デフォルト値の right にはラベルが含まれます）。  labels = FALSE の場合、係数の代わりに単純な整数コードが返されます。
を論理的に返します。  breaks = "weeks "の場合、週の始まりを月曜日と日曜日のどちらにするか。
他のメソッドに渡す引数、または他のメソッドから渡される引数。
係数に変換される数値ベクトル。
2つ以上のユニークなカットポイントの数値ベクトル、または x がカットされる区間数を与える1つの数値（2以上）。
結果のカテゴリのレベルのラベル。  デフォルトでは、ラベルは"(a,b]"区間表記法を使用して構築されます。  labels = FALSE の場合、係数の代わりに単純な整数コードが返されます。
論理。最低値（right = FALSE の場合は最高値）の 'breaks' 値に等しい 'x[i]' を含めるかどうかを指定します。
論理値。区間を右閉じ（左開き）にするか、その逆にするかを指定する。
ラベルが与えられていない場合に使用される整数。  これは、区切り番号の書式設定に使用される桁数を決定する。
論理: 結果を順序付き因数にするか。
他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
クラス "POSIXt "または "Date "を継承したオブジェクト。
カットポイントのベクトル、または x を分割する区間数を示す数値、または区間指定。"sec"、"min"、"hour"、"day"、"DSTday"、"week"、"month"、"quarter"、"year" のいずれか。"sec "の後に整数と空白、または "s "が続く。"Date "オブジェクトでは、"day"、"week"、"month"、"quarter"、"year" を使った区間指定のみが許される)
結果のカテゴリのレベルのラベル。  デフォルトでは、ラベルは区間の左端から作成されます（デフォルト値の right にはラベルが含まれます）。  labels = FALSE の場合、係数の代わりに単純な整数コードが返されます。
を論理的に返します。  breaks = "weeks "の場合、週の始まりを月曜日と日曜日のどちらにするか。
他のメソッドに渡す引数。
Rオブジェクト。
これらの引数はvalueまたはtag = valueのどちらかの形式です。  コンポーネント名は、タグ（存在する場合）またはdeparsed引数そのものに基づいて作成されます。
NULL または行名として使用する列を指定する1つの整数または文字列、またはデータフレームの行名を与える文字または整数ベクトル。
TRUE の場合、行の長さと名前の一貫性がチェックされます。
を論理的に返します。  TRUEであれば、データフレーム内の変数名が合成的に有効な変数名であるか、重複していないかをチェックします。必要であれば、（make.namesによって）重複しないように調整されます。
(正式にはassomeName = argと呼ばれないという意味で) "unnamed "である引数に、自動的に作成された名前を付けるか、""という名前を付けるかを論理的に指定します。  ""名を保持したい場合は、check.namesがfalseの場合でもFALSEに設定する必要がある。
論理：文字ベクトルは因数に変換されるべきか？  工場出荷時のデフォルトはTRUEでしたが、R 4.0.0ではFALSEに変更されました。
論理ベクトル、因子、数値または文字ベクトルを構成要素とするデータフレーム。
結果の行列が（NULL ではなく）文字列を持つかどうかを指定します。  デフォルトの NA は，データフレームに '自動' 行名がある場合，または 0 行データフレームの場合に NULLrownames を使用します．
解釈されるR関数。
ブラウザ入力時に取得可能なテキスト文字列。
ブラウザ入力時に取得可能な条件。
オプションのメソッド・シグネチャ。指定された場合、メソッドはジェネリックではなくデバッグされます。
サポート関数debuggingStateの呼び出しは、デバッグがグローバルにオンになっていればTRUEを返し、そうでなければFALSEを返します。  引数にこれらの値のどちらか一方を指定すると、状態が設定される。  デバッグ状態がFALSEの場合、デバッグ動作は発生しません（ただし、関数内の明示的なブラウザ呼び出しは動作し続けます）。
解釈されるR関数。
ブラウザ入力時に取得できるテキスト文字列。
ブラウザが入力されたときに取得できる条件。
オプションのメソッド・シグネチャ。指定された場合、メソッドはジェネリックではなくデバッグされます。
サポート関数debuggingStateの呼び出しは、デバッグがグローバルにオンになっていればTRUEを返し、そうでなければFALSEを返します。  引数にこれらの値のどちらか一方を指定すると、状態が設定される。  デバッグ状態がFALSEの場合、デバッグ動作は発生しません（ただし、関数内の明示的なブラウザ呼び出しは動作し続けます）。
解釈されるR関数。
ブラウザ入力時に取得できるテキスト文字列。
ブラウザが入力されたときに取得できる条件。
オプションのメソッド・シグネチャ。指定された場合、メソッドはジェネリックではなくデバッグされます。
サポート関数debuggingStateの呼び出しは、デバッグがグローバルにオンになっていればTRUEを返し、そうでなければFALSEを返します。  引数にこれらの値のどちらか一方を指定すると、状態が設定される。  デバッグ状態がFALSEの場合、デバッグ動作は何も起こりません（しかし、関数内の明示的なブラウザ呼び出しは動作し続けます）。
これらの引数は、valueまたはtag = valueのいずれかの形式です。  コンポーネント名は、タグ（存在する場合）またはdeparsed引数そのものに基づいて作成されます。
NULL または行名として使用する列を指定する1つの整数または文字列、またはデータフレームの行名を与える文字または整数ベクトル。
TRUE の場合、行の長さと名前の一貫性がチェックされます。
を論理的に返します。  TRUEであれば、データフレーム内の変数名が合成的に有効な変数名であるか、重複していないかをチェックします。必要であれば、（make.namesによって）重複しないように調整されます。
(正式にはassomeName = argと呼ばれないという意味で) "unnamed "である引数に、自動的に作成された名前を付けるか、""という名前を付けるかを論理的に指定します。  ""名を保持したい場合は、check.namesがfalseの場合でもFALSEに設定する必要がある。
論理：文字ベクトルは因数に変換されるべきか？  工場出荷時のデフォルトはTRUEでしたが、R 4.0.0ではFALSEに変更されました。
変数名（関数呼び出しで引用符で囲まれた文字列として与えられる）
xに代入する式
値を評価する環境
xを代入する環境
任意のR式。
20, 500]の整数で、改行が試行されるカットオフ(バイト単位)を決定する。
記号名が標準的な構文に従わない場合に、バックティックで閉じるかどうかを論理的に指定する。
.deparseOpts を参照。
整数: 出力する行数の上限。負の値は上限なしを示す。
paste() に渡される文字列。
deparse()に渡されるその他の引数。
任意の R 式。
20, 500] の整数で、改行を試みるカットオフ (バイト単位) を指定する。
記号名が標準的な構文に従わない場合に、バックティックで閉じるかどうかを示す論理。
.deparseOpts を参照。
整数: 出力する行数の上限。負の値は上限なしを示す。
paste() に渡される文字列。
deparse() に渡されるその他の引数。
論理行列は、強制的に数値に変換されます。
TRUE の場合 (デフォルト)、行列式のモジュラスの対数を返します。
オプションの引数。  現時点では何も使用されません。  この引数は無視されますが、エラーは発生しません。
デタッチするオブジェクト。  デフォルトはsearch()[pos]です。これは引用符で囲まれていない名前か文字列ですが、文字ベクトルではありません。  数値が与えられた場合、これが pos とみなされる。
検索するデータベースの search() におけるインデックス位置。  name が数値の場合、pos = name が使用される。
パッケージの切り離し時にネームスペースのロードを試みるかどうかを示す論理値。  パッケージにネームスペースがあり、unload が TRUE の場合、unloadNamespace によってネームスペースのアンロードが試みられます。ネームスペースが別のネームスペースによってインポートされているか、unload が FALSE の場合、アンロードは行われません。
namespace: 名前空間が他の名前空間によってインポートされているか、または unload が FALSE の場合、アンロードは行われません。
論理：他のアタッチされているパッケージがそのパッケージに依存しているにもかかわらず、パッケージを切り離す必要があるか。
数値行列: 論理行列は数値に強制されます。
TRUE の場合（デフォルト）、行列式のモジュラスの対数を返します。
オプションの引数。  現時点では何も使用されません。  この引数は無視されますが、エラーは発生しません。
数値行列: 論理行列は数値に強制されます。
TRUE の場合（デフォルト）、行列式のモジュラスの対数を返します。
オプションの引数。  現時点では何も使用されません。  この引数は無視されますが、エラーは発生しません。
オブジェクト。
ファイルまたは接続を指定する文字列。""はコンソールへの出力を示す。
deparseOptsを参照してください。
論理: 可能であれば、関数を解析するときにソースの書式を保持しますか?
行列、ベクトル、または1次元配列、または欠損。
x が行列でない場合の結果のオプションの次元。
(xが行列の場合) 結果として得られるベクトル(xの対角)が dimnames(x)の名前を継承するかどうかを論理的に指定します。
単一の値か, 現在の対角の長さに等しいベクトル.  xのモードと強制できるモードでなければならない。
行列, ベクトル, 1次元配列のいずれか, または指定なし.
x が行列でない場合の結果のオプション次元。
(xが行列の場合) 結果として得られるベクトル(xの対角)が dimnames(x)の名前を継承するかどうかを示す論理値.
単一の値か, 現在の対角の長さに等しいベクトル.  x のモードと強制できるモードでなければならない。
参照する値を含む数値ベクトルまたは行列。
使用するラグを示す整数。
差の順序を示す整数。
メソッドに渡す引数、またはメソッドから渡す引数。
差分する値を含む数値ベクトルまたは行列。
使用するラグを示す整数。
差の順序を示す整数。
メソッドに渡される、またはメソッドから渡されるその他の引数。
差分する値を含む数値ベクトルまたは行列。
使用するラグを示す整数。
差の順序を示す整数。
メソッドに渡される、またはメソッドから渡されるその他の引数。
date-time または date オブジェクト。
変換に使用するオプションのタイムゾーン指定。
文字列。  結果の単位。  省略可能。
文字列。  単位と同様だが、省略はできない。
時間間隔を指定する文字列または数値。
timの書式を指定する文字。  デフォルトはロケール固有の時間フォーマットです。
クラス "difftime "を継承したオブジェクト。
他のメソッドに渡す引数。
差分する値を含む数値ベクトルまたは行列。
使用するラグを示す整数。
差の順序を示す整数。
メソッドに渡される、またはメソッドから渡されるその他の引数。
date-time または date オブジェクト。
変換に使用するオプションのタイムゾーン指定。
文字列。  結果の単位。  省略可能。
文字列。  単位と同様だが、省略はできない。
時間間隔を指定する文字列または数値。
timの書式を指定する文字。  デフォルトはロケール固有の時間フォーマットです。
クラス "difftime "を継承したオブジェクト。
他のメソッドに渡す引数。
非負の数値ベクトル。
数値ベクトル。
整数ベクトル。
行列、配列、データ・フレームなどの R オブジェクト。
デフォルトのメソッドでは、NULL または（切り捨てにより）整数に強制される数値ベクトル。
行列、配列、データフレームなどの R オブジェクト。
デフォルトのメソッドでは、NULL または (切り捨てにより) 整数に強制される数値ベクトル。
行列、配列、データフレームなどの R オブジェクト。
デフォルトのメソッドでは、NULL または (切り捨てにより) 整数に強制される数値ベクトル。
R オブジェクト（行列、配列、データフレームなど）。
dimnames(x) に指定できる値。
構成される dimnames のベース記号と数字を区切るための文字列。
文字ベクトルの空でないリスト。  リストの構成要素は、空のdmnames構成要素の代替を構成するために順番に使用されます（必要に応じて再利用されます）。  例題も参照のこと。
構築されたdmnamesが、make.uniqueの意味で各次元内で一意であることを示す論理。
Rオブジェクト（行列、配列、データフレームなど）。
dmnames(x)に指定できる値。
構成される dimnames のベース記号と数字を区切るために使用される文字列。
文字ベクトルの空でないリスト。  リストの構成要素は、空のdmnames構成要素の代替を構成するために順番に使用されます（必要に応じて再利用されます）。  例題も参照のこと。
構築されたdmnamesが、make.uniqueの意味で各次元内で一意であることを示す論理。
Rオブジェクト（行列、配列、データフレームなど）。
dmnames(x)に指定できる値。
構成される dimnames のベース記号と数字を区切るために使用される文字列。
文字ベクトルの空でないリスト。  リストの構成要素は、空のdmnames構成要素の代替を構成するために順番に使用されます（必要に応じて再利用されます）。  例題も参照のこと。
構築されたdmnamesが、make.uniqueの意味で各次元内で一意であることを示す論理。
Rオブジェクト（行列、配列、データフレームなど）。
dmnames(x)に指定できる値。
構成される dimnames のベース記号と数字を区切るために使用される文字列。
文字ベクトルの空でないリスト。  リストの構成要素は、空のdmnames構成要素の代替を構成するために順番に使用されます（必要に応じて再利用されます）。  例題も参照のこと。
構築されたdimnamesがmake.uniqueの意味で各次元内で一意であることを示す論理。
フル・パス名の文字ベクトル。既定値は、作業ディレクトリに対応する getwd() です。  チルド展開（path.expandを参照）が実行されます。  欠落した値は無視されます。  エンコーディングが指定されている要素は、ネイティブ・エンコーディングに変換されます (変換に失敗した場合は、存在しないとみなされます)。
オプションの正規表現。  正規表現にマッチするファイル名のみが返されます。
論理値。  FALSEの場合、可視のファイル名のみが返されます（Unixスタイルの可視性、つまり名前がドットで始まらないファイル）。  TRUE の場合、すべてのファイル名が返される。
論理値。  TRUE の場合、ファイル名の前にディレクトリパスが付加され、 相対ファイルパスが返される。
論理値。  リストをディレクトリに再帰するか?
論理的です。  パターンマッチングで大文字と小文字を区別するか。
論理的。  再帰リストにはサブディレクトリ名を含めるべきか?  (再帰でないリストでは常に含まれます)。
論理的。  . "と". "の両方を非再帰的リストから除外すべきか。
単一のパス名を含む文字ベクトル。  Tildeexpansion（path.expand参照）が行われる。
ファイルまたはディレクトリのパスを含む文字ベクトル。  Tildeexpansion（path.expandを参照）が実行される。
論理的; 失敗したときの警告を表示するか。
論理的。last以外のパスの要素を作成するか。  trueの場合、Unixコマンドmkdir -pのようになる。
Unix-alikeで使用するモード： as.octmodeによって強制される。  Sys.chmodの場合はパスに沿ってリサイクルされます。
論理: モードがumask設定によって制限されるか。
単一のパス名を含む文字ベクトル。  チルド展開（path.expand参照）が行われる。
ファイルまたはディレクトリのパスを含む文字ベクトル。  Tildeexpansion（path.expandを参照）が実行される。
論理; 失敗したときの警告を表示するか。
論理的。last以外のパスの要素を作成するか。  trueの場合、Unixコマンドmkdir -pのようになる。
Unix-alikeで使用するモード： as.octmodeによって強制される。  Sys.chmodの場合はパスに沿ってリサイクルされます。
論理：モードをumask設定で制限するか。
パス名を含む文字ベクトル。
関数、または呼び出される関数を指定する空でない文字列。
関数呼び出しの引数のリスト。  argsのnames属性は引数の名前を指定します。
引数を引用符で囲むかどうかを示す論理値。
呼び出しを評価する環境。  これは、文字列と引数が記号または引用符で囲まれた式である場合に最も便利です。
Rオブジェクト。
Double値はintegerに強制されます。1以外の長さの引数を指定するとエラーになります。
強制またはテストされるオブジェクト。
他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
オブジェクト。
ファイル名または接続名を示す文字列。""はコンソールへの出力を示す。
deparsingオプションを示す文字ベクトル。その説明は.deparseOptsを参照。
論理：可能であれば、関数をパースするときにソースの書式を保持しますか？
文字ベクトルに強制されるRオブジェクト。
詳細」を参照してください。
配列（行列を含む）。
未使用の因子レベルを削除するオブジェクト。
factor() に渡される。存在しても結果から除外されるべき因子レベル。  これはR <= 3.3.1では暗黙的にNAであったことに注意.  現在のデフォルトはx[ , drop=TRUE]と互換性がある。
メソッドに渡されるその他の引数
レベルを削除しない列のインデックス。
未使用の因子レベルをドロップするオブジェクト。
factor() に渡される引数; 存在しても結果から除外されるべき因子レベル。  これはR <= 3.3.1では暗黙的にNAであったことに注意.  現在のデフォルトはx[ , drop=TRUE]と互換性がある。
メソッドに渡されるその他の引数
レベルを削除しない列のインデックス。
未使用の因子レベルをドロップするオブジェクト。
factor() に渡される引数; 存在しても結果から除外されるべき因子レベル。  これはR <= 3.3.1では暗黙的にNAであったことに注意.  現在のデフォルトはx[ , drop=TRUE]と互換性がある。
メソッドに渡されるその他の引数
レベルを落とさない列のインデックス。
文字ベクトル。  ダンプされる1つ以上のRオブジェクトの名前。
ファイルまたは接続を指定する文字列。  ""はコンソールへの出力を示す。
TRUE で file が文字列の場合、出力は file に追加されます。
deparseOptsを参照してください。
オブジェクトを検索する環境。
論理的。  約束は評価されるべきか？
ベクトル、データフレーム、配列、NULL。
FALSEは特別な値で、すべての値を比較できることを意味し、デフォルト以外のメソッドで受け入れられる唯一の値かもしれません。  内部的にはxと同じ型に強制される。
重複を裏側から考慮するかどうかを示す論理値。つまり、同一要素の最後（または右端）は duplicated = FALSE に対応する。
期待される一意な項目の最大数（1より大きい）。
特定のメソッドの引数。
MARGIN=0が有用であることに注意。
ベクトル、データフレーム、配列、NULL。
FALSEは特別な値で、すべての値が比較可能であることを意味し、デフォルト以外のメソッドで受け入れられる唯一の値かもしれません。  内部的にはxと同じ型に強制される。
重複を裏側から考慮するかどうかを示す論理値。つまり、同一要素の最後（または右端）は duplicated = FALSE に対応する。
期待される一意な項目の最大数（1より大きい）。
特定のメソッドの引数。
MARGIN=0が有用であることに注意。
ベクトル、データフレーム、配列、NULL。
FALSEは特別な値で、すべての値が比較可能であることを意味し、デフォルト以外のメソッドで受け入れられる唯一の値かもしれません。  内部的にはxと同じ型に強制される。
重複を裏側から考慮するかどうかを示す論理値。つまり、同一要素の最後（または右端）は duplicated = FALSE に対応する。
期待される一意な項目の最大数（1より大きい）。
特定のメソッドの引数。
MARGIN=0が有用であることに注意。
ベクトル、データフレーム、配列、NULL。
FALSEは特別な値で、すべての値が比較可能であることを意味し、デフォルト以外のメソッドで受け入れられる唯一の値かもしれません。  内部的にはxと同じ型に強制される。
重複を裏側から考慮するかどうかを示す論理値。つまり、同一要素の最後（または右端）は duplicated = FALSE に対応する。
期待される一意な項目の最大数（1より大きい）。
特定のメソッドの引数。
MARGIN=0が有用であることに注意。
ベクトル、データフレーム、配列、NULL。
FALSEは特別な値で、すべての値が比較可能であることを意味し、デフォルト以外のメソッドで受け入れられる唯一の値かもしれません。  内部的にはxと同じ型に強制される。
重複を裏側から考慮するかどうかを示す論理値。つまり、同一要素の最後（または右端）は duplicated = FALSE に対応する。
期待される一意な項目の最大数（1より大きい）。
特定のメソッドの引数。
MARGIN=0が有用であることに注意。
package_version の場合は、R.version で取得した Rversion オブジェクト。
無効な数値バージョンはエラーになる (デフォルト) かどうかを示す論理。
date-timeクラスの1つから出力または要約されるオブジェクト。
format.POSIXctに渡されます。
出力するエントリの最大数を指定します。  デフォルトでは、NULL の場合、getOption("max.print") が使用されます。
計算の有効桁数: 最も重要でない時間単位を正確に表すのに十分な桁数でなければならない。
他のメソッドから、あるいは他のメソッドに渡す引数。
日時オブジェクト
日時オブジェクトまたは文字ベクトル。  (文字ベクトルはas.POSIXct.によって変換される)
数値ベクトル（秒単位）
==, !=, <, <=, >=のいずれか。
cat (forwarnings())に渡す引数。
warnings()が返す "warnings "オブジェクト。
warnings "または "summary.warnings "オブジェクト。
メッセージに "ラベル "を付けるための、xと同じ長さの文字ベクトル。  デフォルトは paste0(seq_len(n), ": ") forn >= 2 where n <- length(x).
メッセージが表示される前に cat() される文字列。
動的共有オブジェクトとしても知られる DLL へのパス名を示す文字列。  (これらの用語の意味については「詳細」を参照のこと)。
DLL 内のシンボルを DLL 間で共有せずに独自のローカル・テーブルに格納するか、グローバル・シンボル・テーブルに追加するかを制御する論理値。  この効果があるかどうかはシステムに依存する。
すべてのシンボルを、ライブラリがロードされた直後に解決（および再配置）するか、使用されるまで延期するかを制御する論理。  この制御は、開発者がライブラリが完全で、必要なシンボルがすべてあるかどうかをテストしたり、ユーザーが不足シンボルを無視したりするのに便利です。  この効果があるかどうかはシステムに依存する。
将来の拡張のためのその他の引数。
シンボル名を示す文字列。
与えられた場合、この引数で与えられた DLL (および従来の拡張子、'.so'、'.sl'、'.dll'...) の名前のみを検索する。  これはパッケージの安全性を高めるためのもので、この引数を使用することで、他のパッケージが外部シンボルを上書きできないようにすることができる。  これは、.C、.Call、.Fortran、.External関数と同じように使用されます。
検索するシンボルの種類: 任意(""、デフォルト)、"Fortran"、"Call"、または "External"。
動的共有オブジェクトとしても知られる DLL へのパス名を示す文字列。  (用語の意味については「詳細」を参照)。
DLL内のシンボルを、DLL間で共有せずに独自のローカル・テーブルに格納するか、グローバル・シンボル・テーブルに追加するかを制御する論理値。  この効果があるかどうかはシステムに依存する。
すべてのシンボルを、ライブラリがロードされた直後に解決（および再配置）するか、使用されるまで延期するかを制御する論理。  この制御は、開発者がライブラリが完全で、必要なシンボルがすべてあるかどうかをテストしたり、ユーザーが不足シンボルを無視したりするのに便利です。  この効果があるかどうかはシステムに依存する。
将来の拡張のためのその他の引数。
シンボル名を示す文字列。
与えられた場合、この引数で与えられた DLL (および従来の拡張子、'.so'、'.sl'、'.dll'...) の名前のみを検索する。  これはパッケージの安全性を高めるためのもので、この引数を使用することで、他のパッケージが外部シンボルを上書きできないようにすることができる。  これは、.C、.Call、.Fortran、.External関数と同じように使用されます。
検索するシンボルの種類: 任意(""、デフォルト)、"Fortran"、"Call"、または "External"。
mgetの場合は、オブジェクト名の文字ベクトル。
どこでオブジェクトを探すか（'詳細'を参照）。
探しているオブジェクトのモードまたはタイプ: 'Details' セクションを参照。
環境を囲むフレームを検索するか。
mgetの場合、項目が見つからない場合に使用する値のリスト: 必要であればリストに強制されます。dynGetの場合、任意のRオブジェクト、例えばstop()の呼び出し。
検索する最小フレーム番号を指定する整数。
使用する環境。
適用する関数。viamatch.funで見つかる。+、%*%などのような関数の場合、関数名はバッククォートまたは引用符で囲む必要がある。
FUNのオプション引数。
すべての値に関数を適用するかどうかを示す論理。
結果のリストに名前を付けるかどうかを示す論理。
スペクトル分解を計算する数値行列または複素行列。  論理行列は数値に強制される。
TRUE の場合, 行列は対称（複素数の場合はエルミート）であると仮定され, 下三角形（対角も含む）のみが使用されます.  対称行列が指定されていない場合は， isSymmetric(x) が使用される。
TRUE の場合は固有値のみが計算されて返され、そうでない場合は固有値と固有ベクトルの両方が返されます。
論理値。無効で無視されます。
関数、式、またはデフォルトのNULL。
関数に関連付ける環境
任意のRオブジェクト。
TRUE の場合、環境はハッシュテーブルを使用します。
作成された環境のエンクロージャとして使用される環境。
環境
ハッシュ環境の初期サイズを指定する整数。  size が NA またはゼロの場合、内部のデフォルト値が使用されます。  この引数は、hash が FALSE の場合は無視されます。
文字ベクトル。
正の長さの文字ベクトル。
文字ベクトル。
正の長さの文字ベクトル。
文字ベクトル、またはas.characterによって強制的に1つにできるオブジェクト。
integer: フィールド幅の最小値。  NULLまたはNAの場合、xの要素に必要な最大のフィールド幅とみなされる。
character: クォート文字。
logical: NA文字列をエンコードするか。
character: 部分一致が許される。  justify=="none "は、format.defaultとの整合性のため、width=0と等価である。
文字ベクトル。
正の長さの文字ベクトル。
文字ベクトル。
正の長さの文字ベクトル。
start "が考慮される文字列のベクトル。
文字ベクトル（多くの場合長さは1）。
構文的に有効なR式
呼び出し、つまりクラス（およびモード）"call "のRオブジェクト。
環境またはリスト・オブジェクト。  デフォルトは、現在の評価環境です。
関数、数式、またはNULL（デフォルト）。
関数に関連付ける環境。
任意のRオブジェクト。
TRUE の場合、環境はハッシュテーブルを使用します。
作成された環境のエンクロージャとして使用される環境。
環境
ハッシュ環境の初期サイズを指定する整数。  size が NA またはゼロの場合、内部のデフォルト値が使用されます。  この引数は、hash が FALSE の場合は無視されます。
関数、数式、またはデフォルトのNULL。
関数に関連付ける環境
任意のRオブジェクト。
TRUE の場合、環境はハッシュテーブルを使用します。
作成された環境のエンクロージャとして使用される環境。
環境
ハッシュ環境の初期サイズを指定する整数。  size が NA またはゼロの場合、内部のデフォルト値が使用されます。  この引数は、hash が FALSE の場合は無視されます。
関数、数式、またはデフォルトのNULL。
関数に関連付ける環境
任意のRオブジェクト。
TRUE の場合、環境はハッシュテーブルを使用します。
作成された環境のエンクロージャとして使用される環境。
環境
ハッシュ環境の初期サイズを指定する整数。  size が NA またはゼロの場合、内部のデフォルト値が使用されます。  この引数は、hash が FALSE の場合は無視されます。
環境を指定します。
バインディングをロックするかどうかを指定する論理。
名前オブジェクトまたは文字列。
引数を0個または1個取る関数。
関数、数式、またはデフォルトのNULL。
関数に関連付ける環境
任意のRオブジェクト。
TRUE の場合、環境はハッシュテーブルを使用します。
作成された環境のエンクロージャとして使用される環境。
環境
ハッシュ環境の初期サイズを指定する整数。  size が NA またはゼロの場合、内部のデフォルト値が使用されます。  この引数は、hash が FALSE の場合は無視されます。
条件オブジェクト。
call 式。
条件オブジェクト。
評価される式。
戻り値または終了前に評価される式。
関数
文字列
文字列
リスタートを指定する文字列
restartオブジェクト。
オブジェクトを指定します。
条件クラスの名前を指定する文字列。
追加の引数。
評価されるオブジェクト。  詳細'を参照のこと。
expr が評価される環境。  NULL、リスト、データフレーム、ペアリスト、sys.callに指定された整数でもかまいません。
envirが(ペア)リストまたはデータフレームである場合に関連します。 囲み、つまりRがenvirにないオブジェクトを探す場所を指定します。  これはNULL（ベースパッケージの環境、baseenv()と解釈されます）または環境です。
遡る親世代数
評価されるオブジェクト。  詳細'を参照。
expr が評価される環境。  NULL、リスト、データフレーム、ペアリスト、sys.callに指定された整数でもよい。
envirが(ペア)リストまたはデータフレームである場合に関連します。 囲み、つまりRがenvirにないオブジェクトを探す場所を指定します。  これはNULL（ベースパッケージの環境、baseenv()と解釈されます）または環境です。
遡る親世代数
評価されるオブジェクト。  詳細'を参照。
expr が評価される環境。  NULL、リスト、データフレーム、ペアリスト、sys.callに指定された整数でもよい。
envirが(ペア)リストまたはデータフレームである場合に関連します。 囲み、つまりRがenvirにないオブジェクトを探す場所を指定します。  これはNULL（ベースパッケージの環境、baseenv()と解釈されます）または環境です。
遡る親の世代数
変数名（文字列またはシンボルで指定）。
省略した場合、この関数は、オブジェクトの名前が式の中で引用符で囲まれていない場合と同じように検索します。
を省略した場合、関数はオブジェクトの名前が式中で引用符で囲まれていない場合と同じように検索します。
呼び出しリストのフレーム。  sys.frame(frame)としてwhereを与えるのと同じです。
詳細」セクションを参照してください。
環境を囲むフレームが検索されるべきか？
xが存在しない場合のget0(x, *)の戻り値。
数値または複素数ベクトル。
正数または複素数: 対数が計算される基底。  デフォルトは e=exp(1) です。
ベクトル、因子、またはこれらを含むリスト。
out.attrs "属性（下記参照）が計算されて返されることを示す論理。
文字ベクトルを因数に変換するかどうかを指定する論理。
数値または複素数ベクトル。
正数または複素数： 対数が計算される基底。  デフォルトは e=exp(1) です。
式：as.expression：メソッドに渡される引数。
任意の R オブジェクト。
Double値はintegerに強制されます：1以外の長さの引数を与えるとエラーになります。
強制またはテストされるオブジェクト。
他のメソッドに渡される、あるいは他のメソッドから渡される引数。
データのベクトルで、通常は少数の値を取ります。
xが取り得るユニークな値(文字列)のオプションのベクトル。  デフォルトは、as.character(x)が取った値の一意な集合をxの昇順に並べたものです。この集合は、 sort(unique(x))よりも小さく指定できることに注意してください。
ラベルの重複値は、x の異なる値を同じ因子レベルに対応付けるために使用できます。
レベルのセットを形成するときに除外される値のベクトル。  これは、x と同じレベル・セットを持つ因子であるか、または文字である必要があります。
レベルを (指定された順序で) 並べ替えられたものと見なすかどうかを決定する論理フラグ。
詳細'を参照。
(in ordered(.)) ：ordered 自体を除いた上記のいずれか。
NA レベルが使用される場合のみ、つまり if any(is.na(x)) の場合のみ追加されます。
非負の数値ベクトル。
数値ベクトル。
整数ベクトル。
文字列。  接続の説明: '詳細'を参照。
文字列。  接続のオープン方法(最初にオープンする場合)。  指定できる値についてはセクション 'モード' を参照。
論理値。  ブロック」のセクションを参照。
想定するエンコーディングの名前。  エンコーディング」のセクションを参照。
論理値。  trueを指定すると、'raw'インターフェイスが使用され、 通常のファイルではない引数、例えばキャラクタデバイスなどに適している。  これは、テキストモードの読み込みのためにオープンする際に、 圧縮ファイルであるかどうかのチェックを抑制し、「ファイル」がシーク可能でない可能性があることを表明する。
文字列、部分的に一致するtoc("default", "internal", "wininet", "libcurl"):「詳細」を参照。
HTTPrequests で使用する HTTP ヘッダの名前付き文字ベクトル。  非 HTTP URL では無視されます。  HTTPUserAgent オプション (オプション参照) にある User-Agent ヘッダが自動的に最初のヘッダとして使用されます。
0-9 の整数。  書き込み時に適用する圧縮の量を、なしから最大まで指定します。  forxzfile には負の値を指定することもできます: '圧縮'のセクションを参照ください。
数値: この接続で使用するタイムアウト (秒単位)。  OSによっては、非常に大きな値をゼロとして扱うことがあるので注意すること。ただし、POSIX標準では31日までの値をサポートしている。
オプションの文字ベクトル。現在のところ、TCPソケットでは "no-delay "のみがサポートされている。
zip ファイル内のファイル名。
文字列。  ポートのホスト名。
整数。  TCP ポート番号。
論理。  ソケットをクライアントにするかサーバーにするか。
接続をリッスンするサーバソケット。
コネクション。
文字列。  現在は無視される。
文字列。  空文字列または "read "または "write"、部分一致可。
他のメソッドに渡される、または他のメソッドから渡される引数。
文字列。  接続の説明。'詳細' を参照。
文字列。  接続のオープン方法の説明(最初にオープンする場合)。  指定できる値についてはセクション 'モード' を参照。
論理値。  ブロック」のセクションを参照。
想定するエンコーディングの名前。  エンコーディング」のセクションを参照。
論理値。  trueを指定すると、'raw'インターフェイスが使用され、 通常のファイルではない引数、例えばキャラクタデバイスに適している。  これは、テキストモードでの読み込みのためにオープンする際に、 圧縮ファイルであるかどうかのチェックを抑制し、「ファイル」がシーク可能でない可能性があることを表明する。
文字列、部分的に一致するtoc("default", "internal", "wininet", "libcurl"):「詳細」を参照。
HTTPrequests で使用する HTTP ヘッダの名前付き文字ベクトル。  非 HTTP URL では無視されます。  HTTPUserAgent オプション (options を参照) で指定した User-Agent ヘッダが自動的に最初のヘッダとして使用されます。
0-9 の整数。  書き込み時に適用する圧縮の量を、なしから最大まで指定します。  forxzfile には負の値を指定することもできます: '圧縮'のセクションを参照ください。
数値: この接続で使用するタイムアウト (秒単位)。  OSによっては、非常に大きな値をゼロとして扱うことがあるので注意すること。ただし、POSIX標準では31日までの値をサポートしている。
オプションの文字ベクトル。現在のところ、TCPソケットでは "no-delay "のみがサポートされている。
zip ファイル内のファイル名。
文字列。  ポートのホスト名。
整数。  TCP ポート番号。
論理。  ソケットをクライアントにするかサーバーにするか。
接続をリッスンするサーバソケット。
コネクション。
文字列。  現在は無視される。
文字列。  空文字列または "read "または "write"、部分一致可。
他のメソッドに渡される、または他のメソッドから渡される引数。
チルダ展開が行われます: path.expandを参照してください。
アクセスモードを指定する整数。
ファイル名またはパスを含む文字ベクトル。
file.copyとfile.symlinktoでは、既存のディレクトリのパスを指定することもできます。
論理; 既存のコピー先ファイルを上書きするか。
論理的; 失敗したときの警告を表示するか。
論理的。  toがディレクトリの場合、fromのディレクトリも（その内容も）コピーすべきか？  (POSIX OSのcp -Rのようなもの)
論理：可能であれば、ファイルのパーミッションビットをコピーすべきか？
論理：可能であれば、ファイルの日付は保存されるべきか？Sys.setFileTimeを参照のこと。
論理: ユーザーに表示されるダイアログ・ボックスのスタイルを選択します: 現在、new = FALSEのみが使用されています。
ファイル名またはパスを含む文字ベクトル。
file.copyとfile.symlinktoには、既存のディレクトリへのパスを指定することもできます。
論理; 既存のコピー先ファイルを上書きするか。
論理的; 失敗したときの警告を表示するか。
論理的。  toがディレクトリの場合、fromのディレクトリも（その内容も）コピーすべきか？  (POSIX OSのcp -Rのようなもの)
論理：可能であれば、ファイルのパーミッションビットをコピーすべきか？
論理：可能であれば、ファイルの日付は保存されるべきか？Sys.setFileTimeを参照。
ファイル名またはパスを含む文字ベクトル。
file.copyとfile.symlinktoでは、既存の1つのディレクトリへのパスを指定することもできます。
論理; 既存のコピー先ファイルを上書きするか。
論理的; 失敗したときの警告を表示するか。
論理的。  toがディレクトリの場合、fromのディレクトリも（その内容も）コピーすべきか？  (POSIX OSのcp -Rのようなもの)
論理：可能であれば、ファイルのパーミッションビットをコピーすべきか？
論理：可能であれば、ファイルの日付は保存されるべきか？Sys.setFileTimeを参照。
ファイル名またはパスを含む文字ベクトル。
file.copyとfile.symlinktoでは、既存の1つのディレクトリへのパスを指定することもできます。
論理; 既存のコピー先ファイルを上書きするか。
論理的; 失敗したときの警告を表示するか。
論理的。  toがディレクトリの場合、fromのディレクトリも（その内容も）コピーすべきか？  (POSIX OSのcp -Rのようなもの)
論理：可能であれば、ファイルのパーミッションビットをコピーすべきか？
論理：可能であれば、ファイルの日付は保存されるべきか？Sys.setFileTimeを参照のこと。
ファイルパスを含む文字ベクトル。  チルダ展開が行われる: path.expandを参照。
論理: 最初の6列だけでなく、すべての列を返します。
ファイル名またはパスを含む文字ベクトル。
file.copyおよびfile.symlinktoでは、既存の1つのディレクトリへのパスとすることもできます。
論理; 既存のコピー先ファイルを上書きするか。
論理的; 失敗したときの警告を表示するか。
論理的。  toがディレクトリの場合、fromのディレクトリも（その内容も）コピーすべきか？  (POSIX OSのcp -Rのようなもの)
論理：可能であれば、ファイルのパーミッションビットをコピーすべきか？
論理：可能であれば、ファイルの日付は保存されるべきか？Sys.setFileTimeを参照のこと。
ファイルパスを含む文字ベクトル。  チルダ展開が行われる: path.expandを参照。
論理: 最初の6列だけでなく、すべての列を返します。
ファイルパスを含む文字ベクトル。  チルダ展開が行われます： path.expandを参照してください。
論理: 最初の6列だけでなく、すべての列を返す。
文字ベクトル。  長いベクトルはサポートされていません。
使用するパス区切り文字（ASCIIと仮定）。
ファイル名またはパスを含む文字ベクトル。
file.copyとfile.symlinktoの場合は、既存の1つのディレクトリへのパスでもかまいません。
論理; 既存のコピー先ファイルを上書きするか。
論理的; 失敗したときの警告を表示するか。
論理的。  toがディレクトリの場合、fromのディレクトリも（その内容も）コピーすべきか？  (POSIX OSのcp -Rのようなもの)
論理：可能であれば、ファイルのパーミッションビットをコピーすべきか？
論理：可能であれば、ファイルの日付は保存されるべきか？Sys.setFileTimeを参照。
ファイル名またはパスを含む文字ベクトル。
file.copyとfile.symlinktoでは、既存の1つのディレクトリへのパスを指定することもできます。
論理; 既存のコピー先ファイルを上書きするか。
論理的; 失敗したときの警告を表示するか。
論理的。  toがディレクトリの場合、fromのディレクトリも（その内容も）コピーすべきか？  (POSIX OSのcp -Rのようなもの)
論理：可能であれば、ファイルのパーミッションビットをコピーすべきか？
論理：可能であれば、ファイルの日付は保存されるべきか？Sys.setFileTimeを参照のこと。
表示するファイル名を含む1つ以上の文字ベクトル。  パスはチルダ展開されます。
文字ベクトル（...で指定されたファイル数と同じ長さ）で、表示される各ファイルのヘッダを指定します。  デフォルトは空文字列。
表示全体のタイトル。  表示に1つの独立したウィンドウを使用する場合、titleはウィンドウタイトルとして使用されます。  複数のウィンドウが使用される場合、それらのタイトルは、タイトルとファイル固有のヘッダーを組み合わせる必要があります。
表示後、ファイルを削除しますか？  一時ファイルに使用されます。
使用するページャー：すべてのプラットフォームで使用されるわけではありません。
ファイルのエンコーディングを指定する文字列。
ファイルパスを含む文字ベクトル。  チルダ展開： path.expandを参照。
論理: 最初の6列だけでなく、すべての列を返します。
ファイル名またはパスを含む文字ベクトル。
file.copyおよびfile.symlinktoでは、既存の1つのディレクトリへのパスとすることもできます。
論理; 既存のコピー先ファイルを上書きするか。
論理的; 失敗したときの警告を表示するか。
論理的。  toがディレクトリの場合、fromのディレクトリも（その内容も）コピーすべきか？  (POSIX OSのcp -Rのようなもの)
論理：可能であれば、ファイルのパーミッションビットをコピーすべきか？
論理：可能であれば、ファイルの日付は保存されるべきか？Sys.setFileTimeを参照。
適切なアリティの関数（Reduceはバイナリ、Filter、Find、Positionは単項式、Mapはk個の引数で呼び出される場合はk-ary）。  Negateの場合は任意の述語関数。
ベクトル。
xの要素と同じ種類のRオブジェクト。
左から右（デフォルト）へ進むか、右から左へ進むかを示す論理。
連続する reducecombination を累積するかどうかを示す論理。  デフォルトでは、最後の組み合わせのみが使用される。
一致しない」（述語を満たす要素がない）場合に返される値。
ベクトル。
適切なアリティの関数（Reduceの場合はバイナリ、Filter、Find、Positionの場合は単項式、k個の引数で呼び出される場合はMapのk-ary）。  Negateの場合は任意の述語関数。
ベクトル。
xの要素と同じ種類のRオブジェクト。
左から右（デフォルト）へ進むか、右から左へ進むかを示す論理。
連続する reducecombination を累積するかどうかを示す論理。  デフォルトでは、最後の組み合わせのみが使用される。
一致しない」（述語を満たす要素がない）場合に返される値。
ベクトル。
文字ベクトル：パッケージ名。
検索するRlibraryツリーの位置を表す文字ベクトル、またはNULL。  デフォルト値の NULL は、ロードされた名前空間をチェックし、次に .libPaths() で現在認識されているすべてのライブラリをチェックします。
を使用します。  パッケージが見つからない場合、警告やエラーは出さないのですか?
論理。  TRUE の場合、特にパッケージが複数回見つかった場合に、追加の診断が表示されます。
呼び出し式。
数値。
数値。（弱く）どんどんソートされる。
論理; trueの場合、右端の区間vec[N-1] ... vec[N]は閉じたものとして扱われる。
logical; trueの場合、返されたインデックスは1,...,N-1に強制される。
以下の式では、≤は<と入れ替えられ（そして>は≥と入れ替えられる）、rightmost.closedは「左端が閉じている」ことを意味する。  これは、例えば生存分析の計算で役に立つかもしれない。
.row_names_info():は "row.names "属性を持つオブジェクトで、通常はデータフレームです。
.getRequiredPackages():パッケージの'DESCRIPTION'ファイルへのフルパス。.lazyLoadDBfetch():lazyloadデータベースへのファイルパス。
lazyLoadDBfetch():検索するRlibraryツリーの位置を表す文字ベクトル、またはNULL。  デフォルトの値 NULL は、.libPaths() で現在認識されているすべてのライブラリに対応します。
論理的に指定します。  パッケージが見つからない場合に、警告やエラーを出さないようにするか?
論理的。  Imports フィールドを処理すべきか?
論理: メッセージを出力すべきか。
packageDescription2" クラスの 'DESCRIPTION' ファイル。
cpu-vendor-os "形式のプラットフォーム文字列。
保存またはロードする画像ファイルの名前。
整数。  現在 type = 0 は内部の "row.names" 属性 (NULL の可能性もある) を返し、 type = 2 はその属性が意味する行数を返し、 type = 1 は '自動' 行名の負の符号を返します。
整数。  行数。
package:MASS" のような文字列。
lazyloadデータベースのオブジェクト名。
論理: データベースの値が圧縮されているか。
ロードフック: unserializeを参照。
長さ1の整数ベクトル。
インデックス。
論理値。
Rオブジェクト。
クラスに入れるクラスレスオブジェクト。
オプションのタイムゾーン。
デフォルト・クラスを含むクラスのオプションの文字ベクトル。
difftime を参照してください。
ドット名でないバージョンに渡される引数。
整数。
同じオブジェクトの文字ベクトル。
マスクされるパッケージを示す文字列。
マスクが bypkg で起こるか、(by = FALSE) pkg から起こるかを示す論理値。
条件オブジェクト。
呼び出し式。
条件オブジェクト。
評価される式。
リターンまたは終了する前に評価される式。
関数
文字列
文字列
リスタートを指定する文字列
restartオブジェクト。
オブジェクトを指定します。
条件クラスの名前を指定する文字列。
追加の引数。
数値ベクトル。  または、roundとsignifの場合は複素数ベクトル。
小数点以下の桁数(round)または有効桁数(signif)を示す整数。
メソッドに渡す引数。
文字列。  詳細' を参照。
文字列。  接続のオープン方法 (最初にオープンする場合)。  指定できる値についてはセクション 'モード' を参照。
論理値。  ブロック」のセクションを参照。
想定するエンコーディングの名前。  エンコーディング」のセクションを参照。
論理値。  trueを指定すると、'raw'インターフェイスが使用され、 通常のファイルではない引数、例えばキャラクタデバイスなどに適している。  これは、テキストモードでの読み込みのためにオープンする際に、 圧縮ファイルであるかどうかのチェックを抑制し、「ファイル」がシーク可能でない可能性があることを表明する。
文字列、部分的に一致するtoc("default", "internal", "wininet", "libcurl"):「詳細」を参照。
HTTPrequests で使用する HTTP ヘッダの名前付き文字ベクトル。  非 HTTP URL では無視されます。  HTTPUserAgent オプション (options を参照) で指定した User-Agent ヘッダが自動的に最初のヘッダとして使用されます。
0-9 の整数。  書き込み時に適用する圧縮の量を、なしから最大まで指定します。  forxzfile には負の値を指定することもできます: '圧縮'のセクションを参照ください。
数値: この接続で使用するタイムアウト (秒単位)。  OSによっては、非常に大きな値をゼロとして扱うことがあるので注意すること。ただし、POSIX標準では31日までの値をサポートしている。
オプションの文字ベクトル。現在のところ、TCPソケットでは "no-delay "のみがサポートされている。
zip ファイル内のファイル名。
文字列。  ポートのホスト名。
整数。  TCP ポート番号。
論理。  ソケットをクライアントにするかサーバーにするか。
接続をリッスンするサーバソケット。
コネクション。
文字列。  現在は無視される。
文字列。  空文字列または "read "または "write"、部分一致可。
他のメソッドに渡される、または他のメソッドから渡される引数。
文字列。  接続の説明。'詳細' を参照。
文字列。  接続のオープン方法の説明(最初にオープンする場合)。  指定できる値についてはセクション 'モード' を参照。
論理値。  ブロック」のセクションを参照。
想定するエンコーディングの名前。  エンコーディング」のセクションを参照。
論理値。  trueを指定すると、'raw'インターフェイスが使用され、 通常のファイルではない引数、例えばキャラクタデバイスなどに適している。  これは、テキストモードでの読み込みのためにオープンする際に、 圧縮ファイルであるかどうかのチェックを抑制し、「ファイル」がシーク可能でない可能性があることを表明する。
文字列、部分的に一致するtoc("default", "internal", "wininet", "libcurl"):「詳細」を参照。
HTTPrequests で使用する HTTP ヘッダの名前付き文字ベクトル。  非 HTTP URL では無視されます。  HTTPUserAgent オプション (options を参照) で指定した User-Agent ヘッダが自動的に最初のヘッダとして使用されます。
0-9 の整数。  書き込み時に適用する圧縮の量を、なしから最大まで指定します。  forxzfile には負の値を指定することもできます: '圧縮'のセクションを参照ください。
数値: この接続で使用するタイムアウト (秒単位)。  OSによっては、非常に大きな値をゼロとして扱うことがあるので注意すること。ただし、POSIX標準では31日までの値をサポートしている。
オプションの文字ベクトル。現在のところ、TCPソケットでは "no-delay "のみがサポートされている。
zip ファイル内のファイル名。
文字列。  ポートのホスト名。
整数。  TCP ポート番号。
論理。  ソケットをクライアントにするかサーバーにするか。
接続をリッスンするサーバソケット。
コネクション。
文字列。  現在は無視される。
文字列。  空文字列または "read "または "write"、部分一致可。
他のメソッドに渡される、または他のメソッドから渡される引数。
NAでない長さ1の論理ベクトル。長さが1より大きい条件は、現在警告付きで受け付けられますが、最初の要素だけが使用されます。  環境変数_R_CHECK_LENGTH_1_CONDITION_がtrueに設定されると、代わりにエラーが通知されます。  その他の型は、可能であれば論理型に強制され、クラスは無視される。
変数の構文名。
ベクトル（リストと式を含む）、ペアリスト、NULLを評価する式。  因子値は文字ベクトルに強制される。  R4.0.0から、これは長いベクタになる。
形式的な意味での式。  これは単純な式か、いわゆる複合式で、通常は { expr1 ; expr2 } の形式です。
囲む関数の形式引数。
強制する先行引数の数。
呼び出す関数。
FUNする引数。
または、'詳細'を参照。
関数が定義されるべき環境（最初の場合はget()で、funが文字列の場合はget()で見つける）。
R式のリスト(またはペアリスト)。
関数。
関数が定義されるべき環境(最初の場合はget()で、funが文字列の場合はget()で見つかる)。
R 式のリスト (またはペアリスト)。
任意のRオブジェクト（概念的）。
FALSEの場合、論理値、数値、複素数は共通の幅で右寄せされる。
数値および複素数xについて、有効桁数を何桁にするか。  デフォルトのNULLはgetOption("digits")を使用します。  これは提案です: (大きさの) 最小の数値がこれだけの有効桁数を持つように、また nsmall を満たすように、十分な小数位が使用されます(複素数に対する解釈は signif を参照してください)。
非科学的な書式で実数/複素数を書式設定する際の小数点以下の最小桁数。
文字ベクトルを左寄せ(デフォルト)、右寄せ、中央揃え、左揃えのいずれにするか。  省略可能。
AsIsメソッド：非文字オブジェクトの最大フィールド幅。  NULLはデフォルトの12に相当する。
論理: NA文字列をエンコードすべきか。  これは文字ベクトルの要素にのみ適用され、数値、複素数、論理の NA には適用されない。
実数または複素数ベクトルの要素をscientificformatでエンコードするかどうかを指定する論理か、整数のペナルティ(options("scipen")を参照)のどちらかを指定する。
他のメソッドに渡される、あるいは他のメソッドから渡されるさらなる引数。
prettyNumに渡される。詳細はヘルプを参照。
(概念的に)任意のRオブジェクト。
FALSEの場合、論理値、数値、複素数は共通の幅で右寄せされる。
数値および複素数xについて、有効桁数を何桁にするか。  デフォルトのNULLはgetOption("digits")を使用します。  これは提案です: (大きさの) 最小の数値がこれだけの有効桁数を持つように、また nsmall を満たすように、十分な小数位が使用されます(複素数に対する解釈は signif を参照してください)。
非科学的な書式で実数/複素数を書式設定する際の小数点以下の最小桁数。
文字ベクトルを左寄せ(デフォルト)、右寄せ、中央揃え、左揃えのいずれにするか。  省略可能。
AsIsメソッド：非文字オブジェクトの最大フィールド幅。  NULLはデフォルトの12に対応する。
論理: NA文字列をエンコードするか。  これは文字ベクトルの要素にのみ適用され、数値、複素数、論理のNAには適用されない。
実数または複素数ベクトルの要素をscientificformatでエンコードするかどうかを指定する論理か、整数のペナルティ(options("scipen")を参照)のどちらかを指定する。
他のメソッドに渡される、あるいは他のメソッドから渡されるさらなる引数。
prettyNumに渡される。詳細はヘルプを参照。
(概念的に)任意のRオブジェクト。
FALSEの場合、論理値、数値、複素数は共通の幅で右寄せされる。
数値および複素数xについて、有効桁数を何桁にするか。  デフォルトのNULLはgetOption("digits")を使用します。  これは提案です: (大きさの) 最小の数値がこれだけの有効桁数を持つように、また nsmall を満たすように、十分な小数位が使用されます(複素数に対する解釈は signif を参照してください)。
非科学的な書式で実数/複素数を書式設定する際の小数点以下の最小桁数。
文字ベクトルを左寄せ(デフォルト)、右寄せ、中央揃え、左揃えのいずれにするか。  省略可能。
AsIsメソッド：非文字オブジェクトの最大フィールド幅。  NULLはデフォルトの12に相当する。
論理: NA文字列をエンコードすべきか。  これは文字ベクトルの要素にのみ適用され、数値、複素数、論理のNAには適用されない。
実数または複素数ベクトルの要素をscientificformatでエンコードするかどうかを指定する論理か、整数のペナルティ(options("scipen")を参照)のどちらかを指定する。
他のメソッドに渡される、あるいは他のメソッドから渡されるさらなる引数。
prettyNumに渡されます: 詳細はヘルプを参照してください。
変換されるオブジェクト。
文字列。  指定されていない場合は、最初の非NA要素に対して1つずつFormatsを試し、どれもうまくいかなかった場合はエラーを出します。  そうでない場合、処理は viastrptime()で行われ、そのヘルプページには利用可能な変換仕様が記述されています。
formatが指定されていない場合に試すフォーマット文字列の文字ベクトル。
フォーマット推測が成功しなかった場合に(エラーを通知する代わりに) NAを返すことを示す論理。
Dateオブジェクト、またはas.Date(origin, ...)によってそのようなオブジェクトに強制できるもの。
タイムゾーン名。
as.characterメソッドやas.Dateメソッドの書式を含む、他のメソッドから渡される引数。
任意のRオブジェクト(概念的に)。
FALSEの場合、論理値、数値、複素数は共通の幅で右寄せされます。
数値および複素数xについて、有効桁数を何桁にするか。  デフォルトのNULLはgetOption("digits")を使用します。  これは提案です: (大きさの) 最小の数値がこれだけの有効桁数を持つように、また nsmall を満たすように、十分な小数位が使用されます(複素数に対する解釈は signif を参照してください)。
非科学的な書式で実数/複素数を書式設定する際の小数点以下の最小桁数。
文字ベクトルを左寄せ(デフォルト)、右寄せ、中央揃え、左揃えのいずれにするか。  省略可能。
AsIsメソッド：非文字オブジェクトの最大フィールド幅。  NULLはデフォルトの12に相当する。
論理: NA文字列をエンコードすべきか。  これは文字ベクトルの要素にのみ適用され、数値、複素数、論理の NA には適用されない。
実数または複素数ベクトルの要素をscientificformatでエンコードするかどうかを指定する論理か、整数のペナルティ(options("scipen")を参照)のどちらかを指定する。
他のメソッドに渡される、あるいは他のメソッドから渡されるさらなる引数。
prettyNumに渡されます: 詳細はヘルプを参照してください。
date-time または date オブジェクト。
主に "POSIXlt "オブジェクトの変換に使用されるオプションのタイムゾーン指定。
文字列。  結果の単位。  省略可能。
文字列。  単位と同様だが、省略はできない。
時間間隔を指定する文字列または数値。
timの書式を指定する文字。  デフォルトはロケール固有の時間フォーマットです。
クラス "difftime "を継承したオブジェクト。
他のメソッドに渡す引数。
通常は数値。
FALSEの場合、論理値、数値、複素数は共通の幅で右寄せされる。
数値および複素数xについて、有効桁数を何桁にするか。  デフォルトのNULLはgetOption("digits")を使用します。  これは提案です: (大きさの) 最小の数値がこれだけの有効桁数を持つように、また nsmall を満たすように、十分な小数位が使用されます(複素数に対する解釈は signif を参照してください)。
非科学的な書式で実数/複素数を書式設定する際の小数点以下の最小桁数。
文字ベクトルを左寄せ(デフォルト)、右寄せ、中央揃え、左揃えのいずれにするか。  省略可能。
AsIsメソッド：非文字オブジェクトの最大フィールド幅。  NULLはデフォルトの12に相当する。
論理: NA文字列をエンコードすべきか。  これは文字ベクトルの要素にのみ適用され、数値、複素数、論理のNAには適用されない。
実数または複素数ベクトルの要素をscientificformatでエンコードするかどうかを指定する論理か、整数のペナルティ(options("scipen")を参照)のどちらかを指定する。
他のメソッドに渡される、あるいは他のメソッドから渡されるさらなる引数。
prettyNumに渡される。詳細はヘルプを参照。
hexmode "クラスを継承するメソッド用のオブジェクト。
NULL または、使用する最小フィールド幅を指定する正の整数。
大文字を使うか小文字を使うかを示す論理値（デフォルト）。
他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
format(x,...)の潜在的な引数。
数値および複素数 x に対して、何桁の有効数字を使用するか。  デフォルトの NULL は、getOption("digits") を使用します。
 (format(...,nsmall)を参照)。
パッケージ名。名前または文字列、あるいは character.only が FALSE (デフォルト) か TRUE かによる文字列で指定する。
ロードされた名前空間をアタッチする検索リストの位置。  search()で指定された現在の検索リスト上の位置の名前にすることもできます。
検索する Rlibrary ツリーの位置を表す文字ベクトル、または NULL。  デフォルト値の NULL は、現在 libPaths() で知られているすべてのライブラリに対応します。
packageまたはhelpを文字列とみなすかどうかを示す論理。
論理値。  TRUE の場合は FALSE、TRUE の場合は TRUE を返す。
論理値。  TRUE の場合、新しいパッケージのアタッチによる競合について警告が表示されます。  衝突とは、関数をマスクする関数、または非関数をマスクする非関数のことです。conflicts.policy オプションで FALSE を指定しない限り、デフォルトは TRUE です。
論理。  TRUE の場合、追加の診断が表示される。
a 論理。  TRUE の場合、パッケージのアタッチを確認するメッセージは表示されず、 パッケージのアタッチに失敗してもエラーや警告は表示されないことが 多い。
パッケージ名を示す文字列。
ストリクト・コンフリクト・チェックが有効になっている場合に、 エラーを通知することなく検索パス上のオブジェクトをマスクできる オブジェクト名の文字ベクトル。
アタッチされたフレームに除外または含めるオブジェクト名の文字ベクトル。libraryまたはrequireの呼び出しでは、これらの引数のうち1つのみを使用することができる。
DESCRIPTION ファイルの Depends 節に列挙されている必須パッケージを自動的にアタッチするかどうかを指定する論理。
package_versionの場合は、R.versionで得られるRversionオブジェクトでもよい。
無効な数値バージョンをエラー(デフォルト)にするかどうかを示す論理。
クラス "octmode "を継承したメソッド用のオブジェクト。
NULL または、使用する最小フィールド幅を指定する正の整数。
他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
パッケージの名前、またはリテラル文字列、または character.only が FALSE（デフォルト）か TRUE かによって異なる文字列。
ロードされたネームスペースをアタッチする検索リストの位置。  search()で指定された現在の検索リスト上の位置の名前にすることもできます。
検索する Rlibrary ツリーの位置を表す文字ベクトル、または NULL。  デフォルト値の NULL は、現在 libPaths() で認識されているすべてのライブラリに対応します。
packageまたはhelpを文字列とみなすかどうかを示す論理。
論理値。  TRUE の場合は FALSE、TRUE の場合は TRUE を返す。
論理値。  TRUE の場合、新しいパッケージのアタッチによる競合について警告が表示されます。  衝突とは、関数をマスクする関数、または非関数をマスクする非関数のことです。conflicts.policy オプションで FALSE を指定しない限り、デフォルトは TRUE です。
論理。  TRUE の場合、追加の診断が表示される。
a 論理。  TRUE の場合、パッケージのアタッチを確認するメッセージは表示されず、 パッケージのアタッチに失敗してもエラーや警告は表示されないことが 多い。
パッケージ名を示す文字列。
ストリクト・コンフリクト・チェックが有効になっている場合に、 エラーを通知することなく検索パス上のオブジェクトをマスクできる オブジェクト名の文字ベクトル。
アタッチされたフレームに除外または含めるオブジェクト名の文字ベクトル。libraryまたはrequireの呼び出しでは、これらの引数のうち1つのみを使用することができる。
DESCRIPTION ファイルの Depends 節にリストされている必須パッケージを自動的にアタッチするかどうかを指定する論理。
変換されるオブジェクト：strptimeの場合は文字ベクトル、 strftimeの場合は "POSIXlt "に変換できるオブジェクト。
変換に使用するタイムゾーンを指定する文字列。  システム固有(as.POSIXltを参照)ですが、""は現在のタイムゾーンで、"GMT "はUTCです。無効な値はUTCとして扱われるのが一般的で、プラットフォームによっては警告が表示されます。
文字列。  formatmethodsのデフォルトは、要素に深夜以外の時間要素がある場合は"%Y-%m-%d %H:%M:%S"、そうでない場合は"%Y-%m-%d "です。  options("digits.secs")が設定されている場合は、指定された桁数までの秒数を表示します。
他のメソッドから、または他のメソッドに渡されるさらなる引数。
論理的に指定します。  タイムゾーンの省略形を出力に付加するか。  これは時刻を出力する際に使用され、"%Z "を使用するよりも信頼性が高い。
変換するオブジェクト。strptimeの場合は文字ベクトル、 strftimeの場合は "POSIXlt "に変換できるオブジェクト。
変換に使用するタイムゾーンを指定する文字列。  システム固有(as.POSIXltを参照)ですが、""は現在のタイムゾーンで、"GMT "はUTCです。無効な値はUTCとして扱われるのが一般的で、プラットフォームによっては警告が表示されます。
文字列。  formatmethodsのデフォルトは、要素に深夜以外の時間要素がある場合は"%Y-%m-%d %H:%M:%S"、そうでない場合は"%Y-%m-%d "です。  options("digits.secs")が設定されている場合は、指定された桁数までの秒数を表示します。
他のメソッドから、または他のメソッドに渡すさらなる引数。
論理的に指定します。  タイムゾーンの省略形を出力に付加するか。  これは時刻を出力する際に使用され、"%Z "を使用するよりも信頼性が高い。
数値ベクトル。
有効数字の桁数を指定する。
数値許容誤差：「詳細」を参照。
NAの文字表現。
nsmall など、format に渡すその他の引数。
要約が必要なオブジェクト。
summary() のデフォルトメソッドの結果。
要素について何段階表示するかを示す整数。
signif()(summary.defaultの場合) またはformat()(summary.data.frameの場合) による数値の書式設定に使用する整数。  summary.defaultでは、指定されていない場合（つまり、missing(.)）、signif()は呼び出されなくなります（R >= 3.4.0以降では、デフォルトはprintメソッドとformatメソッドでroundのみに変更されています）。
quantile(*,type=quantile.type)でデフォルトメソッドに使用される整数コード。
生成される要約に影響を与える追加引数。
アトミックな数値または文字オブジェクトで、prettyNum() でのみ複素数の可能性があり、通常は実数のベクトルである。  任意のクラスは、警告とともに破棄される。
小数点以下の桁数(format = "f")、または有効桁数(format = "g", = "e" or = "fg")。デフォルト：整数の場合は2、実数の場合は4。  0未満の場合は、Cのデフォルトの6桁が使用される。  50桁以上指定した場合、format = "f "で通常324桁に制限されない限り、警告とともに50桁が使用される。(使用するOSやコンパイラにもよりますが、15～21桁以下であれば正確です。  この制限は、基礎となるCランタイムのセグメンテーション・フォールトに対する予防措置に過ぎない)。
width=0はwidth=digitsを使用し、width<0はこのフィールドの数値を左詰めにする(flag="-"と等価)ことを意味する。  文字データの場合、これは文字数で解釈される（バイト数でも表示幅でもない）。
は、"d"（整数の場合）、"f"、"e"、"E"、"g"、"G"、"fg"（小数の場合）、または "s"（文字列の場合）に等しい。  デフォルトは、整数の場合は "d"、実数の場合は "g "である。"f "は、通常のxxx.xxxフォーマットで数値を与える。"e "と "E "は、n.ddde+nn orn.dddE+nn（科学的フォーマット）を与える。"g "と "G "は、そうすることでスペースを節約できる場合にのみ、x[i]を科学的フォーマットに変換し、末尾のゼロと小数点を削除する。"fg"（独自のハイブリッド書式）は、"f "と同じ固定書式を使用しますが、桁数は有効数字の最小桁数となります。  signifとは異なり、これは桁数よりも有効桁数の方が多い大きな数値を表示することに注意してください。  この書式では、flagに "#"が含まれていない限り、末尾のゼロは取り除かれる。
formatCの場合は、Kernighan and Ritchie (1988, page 243)またはC+99標準にあるような書式修飾子を与える文字列である、「最初の文字が符号でない場合、代わりにスペース文字 " " が使用される。"'"プラットフォームとロケールの組み合わせによっては、10進数変換で「千のグループ化」を有効にする。" I "glibcのいくつかのバージョンでは、整数変換でロケールの代替出力桁があればそれを使用する。  これらのフラグは、どのような順番でも複数指定することができる。 その他の文字は、以前は文字書式には影響しなかったが、R 3.4.0以降ではエラーとなる。
「double"（または "real"）、"integer"、または "character"：デフォルト：xの格納モードから決定される。
文字; 空でない場合、小数点(つまり大きい)の前のbig.intervalの小数点の間のマークとして使用されます。
デフォルトは3。
文字; 空でない場合、小数点の後（つまり小さい）、すべてのsmall.interval 小数の間の目印として使用されます。
上記のsmall.markを参照。
小数点を示す文字。
xがcharacterの場合、xで小数点として使用されている文字。
マーク(big.markまたはsmall.mark)が追加された場合に、文字列の幅を可能な限り維持するかどうかを指定する文字列。  デフォルトの "common "は書式に類似した動作に対応し、"individual "はデフォルトのinformatC()に対応する。値は省略可能。
論理値、文字列またはNULLで、ゼロを特別にフォーマットするかどうかを指定する。  疎な」オブジェクトをきれいに印刷するのに便利。
zero.printが文字列の場合、xshの正確なゼロのエントリを単にzero.printで置き換えるべきかどうかを示す。  そうでない場合、それぞれの文字列の幅に応じて、(フォーマットされた)ゼロは、zero.printによって部分的に置き換えられ、適用可能であれば、右側に" "が追加されます。  この場合(false replace[.zero])、zero.print文字列が適合しない場合、警告が生成されます(warn.non.fittingがtrueの場合).これはprettyNum()を介して動作し、この場合、.format.zeros(*, replace=replace.zero)を3回呼び出します。
この場合、.format.zeros(*, replace=.zero)を3回呼び出すprettyNum()によって動作します。
論理値で、小数点以下のゼロ、すなわち "0 "を除去するかどうかを示す。  これは単にprettyNum()に渡される。
xが "character "である場合に使用されるオプションの論理で、それが複素数ベクトルから生じているかどうかを示す。  デフォルト(NA)では、xは複素数に'見える'ようにチェックされる。
formatに渡される引数。
xと同じ長さの数値ベクトル。通常は、文字ベクトルxがプリフォーマットとなる数値。
記述する項目を与えるベクトル、または長さ2のリスト、または項目と記述の両方を与える2列の行列。
x と同じ長さの、対応する記述を持つベクトル。  xがまだ説明を与えていない場合にのみ使用される。
説明情報のレンダリングスタイルを指定する文字列。  table "の場合、項目と説明を列として持つ2列の表が生成される（Texinfoの@table環境に似ている）。  list "の場合、LaTeX形式のタグ付き説明文リストが得られる。
出力の折り返し行の対象となる列を指定する正の整数。
表形式では2番目の列のインデントを、リスト形式では継続行のインデントを指定する正の整数。  width/2より大きくてはならず、デフォルトは、表スタイルではwidth/3、リストスタイルではwidth/9である。
解くべき系の係数を与える上（または下）三角行列。  対角より下(上)の値は無視される.
列が方程式の右辺を与える行列.
使用する r の列数と x の行数.
TRUE (デフォルト) の場合, r の上三角形部分が使用される.  TRUE（デフォルト）の場合、rの上三角形部分が使用される。
論理; TRUEの場合、r' * y = x fory、つまりt(r) %*% y == xを解く。
空または 1 つ以上の name または name=expression 項。
式。
式。
非負の数値ベクトル。
数値ベクトル。
整数ベクトル。
TRUE の場合、ガベージ・コレクションは cons セルとベクタに割り当てられた領域に関する統計を表示します。
TRUE の場合、最大使用領域の値は現在の値にリセットされます。
TRUE の場合、完全な収集が実行されます。そうでない場合は、最近割り当てられたオブジェクトのみが収集されます。
TRUE の場合、GC タイミングが有効になります。
TRUE の場合、ガベージコレクションは cons セルとベクターに割り当てられた領域に関する統計を表示します。
TRUE の場合、最大使用領域の値は現在の値にリセットされます。
TRUE の場合、完全な収集が実行されます。そうでない場合は、最近割り当てられたオブジェクトのみが収集されます。
論理; オン/オフを切り替える。
step=0はGCの拷問をオフにする。
integer; GC拷問を開始する前に待機する割り当て数。
logical; フリーオブジェクトを再使用のために解放しない。
logical; オン/オフ。
step=0はGC拷問をオフにします。
integer; GC拷問を開始する前に待機する割り当て数。
logical; フリーオブジェクトを再使用のために解放しない。
mgetの場合は、オブジェクト名の文字ベクトル。
オブジェクトを探す場所（'詳細'を参照）。
探しているオブジェクトのモードまたはタイプ: 'Details' セクションを参照。
環境を囲むフレームを検索するか。
mgetの場合、項目が見つからない場合に使用する値のリスト: 必要であればリストに強制されます。dynGetの場合、任意のRオブジェクト、例えばstop()の呼び出し。
検索する最小フレーム番号を指定する整数。
変数名（文字列またはシンボルで指定）。
オブジェクトを探す場所（詳細セクションを参照）。省略した場合、この関数は、オブジェクトの名前が式の中で引用符で囲まれていないものとして検索します。
を省略した場合、関数はオブジェクトの名前が式中で引用符で囲まれていない場合と同じように検索します。
呼び出しリストのフレーム。  sys.frame(frame)としてwhereを与えるのと同じです。
詳細」セクションを参照してください。
環境を囲むフレームが検索されるべきか？
xが存在しない場合のget0(x, *)の戻り値。
logical: true の場合、閉じた接続と標準の接続を含むすべての接続が表示されます。  false の場合、ユーザが作成したオープンな接続のみが表示されます。
整数: showConnections で指定したテーブルの行番号。
接続。
既定では、ネイティブ・ルーチンが呼び出されている現在の関数が呼び出されます。
名前空間や DLL を見つけられなかった場合に、エラー（TRUE）になるかならないか（FALSE） を示す論理値。  既定値は FALSE です。.C、.Call、.Fortran、.External 呼び出しで PACKAGE 引数がないためにこの関数が呼び出された場合、エラーは発生せず、すべての DLL を順番に検索して通常の検索が実行されます。
環境。
既定では、ネイティブ・ルーチンが呼び出されている現在の関数が呼び出されます。
名前空間および/または DLL を見つけることに失敗した場合、エラー（TRUE） になるか、エラー（FALSE）にならないかを示す論理値。  既定値は FALSE です。.C、.Call、.Fortran、.External 呼び出しで PACKAGE 引数がないためにこの関数が呼び出された場合、エラーは発生せず、すべての DLL を順番に検索して通常の検索が実行されます。
環境。
論理: true の場合、閉じた接続と標準の接続を含むすべての接続が表示されます。  false の場合、ユーザが作成したオープンな接続のみが含まれます。
integer: showConnections で指定したテーブルの行番号。
接続。
文字列または DLLInfo オブジェクト。文字列は、対象となる DLL のファイル名を指定します、DLLInfoオブジェクトは、dyn.loadおよびlibrary.dynamicの呼び出しで直接取得することも、dyn.loadおよびlibrary.dynamicの呼び出しの後で見つけることもできる。DLLInfoオブジェクトは、dyn.loadおよびlibrary.dynamの呼び出しで直接取得することも、DLLがロードされた後にgetLoadedDLLsを使用して見つけることもできます。DLLInfoを使用すると、DLLInfoオブジェクトのリスト（DLLファイル名でインデックスを付けることが可能）が返されます。
論理値。  これが TRUE の場合、返されるリストの要素には、ルーチンの名前 (登録名または生名によって R が確認したもの) が使用されます。  FALSEの場合、これらの名前は計算されず、リストに代入されない。  その結果、呼び出しはより速くなるはずである。  名前情報は、リスト内のNativeSymbolInfoオブジェクトでも利用可能です。
文字列は、対象となるDLLのファイル名を指定し、ファイル名の拡張子（例えばDLLInfoオブジェクトは、dyn.loadおよびlibrary.dynamicの呼び出しで直接取得することも、dyn.loadおよびlibrary.dynamicの呼び出しの後で見つけることもできる。DLLInfoオブジェクトは、dyn.loadおよびlibrary.dynamの呼び出しで直接取得することも、DLLがロードされた後にgetLoadedDLLsを使用して見つけることもできます。DLLInfoは、DLLInfoオブジェクトのリスト（DLLファイル名でインデックス可能）を返します。
論理値。  これが TRUE の場合、返されるリストの要素には、ルーチンの名前 (登録名または生名によって R が確認したもの) が使用されます。  FALSEの場合、これらの名前は計算されず、リストに代入されない。  その結果、呼び出しはより速くなるはずである。  名前情報は、リスト内のNativeSymbolInfoオブジェクトでも利用可能です。
文字列は、対象となるDLLのファイル名を指定し、ファイル名の拡張子（例えばDLLInfoオブジェクトは、dyn.loadおよびlibrary.dynamicの呼び出しで直接取得することも、dyn.loadおよびlibrary.dynamicの呼び出しの後で見つけることもできる。DLLInfoオブジェクトは、dyn.loadおよびlibrary.dynamの呼び出しで直接取得することも、DLLがロードされた後にgetLoadedDLLsを使用して見つけることもできます。DLLInfoは、DLLInfoオブジェクトのリスト（DLLファイル名でインデックス可能）を返します。
論理値。  これが TRUE の場合、返されるリストの要素には、ルーチンの名前 (登録名または生名によって R が確認したもの) が使用されます。  FALSEの場合、これらの名前は計算されず、リストに代入されない。  その結果、呼び出しはより速くなるはずである。  名前情報はリスト内のNativeSymbolInfoオブジェクトでも利用可能です。
要素を抽出する、あるいは要素を置換するオブジェクト。
抽出または置換する要素を指定するインデックス。  インデックスは数値または文字ベクトル、または空（欠損）またはNULLです。  文字ベクトルはオブジェクトの名前(行列/配列の場合はdimnames)にマッチします: 詳細は後述の'文字インデックス'を参照してください。  i,j,・・・は、選択から外す要素/スライスを示す負の整数にもできます。[ 1つの引数]で配列にインデックスを付ける場合、iはxの次元数と同じ数の列を持つ行列にすることができます。
リテラル文字列または名前（バックティック引用符で囲むこともできる）。  抽出の場合、これは通常（'環境'の項を参照）オブジェクトの名前に部分的にマッチします。
行列と配列の場合。  TRUE の場合、結果は可能な限り小さい次元に強制されます（例を参照）。  これは要素の抽出にのみ有効で、置換には使えません。  詳細はseedropを参照してください。
文字ベクトルによる抽出の際に、[[ の部分一致の可能性を制御します (ほとんどのオブジェクトに適用されますが、'環境' の項を参照してください)。  デフォルトは部分一致なし。  値NAは部分マッチングを許可するが、部分マッチングが発生すると警告を発する。  FALSEを指定すると、警告なしで部分マッチングを行うことができます。
通常は、xと同様のクラスの配列のようなRオブジェクトです。
文字に強制できる0個以上のオブジェクト（区切り文字なしで一緒に貼り付けられる）または単一の条件オブジェクト。
論理的なもので、呼び出しがエラーメッセージの一部になるかどうかを示す。
gettextを参照のこと。  NAの場合、メッセージは翻訳されない。
文字列または名前空間オブジェクト。
文字列または名前。
文字列: フック名
文字列: パッケージ/名前空間名
文字列: パッケージのイベント。  省略可能。
関数または関数のリスト、または action = "replace" の場合は NULL。
実行するアクション。  省略可能。
文字列または名前空間オブジェクト。
文字列または名前。
文字列または名前空間オブジェクト。
文字列または名前。
文字列または名前空間オブジェクト。
文字列または名前。
文字列または名前空間環境。
論理。
環境。
名前空間環境。
文字ベクトル。
オプションの文字ベクトル。
名前空間環境。
ロードするパッケージ/名前空間を指定する文字列。
ジェネリックと並列なパッケージ名のベクトル。
ライブラリを指定する文字ベクトル。
論理。
文字。
文字。
環境。
3列の文字行列。
文字。
任意のオブジェクト
文字引数。
メソッド・テーブル名。
symbol: 名前空間の名前。
文字ベクトルで、インポートから除外するシンボルを指定します。
文字列または名前空間オブジェクト。
文字列または名前。
文字列または名前空間オブジェクト。
文字列または名前。
文字列または名前空間オブジェクト。
文字列または名前。
ネイティブ・シンボルの名前。
このシンボルの検索をどのDLLに制限するかを指定するオプションの引数。  これが "base "の場合、Rの実行ファイル自体を検索します。
unlist が TRUE で、name に含まれるシンボル名の数が 1 の場合、NativeSymbolInfo オブジェクトが返されます。  FALSEの場合、NativeSymbolInfoオブジェクトのリストが返されます。nameに渡されたシンボルの数が1以上の場合、これは無視されます。この関数の以前のバージョンと互換性を保つため、この関数のデフォルトはTRUEです。
TRUEの場合、シンボルとそのパラメータ・タイプについてRに登録された情報があればそれを返すか、FALSEの場合、シンボルのアドレスだけを返すかを示す論理値。
オプションは、name = valueを使用して定義することができます。ただし、基本Rでは以下のものだけが使用されます。オプションは、名前付きリストである単一の無名引数を与えて渡すこともできます。
オプション名を保持する文字列。
指定されたオプションがオプションリストに設定されていなければ、この値が返される。  これにより、オプションを取得して、それが設定されているかどうかをチェックし、設定されていない場合は個別に設定することが容易になります。
package_version の場合は、R.version で取得した Rversion オブジェクト。
無効な数値バージョンはエラーになる (デフォルト) かどうかを示す論理。
 ファイル名。
 ファイルの文字エンコーディング。
 文字列を作成する際のエンコーディング： parseのencoding引数を参照のこと。
 ソース行の文字ベクトル。  他のRオブジェクトは文字に強制される。
 ファイルのコピーに使用するタイムスタンプ。
 この srcfilecopy がファイルシステムファイルから取得されたものであることが知られているか？
 srcfile オブジェクト。
 行番号。
 ソースの位置を示す 4 個、6 個、または 8 個の値からなるベクトル。
 適切なクラスのオブジェクト。
 srcref のテキストを取得するために srcfile を読み込むかどうか。
 文字範囲の終わりを示すオプションの 2 番目の srcref オブジェクト。
 メソッドに対する追加の引数。
1つまたは複数の文字ベクトル．
翻訳の 'ドメイン'。
非負の整数。
n = 1の場合に英語で使用されるメッセージ。
n = 0, 2, 3, ...のときに英語で使われるメッセージ。
ドメインの翻訳されたメッセー ジカタログを探すディレクトリ。
最大8192バイトのフォーマット文字列の文字ベクトル。
fmtに渡される値。  論理ベクトル、整数ベクトル、実数ベクトル、文字ベクトルのみがサポートされますが、 いくつかの強制は行われます。最大100まで。
gettext を参照のこと。
文字列：チルダ展開が行われる。
レベル数を示す整数。
複製数を表す整数。
結果の長さを示す整数。
結果の因子レベルのラベルのオプションのベクトル。
結果を並べ替えるかどうかを示す論理。
条件オブジェクト。
call式。
条件オブジェクト。
評価される式。
リターンまたは終了する前に評価される式。
関数
文字列
文字列
リスタートを指定する文字列
restartオブジェクト。
オブジェクトを指定します。
条件クラスの名前を指定する文字列。
詳細は後述します。
関数、数式、またはデフォルトのNULL。
関数に関連付ける環境
任意のRオブジェクト。
TRUE の場合、環境はハッシュ・テーブルを使用します。
作成された環境のエンクロージャとして使用される環境。
環境
ハッシュ環境の初期サイズを指定する整数。  size が NA またはゼロの場合、内部のデフォルト値が使用されます。  この引数は、hash が FALSE の場合は無視されます。
与えられた文字ベクトルでマッチする正規表現（fixed = TRUEの場合は文字列）を含む文字列。  可能であれば、as.characterによって文字列に強制される。  長さが2以上の文字ベクトルが与えられた場合、警告とともに最初の要素が使用されます。  regexpr、gregexpr、regexec以外では、欠落値も許されます。
マッチを探す文字ベクトル、またはas.characterで文字ベクトルに強制できる オブジェクトを指定します。  長いベクトルがサポートされています。
FALSEの場合、パターンマッチは大文字小文字を区別し、TRUEの場合、 マッチング中に大文字小文字は無視されます。
論理的です。  Perl互換の正規表現を使うか。
FALSEの場合、grepによって決定されたマッチの(整数)インデックスを含むベクトルが返され、TRUEの場合、マッチ要素そのものを含むベクトルが返されます。
を論理的に返します。  TRUEの場合、patternはそのままマッチする文字列です。  すべての矛盾する引数を上書きします。
の論理引数を上書きします。  TRUE の場合、マッチングは文字単位ではなくバイト単位で行われます。  詳細'を参照。
論理値。  TRUE の場合、マッチしない要素のインデックスまたは値を返す。
の場合、マッチしたパターンを sub とgsub で置き換えます。  可能であれば文字に強制されます。  fixed = FALSE の場合、パターンの括弧付き部分式への後方参照 " \1" ～ " \9" を含めることができます。  perl=TRUEの場合のみ、残りの置換を大文字または小文字に変換する"˶U "または"˶L "と、大文字と小文字の変換を終了する"˶E "を含むことができます。  長さが 2 以上の文字ベクトルが供給された場合、警告と共に最初の要素が使用されます。  NA の場合、マッチに対応する結果のすべての要素が NA に設定される。
与えられた文字ベクトルでマッチする正規表現(fixed = TRUEの場合は文字列)を含む文字列。  可能であれば、as.characterによって文字列に強制されます。  長さが2以上の文字ベクトルが与えられた場合、警告とともに最初の要素が使用される。  regexpr、gregexpr、regexec以外では、欠落値も許されます。
マッチを探す文字ベクトル、またはas.characterで文字ベクトルに強制できる オブジェクトを指定します。  長いベクトルがサポートされています。
FALSEの場合、パターンマッチは大文字小文字を区別し、TRUEの場合、 マッチング中に大文字小文字は無視されます。
論理的です。  Perl互換の正規表現を使うか。
FALSEの場合、grepによって決定されたマッチの(整数)インデックスを含むベクトルが返され、TRUEの場合、マッチ要素そのものを含むベクトルが返されます。
を論理的に返します。  TRUEの場合、patternはそのままマッチする文字列です。  すべての矛盾する引数を上書きします。
論理引数。  TRUE の場合、マッチングは文字単位ではなくバイト単位で行われます。  詳細'を参照。
論理値。  TRUE の場合、マッチしない要素のインデックスまたは値を返す。
の場合、マッチしたパターンを sub とgsub で置き換えます。  可能であれば文字に強制されます。  fixed = FALSE の場合、パターンの括弧付き部分式への後方参照 " \1" ～ " \9" を含めることができます。  perl=TRUEの場合のみ、残りの置換を大文字または小文字に変換する"˶U "または"˶L "と、大文字と小文字の変換を終了する"˶E "を含むことができます。  長さが 2 以上の文字ベクトルが供給された場合、警告と共に最初の要素が使用されます。  NA の場合、マッチに対応する結果のすべての要素が NA に設定される。
与えられた文字ベクトルでマッチする正規表現(fixed = TRUEの場合は文字列)を含む文字列。  可能であれば、as.characterによって文字列に強制されます。  長さが2以上の文字ベクトルが与えられた場合、警告とともに最初の要素が使用される。  regexpr、gregexpr、regexec以外では、欠落値も許されます。
マッチを探す文字ベクトル、またはas.characterで文字ベクトルに強制できる オブジェクトを指定します。  長いベクトルがサポートされています。
FALSEの場合、パターンマッチは大文字小文字を区別し、TRUEの場合、 マッチング中に大文字小文字は無視されます。
論理的です。  Perl互換の正規表現を使うか。
FALSEの場合、grepによって決定されたマッチの(整数)インデックスを含むベクトルが返され、TRUEの場合、マッチ要素そのものを含むベクトルが返されます。
を論理的に返します。  TRUEの場合、patternはそのままマッチする文字列です。  すべての矛盾する引数を上書きします。
論理引数。  TRUE の場合、マッチングは文字単位ではなくバイト単位で行われます。  詳細'を参照。
論理値。  TRUE の場合、マッチしない要素のインデックスまたは値を返す。
の場合、マッチしたパターンを sub とgsub で置き換えます。  可能であれば文字に強制されます。  fixed = FALSE の場合、パターンの括弧付き部分式への後方参照 " \1" ～ " \9" を含めることができます。  perl=TRUEの場合のみ、残りの置換を大文字または小文字に変換する"˶U "または"˶L "と、大文字と小文字の変換を終了する"˶E "を含むことができます。  長さが 2 以上の文字ベクトルが供給された場合、警告と共に最初の要素が使用されます。  NA の場合、マッチに対応する結果のすべての要素が NA に設定される。
与えられた文字ベクトルでマッチする正規表現(fixed = TRUEの場合は文字列)を含む文字列。  可能であれば、as.characterによって文字列に強制されます。  長さが2以上の文字ベクトルが与えられた場合、警告とともに最初の要素が使用される。  regexpr、gregexpr、regexec以外では、欠落値も許されます。
マッチを探す文字ベクトル、またはas.characterで文字ベクトルに強制できる オブジェクトを指定します。  長いベクトルがサポートされています。
FALSEの場合、パターンマッチは大文字小文字を区別し、TRUEの場合、 マッチング中に大文字小文字は無視されます。
論理的です。  Perl互換の正規表現を使うか。
FALSEの場合、grepによって決定されたマッチの(整数)インデックスを含むベクトルが返され、TRUEの場合、マッチ要素そのものを含むベクトルが返されます。
を論理的に返します。  TRUEの場合、patternはそのままマッチする文字列です。  すべての矛盾する引数を上書きします。
論理引数。  TRUE の場合、マッチングは文字単位ではなくバイト単位で行われます。  詳細'を参照。
論理値。  TRUE の場合、マッチしない要素のインデックスまたは値を返す。
の場合、マッチしたパターンを sub とgsub で置き換えます。  可能であれば文字に強制されます。  fixed = FALSE の場合、パターンの括弧付き部分式への後方参照 " \1" ～ " \9" を含めることができます。  perl=TRUEの場合のみ、残りの置換を大文字または小文字に変換する"˶U "または"˶L "と、大文字と小文字の変換を終了する"˶E "を含むことができます。  長さが 2 以上の文字ベクトルが供給された場合、警告と共に最初の要素が使用されます。  NA の場合、マッチに対応する結果のすべての要素が NA に設定される。
与えられたrawベクトルでマッチする正規表現(fixed = TRUEの場合は固定パターン)を含むrawベクトル。  可能であれば、charToRawによって文字列に強制されます。
マッチを求める生のベクトル、または charToRaw で生のベクトルに強制できるオブジェクト。  長いベクトルはサポートされていません。
FALSEの場合、パターン・マッチは大文字小文字を区別します。
検索を開始するオフセットを指定する整数。  正の値でなければならない。  行頭はそのオフセットにあると定義されるので、"^" はそこでマッチする。
論理値。  戻り値を決定する。
論理値。  TRUE の場合、pattern はそのままマッチするパターンである。
論理値。  TRUE の場合はすべてのマッチが返され、そうでない場合は最初のマッチだけが返されます。
を返します。  TRUE の場合、マッチしない要素のインデックスまたは値を返します。  value = TRUEでない場合は無視されます（警告が表示されます）。
すべて同じ長さの数値、文字、論理ベクトルのシーケンス、またはクラス化されたRオブジェクト。
与えられた文字ベクトルでマッチする正規表現(fixed = TRUEの場合は文字列)を含む文字列。  可能であれば、as.characterによって文字列に強制されます。  長さが2以上の文字ベクトルが与えられた場合、警告とともに最初の要素が使用されます。  regexpr、gregexpr、regexec以外では、欠落値も許されます。
マッチを探す文字ベクトル、またはas.characterで文字ベクトルに強制できる オブジェクトを指定します。  長いベクトルがサポートされています。
FALSEの場合、パターンマッチは大文字小文字を区別し、TRUEの場合、 マッチング中に大文字小文字は無視されます。
論理的です。  Perl互換の正規表現を使うか。
FALSEの場合、grepによって決定されたマッチの(整数)インデックスを含むベクトルが返され、TRUEの場合、マッチ要素そのものを含むベクトルが返されます。
を論理的に返します。  TRUEの場合、patternはそのままマッチする文字列です。  すべての矛盾する引数を上書きします。
の論理引数を上書きします。  TRUE の場合、マッチングは文字単位ではなくバイト単位で行われます。  詳細'を参照。
論理値。  TRUE の場合、マッチしない要素のインデックスまたは値を返す。
の場合、マッチしたパターンを sub とgsub で置き換えます。  可能であれば文字に強制されます。  fixed = FALSE の場合、パターンの括弧付き部分式への後方参照 " \1" ～ " \9" を含めることができます。  perl=TRUEの場合のみ、残りの置換を大文字または小文字に変換する"˶U "または"˶L "と、大文字と小文字の変換を終了する"˶E "を含むことができます。  長さが 2 以上の文字ベクトルが供給された場合、警告と共に最初の要素が使用されます。  NA の場合、マッチに対応する結果のすべての要素が NA に設定される。
a 接続。
0 から 9 までの整数、書き込み時の圧縮レベル。
論理値。  読み込み時に非圧縮入力を許可するか。
論理的。接続をテキスト指向にするか。これは、接続のモード（常にバイナリでなければならない）とは異なる。TRUEの場合、pushBackはその接続で動作し、そうでない場合はreadBinとその仲間が適用される。
文字列。  接続の説明: '詳細'を参照。
文字列。  接続のオープン方法の説明(最初にオープンする場合)。  指定できる値については、'モード' のセクションを参照のこと。
論理値。  ブロック」のセクションを参照。
想定するエンコーディングの名前。  エンコーディング」のセクションを参照。
論理値。  trueを指定すると、'raw'インターフェイスが使用され、 通常のファイルではない引数、例えばキャラクタデバイスなどに適している。  これは、テキストモードの読み込みのためにオープンする際に、 圧縮ファイルであるかどうかのチェックを抑制し、「ファイル」がシーク可能でない可能性があることを表明する。
文字列、部分的に一致するtoc("default", "internal", "wininet", "libcurl"):「詳細」を参照。
HTTPrequests で使用する HTTP ヘッダの名前付き文字ベクトル。  非 HTTP URL では無視されます。  HTTPUserAgent オプション (オプション参照) にある User-Agent ヘッダが自動的に最初のヘッダとして使用されます。
0-9 の整数。  書き込み時に適用する圧縮の量を、なしから最大まで指定します。  forxzfile には負の値を指定することもできます: '圧縮'のセクションを参照ください。
数値: この接続で使用するタイムアウト (秒単位)。  OSによっては、非常に大きな値をゼロとして扱うことがあるので注意すること。ただし、POSIX標準では31日までの値をサポートしている。
オプションの文字ベクトル。現在のところ、TCPソケットでは "no-delay "のみがサポートされている。
zip ファイル内のファイル名。
文字列。  ポートのホスト名。
整数。  TCP ポート番号。
論理。  ソケットをクライアントにするかサーバーにするか。
接続をリッスンするサーバソケット。
コネクション。
文字列。  現在は無視される。
文字列。  空文字列または "read "または "write"、部分一致可。
他のメソッドに渡される、または他のメソッドから渡される引数。
オブジェクト
文字ベクトル、またはas.characterによって文字ベクトルに変換されるオブジェクト、またはiconv(toRaw = TRUE)によって返されるNULLとraw要素を持つリスト。
現在のエンコーディングを表す文字列。
ターゲットエンコーディングを表す文字列。
文字列。  NAでない場合は、入力中の変換不可能なバイトを置き換えるために使われる。  (これは通常1文字ですが、それ以上でもかまいません。) "byte "の場合、その表示は"<xx>"となり、バイトの16進コードとなります。  Unicode "でUTF-8から変換する場合、Unicodeポイントは"<U+xxxx>"という形式になります。
論理的に、専門家の使用のために。  エンコーディングをマークすべきか？
論理的。  文字ベクトルではなく、生のベクトルのリストを返すべきか？
文字ベクトル、またはas.characterによって文字ベクトルに変換されるオブジェクト、またはiconv(toRaw = TRUE)によって返されるNULLと生の要素を持つリスト。
現在のエンコーディングを表す文字列。
ターゲットエンコーディングを表す文字列。
文字列。  NAでない場合は、入力中の変換不可能なバイトを置き換えるために使われる。  (これは通常1文字ですが、それ以上でもかまいません。) "byte "の場合、その表示は"<xx>"となり、バイトの16進コードとなります。  Unicode "でUTF-8から変換する場合、Unicodeポイントは"<U+xxxx>"という形式になります。
論理的に、専門家の使用のために。  エンコーディングをマークすべきか？
論理的。  文字ベクトルではなく、生のベクトルのリストを返すべきか。
名前付き引数。
文字列: 省略可能。  照合に使用する実際のロケールか、有効な最も具体的なロケール。
名前付き引数については'詳細'を参照のこと。
文字列: 省略可能。  照合に使用する実際のロケールか、有効な最も具体的なロケール。
任意のRオブジェクト。
(doubleおよびcompplexの非NA)数値を== ('equal')を使って比較するか、ビット単位の比較で比較するかを示す論理。  後者（デフォルトではない）は、0と+0を区別する。
single.NA=FALSEはビットパターンを区別する。
これは現在、S4オブジェクトのスロットにも適用される。  attrib.as.set=FALSEとするのは厳しすぎるかもしれません。
クロージャを比較する際に、バイトコードを無視すべきかどうかを示す論理。
クロージャを比較する際に、それらの環境を無視すべきかどうかを示す論理。
クロージャを比較する際に "srcref "属性を無視するかどうかを示す論理。
Rオブジェクト。
NAではない長さ1の論理ベクトル。1より大きい長さの条件は、現在、警告とともに受け付けられますが、最初の要素だけが使用されます。  環境変数_R_CHECK_LENGTH_1_CONDITION_がtrueに設定されると、代わりにエラーが通知されます。  その他の型は、可能であれば論理型に強制され、クラスは無視される。
変数の構文名。
ベクトル（リストと式を含む）、ペアリスト、NULLを評価する式。  因子値は文字ベクトルに強制される。  R4.0.0から、これは長いベクタになる。
形式的な意味での式。  これは単純な式か、いわゆる複合式で、通常は { expr1 ; expr2 } の形式です。
論理モードに強制できるオブジェクト。
testの真要素に対する戻り値。
testの偽要素に対する戻り値。
数値。  入力は必要に応じて再利用される。
数値ベクトル。
数値ベクトル。
数値ベクトル.
数値ベクトル。
おそらく複合モードのオブジェクト。
複合モードのオブジェクト、またはメソッドが定義されているクラスのオブジェクト。
他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
文字列または名前空間環境。
論理。
環境。
名前空間環境。
文字ベクトル。
オプションの文字ベクトル。
名前空間環境。
ロードするパッケージ/名前空間を指定する文字列。
ジェネリックと並列なパッケージ名のベクトル。
ライブラリを指定する文字ベクトル。
論理。
文字。
文字。
環境。
3列の文字行列。
文字。
任意のオブジェクト
文字引数。
メソッド・テーブル名。
symbol: 名前空間の名前。
特にvarsがない場合に便利。
シリアライズするRオブジェクト。
RオブジェクトをシリアライズするRオブジェクト。
論理。  TRUEまたはNAの場合、ASCII表現が書き込まれ、そうでない場合（デフォルト）はバイナリが使用される。
使用するワークスペース・フォーマットのバージョン。  NULLは現在のデフォルトバージョン(3)を指定します。他にサポートされている値は2のみで、これはR 1.4.0からR 3.5.0までのデフォルトです。
指定されたファイルへの保存に "gzip" 圧縮を使用するかどうかを指定する論理値、 または使用する圧縮の種類を示す "gzip"、"bzip2"、"xz" のいずれかを指定する論理値。  ファイルが接続の場合は無視される。
参照オブジェクトを扱うためのフック関数。
R オブジェクト
valueにはNULLを指定することもできる。
戻り値に影響を与える論理値。
Double値はintegerに強制されます:1以外の長さの引数を与えるとエラーになります。
強制されるかテストされるオブジェクト。
他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
相互作用が計算される因子、またはそれらの因子を与える単一のリスト。
drop が TRUE の場合、未使用の因子レベルは結果から取り除かれます。  既定では、すべての因子レベルが保持されます。
文字列は、構成要素を結合して新しいレベル・ラベルを作成します。
要素連結の順序を字句順にするかどうかを示す論理。
重複する値のない一連の項目（概念的）を含むベクトル（同じモード）。
変換またはシフトされるオブジェクト。
論理：変換対象は1文字列か複数文字か。
シフトするビット数。  正の数は右にシフトし、負の数は左にシフトする。
結果の型。
変換されるオブジェクト。
論理：変換対象は1文字の文字列か、複数の文字か。
論理：サロゲートペアの解釈を試みるべきか？  (「詳細」を参照。) multiple = FALSE の場合のみサポートされる。
inverse.rle()ではクラス "rle "のオブジェクト。
ここでは無視されます。
seeprint.default;印刷の有効桁数。
印字される各行の前に付加される文字列。
任意のRオブジェクト。
条件オブジェクト。
呼び出し式。
条件オブジェクト。
評価される式
戻り値または終了前に評価される式
関数
文字列
文字列
リスタートを指定する文字列
restartオブジェクト。
オブジェクトを指定します。
条件クラスの名前を指定する文字列。
追加の引数。
条件オブジェクト。
呼び出し式。
条件オブジェクト。
評価される式。
リターンまたは終了する前に評価される式。
関数
文字列
文字列
リスタートを指定する文字列
restartオブジェクト。
オブジェクトを指定します。
条件クラスの名前を指定する文字列。
追加の引数。
配列を埋めるデータを与えるベクトル（リストまたは式ベクトルを含む）。  原子クラスでないオブジェクトはas.vectorで強制されます。
作成される配列のdim属性で、各次元の最大インデックスを指定する長さ1以上の整数ベクトルです。
これは、各次元に1つの要素を持つリストでなければなりません（無視されます）。NULLか、その次元のdimで指定された長さの文字ベクトルです。  リストには名前を付けることができ、リスト名は次元の名前として使用されます。  リストが次元数より短い場合は、必要な長さまでNULLで拡張されます。
Rオブジェクト。
メソッドまたはメソッドから渡される追加の引数。
テストされるオブジェクト。
呼び出される関数を指定する、空でない文字列。
呼び出しの一部となる引数。
任意のRオブジェクト。
Double値はintegerに強制されます。1以外の長さの引数を与えるとエラーになります。
強制またはテストされるオブジェクト。
他のメソッドに渡される、または他のメソッドから渡される引数。
数値。  入力は必要に応じて再利用される。
数値ベクトル。
数値ベクトル。
数値ベクトル。
数値ベクトル。
おそらく複合モードのオブジェクト。
複合モードのオブジェクト、またはメソッドが定義されているクラスのオブジェクト。
他のメソッドに渡される、または他のメソッドから渡される引数。
任意のRオブジェクト。
NULL またはデータフレームのローネームを示す文字ベクトル。  欠損値は許されない。
論理値。TRUE の場合、行名の設定と列名の変換(構文名: seemake.names)はオプションです。  R の基底パッケージ as.data.frame() のすべてのメソッドでは、基本的に data.frame(*, check.names = !optional) の themeaning と同様に、列名の処理にのみ optional を使用することに注意してください。
メソッドに渡す、またはメソッドから渡す追加引数。
論理: 文字ベクトルを係数に変換するか？
256文字（数値の場合はcut.names）以上の列名を短縮する（最後の6文字を" ... "に置き換える）かどうかを指定します。
(オプション) 列名の文字ベクトル。
空の列名、すなわち""が（data.frame内で）修正されるべきかどうかを示す論理。
data.frame()呼び出しに渡される。
(matrixxの)行名が無効な場合にどうするかを示す論理。  行名が無効な場合、デフォルトの TRUE は make.names(*, unique=TRUE) を呼び出します。make.names=NA は "自動的な "行名を使用し、FALSE は無効な行名に対するエラーを通知します。
2倍値は整数に強制されます。1以外の長さの引数を与えるとエラーになります。
強制されるかテストされるオブジェクト。
他のメソッドに渡される、あるいは他のメソッドから渡されるさらなる引数。
(同じモードの)ベクトルで、重複する値のない一連の項目(概念的に)を含みます。
関数、数式、またはデフォルトのNULL。
関数に関連付ける環境
任意のRオブジェクト。
TRUE の場合、環境はハッシュ・テーブルを使用します。
作成された環境のエンクロージャとして使用される環境。
環境
ハッシュ環境の初期サイズを指定する整数。  size が NA またはゼロの場合、内部のデフォルト値が使用されます。  この引数は、hash が FALSE の場合は無視されます。
式：as.expression：メソッドに渡される引数。
任意のRオブジェクト。
データのベクトルで、通常は少数の異なる値を取ります。
xが取り得るユニークな値（文字列）を表すオプションのベクトル。  デフォルトは、as.character(x)が取る値の一意な集合をxの昇順にソートしたものです。
ラベルの重複値は、x の異なる値を同じ因子レベルに対応付けるために使用できます。
レベルのセットを形成するときに除外される値のベクトル。  これは、x と同じレベル・セットを持つ因子であるか、または文字である必要があります。
レベルを (指定された順序で) 並べ替えられたものと見なすかどうかを決定する論理フラグ。
詳細'を参照。
(in ordered(.)) ：ordered 自体を除いた上記のいずれか。
NA レベルが使用される場合のみ、すなわち if any(is.na(x))。
テストするRオブジェクト： デフォルトのメソッドはatomicvectorを扱う。
Rオブジェクト。
テストされるRオブジェクト：デフォルトのメソッドはアトミックベクトルを扱う。
double 値は integer に強制されます：1 以外の長さの引数を与えるとエラーになります。
強制されるかテストされるオブジェクト。
他のメソッドに渡される、あるいは他のメソッドから渡されるさらなる引数。
テストされるオブジェクト。
テストされるオブジェクト。
強制またはテストされるオブジェクト。
すべての値をコピーするか、(デフォルトでは) 名前がドットで始まらないものだけをコピーするかを示す論理。
結果のリストの名前をソートするかどうかを示す論理。  これは多少コストがかかるが、環境の比較には有用であることに注意。
動的共有オブジェクトとしても知られるDLLへのパス名を示す文字列。  (用語の意味については「詳細」を参照のこと)。
DLL 内のシンボルを DLL 間で共有せず、独自のローカル・テーブルに格納するか、グローバル・シンボル・テーブルに追加するかを制御する論理値。  この効果があるかどうかはシステムに依存する。
すべてのシンボルを、ライブラリがロードされた直後に解決（および再配置）するか、使用されるまで延期するかを制御する論理。  この制御は、開発者がライブラリが完全で、必要なシンボルがすべてあるかどうかをテストしたり、ユーザーが不足シンボルを無視したりするのに便利です。  この効果があるかどうかはシステムに依存する。
将来の拡張のためのその他の引数。
シンボル名を示す文字列。
与えられた場合、この引数で与えられた DLL (および従来の拡張子、'.so'、'.sl'、'.dll'...) の名前のみを検索する。  これはパッケージの安全性を高めるためのもので、この引数を使用することで、他のパッケージが外部シンボルを上書きできないようにすることができる。  これは、.C、.Call、.Fortran、.External関数と同じように使用されます。
検索するシンボルのタイプ: 任意(""、デフォルト)、"Fortran"、"Call"、または "External"。
2倍値は整数に強制されます。1以外の長さの引数を指定するとエラーになります。
強制またはテストされるオブジェクト。
他のメソッドに渡される、あるいは他のメソッドから渡されるさらなる引数。
オプションのデータ・ベクトル（リストまたは式ベクトルを含む）。  原子クラスでないRオブジェクトは、as.vectorによって強制され、すべての属性は破棄されます。
必要な行数。
希望する列数。
論理値。FALSE（デフォルト）の場合、行列は列で埋められ、そうでない場合は行で埋められます。
行列の dimnames 属性：NULL または、行名と列名をそれぞれ指定する長さ 2 のリスト。  空のリストはNULLとして扱われ、長さ1のリストは行名として扱われます。  リストには名前を付けることができ，そのリスト名は次元の名前として使用されます．
R オブジェクト。
メソッドに渡される、またはメソッドから渡される追加引数。
結果の行列が（NULL ではなく）文字列名を持つかどうかを示す論理値．  デフォルトの NA は，データフレームに 'automatic' 行名がある場合，または 0 行データフレームの場合に NULLrownames を使用します．
is.naとanyNAのデフォルトメソッドは、アトミックベクトル、リスト、ペアリスト、NULLを扱います。
論理：anyNAはリストやペアリストに再帰的に適用すべきか？
xで使用する適切なインデックス・ベクトル。
is.naとanyNAのデフォルトメソッドは、アトミックベクトル、リスト、ペアリスト、NULLを扱う。
論理：anyNAはリストやペアリストに再帰的に適用されるべきか？
xに適したインデックス・ベクトル。
package_versionの場合は、R.versionで得られるRversionオブジェクトでもよい。
無効な数値バージョンはエラーになる (デフォルト) かどうかを示す論理。
date-timeクラスの1つから出力または要約されるオブジェクト。
format.POSIXctに渡されます。
出力するエントリの最大数を指定します。  デフォルトでは、NULL の場合、getOption("max.print") が使用されます。
計算の有効桁数: 最も重要でない時間単位を正確に表すのに十分な桁数でなければならない。
他のメソッドから、あるいは他のメソッドに渡す引数。
日時オブジェクト
日時オブジェクトまたは文字ベクトル。  (文字ベクトルはas.POSIXct.によって変換される)
数値ベクトル（秒単位）
==, !=, <, <=, >=のいずれか。
is.naとanyNAのデフォルト・メソッドは、アトミック・ベクトル、リスト、ペアリスト、NULLを扱う。
論理： anyNAはリストやペアリストに再帰的に適用されるべきか？
xで使用する適切なインデックス・ベクトル。
is.naとanyNAのデフォルトメソッドは、アトミックベクトル、リスト、ペアリスト、NULLを扱う。
論理：anyNAはリストやペアリストに再帰的に適用されるべきか？
xで使用するのに適したインデックス・ベクトル。
データのベクトルで、通常は少数の異なる値をとる。
xが取り得るユニークな値(文字列)のオプションのベクトル。  デフォルトは、as.character(x)が取る値の一意な集合をxの昇順にソートしたものである。
ラベルの重複値は、x の異なる値を同じ因子レベルに対応付けるために使用できます。
レベルのセットを形成するときに除外される値のベクトル。  これは、x と同じレベル・セットを持つ因子であるか、または文字である必要があります。
レベルを (指定された順序で) 並べ替えられたものと見なすかどうかを決定する論理フラグ。
詳細'を参照。
(in ordered(.)) ：ordered 自体を除いた上記のいずれか。
NA レベルが使用される場合のみ、つまり if any(is.na(x))の場合のみ追加されます。
package_version の場合は、R.version で得られる Rversion オブジェクト。
無効な数値バージョンはエラーになる (デフォルト) かどうかを示す論理。
強制またはテストされるオブジェクト。
テストされるRオブジェクト: デフォルトのメソッドはatomicvectorを扱います。
テストまたは強制されるオブジェクト。
無視される。
Double 値は integer に強制されます。1 以外の長さの引数を指定するとエラーになります。
強制またはテストされるオブジェクト。
他のメソッドに渡される、あるいは他のメソッドから渡されるさらなる引数。
package_version の場合は、R.version で取得した Rversion オブジェクト。
無効な数値バージョンはエラーになる (デフォルト) かどうかを示す論理。
double 値は integer に強制されます: 1 以外の長さの引数を与えるとエラーになります。
強制されるかテストされるオブジェクト。
他のメソッドに渡される、あるいは他のメソッドから渡される引数。
date-time または date オブジェクト。
主に "POSIXlt" オブジェクトで使用されます。
文字列。  結果の単位。  省略可能。
文字列。  単位と同様だが、省略はできない。
時間間隔を指定する文字列または数値。
timの書式を指定する文字。  デフォルトはロケール固有の時間フォーマットです。
クラス "difftime "を継承したオブジェクト。
他のメソッドに渡す引数。
Double 値は integer に強制されます。1 以外の長さの引数を指定するとエラーになります。
強制またはテストされるオブジェクト。
他のメソッドに渡される、あるいは他のメソッドから渡される引数。
テストされるオブジェクト。
データのベクトルで、通常は少数の値を取ります。
xが取り得るユニークな値（文字列）を表すオプションのベクトル。  デフォルトは、as.character(x)が取る値の一意な集合を、xの昇順にソートしたものです。
ラベルの重複値は、x の異なる値を同じ因子レベルに対応付けるために使用できます。
レベルのセットを形成するときに除外される値のベクトル。  これは、x と同じレベル・セットを持つ因子であるか、または文字である必要があります。
レベルを (指定された順序で) 並べ替えられたものと見なすかどうかを決定する論理フラグ。
詳細'を参照。
(in ordered(.)) ：ordered 自体を除いた上記のいずれか。
NA レベルが使用される場合のみ、つまり if any(is.na(x)) の場合のみ追加されます。
package_version の場合は、R.version で取得した Rversion オブジェクト。
無効な数値バージョンはエラーになる (デフォルト) かどうかを示す論理。
オブジェクト。
強制またはテストされるオブジェクト。
すべての値をコピーするか、(デフォルトでは)名前がドットで始まらないものだけをコピーするかを示す論理。
結果のリストの名前をソートするかどうかを示す論理。  これは多少コストがかかるが、環境の比較には有用であることに注意。
Rオブジェクト。
QR分解が計算される数値行列または複素行列。  論理行列は数値に強制される。
LAPACKが偽でxが実数の場合にのみ使用される。
qr によって計算されるタイプの QR 分解。
方程式の右辺のベクトルまたは行列。
QR 分解または（qr.solve のみ）矩形行列。
実効ランク．
論理。  実数 x の場合, true なら LAPACK を使用し, それ以外なら LINPACK (デフォルト) を使用する.
他のメソッドに渡される、または他のメソッドから渡されるその他の引数
希望する長さ。
強制されるオブジェクト。
テストされるオブジェクト。
テストされるオブジェクト。
強制またはテストされるオブジェクト。
因子（文字列を含む）として解釈できる1つ以上のオブジェクト、またはそのように解釈できる要素を持つリスト（またはデータフレーム）。  (as.tableの場合は、特定のメソッドに渡される引数。as.data.frameの場合は、未使用。)
...のすべての要素について削除するレベル。  NAを含まず、useNAが指定されていない場合は、useNA = "ifany "を意味する。  非因子引数に対する解釈は'詳細'を参照。
NA値を表に含めるかどうか。  省略可能。
結果の次元に付ける名前（dimnames 名）。
デフォルトの dnn の構築方法を制御します。  詳細'を参照。
任意のRオブジェクト、またはas.data.frameメソッドのクラス "table "を継承したオブジェクト。as.data.frame.table(x,*)は、配列の "リシェーピング "のために、テーブルでないxに対して明示的に呼び出されることに注意してください。
データフレームの行名を指定する文字ベクトル。
表エントリの列に使用される名前（通常は counts）。
論理: 分類因子は、因子（デフォルト）として返すべきか、文字ベクトルとして返すべきか？
provideDimnames に渡されます。
クラスまたは数値、複素数、文字、論理、生のベクトルを持つ R オブジェクト。
論理ベクトル。  チェックの前に欠損値を取り除くべきか？
厳密に増加する値に対してチェックを行うかどうかを示す論理。
アトミック・モード、"リスト"、"式"、または（vectorを除く）"any "を指定する文字列。  現在のところ、is.vector()はmodeに任意の型(seetypeof)を指定することができ、modeが "any "でない場合、is.vector(x, mode)はtypeof(x) == modeとほぼ同じです。
は、必要な長さを指定する非負整数です。  長いベクトル、すなわち length > .Machine$integer.maxの場合、"double "型でなければなりません。  長さが 1 以外の引数を指定するとエラーになります。
R オブジェクト。
R オブジェクト。
valueにはNULLを指定することもできます。
戻り値に影響を与える論理値: '詳細'を参照。
論理: true の場合、閉じた接続と標準の接続を含むすべての接続が表示されます。  false の場合は、ユーザが作成したオープンな接続のみが含まれます。
integer: showConnections で指定したテーブルの行番号。
接続。
文字列またはネームスペース環境。
論理。
環境。
名前空間環境。
文字ベクトル。
オプションの文字ベクトル。
名前空間環境。
ロードするパッケージ/名前空間を指定する文字列。
ジェネリックと並列なパッケージ名のベクトル。
ライブラリを指定する文字ベクトル。
論理。
文字。
文字。
環境。
3列の文字行列。
文字。
任意のオブジェクト
文字引数。
メソッド・テーブル名。
symbol: 名前空間の名前。
特にvarsがない場合に便利。
解釈されるR関数。
ブラウザ入力時に取得できるテキスト文字列。
ブラウザが入力されたときに取得できる条件。
オプションのメソッド・シグネチャ。指定された場合、メソッドはジェネリックではなくデバッグされます。
サポート関数debuggingStateの呼び出しは、デバッグがグローバルにオンになっていればTRUEを返し、そうでなければFALSEを返します。  引数にどちらか一方の値を指定すると、状態が設定される。  デバッグ状態がFALSEの場合、デバッグ動作は何も起こりません（しかし、関数内の明示的なブラウザ呼び出しは動作し続けます）。
生ベクトル、論理ベクトル、'数値に似た'ベクトル（double型（numericクラス）、 integer型、complex型）、またはメソッドが書かれたオブジェクト。
文字列。  接続の説明: '詳細' を参照。
文字列。  接続のオープン方法の説明 (最初にオープンする場合)。  指定できる値についてはセクション 'モード' を参照。
論理値。  ブロック」のセクションを参照。
想定するエンコーディングの名前。  エンコーディング」のセクションを参照。
論理値。  trueを指定すると、'raw'インターフェイスが使用され、 通常のファイルではない引数、例えばキャラクタデバイスに適している。  これは、テキストモードでの読み込みのためにオープンする際に、 圧縮ファイルであるかどうかのチェックを抑制し、「ファイル」がシーク可能でない可能性があることを表明する。
文字列、部分的に一致するtoc("default", "internal", "wininet", "libcurl"):「詳細」を参照。
HTTPrequests で使用する HTTP ヘッダの名前付き文字ベクトル。  非 HTTP URL では無視されます。  HTTPUserAgent オプション (options を参照) で指定した User-Agent ヘッダが自動的に最初のヘッダとして使用されます。
0-9 の整数。  書き込み時に適用する圧縮の量を、なしから最大まで指定します。  forxzfile には負の値を指定することもできます: '圧縮'のセクションを参照ください。
数値: この接続で使用するタイムアウト (秒単位)。  OSによっては、非常に大きな値をゼロとして扱うことがあるので注意すること。ただし、POSIX標準では31日までの値をサポートしている。
オプションの文字ベクトル。現在のところ、TCPソケットでは "no-delay "のみがサポートされている。
zip ファイル内のファイル名。
文字列。  ポートのホスト名。
整数。  TCP ポート番号。
論理。  ソケットをクライアントにするかサーバーにするか。
接続をリッスンするサーバソケット。
コネクション。
文字列。  現在は無視される。
文字列。  空文字列または "read "または "write"、部分一致可。
他のメソッドに渡される、または他のメソッドから渡される引数。
文字列または名前空間環境。
論理。
環境。
名前空間環境。
文字ベクトル。
オプションの文字ベクトル。
名前空間環境。
ロードするパッケージ/名前空間を指定する文字列。
ジェネリックと並列なパッケージ名のベクトル。
ライブラリを指定する文字ベクトル。
論理。
文字。
文字。
環境。
3列の文字行列。
文字。
任意のオブジェクト
文字引数。
メソッド・テーブル名。
symbol: 名前空間の名前。
文字ベクトルで、インポートから除外するシンボルを指定する。
文字列または名前空間オブジェクト。
アタッチする位置を指定する整数。
NULL または、パッケージの依存オブジェクト .Depends に記録する依存関係の文字ベクトル。
ロードするパッケージ/名前空間を指定する文字列。
ライブラリ検索パスを指定する文字ベクトル。
パッケージのインストール時以外は無視されます。
パッケージのインストール中以外は無視されます。
trueの場合、コードをロードした直後に停止する。
NULLまたはバージョン指定（opとversionで構成されるリスト）。
logical: 進捗メッセージとエラーメッセージを抑制するか。
文字列またはパッケージの「名前」、as.symbolを参照。
文字ベクトル。
loadNamespaceに渡すその他の引数。
日を指定する数値。
1日内の時刻を指定する数値。端数秒が許される。
変換に使用するタイムゾーン指定。""は現在のタイムゾーン、"GMT "はUTC。  無効な値はUTCとして扱われ、プラットフォームによっては警告が表示される。
日を指定する数値。
端数秒は許される。
変換に使用するタイムゾーン指定。""は現在のタイムゾーン、"GMT "はUTC。  無効な値は最も一般的にはUTCとして扱われ、プラットフォームによっては警告が表示される。
文字列。  詳細」を参照。
文字列。  接続のオープン方法(最初にオープンする場合)。  指定できる値についてはセクション「モード」を参照のこと。
論理値。  ブロック」のセクションを参照。
想定するエンコーディングの名前。  エンコーディング」のセクションを参照。
論理値。  trueを指定すると、'raw'インターフェイスが使用され、 通常のファイルではない引数、例えばキャラクタデバイスなどに適している。  これは、テキストモードでの読み込みのためにオープンする際に、 圧縮ファイルであるかどうかのチェックを抑制し、「ファイル」がシーク可能でない可能性があることを表明する。
文字列、部分的に一致するtoc("default", "internal", "wininet", "libcurl"):「詳細」を参照。
HTTPrequests で使用する HTTP ヘッダの名前付き文字ベクトル。  非 HTTP URL では無視されます。  HTTPUserAgent オプション (options を参照) で指定した User-Agent ヘッダが自動的に最初のヘッダとして使用されます。
0-9 の整数。  書き込み時に適用する圧縮の量を、なしから最大まで指定します。  forxzfile には負の値を指定することもできます: '圧縮'のセクションを参照ください。
数値: この接続で使用するタイムアウト (秒単位)。  OSによっては、非常に大きな値をゼロとして扱うことがあるので注意すること。ただし、POSIX標準では31日までの値をサポートしている。
オプションの文字ベクトル。現在のところ、TCPソケットでは "no-delay "のみがサポートされている。
zip ファイル内のファイル名。
文字列。  ポートのホスト名。
整数。  TCP ポート番号。
論理。  ソケットをクライアントにするかサーバーにするか。
接続をリッスンするサーバソケット。
コネクション。
文字列。  現在は無視される。
文字列。  空文字列または "read "または "write"、部分一致可。
他のメソッドに渡される、または他のメソッドから渡される引数。
条件オブジェクト。
呼び出し式。
条件オブジェクト。
評価される式。
リターンまたは終了する前に評価される式。
関数
文字列
文字列
リスタートを指定する文字列
restartオブジェクト。
オブジェクトを指定します。
条件クラスの名前を指定する文字列。
追加の引数。
任意のRオブジェクト。
オプション、論理：変換の方向を示す。
オプション、論理：S3への変換が完了したかどうか。  通常は必要ないが、詳細セクションを参照。
a 接続。
数値。  ファイル位置（originで指定されたオリジンからの相対位置）、またはNA。
文字列。  空または "read "または "write"、部分一致可。
文字列。  start"、"current"、"end "のいずれか。
他のメソッドに渡される、または他のメソッドから渡される引数。
任意の R オブジェクト; matrix メソッド用の行列。
数値スカラー >= 0. 小さい差は考慮されない。
isSymmetric.matrix() は，この許容誤差で「明らかに」非対称なケースを高速に検出するために，最初と最後の数行を「事前テスト」します．  長さを 0 に設定すると、事前テストはスキップされます。
matrixメソッドは、これらの引数をall.equalに渡します。  対称性チェックのためにオブジェクトの行名と列名が異なってもよい場合は、 check.attributes = FALSE を使用する！
任意の R オブジェクト; matrix メソッド用の行列。
より小さい差は考慮されない。
isSymmetric.matrix()'pre-tests'最初と最後の数行をテストし，この許容誤差で'明らかに'非対称なケースを高速に検出する。  長さを 0 に設定すると、事前テストはスキップされます。
matrixメソッドは、これらの引数をall.equalに渡します。  対称性チェックのためにオブジェクトの行名と列名が異なってもよい場合は、check.attributes = FALSE を使用する！
生ベクトル、論理ベクトル、'数値に似た'ベクトル（つまり、double型（numericクラス）、integer型、complex型）、またはメソッドが書かれたオブジェクト。
ジッターを加える数値ベクトル。
数値。
もし正の値であれば、量として使用される（下記参照）。そうでなければ、 = 0の場合、デフォルトはfactor * z/50となる。デフォルト（NULL）： factor * d/5 （dはx値間の最小の差を表す）。
クラス "POSIXt" または "Date" を継承したオブジェクト。
論理ベクトル(再利用可能)。  名前は省略可能か？
クラス "POSIXt "または "Date "を継承したlength-oneオブジェクト。
他のメソッドの引数。
クラス "POSIXt" または "Date" を継承するオブジェクト。
論理ベクトル（再利用可能）。  名前は省略可能か？
クラス "POSIXt" または "Date" を継承する長さ 1 のオブジェクト。
他のメソッドの引数。
クラス "POSIXt" または "Date" を継承するオブジェクト。
論理ベクトル（再利用可能）。  名前は省略可能か？
クラス "POSIXt" または "Date" を継承する長さ 1 のオブジェクト。
他のメソッドの引数。
行列、qr の結果、または "lm" クラスを継承したクラスからのフィット。
論理的。  結果は正確か？
条件数を計算する行列ノルムを指定する文字列。  rcondの場合、デフォルトは "O "で、One-normまたは1-normを意味する。  (現在のところ唯一の)他の可能な値は、無限大ノルムを意味する "I "である。
使用する方法を指定する部分一致文字列。"qr "は主にバックコンパチビリティのためのデフォルトである。
論理。  true の場合, 使用される行列は z の低三角部分のみである.
論理。  true で z が複素数でない場合、LINPACK ルーチン dtrco() が呼び出される。
ノルムが "2 "でない場合は、特に LINPACK。
行列、qr の結果、または "lm "を継承するクラスからの適合。
論理的でなければならない。  結果は正確か？
条件数を計算する行列ノルムを指定する文字列。  rcondの場合、デフォルトは "O "で、One-normまたは1-normを意味する。  (現在のところ唯一の)他の可能な値は、無限大ノルムを意味する "I "である。
使用する方法を指定する部分一致文字列。"qr "は主にバックコンパチビリティのためのデフォルトである。
論理。  true の場合, 使用される行列は z の低三角部分のみである.
論理。  true で z が複素数でない場合、LINPACK ルーチン dtrco() が呼び出される。
ノルムが "2 "でない場合は、特に LINPACK。
行列、qr の結果、または "lm "を継承するクラスからの適合。
論理的でなければならない。  結果は正確か？
条件数を計算する行列ノルムを指定する文字列。  rcondの場合、デフォルトは "O "で、One-normまたは1-normを意味する。  (現在のところ唯一の)他の可能な値は、無限大ノルムを意味する "I "である。
使用する方法を指定する部分一致文字列。"qr "は主にバックコンパチビリティのためのデフォルトである。
論理。  true の場合, 使用される行列は z の低三角部分のみである.
論理。  true で z が複素数でない場合、LINPACK ルーチン dtrco() が呼び出される。
ノルムが "2 "でない場合は、特に LINPACK。
行列、qr の結果、または "lm "を継承するクラスからの適合。
論理的でなければならない。  結果は正確か？
条件数を計算する行列ノルムを指定する文字列。  rcondの場合、デフォルトは "O "で、One-normまたは1-normを意味する。  (現在のところ唯一の)他の可能な値は、無限大ノルムを意味する "I "である。
使用する方法を指定する部分一致文字列。"qr "は主にバックコンパチビリティのためのデフォルトである。
論理。  true の場合, 使用される行列は z の低三角部分のみである.
論理。  true で z が複素数でない場合、LINPACK ルーチン dtrco() が呼び出される。
ノルムが "2 "でない場合は、特に LINPACK。
ベクトルまたは配列。
ベクトルまたは配列。
引用符で囲んだ文字列でもよい。
XとYのdimnameの積であるdimnameを指定する。
FUNに渡すオプション引数。
SVD分解を計算する数値行列または複素行列。  論理行列は数値に強制される。
計算される左特異ベクトルの数．0 から n = nrow(x) の間でなければならない．
これは，0 から p = ncol(x) までの値でなければならない．
論理値。  エラー。
任意のRオブジェクト：関数は汎用的です。
他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
任意のRオブジェクト：関数は汎用です。
他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
ベクトル（アトミックまたはリスト）または式オブジェクト。  その他のオブジェクト（クラス化されたオブジェクトを含む）はbase::as.listによって強制されます。
Xの各要素に適用される関数。  や%*%のような関数の場合、関数名はバッククォートか引用符で囲む必要があります。
FUNのオプション引数。
可能であれば、結果をベクトル、行列、高次元配列に簡略化するか。  デフォルト値のTRUEは、適切であればベクトルまたは行列を返すが、simplify = "array "の場合、結果はFUN(X[[i]])の結果より1つ上の "rank"(=length(dim(.)))の配列になる。
論理; TRUEでXが文字の場合、Xが既に名前を持っていない限り、Xを結果の名前として使用する。  この引数は ... に続くので、その名前は省略できない。
(一般化された)ベクトル; FUNからの戻り値のテンプレート。  詳細'を参照。
整数: 複製数。
繰り返し評価する式（言語オブジェクト、通常はコール）。
リスト。通常は lapply() から返される。
この2つのケースはそれぞれ、sapply(*, simplify = "array") またはsimplify = TRUEに対応する。
拡張子なしのデータベースへのファイルパス。
オブジェクトがロードされる環境。
オプションの関数で、オブジェクト名の文字ベクトルに対して呼び出すと、論理ベクトルを返します。
引数1つ、環境。
拡張子なしのデータベースへのファイルパス。
オブジェクトがロードされる環境。
オブジェクト名の文字ベクトルに対して呼び出されると、論理ベクトルを返すオプションの関数。
1つの引数、環境の関数。
.row_names_info(): "row.names "属性を持つ、通常はデータフレーム。.gt、.gtn:通常はS3またはS4クラス。
.getRequiredPackages():パッケージの'DESCRIPTION'ファイルへのフルパス。.lazyLoadDBfetch():lazyloadデータベースへのファイルパス。
lazyLoadDBfetch():検索するRlibraryツリーの位置を表す文字ベクトル、またはNULL。  デフォルトの値 NULL は、.libPaths() で現在認識されているすべてのライブラリに対応します。
論理的に指定します。  パッケージが見つからない場合に、警告やエラーを出さないようにするか?
論理的。  Imports フィールドを処理すべきか?
論理: メッセージを出力すべきか。
packageDescription2" クラスの 'DESCRIPTION' ファイル。
cpu-vendor-os "形式のプラットフォーム文字列。
保存またはロードする画像ファイルの名前。
整数。  現在 type = 0 は内部の "row.names" 属性 (NULL の可能性もある) を返し、 type = 2 はその属性が意味する行数を返し、 type = 1 は '自動' 行名の負の符号を返します。
整数。  行数。
package:MASS" のような文字列。
lazyloadデータベースのオブジェクト名。
論理: データベースの値が圧縮されているか。
ロードフック: unserializeを参照。
長さ1の整数ベクトル。
インデックス。
論理値。
Rオブジェクト。
クラスに入れるクラスレスオブジェクト。
オプションのタイムゾーン。
デフォルト・クラスを含むクラスのオプションの文字ベクトル。
difftime を参照してください。
ドット名でないバージョンに渡される引数。
整数。
同じオブジェクトの文字ベクトル。
マスクされるパッケージを示す文字列。
マスクが bypkg で起こるか、(by = FALSE) pkg から起こるかを示す論理値。
非負の数値ベクトル。
数値ベクトル。
整数ベクトル。
非負の数値ベクトル。
数値ベクトル。
整数ベクトル。
Rオブジェクト。  置換の場合は、ベクトルまたは因子。
非負の整数またはdouble（切り捨てられる）。
date-timeクラスの1つから出力または要約されるオブジェクト。
format.POSIXctに渡されます。
出力するエントリの最大数を指定します。  デフォルトでは、NULL の場合、getOption("max.print") が使用されます。
計算の有効桁数: 最も重要でない時間単位を正確に表すのに十分な桁数でなければならない。
他のメソッドから、あるいは他のメソッドに渡す引数。
日時オブジェクト
日時オブジェクトまたは文字ベクトル。  (文字ベクトルはas.POSIXct.によって変換される)
数値ベクトル（秒単位）
==, !=, <, <=, >=のいずれか。
Rオブジェクト。  置き換えの場合は、ベクトルまたは因子。
非負の整数またはdouble（切り捨てられる）。
要約または印刷される日付オブジェクト。
計算の有効桁数。
数値またはNULLで、表示するエントリの最大数を指定します。  デフォルトでは、NULL の場合は getOption("max.print") が使用されます。
他のメソッドから、または他のメソッドに渡す引数。
date-time または date オブジェクト。
主に "POSIXlt "オブジェクトで変換に使用されるオプションのタイムゾーン指定。
文字列。  結果の単位。  省略可能。
文字列。  単位と同様だが、省略はできない。
時間間隔を指定する文字列または数値。
timの書式を指定する文字。  デフォルトはロケール固有の時間フォーマットです。
クラス "difftime "を継承したオブジェクト。
他のメソッドに渡す引数。
Rオブジェクト。  置き換えの場合は、ベクトルまたは因子。
非負の整数またはdouble（切り捨てられる）。
date-timeクラスの1つから出力または要約されるオブジェクト。
format.POSIXctに渡されます。
出力するエントリの最大数を指定します。  デフォルトでは、NULL の場合、getOption("max.print") が使用されます。
計算の有効桁数: 最も重要でない時間単位を正確に表すのに十分な桁数でなければならない。
他のメソッドから、あるいは他のメソッドに渡す引数。
日時オブジェクト
日時オブジェクトまたは文字ベクトル。  (文字ベクトルはas.POSIXct.によって変換される)
数値ベクトル（秒単位）
==, !=, <, <=, >=のいずれか。
date-timeクラスの1つから出力または要約されるオブジェクト。
format.POSIXctに渡されます。
出力するエントリの最大数を指定します。  デフォルトでは、NULL の場合、getOption("max.print") が使用されます。
計算の有効桁数: 最も重要でない時間単位を正確に表すのに十分な桁数でなければならない。
他のメソッドから、あるいは他のメソッドに渡す引数。
日時オブジェクト
日時オブジェクトまたは文字ベクトル。  (文字ベクトルはas.POSIXct.によって変換される)
数値ベクトル（秒単位）
のいずれか。
式やアトミックベクタのようなリスト。
結果がxから名前を継承するかどうかを示す論理。
オブジェクト、例えば因子。
デフォルト・メソッドでは、NULL または文字ベクトル。  factor メソッドの場合、x のレベル数以上の長さを持つ文字列のベクトル、またはレベルの名前の付け方を指定する名前付きリスト。
オブジェクト、例えば係数。
levels(x) の有効な値。default メソッドでは、NULL または文字ベクトル。  factor メソッドの場合は、x のレベル数以上の長さを持つ文字列のベクトル、 またはレベルの名前の変更方法を指定する名前付きリスト。
オブジェクト、例えば係数。
levels(x) の有効な値。default メソッドでは、NULL または文字ベクトル。  factor メソッドの場合は、x のレベル数以上の長さを持つ文字列のベクトル、 またはレベルの名前の変更方法を指定する名前付きリスト。
オブジェクト、例えば係数。
levels(x) の有効な値。default メソッドでは、NULL または文字ベクトル。  factorメソッドの場合、xのレベル数以上の長さを持つ文字列のベクトル、 またはレベルの名前の付け方を指定する名前付きリスト。
非負の数値ベクトル。
数値ベクトル。
整数ベクトル。
非負数値ベクトル。
数値ベクトル。
整数ベクトル。
パッケージ名。character.only が FALSE (デフォルト) または TRUE のどちらであるかに応じて、名前またはリテラル文字列、または文字列で指定します。
ロードされた名前空間をアタッチする検索リストの位置。  search()で指定された現在の検索リスト上の位置の名前にすることもできます。
検索する Rlibrary ツリーの位置を表す文字ベクトル、または NULL。  デフォルト値の NULL は、現在 libPaths() で認識されているすべてのライブラリに対応します。
packageまたはhelpを文字列とみなすかどうかを示す論理。
論理値。  TRUE の場合は FALSE、TRUE の場合は TRUE を返す。
論理値。  TRUE の場合、新しいパッケージのアタッチによる競合について警告が表示されます。  衝突とは、関数をマスクする関数、または非関数をマスクする非関数のことです。conflicts.policy オプションで FALSE を指定しない限り、デフォルトは TRUE です。
論理。  TRUE の場合、追加の診断が表示される。
a 論理。  TRUE の場合、パッケージのアタッチを確認するメッセージは表示されず、 パッケージのアタッチに失敗してもエラーや警告は表示されないことが 多い。
パッケージ名を示す文字列。
ストリクト・コンフリクト・チェックが有効になっている場合に、 エラーを通知することなく検索パス上のオブジェクトをマスクできる オブジェクト名の文字ベクトル。
アタッチされたフレームに除外または含めるオブジェクト名の文字ベクトル。libraryまたはrequireの呼び出しでは、これらの引数のうち1つのみを使用することができる。
DESCRIPTION ファイルの Depends 節にリストされている必須パッケージを自動的にアタッチするかどうかを指定する論理。
ロードするDLL(dynamicshared objectまたはlibraryとも呼ばれる)を指定する文字列。
パッケージ名を示す文字ベクトル。
検索するRlibraryツリーの位置を示す文字ベクトル。
DLLがアンロードされる、ロードされたパッケージへのパス。
DLLをロードする前にコンソールにアナウンスを表示するかどうかを示す論理値。  デフォルト値は、systemoptions の verbose エントリから取得されます。
ロードするライブラリを指定するためにファイル名に付加する拡張子 (使用する場合は .を含む)。  このデフォルト値は、オペレーティング・システムに適した値です。
dyn.loadの呼び出しに渡される、一部のライブラリで必要とされる追加の引数で、ライブラリとその依存関係のロード方法を制御します。
パッケージによってロードされるDLLに対応する "DLLInfo "オブジェクトのリスト。  見つからないこともあります。
ロードするDLL（dynamicsharedオブジェクトまたはライブラリとも呼ばれる）を指定する文字列。
パッケージ名を表す文字ベクトル。
検索するRlibraryツリーの位置を示す文字ベクトル。
DLLがアンロードされる、ロードされたパッケージへのパス。
DLLをロードする前にコンソールにアナウンスを表示するかどうかを示す論理値。  デフォルト値は、systemoptions の verbose エントリから取得されます。
ロードするライブラリを指定するためにファイル名に付加する拡張子 (使用する場合は .を含む)。  このデフォルト値は、オペレーティング・システムに適した値です。
dyn.loadの呼び出しに渡される、一部のライブラリで必要とされる追加の引数で、ライブラリとその依存関係のロード方法を制御します。
パッケージによってロードされるDLLに対応する "DLLInfo "オブジェクトのリスト。  見つからないこともあります。
オブジェクト。
強制またはテストされるオブジェクト。
すべての値をコピーするか、(デフォルトで) 名前がドットで始まらないものだけをコピーするかを示す論理。
結果のリストの名前をソートするかどうかを示す論理。  これは多少コストがかかるが、環境の比較には有用であることに注意。
フルパス名の文字ベクトル。デフォルトは作業ディレクトリに対応する getwd()。  チルド展開（path.expandを参照）が実行される。  欠落した値は無視されます。  エンコーディングが指定されている要素は、ネイティブ・エンコーディングに変換されます (変換に失敗した場合は、存在しないとみなされます)。
オプションの正規表現。  正規表現にマッチするファイル名のみが返されます。
論理値。  FALSEの場合、可視のファイル名のみが返されます（Unixスタイルの可視性、つまり名前がドットで始まらないファイル）。  TRUE の場合、すべてのファイル名が返される。
論理値。  TRUE の場合、ファイル名の前にディレクトリパスが付加され、 相対ファイルパスが返される。
論理値。  リストをディレクトリに再帰するか?
論理的です。  パターンマッチングで大文字と小文字を区別するか。
論理的。  再帰リストにはサブディレクトリ名を含めるべきか?  (再帰でないリストでは常に含まれます)。
論理的。  . "と".. "の両方を非再帰的リストから除外すべきか。
フルパス名の文字ベクトル。デフォルトは作業ディレクトリに対応する getwd()。  チルド展開（path.expandを参照）が実行されます。  欠落した値は無視されます。  エンコーディングが指定されている要素は、ネイティブ・エンコーディングに変換されます (変換に失敗した場合は、存在しないとみなされます)。
オプションの正規表現。  正規表現にマッチするファイル名のみが返されます。
論理値。  FALSEの場合、可視のファイル名のみが返されます（Unixスタイルの可視性、つまり名前がドットで始まらないファイル）。  TRUE の場合、すべてのファイル名が返される。
論理値。  TRUE の場合、ファイル名の前にディレクトリパスが付加され、 相対ファイルパスが返される。
論理値。  リストをディレクトリに再帰するか?
論理的です。  パターンマッチングで大文字と小文字を区別するか。
論理的。  再帰リストにはサブディレクトリ名を含めるべきか?  (再帰でないリストでは常に含まれます)。
論理的。  . "と". "の両方を非再帰的リストから除外すべきか？
データフレームの変数のリスト。
データフレームの行数を指定する整数、またはNULL（デフォルト）。  必要であれば、リストの要素は行数と同じ長さに複製されます。
ここで names(x) は空("")の要素を含んではならない。
environmentまたはNULL。
(envir = NULLの場合): 親フレーム、別名閉じた環境。
(envir = NULLの場合): 作成される環境がハッシュを使用するかどうかを示す論理。
(envir = NULL, hash = TRUEの場合): ハッシュサイズ。
(読み取り可能なバイナリモードの)接続、またはロードするファイル名を示す文字列(チルダ展開が行われた場合)。
データをロードする環境。
ロード中に項目名を表示するか。
文字列または名前空間オブジェクト。
アタッチする位置を指定する整数。
NULL または依存関係の文字ベクトルで、パッケージの .Depends オブジェクトに記録します。
ロードするパッケージ/名前空間を指定する文字列。
ライブラリ検索パスを指定する文字ベクトル。
パッケージのインストール時以外は無視されます。
パッケージのインストール中以外は無視されます。
trueの場合、コードをロードした直後に停止する。
NULLまたはバージョン指定（opとversionで構成されるリスト）。
logical: 進捗メッセージとエラーメッセージを抑制するか。
文字列またはパッケージの「名前」、as.symbolを参照。
文字ベクトル。
loadNamespaceに渡すその他の引数。
文字列または名前空間環境。
論理。
環境。
名前空間環境。
文字ベクトル。
オプションの文字ベクトル。
名前空間環境。
ロードするパッケージ/名前空間を指定する文字列。
ジェネリックと並列なパッケージ名のベクトル。
ライブラリを指定する文字ベクトル。
論理。
文字。
文字。
環境。
3列の文字行列。
文字。
任意のオブジェクト
文字引数。
メソッド・テーブル名。
symbol: 名前空間の名前。
文字ベクトルで、インポートから除外するシンボルを指定する。
文字列または名前空間オブジェクト。
アタッチする位置を指定する整数。
NULL または、パッケージの依存オブジェクト .Depends に記録する依存関係の文字ベクトル。
ロードするパッケージ/名前空間を指定する文字列。
ライブラリ検索パスを指定する文字ベクトル。
パッケージのインストール時以外は無視されます。
パッケージのインストール中以外は無視されます。
trueの場合、コードをロードした直後に停止する。
NULLまたはバージョン指定（opとversionで構成されるリスト）。
logical: 進捗メッセージとエラーメッセージを抑制するか。
文字列またはパッケージの「名前」、as.symbolを参照。
文字ベクトル。
loadNamespaceに渡すその他の引数。
評価されるオブジェクト。  詳細'を参照のこと。
expr が評価される環境。  NULL、リスト、データフレーム、ペアリスト、sys.callに指定された整数でもかまいません。
envirが(ペア)リストまたはデータフレームである場合に関連します。 囲み、つまりRがenvirにないオブジェクトを探す場所を指定します。  これはNULL（ベースパッケージの環境、baseenv()と解釈されます）または環境です。
遡る親世代数
環境。
バインディングをロックするかどうかを指定する論理。
名前オブジェクトまたは文字列。
0 個または 1 個の引数をとる関数。
環境。
バインディングをロックするかどうかを指定する論理。
名前オブジェクトまたは文字列。
0個または1個の引数をとる関数。
数値または複素数ベクトル。
正数または複素数: 対数計算の基数。  デフォルトはe=exp(1)。
数値または複素数ベクトル。
正数または複素数: 対数計算の基準となる底。  デフォルトは e=exp(1) です。
数値または複素数ベクトル.
正数または複素数: 対数計算の基準となる底。  デフォルトは e=exp(1) です。
数値または複素数ベクトル.
正数または複素数: 対数計算の基準となる底。  デフォルトは e=exp(1) です。
数値または複素数ベクトル.
正数または複素数: 対数計算の基準となる底。  デフォルトは e=exp(1) です。
Double 値は integer に強制されます： 1 以外の長さの引数を与えるとエラーになります。
強制またはテストされるオブジェクト。
他のメソッドに渡される、または他のメソッドから渡される引数。
互換性のため、上記を満たさない場合は、まず as.matrix(x) が呼び出されます。
論理的です。  対角を含めるべきか？
利用可能なオブジェクトを一覧表示する際に使用する環境を指定します。  nameと呼ばれるのは互換性のためですが、実際にはこの引数はどのような形式でも環境を指定することができます。
nameに代わる引数で、検索リスト内の位置として環境を指定します。  ほとんどの場合、背面互換性のために存在する。
name に代わる引数で、環境を指定します。  主に下位互換性のために存在する。
論理値。  TRUE の場合、すべてのオブジェクト名が返されます。  FALSEの場合、.で始まる名前は省略されます。
オプションの正規表現。  glob2rxを使用して、ワイルドカード・パターンを正規表現に変換することができる。
結果の文字をアルファベット順にソートするかどうかを示す論理。  これはls()の一部であり、ほとんどの時間がかかることに注意。
構文的に有効な名前に強制される文字ベクトル。  これは、必要であればcharacterに強制される。
TRUE の場合、結果の要素は一意である。  TRUE の場合、結果の要素は一意である。
論理的です。  1.9.0より前のRとの互換性のため。
文字ベクトル
重複名とシーケンス番号の区切りに使用される文字列。
環境。
バインディングをロックするかどうかを指定する論理。
名前オブジェクトまたは文字列。
0個または1個の引数をとる関数。
適切なアリティの関数（Reduceはバイナリ、Filter、Find、Positionは単項式、Mapはk個の引数で呼び出される場合はk-ary）。  Negateの場合は任意の述語関数。
ベクトル。
xの要素と同じ種類のRオブジェクト。
左から右（デフォルト）へ進むか、右から左へ進むかを示す論理。
連続する reducecombination を累積するかどうかを示す論理。  デフォルトでは、最後の組み合わせのみが使用される。
マッチしない」（述語を満たす要素がない）場合に返される値。
ベクトル。
適用する関数。match.funで見つかる。
ベクトル化する引数（厳密に正の長さのベクトルまたはリスト、あるいはすべてゼロの長さ）。  詳細'も参照してください。
ベクトル化する引数のリストまたはペアリスト。
FUNする他の引数のリスト。
結果をベクトル、行列、高次元配列に縮小しようとする。
最初の...引数の名前を使用するか、それが名前のない文字ベクトルであれば、そのベクトルを名前として使用する。
配列
例えば、行列の場合、1は行、2は列を表し、c(1, 2)は行と列を表す。
配列
例えば行列の場合, 1は行, 2は列, c(1,2)は行と列を表す.
行と列の数。
vector または NULL: マッチされる値。
長いベクトルはサポートされていません。
マッチしなかった場合に返される値。  integer に強制されることに注意してください。
マッチできない値のベクトル。  このベクトル内の値にマッチするx内の値には、マッチ値が代入されます。  歴史的な理由により、FALSEはNULLと等価です。
文字ベクトル（several.okがTRUEでない限り長さは1）またはNULL。
候補値の文字ベクトル
argが複数の要素を持つことを許可するかどうかを指定する論理。
デフォルトではmatch.callが呼び出される関数です。  詳細を参照してください。
callで生成される、definitionで指定された関数への評価されない呼び出し。
論理的です。  callで...にマッチする引数を、...引数として含めるべきか、残すべきか。
もしあれば、callの...が取得される環境。
関数としてマッチする項目： 関数、シンボル、文字列。  詳細'を参照のこと。
論理: 関数でないオブジェクトを検索するかどうかを制御する。
オブジェクト。
メソッドに渡される更なる引数。
論理: 欠落値を削除するかどうか。
要約または印刷される日付オブジェクト。
計算の有効桁数。
数値またはNULLで、表示するエントリの最大数を指定します。  デフォルトでは、NULL の場合は getOption("max.print") が使用されます。
他のメソッドから、または他のメソッドに渡す引数。
date-time または date オブジェクト。
主に "POSIXlt "オブジェクトで変換に使用されるオプションのタイムゾーン指定。
文字列。  結果の単位。  省略可能。
文字列。  単位と同様だが、省略はできない。
時間間隔を指定する文字列または数値。
timの書式を指定する文字。  デフォルトはロケール固有の時間フォーマットです。
クラス "difftime "を継承したオブジェクト。
他のメソッドに渡す引数。
データのベクトルで、通常は少数の異なる値を取ります。
xが取りうるユニークな値（文字列）を表すオプションのベクトル。  デフォルトは、as.character(x)が取る値の一意な集合を、xの昇順にソートしたものです。
ラベルの重複値は、x の異なる値を同じ因子レベルに対応付けるために使用できます。
レベルのセットを形成するときに除外される値のベクトル。  これは、x と同じレベル・セットを持つ因子であるか、または文字である必要があります。
レベルを (指定された順序で) 並べ替えられたものと見なすかどうかを決定する論理フラグ。
詳細'を参照。
(in ordered(.)) ：ordered 自体を除いた上記のいずれか。
NAレベルが使用される場合のみ、すなわちif any(is.na(x))の場合のみNAレベルを追加する。
date-timeクラスの1つから、印刷または要約されるオブジェクト。
format.POSIXctに渡されます。
出力するエントリの最大数を指定します。  デフォルトでは、NULL の場合、getOption("max.print") が使用されます。
計算の有効桁数: 最も重要でない時間単位を正確に表すのに十分な桁数でなければならない。
他のメソッドから、あるいは他のメソッドに渡す引数。
日時オブジェクト
日時オブジェクトまたは文字ベクトル。  (文字ベクトルはas.POSIXct.によって変換される)
数値ベクトル（秒単位）
==, !=, <, <=, >=のいずれか。
オプションのデータベクトル（リストや式ベクトルを含む）。  原子クラスでないRオブジェクトは、as.vectorによって強制され、すべての属性は破棄されます。
必要な行数。
希望する列数。
論理値。FALSE（デフォルト）の場合、行列は列で埋められ、そうでない場合は行で埋められます。
行列の dimnames 属性：NULL または、行名と列名をそれぞれ指定する長さ 2 のリスト。  空のリストはNULLとして扱われ、長さ1のリストは行名として扱われます。  リストには名前を付けることができ，そのリスト名は次元の名前として使用されます．
R オブジェクト。
メソッドに渡される、またはメソッドから渡される追加引数。
結果の行列が（NULL ではなく）文字列名を持つかどうかを示す論理値．  デフォルトの NA は，データ・フレームに 'automatic' row.names がある場合，または 0 行データ・フレームの場合に NULLrownames を使用します．
数値引数または文字引数（注を参照）。
欠損値を削除するかどうかを示す論理値。
数値行列
同値をどのように扱うかを指定する文字列。デフォルトは "random"。
Rオブジェクト。  現在、数値/論理ベクトル、日付、日付-時刻、時間間隔オブジェクト用のメソッドがあります。  複素数ベクトルはtrim = 0でのみ使用可能。
平均を計算する前に x の両端からトリムされるオブザベーションの割合 (0 から 0.5).
計算を進める前に NA 値を取り除くべきかどうかを示す論理値。
他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
要約または印刷される Date オブジェクト。
計算の有効桁数。
数値またはNULLで、表示するエントリの最大数を指定します。  デフォルトでは、NULL の場合は getOption("max.print") が使用されます。
他のメソッドから渡される、または他のメソッドに渡されるさらなる引数。
Rオブジェクト。  現在、数値/論理ベクトル、日付、日時、時間間隔オブジェクト用のメソッドがあります。  複素数ベクトルはtrim = 0でのみ使用可能。
平均が計算される前に x の各端からトリムされるオブザベーションの割合 (0 から 0.5).
計算を進める前に NA 値を取り除くべきかどうかを示す論理値。
他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
date-time または date オブジェクト。
主に "POSIXlt "オブジェクトで変換に使用されるオプションのタイムゾーン指定。
文字列。  結果の単位。  省略可能。
文字列。  単位と同様だが、省略はできない。
時間間隔を指定する文字列または数値。
timの書式を指定する文字。  デフォルトはロケール固有の時間フォーマットです。
クラス "difftime "を継承したオブジェクト。
他のメソッドに渡す引数。
date-timeクラスのいずれかを継承するオブジェクト。
format.POSIXctに渡されます。
出力するエントリの最大数を指定します。  デフォルトでは、NULL の場合、getOption("max.print") が使用されます。
計算の有効桁数: 最も重要でない時間単位を正確に表すのに十分な桁数でなければならない。
他のメソッドから、あるいは他のメソッドに渡す引数。
日時オブジェクト
日時オブジェクトまたは文字ベクトル。  (文字ベクトルはas.POSIXct.によって変換される)
数値ベクトル（秒単位）
==, !=, <, <=, >=のいずれか。
date-timeクラスの1つから出力または要約されるオブジェクト。
format.POSIXctに渡されます。
出力するエントリの最大数を指定します。  デフォルトでは、NULL の場合、getOption("max.print") が使用されます。
計算の有効桁数: 最も重要でない時間単位を正確に表すのに十分な桁数でなければならない。
他のメソッドから、あるいは他のメソッドに渡す引数。
日時オブジェクト
日時オブジェクトまたは文字ベクトル。  (文字ベクトルはas.POSIXct.によって変換される)
数値ベクトル（秒単位）
==, !=, <, <=, >=のいずれか。
数値; Mb単位の新しいサイズ制限。
数値; 新しい最大ノード番号。
数値; Mb単位の新しいサイズ制限。
数値; 新しい最大ノード番号。
生のベクトル。  memCompress の場合、文字ベクトルは、" \n "で区切られた文字列を持つ生ベクトルに変換される。  タイプ "gzip "と "xz "は、R 4.0.0からlongrawベクトルをサポートする。
文字列、圧縮のタイプ。  デフォルトは選択肢の1番目。
論理: 結果を文字列に変換するか。  注意: 文字列には2^31 - 1バイトの制限があるため、大きな入力には生のベクトルを使用する必要があります。
生のベクトル。  memCompressの場合、文字ベクトルは"˶"で区切られた文字列の生ベクトルに変換されます。  タイプ "gzip "と "xz "は、R 4.0.0からlongrawベクトルをサポートする。
文字列、圧縮のタイプ。  デフォルトは選択肢の1番目。
論理: 結果を文字列に変換するか。  注意: 文字列には2^31 - 1バイトの制限があるため、大きな入力には生のベクトルを使用する必要があります。
データフレーム、または強制的に1つにするオブジェクト。
詳細'を参照のこと。
all = L は、all.x = L と all.y = L の省略記法で、L は TRUE または FALSE のいずれかである。
論理; TRUEの場合、出力に余分な行が追加され、xの各行でyに一致する行がない場合に1行ずつ追加される。  デフォルトはFALSEであり、xとyの両方のデータを持つ行のみが出力に含まれる。
logical; all.xに類似。
論理。  結果をbycolumnsでソートするか？
結果の中でマージに使用されない(byなどに現れる)列の名前を一意にするために使用される接尾辞を指定する長さ2の文字ベクトル。
接尾辞は、結果内の列名の重複を避けるために、より多くの場合に付加されることを示す論理的なものである。  これはRバージョン3.5.0以前では暗黙的にfalseであった。
マッチできない値。  マッチしない値。  これは1つの列のマージに使用されることを意図しており、これらはその列の比較不可能な値です。
メソッドに渡される、あるいはメソッドから渡される引数。
データフレーム、または強制的に1つにするオブジェクト。
詳細' を参照。
論理; all = L は、all.x = L と all.y = L の省略記法で、L は TRUE または FALSE です。
論理; TRUEの場合、出力に余分な行が追加され、xの各行でyに一致する行がない場合に1行ずつ追加される。  デフォルトはFALSEであり、xとyの両方のデータを持つ行のみが出力に含まれる。
logical; all.xに類似。
論理。  結果をbycolumnsでソートするか？
結果の中でマージに使用されない(byなどに現れる)列の名前を一意にするために使用される接尾辞を指定する長さ2の文字ベクトル。
接尾辞は、結果内の列名の重複を避けるために、より多くの場合に付加されることを示す論理的なものである。  これはRバージョン3.5.0以前では暗黙的にfalseであった。
マッチできない値。  マッチしない値。  これは1つの列のマージに使用されることを意図しており、これらはその列の比較不可能な値です。
メソッドに渡される、あるいはメソッドから渡される引数。
データフレーム、または強制的に1つにするオブジェクト。
詳細' を参照。
論理; all = L は、all.x = L と all.y = L の省略記法で、L は TRUE または FALSE です。
論理; TRUEの場合、出力に余分な行が追加され、xの各行でyに一致する行がない場合に1行ずつ追加される。  デフォルトはFALSEであり、xとyの両方のデータを持つ行のみが出力に含まれる。
logical; all.xに類似。
論理。  結果をbycolumnsでソートするか？
結果の中でマージに使用されない(byなどに現れる)列の名前を一意にするために使用される接尾辞を指定する長さ2の文字ベクトル。
接尾辞は、結果内の列名の重複を避けるために、より多くの場合に付加されることを示す論理的なものである。  これはRバージョン3.5.0以前では暗黙的にfalseであった。
マッチできない値。  マッチしない値。  これは1つの列のマージに使用されることを意図しており、これらはその列の比較不可能な値です。
メソッドに渡される、あるいはメソッドから渡される引数。
文字に強制できる0個以上のオブジェクト(セパレータなしで一緒に貼り付けられる)、または(formessageのみ)単一の条件オブジェクト。
gettext を参照。  NAの場合、メッセージは翻訳されません。
logical:文字列として与えられたメッセージは改行されるべきか？
評価する式。
どのクラスのメッセージを抑制するかを示す。
mgetの場合は、オブジェクト名の文字ベクトル。
オブジェクトを探す場所 (「詳細」を参照)。
探しているオブジェクトのモードまたはタイプ: 'Details' セクションを参照。
環境を囲むフレームを検索するか。
mgetの場合、項目が見つからない場合に使用する値のリスト: 必要であればリストに強制されます。dynGetの場合、任意のRオブジェクト、例えばstop()の呼び出し。
検索する最小フレーム番号を指定する整数。
数値引数または文字引数（注を参照）。
欠損値を削除すべきかどうかを示す論理。
正式な引数。
数値。  入力は必要に応じて再利用される。
数値ベクトル。
数値ベクトル。
数値ベクトル.
数値ベクトル。
おそらく複合モードのオブジェクト。
複合モードのオブジェクト、またはメソッドが定義されているクラスのオブジェクト。
他のメソッドに渡される、または他のメソッドから渡される引数。
任意のRオブジェクト。
オブジェクトの希望するモードまたは'記憶モード'(タイプ)を示す文字列。
任意の R オブジェクト。
オブジェクトの希望するモードまたは'記憶モード'(型)を示す文字列。
クラス "POSIXt "または "Date "を継承したオブジェクト。
論理ベクトル（おそらくリサイクル）。  名前は省略可能か？
クラス "POSIXt "または "Date "を継承した長さ1のオブジェクト。
他のメソッドの引数。
クラス "POSIXt" または "Date" を継承するオブジェクト。
論理ベクトル（再利用可能）。  名前は省略可能か？
クラス "POSIXt" または "Date" を継承する長さ 1 のオブジェクト。
他のメソッドの引数。
クラス "POSIXt" または "Date" を継承するオブジェクト。
論理ベクトル（再利用可能）。  名前は省略可能か？
クラス "POSIXt" または "Date" を継承する長さ 1 のオブジェクト。
他のメソッドの引数。
任意のRオブジェクト
適切な属性の名前付きリスト、またはNULL。
R オブジェクト。
x と同じ長さまでの文字ベクトル、または NULL。
date-timeクラスの1つから出力または要約されるオブジェクト。
format.POSIXctに渡されます。
出力するエントリの最大数を指定します。  デフォルトでは、NULL の場合、getOption("max.print") が使用されます。
計算の有効桁数: 最も重要でない時間単位を正確に表すのに十分な桁数でなければならない。
他のメソッドから、あるいは他のメソッドに渡す引数。
日時オブジェクト
日時オブジェクトまたは文字ベクトル。  (文字ベクトルはas.POSIXct.によって変換される)
数値ベクトル（秒単位）
==, !=, <, <=, >=のいずれか。
Rオブジェクト。
xと同じ長さまでの文字ベクトル、またはNULL。
date-timeクラスの1つから出力または要約されるオブジェクト。
format.POSIXctに渡されます。
出力するエントリの最大数を指定します。  デフォルトでは、NULL の場合、getOption("max.print") が使用されます。
計算の有効桁数: 最も重要でない時間単位を正確に表すのに十分な桁数でなければならない。
他のメソッドから、あるいは他のメソッドに渡す引数。
日時オブジェクト
日時オブジェクトまたは文字ベクトル。  (文字ベクトルはas.POSIXct.によって変換される)
数値ベクトル（秒単位）
==, !=, <, <=, >=のいずれか。
文字列または名前空間環境。
論理。
環境。
名前空間環境。
文字ベクトル。
オプションの文字ベクトル。
名前空間環境。
ロードするパッケージ/名前空間を指定する文字列。
ジェネリックと並列なパッケージ名のベクトル。
ライブラリを指定する文字ベクトル。
論理。
文字。
文字。
環境。
3列の文字行列。
文字。
任意のオブジェクト
文字引数。
メソッド・テーブル名。
symbol: 名前空間の名前。
文字ベクトルで、インポートから除外するシンボルを指定します。
文字列またはネームスペース環境。
論理。
環境。
名前空間環境。
文字ベクトル。
オプションの文字ベクトル。
名前空間環境。
ロードするパッケージ/名前空間を指定する文字列。
ジェネリックと並列なパッケージ名のベクトル。
ライブラリを指定する文字ベクトル。
論理。
文字。
文字。
環境。
3列の文字行列。
文字。
任意のオブジェクト
文字引数。
メソッド・テーブル名。
symbol: 名前空間の名前。
文字ベクトルで、インポートから除外するシンボルを指定します。
文字列またはネームスペース環境。
論理。
環境。
名前空間環境。
文字ベクトル。
オプションの文字ベクトル。
名前空間環境。
ロードするパッケージ/名前空間を指定する文字列。
ジェネリックと並列なパッケージ名のベクトル。
ライブラリを指定する文字ベクトル。
論理。
文字。
文字。
環境。
3列の文字行列。
文字。
任意のオブジェクト
文字引数。
メソッド・テーブル名。
symbol: 名前空間の名前。
文字ベクトルで、インポートから除外するシンボルを指定します。
文字列またはネームスペース環境。
論理。
環境。
名前空間環境。
文字ベクトル。
オプションの文字ベクトル。
名前空間環境。
ロードするパッケージ/名前空間を指定する文字列。
ジェネリックと並列なパッケージ名のベクトル。
ライブラリを指定する文字ベクトル。
論理。
文字。
文字。
環境。
3列の文字行列。
文字。
任意のオブジェクト
文字引数。
メソッド・テーブル名。
symbol: 名前空間の名前。
文字ベクトルで、インポートから除外するシンボルを指定します。
文字列またはネームスペース環境。
論理。
環境。
名前空間環境。
文字ベクトル。
オプションの文字ベクトル。
名前空間環境。
ロードするパッケージ/名前空間を指定する文字列。
ジェネリックと並列なパッケージ名のベクトル。
ライブラリを指定する文字ベクトル。
論理。
文字。
文字。
環境。
3列の文字行列。
文字。
任意のオブジェクト
文字引数。
メソッド・テーブル名。
symbol: 名前空間の名前。
インポートから除外するシンボルを指定する文字ベクトル。
文字ベクトル、または文字ベクトルに強制されるベクトル。  係数を指定するとエラーになります。
文字列: c("bytes", "chars", "width")のいずれかに部分的にマッチします。  詳細'を参照のこと。
論理: 無効なマルチバイト文字列や "bytes "エンコード文字列に対しては、(エラーをスローするのではなく) NAを返すべきか?
論理: xがNAの場合、NAを返すべきか?  falseの場合、nchar()は2を返す。これは、文字列が出力に書き出されるときに使用される印刷文字数であり、nzchar()はTRUEだからである。  nchar()のデフォルトであるNAは、typeが "width "でない限り、keepNA = TRUEを使用することを意味する。
ベクトル、配列、データ・フレーム、または NULL。
ベクトル、配列、データフレーム、または NULL。
適切なアリティの関数（Reduceはバイナリ、Filter、Find、Positionは単項式、Mapはk個の引数で呼び出される場合はk-ary）。  Negateの場合は任意の述語関数。
ベクトル。
xの要素と同じ種類のRオブジェクト。
左から右（デフォルト）へ進むか、右から左へ進むかを示す論理。
連続する reducecombination を累積するかどうかを示す論理。  デフォルトでは、最後の組み合わせのみが使用される。
マッチしない」（述語を満たす要素がない）場合に返される値。
ベクトル。
関数、式、またはデフォルトのNULL。
関数に関連付ける環境
任意のRオブジェクト。
TRUE の場合、環境はハッシュテーブルを使用します。
作成された環境のエンクロージャとして使用される環境。
環境
ハッシュ環境の初期サイズを指定する整数。  size が NA またはゼロの場合、内部のデフォルト値が使用されます。  この引数は、hash が FALSE の場合は無視されます。
1より大きい長さの条件は、現在のところ警告とともに受け入れられるが、最初の要素だけが使用される。  環境変数_R_CHECK_LENGTH_1_CONDITION_がtrueに設定されると、代わりにエラーが通知されます。  その他の型は、可能であれば論理型に強制され、クラスは無視される。
変数の構文名。
ベクトル（リストと式を含む）、ペアリスト、NULLを評価する式。  因子値は文字ベクトルに強制される。  R4.0.0から、これは長いベクタになる。
形式的な意味での式。  通常は { expr1 ; expr2 } のような形式です。
関数を指定する文字列（組み込み演算子ではない）。  UseMethodでは必須。
UseMethod: ディスパッチされるメソッドを決定するクラスを持つオブジェクト。  デフォルトは、関数の最初の引数です。
次のメソッドに渡される更なる引数。
1つ以上の文字ベクトル。
変換の'ドメイン'。
非負の整数。
n = 1の場合に英語で使用されるメッセージ。
n = 0, 2, 3, ...のときに英語で使われるメッセージ。
ドメインの翻訳されたメッセー ジカタログを見つけるディレクトリ。
オブジェクト。
Rオブジェクト（通常は文字列のベクトル）。
print.default()で使用され、文字列を右揃えにするかどうかを示す。
noquote "クラスのオブジェクト。
printなどの次のメソッドに渡されるオプション。
汎用c関数との互換性のため。
Matrixなどのパッケージでは、より多くのnorm()メソッドが定義されていることに注意。
計算される行列ノルムの型を指定する文字列．"O"、"o "または "1 "は1ノルム（最大絶対列和）、"I "または "i "は無限大ノルム（最大絶対行和）、"F "または "f "はフロベニウスノルム（ベクトルとして扱われるxのユークリッドノルム）を指定します；"M "または "m "はxの全要素の最大モジュラスを指定し、"2 "はxの最大の特異値(svd)である "スペクトル "または2ノルムを指定する。デフォルトは "O "である。  type[1]の最初の文字だけが使用される。
ファイルパスの文字ベクトル。
Windowsで使用されるセパレータ - それ以外では無視される。  c("/", "\") のいずれかでなければならない。
論理: TRUE の場合、結果を決定できない場合はエラーとなり、NA の場合は警告となる。
ベクトル、配列、データ・フレーム、または NULL。
ベクトル、配列、データフレーム、または NULL。
logical: true の場合、閉じた接続と標準の接続を含むすべての接続が表示されます。  false の場合は、ユーザが作成したオープンな接続のみが含まれます。
整数: showConnections で指定したテーブルの行番号。
コネクション。
double 値は integer に強制されます。1 以外の長さの引数を指定するとエラーになります。
強制されるかテストされるオブジェクト。
他のメソッドに渡される、あるいは他のメソッドから渡されるさらなる引数。
package_version の場合は、R.version で取得した Rversion オブジェクト。
無効な数値バージョンはエラーになる (デフォルト) かどうかを示す論理。
変換またはシフトされるオブジェクト。
論理: 変換対象は1文字の文字列なのか、複数の文字なのか。
シフトするビット数。  正の数は右にシフトし、負の数は左にシフトする。
結果の型。
変換またはシフトされるオブジェクト。
論理：変換対象は1文字の文字列か、複数の文字か。
シフトするビット数。  正の数は右にシフトし、負の数は左にシフトします。
結果の型。
文字ベクトル、または文字ベクトルに強制されるベクトル。  係数を与えるとエラーになる。
文字列：c("bytes", "chars", "width")のいずれかに部分的にマッチする。  詳細'を参照のこと。
論理: 無効なマルチバイト文字列や "bytes "エンコード文字列に対しては、(エラーをスローするのではなく) NAを返すべきか?
論理: xがNAの場合、NAを返すべきか?  falseの場合、nchar()は2を返す。これは、文字列が出力に書き出されるときに使用される印刷文字数であり、nzchar()はTRUEだからである。  nchar()の既定値であるNAは、typeが "width "でない限り、keepNA = TRUEを使用することを意味する。
使用可能なオブジェクトを一覧表示する際にどの環境を使用するか。  nameと呼ばれるのは互換性のためであるが、実際にはこの引数は任意の形式で環境を指定することができる。
nameに代わる引数で、検索リスト内の位置として環境を指定します。  ほとんどの場合、背面互換性のために存在する。
name に代わる引数で、環境を指定します。  ほとんどの場合、バックコンパチビリティのために存在します。
論理値。  TRUE の場合、すべてのオブジェクト名が返されます。  FALSEの場合、.で始まる名前は省略されます。
オプションの正規表現。  glob2rxを使用して、ワイルドカード・パターンを正規表現に変換することができる。
結果の文字をアルファベット順にソートするかどうかを示す論理。  これはls()の一部であり、ほとんどの時間がかかることに注意。
R オブジェクト
valueにはNULLを指定することもできる。
戻り値に影響を与える論理値: '詳細'を参照。
Rオブジェクト
valuecにはNULLを指定することもできる。
戻り値に影響を与える論理: '詳細'を参照。
logical: defunct: 無視され、偽の値に対しては警告が表示される。
使用するタイムゾーンデータベース: デフォルトでは、見つかるまで既知の場所を試します。
実行する式。
TRUEの場合、add exprは前に設定された式の後に実行される（afterがFALSEの場合は前に実行される）。
addがTRUEでafterがFALSEの場合、exprは既に登録されている式の上に追加されます。この結果は、リソースを逆順で解放したり閉じたりするのに便利である。
文字列。  詳細' を参照。
文字列。  接続のオープン方法の説明(最初にオープンする場合)。  指定可能な値については'モード'のセクションを参照のこと。
論理値。  ブロック」のセクションを参照。
想定するエンコーディングの名前。  エンコーディング」のセクションを参照。
論理値。  trueを指定すると、'raw'インターフェイスが使用され、 通常のファイルではない引数、例えばキャラクタデバイスに適している。  これは、テキストモードの読み込みのためにオープンする際に、 圧縮ファイルであるかどうかのチェックを抑制し、「ファイル」がシーク可能でない可能性があることを表明する。
文字列、部分的に一致するtoc("default", "internal", "wininet", "libcurl"):「詳細」を参照。
HTTPrequests で使用する HTTP ヘッダの名前付き文字ベクトル。  非 HTTP URL では無視されます。  HTTPUserAgent オプション (オプション参照) にある User-Agent ヘッダが自動的に最初のヘッダとして使用されます。
0-9 の整数。  書き込み時に適用する圧縮の量を、なしから最大まで指定します。  forxzfile には負の値を指定することもできます: '圧縮'のセクションを参照ください。
数値: この接続で使用するタイムアウト (秒単位)。  OSによっては、非常に大きな値をゼロとして扱うことがあるので注意すること。ただし、POSIX標準では31日までの値をサポートしている。
オプションの文字ベクトル。現在のところ、TCPソケットでは "no-delay "のみがサポートされている。
zip ファイル内のファイル名。
文字列。  ポートのホスト名。
整数。  TCP ポート番号。
論理。  ソケットをクライアントにするかサーバーにするか。
接続をリッスンするサーバソケット。
コネクション。
文字列。  現在は無視される。
文字列。  空文字列または "read "または "write"、部分一致可。
他のメソッドに渡される、または他のメソッドから渡される引数。
文字列。  接続の説明。'詳細' を参照。
文字列。  接続のオープン方法の説明(最初にオープンする場合)。  指定できる値についてはセクション 'モード' を参照。
論理値。  ブロック」のセクションを参照。
想定するエンコーディングの名前。  エンコーディング」のセクションを参照。
論理値。  trueを指定すると、'raw'インターフェイスが使用され、 通常のファイルではない引数、例えばキャラクタデバイスなどに適している。  これは、テキストモードの読み込みのためにオープンする際に、 圧縮ファイルであるかどうかのチェックを抑制し、「ファイル」がシーク可能でない可能性があることを表明する。
文字列、部分的に一致するtoc("default", "internal", "wininet", "libcurl"):「詳細」を参照。
HTTPrequests で使用する HTTP ヘッダの名前付き文字ベクトル。  非 HTTP URL では無視されます。  HTTPUserAgent オプション (オプション参照) にある User-Agent ヘッダが自動的に最初のヘッダとして使用されます。
0-9 の整数。  書き込み時に適用する圧縮の量を、なしから最大まで指定します。  forxzfile には負の値を指定することもできます: '圧縮'のセクションを参照ください。
数値: この接続で使用するタイムアウト (秒単位)。  OSによっては、非常に大きな値をゼロとして扱うことがあるので注意すること。ただし、POSIX標準では31日までの値をサポートしている。
オプションの文字ベクトル。現在のところ、TCPソケットでは "no-delay "のみがサポートされている。
zip ファイル内のファイル名。
文字列。  ポートのホスト名。
整数。  TCP ポート番号。
論理。  ソケットをクライアントにするかサーバーにするか。
接続をリッスンするサーバソケット。
コネクション。
文字列。  現在は無視される。
文字列。  空文字列または "read "または "write"、部分一致可。
他のメソッドに渡される、または他のメソッドから渡される引数。
 ファイル名。
 ファイルの文字エンコーディング。
 文字列を作成する際のエンコーディング： parseのencoding引数を参照。
 ソース行の文字ベクトル。  他のRオブジェクトは文字に強制される。
 ファイルのコピーに使用するタイムスタンプ。
 この srcfilecopy がファイルシステムファイルから取得されたものであることが知られているか？
 srcfile オブジェクト。
 行番号。
 ソースの位置を示す 4 個、6 個、または 8 個の値からなるベクトル。
 適切なクラスのオブジェクト。
 srcref のテキストを取得するために srcfile を読み込むかどうか。
 文字範囲の終わりを示すオプションの 2 番目の srcref オブジェクト。
 メソッドに対する追加の引数。
 ファイル名。
 ファイルの文字エンコーディング。
 文字列を作成する際のエンコーディング： parseのencoding引数を参照してください。
 ソース行の文字ベクトル。  他のRオブジェクトは文字に強制される。
 ファイルのコピーに使用するタイムスタンプ。
 この srcfilecopy がファイルシステムファイルから取得されたものであることが知られているか？
 srcfile オブジェクト。
 行番号。
 ソースの位置を示す 4 個、6 個、または 8 個の値からなるベクトル。
 適切なクラスのオブジェクト。
 srcref のテキストを取得するために srcfile を読み込むかどうか。
 文字範囲の終わりを示すオプションの 2 番目の srcref オブジェクト。
 メソッドに対する追加の引数。
 ファイル名。
 ファイルの文字エンコーディング。
 文字列を作成する際のエンコーディング： parseのencoding引数を参照してください。
 ソース行の文字ベクトル。  他のRオブジェクトは文字に強制される。
 ファイルのコピーに使用するタイムスタンプ。
 この srcfilecopy がファイルシステムファイルから取得されたものであることが知られているか？
 srcfile オブジェクト。
 行番号。
 ソースの位置を示す 4 個、6 個、または 8 個の値からなるベクトル。
 適切なクラスのオブジェクト。
 srcref のテキストを取得するために srcfile を読み込むかどうか。
 文字範囲の終わりを示すオプションの 2 番目の srcref オブジェクト。
 メソッドに対する追加の引数。
オブジェクト。
メソッドに渡されるその他の引数。
論理: 欠落している値を削除するか。
日付オブジェクト
日付オブジェクトまたは文字ベクトル。  (文字ベクトルは as.Date によって変換されます)。
数値ベクトル（日単位）またはクラス "difftime "のオブジェクト。
または "difftime "クラスのオブジェクト。
date-time または date オブジェクト。
主に "POSIXlt "オブジェクトに使用される。
文字列。  変換結果の単位。  省略可能。
文字列。  単位と同様だが、省略はできない。
時間間隔を指定する文字列または数値。
timの書式を指定する文字。  デフォルトはロケール固有の時間フォーマットです。
クラス "difftime "を継承したオブジェクト。
他のメソッドに渡す引数。
データのベクトルで、通常は少数の異なる値を取ります。
xが取りうるユニークな値（文字列）を表すオプションのベクトル。  デフォルトは、as.character(x)が取った値の一意な集合をxの昇順に並べたものです。この集合は、 sort(unique(x))よりも小さく指定できることに注意してください。
ラベルの重複値は、x の異なる値を同じ因子レベルに対応付けるために使用できます。
レベルのセットを形成するときに除外される値のベクトル。  これは、x と同じレベル・セットを持つ因子であるか、または文字である必要があります。
レベルを (指定された順序で) 並べ替えられたものと見なすかどうかを決定する論理フラグ。
詳細'を参照。
(in ordered(.)) ：ordered 自体を除いた上記のいずれか。
NA レベルが使用される場合のみ、つまり if any(is.na(x))の場合のみ追加されます。
package_version の場合は、R.version で得られる Rversion オブジェクト。
無効な数値バージョンはエラーになる (デフォルト) かどうかを示す論理。
データのベクトルで、通常は少数個の値を取ります。
xが取り得るユニークな値（文字列）を表すオプションのベクトル。  デフォルトは、as.character(x)が取った値の一意な集合をxの昇順にソートしたものである。
ラベルの重複値は、x の異なる値を同じ因子レベルに対応付けるために使用できます。
レベルのセットを形成するときに除外される値のベクトル。  これは、x と同じレベル・セットを持つ因子であるか、または文字である必要があります。
レベルを (指定された順序で) 並べ替えられたものと見なすかどうかを決定する論理フラグ。
詳細'を参照。
(in ordered(.)) ：ordered 自体を除いた上記のいずれか。
NAレベルが使用される場合のみ、すなわちif any(is.na(x))の場合のみNAレベルを追加する。
date-timeクラスの1つから、印刷または要約されるオブジェクト。
format.POSIXctに渡されます。
出力するエントリの最大数を指定します。  デフォルトでは、NULL の場合、getOption("max.print") が使用されます。
計算の有効桁数: 最も重要でない時間単位を正確に表すのに十分な桁数でなければならない。
他のメソッドから、あるいは他のメソッドに渡す引数。
日時オブジェクト
日時オブジェクトまたは文字ベクトル。  (文字ベクトルはas.POSIXct.によって変換される)
数値ベクトル（秒単位）
==, !=, <, <=, >=のいずれか。
オプションは、名前付きリストである単一の無名引数を与えることによっても渡すことができる。
オプション名を保持する文字列。
指定されたオプションがオプションリストに設定されていなければ、この値が返される。  こ れに よ っ て、 オプシ ョ ン を取得 し て設定 さ れてい る か ど う か を調べ、 設定 さ れていない と き は別途設定す る こ と が容易にな り ます。
数値、複素数、文字、または論理ベクトルのシーケンスで、すべて同じ長さ、またはクラス化された R オブジェクト。
メソッド "shell "および "quick "の原子ベクトル。  xが非原子のRオブジェクトの場合、デフォルトの "auto "と "radix "メソッドは、order(x,...)が動作する場合に動作します。
部分ソート用のインデックスのベクトル(NULL以外の値は実装されていません)。
を論理的に指定します。  ソート順は増加か減少か？radix "メソッドの場合、これは...の引数の数に等しい長さのベクトルである。その他のメソッドでは、長さは1でなければならない。
TRUEの場合、データの欠損値は最後に置かれ、FALSEの場合、欠損値は最初に置かれる。
使用するメソッド: 部分一致が許される。  デフォルト("auto")は、短い数値ベクトル、整数ベクトル、論理ベクトル、因数に対しては "radix "を意味する。
データのベクトルで、通常は少数の異なる値を取ります。
オプションのベクトルで、x が取り得るユニークな値（文字列）を指定します。  デフォルトは、as.character(x)が取る値の一意な集合をxの昇順にソートしたものである。
ラベルの重複値は、x の異なる値を同じ因子レベルに対応付けるために使用できます。
レベルのセットを形成するときに除外される値のベクトル。  これは、x と同じレベル・セットを持つ因子であるか、または文字である必要があります。
レベルを (指定された順序で) 並べ替えられたものと見なすかどうかを決定する論理フラグ。
詳細'を参照。
(in ordered(.)) ：ordered 自体を除いた上記のいずれか。
NA レベルが使用される場合のみ、すなわち if any(is.na(x)) を追加する。
一般的にはベクトルか配列。
viamatch.funで見つかる外積で使用する関数（特殊なケース "*"を除く）。
FUNに渡されるオプション引数。
package_versionの場合は、R.versionで得られるRversionオブジェクト。
無効な数値バージョンはエラー(デフォルト)になるかどうかを示す論理値。
文字列: フック名
文字列: パッケージ/名前空間名
文字列: パッケージのイベント。  省略可能。
関数または関数のリスト、または action = "replace" の場合は NULL。
実行するアクション。  省略可能。
文字列または名前空間環境。
論理。
環境。
名前空間環境。
文字ベクトル。
オプションの文字ベクトル。
名前空間環境。
ロードするパッケージ/名前空間を指定する文字列。
ジェネリックと並列なパッケージ名のベクトル。
ライブラリを指定する文字ベクトル。
論理。
文字。
文字。
環境。
3列の文字行列。
文字。
任意のオブジェクト
文字引数。
メソッド・テーブル名。
symbol: 名前空間の名前。
文字ベクトル：importから除外するシンボルの名前。
文字ベクトル: パッケージ名。
検索するRlibraryツリーの位置を示す文字ベクトル、またはNULL。  デフォルト値の NULL は、ロードされた名前空間をチェックし、次に .libPaths() で現在既知のすべてのライブラリをチェックすることに対応します。
を使用します。  パッケージが見つからない場合、警告やエラーは出さないのですか?
論理。  TRUE の場合、特にパッケージが複数回見つかった場合に、追加の診断が表示されます。
呼び出し式。
文字に強制できる0個以上のオブジェクト(セパレータなしで一緒に貼り付けられる)、または(formessageのみ)単一の条件オブジェクト。
gettext を参照のこと。  NAの場合、メッセージは翻訳されません。
logical:文字列として与えられたメッセージは改行されるべきか？
評価する式。
文字。どのクラスのメッセージを抑制するかを示す。
変換またはシフトされるオブジェクト。
論理：変換対象は1文字列か複数文字か。
シフトするビット数。  正の数は右にシフトし、負の数は左にシフトする。
結果の型。
オブジェクト。
強制またはテストされるオブジェクト。
すべての値をコピーするか（デフォルト）、名前がドットで始まらないものだけをコピーするかを示す論理。
結果のリストの名前をソートするかどうかを示す論理。  これは多少コストがかかるが、環境の比較には有用であることに注意。
関数、数式、またはデフォルトのNULL。
関数に関連付ける環境
任意のRオブジェクト。
TRUE の場合、環境はハッシュテーブルを使用します。
作成された環境のエンクロージャとして使用される環境。
環境
ハッシュ環境の初期サイズを指定する整数。  size が NA またはゼロの場合、内部のデフォルト値が使用されます。  この引数は、hash が FALSE の場合は無視されます。
関数、数式、またはデフォルトのNULL。
関数に関連付ける環境
任意のRオブジェクト。
TRUE の場合、環境はハッシュテーブルを使用します。
作成された環境のエンクロージャとして使用される環境。
環境
ハッシュ環境の初期サイズを指定する整数。  size が NA またはゼロの場合、内部のデフォルト値が使用されます。  hashがFALSEの場合、この引数は無視されます。
非負の場合はフレーム番号、負の場合は遡るフレーム数。
遡る世代数。  (「詳細」セクションを参照)。
fileが""でテキストがないかNULLの場合、入力はコンソールから取得されます。
integer (または integer に強制される)。  パースする式の最大数。  nがNULLか負かNAの場合、入力はすべて解析される。
文字ベクトル。  解析するテキスト。  要素はファイルの行のように扱われる。  他のRオブジェクトは、可能であればcharacterに強制される。
NULLは、RのプロンプトgetOption("prompt")を使用することを意味します。
NULLはRのプロンプト、getOption("prompt")を使うことを意味する。
NULLの場合は文字ベクトル、asrcfileオブジェクト。  詳細」セクションを参照。
入力文字列に使用するエンコーディング。  この値が "latin1 "または "UTF-8 "の場合、文字列がLatin-1またはUTF-8であることを示すために使用されます。  後者を行うには、接続conの一部またはoptions(encoding=)でエンコーディングを指定します。encoding="latin1 "とencoding="UTF-8 "の引数は、MBCSロケールで実行すると警告とともに無視される。
長さ1の文字ベクトル、すなわち「文字列」。
文字列または名前空間環境。
論理。
環境。
名前空間環境。
文字ベクトル。
オプションの文字ベクトル。
名前空間環境。
ロードするパッケージ/名前空間を指定する文字列。
ジェネリックと並列なパッケージ名のベクトル。
ライブラリを指定する文字ベクトル。
論理。
文字。
文字。
環境。
3列の文字行列。
文字。
任意のオブジェクト
文字引数。
メソッド・テーブル名。
symbol: 名前空間の名前。
特にvarsがない場合に便利。
文字ベクトルに変換される1つ以上のRオブジェクト。
項を区切る文字列。  NotNA_character_。
結果を区切る文字列（オプション）。  NotNA_character_.
sep-phase（collapse-phase、つまりcollapseがNULLでない場合は""となる）の後に0-lengthcharacter引数が0-lengthcharacter(0)を導くかどうかを示す論理。
文字ベクトルに変換される1つ以上のRオブジェクト。
項を区切る文字列。  NotNA_character_。
結果を区切る文字列（オプション）。  NotNA_character_.
sep-phase（collapse-phase、つまりcollapseがNULLでない場合は""となる）の後に0-lengthcharacter引数が0-lengthcharacter(0)を導くかどうかを示す論理。
1つ以上のパス名を含む文字ベクトル。
文字ベクトル: パッケージ名。
検索する Rlibrary ツリーの位置を表す文字ベクトル、または NULL。  デフォルト値の NULL は、ロードされた名前空間をチェックし、次に .libPaths() で現在認識されているすべてのライブラリをチェックします。
を使用します。  パッケージが見つからない場合、警告やエラーは出さないのですか?
論理。  TRUE の場合、特にパッケージが複数回見つかった場合に、追加の診断が表示されます。
呼び出し式。
文字列。  詳細」を参照。
文字列。  接続のオープン方法の説明(最初にオープンする場合)。  指定できる値については「モード」のセクションを参照のこと。
論理値。  ブロック」のセクションを参照。
想定するエンコーディングの名前。  エンコーディング」のセクションを参照。
論理値。  trueを指定すると、'raw'インターフェイスが使用され、 通常のファイルではない引数、例えばキャラクタデバイスなどに適している。  これは、テキストモードでの読み込みのためにオープンする際に 圧縮ファイルであるかどうかのチェックを抑制し、'ファイル'がシーク可能でない可能性があることを表明する。
文字列、部分的に一致するtoc("default", "internal", "wininet", "libcurl"):「詳細」を参照。
HTTPrequests で使用する HTTP ヘッダの名前付き文字ベクトル。  非 HTTP URL では無視されます。  HTTPUserAgent オプション (options を参照) で指定した User-Agent ヘッダが自動的に最初のヘッダとして使用されます。
0-9 の整数。  書き込み時に適用する圧縮の量を、なしから最大まで指定します。  forxzfile には負の値を指定することもできます: '圧縮'のセクションを参照ください。
数値: この接続で使用するタイムアウト (秒単位)。  OSによっては、非常に大きな値をゼロとして扱うことがあるので注意すること。ただし、POSIX標準では31日までの値をサポートしている。
オプションの文字ベクトル。現在のところ、TCPソケットでは "no-delay "のみがサポートされている。
zip ファイル内のファイル名。
文字列。  ポートのホスト名。
整数。  TCP ポート番号。
論理。  ソケットをクライアントにするかサーバーにするか。
接続をリッスンするサーバソケット。
コネクション。
文字列。  現在は無視される。
文字列。  空文字列または "read "または "write"、部分一致可。
他のメソッドに渡される、または他のメソッドから渡される引数。
プロット内の点の座標。あるいは、単一のプロット構造体、関数、またはplotメソッドを持つ任意のRオブジェクトを指定することもできます。
xが適切な構造体である場合はオプション。
多くのメソッドは以下の引数を受け付けます:typ描画されるプロットのタイプ。  可能なタイプは、"p "は点、"l "は線、"b "は両方、"c "は "b "の線部分のみ、"o "は両方「オーバープロット」、"h "は「ヒストグラム」のような(または「高密度」の)縦線、"s "は階段状ステップ、"S "はその他のステップ、type="punkte "は、Scompatibilityのtype="p "と等価である。  plot.factor などのいくつかのメソッドはこれを受け付けないことに注意してください。mainプロットの全体的なタイトル: title.subaプロットのサブタイトル: title.xlabaを参照してください x軸のタイトル: title.ylabaを参照してください y軸のタイトル: title.asptを参照してください y/xのアスペクト比,plot.windowを参照してください。
マッチする値: as.characterによって文字ベクトルに変換されます。  長いベクトルがサポートされます。
マッチする値: 文字ベクトルに変換。  長いベクトルはサポートされていません。
マッチしない位置または複数部分的にマッチする位置で返される値。  整数に強制されることに注意。
テーブルの要素を複数回使用するか？
数値引数または文字引数（注参照）。
欠損値を削除すべきかどうかを示す論理値。
数値引数または文字引数（注参照）。
欠損値を削除すべきかどうかを示す論理。
数値引数または文字引数（注参照）。
欠損値を削除すべきかどうかを示す論理。
数値引数または文字引数（注参照）。
欠損値を削除すべきかどうかを示す論理。
多項式係数を増加順に並べたベクトル。
検索パスの長さである 1 から length(search())、または -1 までの整数。
適切なアリティの関数（Reduceはバイナリ、Filter、Find、Positionは単項式、Mapはk個の引数で呼び出される場合はk-ary）。  Negateの場合は任意の述語関数。
ベクトル。
xの要素と同じ種類のRオブジェクト。
左から右（デフォルト）へ進むか、右から左へ進むかを示す論理。
連続する reducecombination を累積するかどうかを示す論理。  デフォルトでは、最後の組み合わせのみが使用される。
マッチしない」（述語を満たす要素がない）場合に返される値。
ベクトル。
as.numericによってnumericと互換性のあるオブジェクト。
希望する区間数を与える整数。  整数以外の値は切り捨てられる。
最小区間数を与える非負整数。  min.n == 0の場合、pretty(.)は単一の値を返す。
range(x)が非常に小さい場合(通常は0)にデフォルトスケールを縮小する係数(1より小さい)。
区間単位は、bの{1,2,5,10}倍、10のべき乗として決定されます。  high.u.biasの値が大きいほど、単位は大きくなる。
非負の数値乗数。2より5を優先する。  デフォルトと'最適':u5.bias = .5 + 1.5*high.u.bias.
0,1,2}のいずれかの整数コード。0でない場合, 結果の境界がrange(x)の外になるように境界でイプシロン補正が行われます; 小さい場合, eps.correct >= 2の場合のみ補正が行われます.
メソッドのさらなる引数
as.numericによってnumericに保 存可能なオブジェクト。
必要な区間数を与える整数。  整数以外の値は切り捨てられます。
最小区間数を与える非負整数。  min.n == 0の場合、pretty(.)は単一の値を返す。
range(x)が非常に小さい場合(通常は0)、デフォルトのスケールを縮小する係数(1より小さい)。
区間単位は、bの{1,2,5,10}倍、10のべき乗として決定されます。  high.u.biasの値が大きいほど、単位は大きくなる。
非負の数値乗数。2より5を優先する。  デフォルトと'最適':u5.bias = .5 + 1.5*high.u.bias.
0,1,2}のいずれかの整数コード。0でない場合, 結果の境界がrange(x)の外になるように境界でイプシロン補正が行われます; 小さい場合, eps.correct >= 2の場合のみ補正が行われます.
メソッドのさらなる引数
アトミックな数値または文字オブジェクトで、prettyNum()の場合のみ複素数の可能性があり、通常は実数のベクトルです。  任意のクラスは、警告とともに破棄されます。
小数点以下の桁数（format = "f"）または有効桁数（format = "g", = "e" or = "fg"）。デフォルト：整数の場合は2、実数の場合は4。  0未満の場合は、Cのデフォルトの6桁が使用される。  50桁以上指定した場合、format = "f "で通常324桁に制限されない限り、警告とともに50桁が使用される。(使用するOSやコンパイラにもよりますが、15～21桁以下であれば正確です。  この制限は、基礎となるCランタイムのセグメンテーション・フォールトに対する予防措置に過ぎない)。
width=0はwidth=digitsを使用し、width<0はこのフィールドの数値を左詰めにする(flag="-"と等価)ことを意味する。  文字データの場合、これは文字数で解釈される（バイト数でも表示幅でもない）。
は、"d"（整数の場合）、"f"、"e"、"E"、"g"、"G"、"fg"（小数の場合）、または "s"（文字列の場合）に等しい。  デフォルトは、整数の場合は "d"、実数の場合は "g "である。"f "は、通常のxxx.xxxフォーマットで数値を与える。"e "と "E "は、n.ddde+nn orn.dddE+nn（科学的フォーマット）を与える。"g "と "G "は、そうすることでスペースが節約できる場合にのみ、x[i]を科学的フォーマットにし、末尾のゼロと小数点を削除する - ただし、フラグに "#"が含まれている場合は、"g "と "G "フォーマットの末尾のゼロを維持する。"fg"（独自のハイブリッド書式）は、"f "と同じ固定書式を使用しますが、桁数は有効数字の最小桁数となります。  signifとは異なり、これは桁数よりも有効桁数の方が多い大きな数値を表示することに注意してください。  この書式では、flagに "#"が含まれていない限り、末尾のゼロは取り除かれる。
formatCの場合は、Kernighan and Ritchie (1988, page 243)またはC+99標準にあるような書式修飾子を与える文字列である、「最初の文字が符号でない場合、代わりにスペース文字 " " が使用される。"'"プラットフォームとロケールの組み合わせによっては、10進数変換で「千のグループ化」を 有効にする。" I "glibcのバージョンによっては、整数変換でロケールの代替出力桁があれば それを使用する。  これらのフラグは、どのような順番でも複数指定することができる。 その他の文字は、以前は文字書式には影響しなかったが、R 3.4.0以降ではエラーとなる。
「double"（または "real"）、"integer"、または "character"：デフォルト：xの格納モードから決定される。
文字; 空でない場合、小数点(つまり大きい)の前のbig.intervalの小数点の間のマークとして使用されます。
デフォルトは3。
文字; 空でない場合、小数点の後（つまり小さい）、すべてのsmall.interval 小数の間の目印として使用されます。
上記のsmall.markを参照。
小数点を示す文字。
xがcharacterの場合、xで小数点として使用されている文字。
マーク(big.markまたはsmall.mark)が追加された場合に、文字列の幅を可能な限り維持するかどうかを指定する文字列。  デフォルトの "common "は書式に類似した動作に対応し、"individual "はデフォルトのinformatC()に対応する。値は省略可能。
論理値、文字列またはNULLで、ゼロを特別にフォーマットするかどうかを指定する。  疎な」オブジェクトをきれいに印刷するのに便利。
zero.printが文字列の場合、xshの正確なゼロエントリをzero.printで単純に置き換えるかを示す。  そうでない場合、それぞれの文字列の幅に応じて、(フォーマットされた)ゼロは、zero.printによって部分的に置き換えられ、適用可能であれば、右側に" "が追加されます。  この場合(false replace[.zero])、zero.print文字列が適合しない場合、警告が生成されます(warn.non.fittingがtrueの場合).これはprettyNum()を介して動作し、この場合、.format.zeros(*, replace=replace.zero)を3回呼び出します。
この場合、.format.zeros(*, replace=.zero)を3回呼び出すprettyNum()によって動作します。
論理値で、小数点以下のゼロ、すなわち "0 "を除去するかどうかを示す。  これは単にprettyNum()に渡される。
xが "character "である場合に使用されるオプションの論理で、それが複素数ベクトルから生じているかどうかを示す。  デフォルト(NA)では、xは複素数に'見える'ようにチェックされる。
formatに渡される引数。
xと同じ長さの数値ベクトル。通常は、文字ベクトルxがプリフォーマットである場合の数値。
メソッドを選択するためのオブジェクト。
他のメソッドに渡される、または他のメソッドから渡される引数。
文字列を引用符で囲んで出力するかどうかを示す論理値。
もし0なら、余分な "Levels "行は表示されない。  デフォルトのNULLは、max.levelsを選択して、レベルが幅の1行に印刷されることを意味する。
max.levelsがNULLの場合のみ使用される。
最小有効桁数、seeprint.default.
seeprint.default.印刷出力でNA値を示す文字列(またはNULL)。
ゼロ(0)をどのように出力するかを指定する文字; 疎な表の場合、". "を使用すると、Matrixで疎な行列を出力するのと同様に、より読みやすい結果を生成できます。
文字列を右揃えにするかどうかを示す論理文字。
文字列を左寄せにするか右寄せにするかを示す文字。
options(keep.source=TRUE)が使用されている場合など、内部的に保存されているソースを印刷に使用するかどうかを示す論理。
オブジェクト
R オブジェクト。通常はデータ・フレームで、行列の場合もあります。
各要素の長さはnrow(data)です。
dataの（通常はデータフレームの）サブセットに適用される関数。
FUNへのさらなる引数。
logical: tapplyを参照。
条件オブジェクト。
条件オブジェクト。
条件オブジェクト。
評価される式。
戻り値または終了前に評価される式。
関数
文字列
文字列
リスタートを指定する文字列
restartオブジェクト。
オブジェクトを指定します。
条件クラスの名前を指定する文字列。
追加の引数。
文字列。  詳細'を参照。
文字列。  接続のオープン方法(最初にオープンする場合)。  指定できる値については「モード」のセクションを参照のこと。
論理値。  ブロック」のセクションを参照。
想定するエンコーディングの名前。  エンコーディング」のセクションを参照。
論理値。  trueを指定すると、'raw'インターフェイスが使用され、 通常のファイルではない引数、例えばキャラクタデバイスなどに適している。  これは、テキストモードでの読み込みのためにオープンする際に、 圧縮ファイルであるかどうかのチェックを抑制し、「ファイル」がシーク可能でない可能性があることを表明する。
文字列、部分的に一致するtoc("default", "internal", "wininet", "libcurl"):「詳細」を参照。
HTTPrequests で使用する HTTP ヘッダの名前付き文字ベクトル。  非 HTTP URL では無視されます。  HTTPUserAgent オプション (options を参照) で指定した User-Agent ヘッダが自動的に最初のヘッダとして使用されます。
0-9 の整数。  書き込み時に適用する圧縮の量を、なしから最大まで指定します。  forxzfile には負の値を指定することもできます: '圧縮'のセクションを参照ください。
数値: この接続で使用するタイムアウト (秒単位)。  OSによっては、非常に大きな値をゼロとして扱うことがあるので注意すること。ただし、POSIX標準では31日までの値をサポートしている。
オプションの文字ベクトル。現在のところ、TCPソケットでは "no-delay "のみがサポートされている。
zip ファイル内のファイル名。
文字列。  ポートのホスト名。
整数。  TCP ポート番号。
論理。  ソケットをクライアントにするかサーバーにするか。
接続をリッスンするサーバソケット。
コネクション。
文字列。  現在は無視される。
文字列。  空文字列または "read "または "write"、部分一致可。
他のメソッドに渡される、または他のメソッドから渡される引数。
クラス data.frame のオブジェクト。
printメソッドのオプション引数。
使用される最小有効桁数: seeprint.default。
論理。エントリを引用符で囲んで印刷するかどうかを指定します。
論理。文字列を右揃えにするかどうかを指定します。  デフォルトは右寄せである。
論理 (または文字ベクトル) で、行名を出力するかどうか (または何を出力するか) を指定します。
数値またはNULLで、表示するエントリの最大数を指定します。  デフォルトでは、NULL の場合は getOption("max.print") が使用されます。
要約または印刷される日付オブジェクト。
計算の有効桁数。
出力するエントリの最大数を指定します。  デフォルトでは、NULL の場合、getOption("max.print") が使用されます。
他のメソッドから、または他のメソッドに渡す引数。
印刷するオブジェクト。
digitsにNULLでない値を指定すると、値で表示される有効数字の最小桁数を指定します。  デフォルトのNULLは、getOption("digits")を使用します。  (非整数の値は切り捨てられ、1以上22以下の値のみが受け付けられます。
文字列(文字)を引用符で囲んで表示するかどうかを示す論理値。
出力されるNA値を示す文字列、またはNULL(「詳細」を参照)。
出力されるベクトル、行列、配列の隣接する列の間隔を示す、 1024以下の非負整数、またはNULL(1を意味する)。
文字列を右揃えにするかどうかを示す論理値。  デフォルトは左揃えです。
max に NULL 以外の値を指定すると、印刷されるエントリのおおよその最大数を指定します。  デフォルトのNULLはgetOption("max.print")を使用します。
は、ベクトルや行列などの印刷で使用される行の最大列数を制御します。  デフォルトの NULL は、getOption("width") を使用します。
論理。言語オブジェクトをデパースするのではなく、ソース参照またはコピーのどちらを使用するかを指定します。
他のメソッドとの間で渡される追加の引数。  この関数では無視されます。
date-timeまたはdateオブジェクト。
主に "POSIXlt "オブジェクトに使用されます。
文字列。  変換結果の単位。  省略可能。
文字列。  単位と同様だが、省略はできない。
時間間隔を指定する文字列または数値。
timの書式を指定する文字。  デフォルトはロケール固有の時間フォーマットです。
クラス "difftime "を継承したオブジェクト。
他のメソッドに渡す引数。
メソッドの選択に使用されるオブジェクト。
他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
文字列を引用符で囲んで表示するかどうかを示す論理値。
もし0なら、余計な "Levels "行は表示されない。  デフォルトのNULLは、max.levelsを選択して、レベルが幅の1行に印刷されることを意味する。
max.levelsがNULLの場合のみ使用される。
最小有効桁数、seeprint.default.
seeprint.default.印刷出力でNA値を示す文字列(またはNULL)。
ゼロ(0)をどのように出力するかを指定する文字; 疎な表の場合、". "を使用すると、Matrixで疎な行列を出力するのと同様に、より読みやすい結果を生成できます。
文字列を右揃えにするかどうかを示す論理文字。
文字列を左寄せにするか右寄せにするかを示す文字。
options(keep.source=TRUE)が使用されている場合など、内部的に保存されているソースを印刷に使用するかどうかを示す論理。
文字列は、対象となるDLLのファイル名を指定し、ファイル名の拡張子なしで指定されます（例．DLLInfoオブジェクトは、dyn.loadおよびlibrary.dynamicの呼び出しで直接取得することも、dyn.loadおよびlibrary.dynamicの呼び出しの後で見つけることもできる。DLLInfoオブジェクトは、dyn.loadおよびlibrary.dynamの呼び出しで直接取得することも、DLLがロードされた後にgetLoadedDLLsを使用して見つけることもできます。DLLInfoを使用すると、DLLInfoオブジェクトのリスト（DLLファイル名でインデックスを付けることが可能）が返されます。
論理値。  これが TRUE の場合、返されるリストの要素には、ルーチンの名前 (登録名または生名によって R が確認したもの) が使用されます。  FALSEの場合、これらの名前は計算されず、リストに代入されない。  その結果、呼び出しはより速くなるはずである。  名前情報は、リスト内のNativeSymbolInfoオブジェクトでも利用可能です。
スペクトル分解を計算する数値行列または複素行列。  論理行列は数値に強制されます。
TRUE の場合, 行列は対称（複素数の場合はエルミート）であると仮定され, 下三角形（対角を含む）のみが使用されます.  対称行列が指定されていない場合は， isSymmetric(x) が使用される。
TRUE の場合は固有値のみが計算されて返され、そうでない場合は固有値と固有ベクトルの両方が返されます。
論理値。無効で無視されます。
メソッドの選択に使用されるオブジェクト。
他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
論理。文字列を引用符で囲んで出力するかどうかを指定します。
もし0なら、余計な "Levels "行は表示されない。  デフォルトのNULLは、max.levelsを選択して、レベルが幅の1行に印刷されることを意味する。
max.levelsがNULLの場合のみ使用される。
最小有効桁数、seeprint.default.
seeprint.default.印刷出力でNA値を示す文字列(またはNULL)。
ゼロ(0)をどのように出力するかを指定する文字; 疎な表の場合、". "を使用すると、Matrixで疎な行列を出力するのと同様に、より読みやすい結果を生成できます。
文字列を右揃えにするかどうかを示す論理文字。
文字列を左寄せにするか右寄せにするかを示す文字。
options(keep.source=TRUE)が使用されている場合など、内部的に保存されているソースを印刷に使用するかどうかを示す論理。
メソッドを選択するために使用されるオブジェクト。
他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
文字列を引用符で囲んで印刷するかどうかを示す論理値。
整数。要因に対していくつのレベルを表示するかを指定します。  デフォルトのNULLは、max.levelsを選択して、レベルが幅の1行に印刷されることを意味する。
max.levelsがNULLの場合のみ使用される。
最小有効桁数、seeprint.default.
seeprint.default.印刷出力でNA値を示す文字列(またはNULL)。
ゼロ(0)をどのように出力するかを指定する文字; 疎な表の場合、". "を使用すると、Matrixで疎な行列を出力するのと同様に、より読みやすい結果を生成できます。
文字列を右揃えにするかどうかを示す論理文字。
文字列を左寄せにするか右寄せにするかを示す文字。
options(keep.source=TRUE)が使用されている場合など、内部的に保存されているソースを印刷に使用するかどうかを示す論理。
hexmode "クラスを継承するメソッド用のオブジェクト。
NULL または使用する最小フィールド幅を指定する正の整数。
大文字を使うか小文字を使うかを示す論理値（デフォルト）。
他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
パッケージ名。名前またはリテラル文字列として与えられるか、 character.onlyがFALSE（デフォルト）かTRUEかによって文字列となります。
ロードされたネームスペースをアタッチする検索リストの位置。  search()で指定された現在の検索リスト上の位置の名前にすることもできます。
検索する Rlibrary ツリーの位置を表す文字ベクトル、または NULL。  デフォルト値の NULL は、現在 libPaths() で認識されているすべてのライブラリに対応します。
packageまたはhelpを文字列とみなすかどうかを示す論理。
論理値。  TRUE の場合は FALSE、TRUE の場合は TRUE を返す。
論理値。  TRUE の場合、新しいパッケージのアタッチによる競合について警告が表示されます。  衝突とは、関数をマスクする関数、または非関数をマスクする非関数のことです。conflicts.policy オプションで FALSE を指定しない限り、デフォルトは TRUE です。
論理。  TRUE の場合、追加の診断が表示される。
a 論理。  TRUE の場合、パッケージのアタッチを確認するメッセージは表示されず、 パッケージのアタッチに失敗してもエラーや警告は表示されないことが 多い。
パッケージ名を示す文字列。
ストリクト・コンフリクト・チェックが有効になっている場合に、 エラーを通知することなく検索パス上のオブジェクトをマスクできる オブジェクト名の文字ベクトル。
アタッチされたフレームに除外または含めるオブジェクト名の文字ベクトル。libraryまたはrequireの呼び出しでは、これらの引数のうち1つのみを使用することができる。
DESCRIPTION ファイルの Depends 節にリストされている必要なパッケージを自動的にアタッチするかどうかを指定する論理。
メソッドを選択するために使用されるオブジェクト。
他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
文字列を引用符で囲んで出力するかどうかを指定する論理。
もし0なら、余計な "Levels "行は表示されない。  デフォルトのNULLは、max.levelsを選択して、レベルが幅の1行に印刷されることを意味する。
max.levelsがNULLの場合のみ使用される。
最小有効桁数、seeprint.default.
seeprint.default.印刷出力でNA値を示す文字列(またはNULL)。
ゼロ(0)をどのように出力するかを指定する文字; 疎な表の場合、". "を使用すると、Matrixで疎な行列を出力するのと同様に、より読みやすい結果を生成できます。
文字列を右揃えにするかどうかを示す論理文字。
文字列を左寄せにするか右寄せにするかを示す文字。
options(keep.source=TRUE)が使用されている場合など、内部的に保存されているソースを印刷に使用するかどうかを示す論理。
文字列は、対象となるDLLのファイル名を指定し、ファイル名の拡張子なしで指定されます（例．DLLInfoオブジェクトは、dyn.loadおよびlibrary.dynamicの呼び出しで直接取得することも、dyn.loadおよびlibrary.dynamicの呼び出しの後で見つけることもできる。DLLInfoオブジェクトは、dyn.loadおよびlibrary.dynamの呼び出しで直接取得することも、DLLがロードされた後にgetLoadedDLLsを使用して見つけることもできます。DLLInfoは、DLLInfoオブジェクトのリスト（DLLファイル名でインデックス可能）を返します。
論理値。  これが TRUE の場合、返されるリストの要素には、ルーチンの名前 (登録名または生名によって R が確認したもの) が使用されます。  FALSEの場合、これらの名前は計算されず、リストに代入されない。  その結果、呼び出しはより速くなるはずである。  名前情報は、リスト内のNativeSymbolInfoオブジェクトでも利用可能です。
任意のRオブジェクト、通常は文字列のベクトル。
print.default()で使用され、文字列を右揃えにするかどうかを示す。
noquote "クラスのオブジェクト。
printなどの次のメソッドに渡されるオプション。
汎用c関数との互換性のため。
package_versionの場合は、R.versionで得られるRversionオブジェクト。
無効な数値バージョンはエラー(デフォルト)になるかどうかを示す論理。
クラス "octmode "を継承したメソッド用のオブジェクト。
NULL または、使用する最小フィールド幅を指定する正の整数。
他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
パッケージの名前、またはリテラル文字列、または character.only が FALSE（デフォルト）か TRUE かによって異なる文字列。
ロードされたネームスペースをアタッチする検索リストの位置。  search()で指定された現在の検索リスト上の位置の名前にすることもできます。
検索する Rlibrary ツリーの位置を表す文字ベクトル、または NULL。  デフォルト値の NULL は、現在 libPaths() で認識されているすべてのライブラリに対応します。
packageまたはhelpを文字列とみなすかどうかを示す論理。
論理値。  TRUE の場合は FALSE、TRUE の場合は TRUE を返す。
論理値。  TRUE の場合、新しいパッケージのアタッチによる競合について警告が表示されます。  衝突とは、関数をマスクする関数、または非関数をマスクする非関数のことです。conflicts.policy オプションで FALSE を指定しない限り、デフォルトは TRUE です。
論理。  TRUE の場合、追加の診断が表示される。
a 論理。  TRUE の場合、パッケージのアタッチを確認するメッセージは表示されず、 パッケージのアタッチに失敗してもエラーや警告は表示されないことが 多い。
パッケージ名を示す文字列。
ストリクト・コンフリクト・チェックが有効になっている場合に、 エラーを通知することなく検索パス上のオブジェクトをマスクできる オブジェクト名の文字ベクトル。
アタッチされたフレームに除外または含めるオブジェクト名の文字ベクトル。libraryまたはrequireの呼び出しでは、これらの引数のうち1つのみを使用することができる。
DESCRIPTION ファイルの Depends 節に列挙されている必須パッケージを自動的にアタッチするかどうかを指定する論理。
date-timeクラスの1つから、出力または要約されるオブジェクトを指定します。
format.POSIXctに渡されます。
出力するエントリの最大数を指定します。  デフォルトでは、NULL の場合、getOption("max.print") が使用されます。
計算の有効桁数: 最も重要でない時間単位を正確に表すのに十分な桁数でなければならない。
他のメソッドから、あるいは他のメソッドに渡す引数。
日時オブジェクト
日時オブジェクトまたは文字ベクトル。  (文字ベクトルはas.POSIXct.によって変換される)
数値ベクトル（秒単位）
==, !=, <, <=, >=のいずれか。
date-timeクラスの1つから出力または要約されるオブジェクト。
format.POSIXctに渡されます。
出力するエントリの最大数を指定します。  デフォルトでは、NULL の場合、getOption("max.print") が使用されます。
計算の有効桁数: 最も重要でない時間単位を正確に表すのに十分な桁数でなければならない。
他のメソッドから、あるいは他のメソッドに渡す引数。
日時オブジェクト
日時オブジェクトまたは文字ベクトル。  (文字ベクトルはas.POSIXct.によって変換される)
数値ベクトル（秒単位）
==, !=, <, <=, >=のいずれか。
条件オブジェクト。
呼び出し式。
条件オブジェクト。
評価される式。
戻り値または終了前に評価される式。
関数
文字列
文字列
リスタートを指定する文字列
restartオブジェクト。
オブジェクトを指定します。
条件クラスの名前を指定する文字列。
詳細は以下を参照。
inverse.rle()ではクラス "rle "のオブジェクト。
ここでは無視される。
seeprint.default:印刷の有効桁数。
印字される各行の前に付加される文字列。
メソッドの選択に使用されるオブジェクト。
他のメソッドに渡される、または他のメソッドから渡されるその他の引数。
論理。文字列を引用符で囲んで印刷するかどうかを示す。
もし0なら、余分な "Levels "行は印刷されない。  デフォルトのNULLは、max.levelsを選択し、レベルが幅の1行に印刷されることを意味する。
max.levelsがNULLの場合のみ使用される。
最小有効桁数、seeprint.default.
seeprint.default.印刷出力でNA値を示す文字列(またはNULL)。
ゼロ(0)をどのように出力するかを指定する文字; 疎な表の場合、". "を使用すると、Matrixで疎な行列を出力するのと同様に、より読みやすい結果を生成できます。
文字列を右揃えにするかどうかを示す論理文字。
文字列を左寄せにするか右寄せにするかを示す文字。
options(keep.source=TRUE)が使用されている場合など、内部的に保存されているソースを印刷に使用するかどうかを示す論理。
 ファイル名。
 ファイルの文字エンコーディング。
 文字列を作成する際のエンコーディング： parseのencoding引数を参照のこと。
 ソース行の文字ベクトル。  他のRオブジェクトは文字に強制される。
 ファイルのコピーに使用するタイムスタンプ。
 この srcfilecopy がファイルシステムファイルから取得されたものであることが知られているか？
 srcfile オブジェクト。
 行番号。
 ソースの位置を示す 4 個、6 個、または 8 個の値からなるベクトル。
 適切なクラスのオブジェクト。
 srcref のテキストを取得するために srcfile を読み込むかどうか。
 文字範囲の終わりを示すオプションの 2 番目の srcref オブジェクト。
 メソッドに対する追加の引数。
 ファイル名。
 ファイルの文字エンコーディング。
 文字列を作成する際のエンコーディング： parseのencoding引数を参照してください。
 ソース行の文字ベクトル。  他のRオブジェクトは文字に強制される。
 ファイルのコピーに使用するタイムスタンプ。
 この srcfilecopy がファイルシステムファイルから取得されたものであることが知られているか？
 srcfile オブジェクト。
 行番号。
 ソースの位置を示す 4 個、6 個、または 8 個の値からなるベクトル。
 適切なクラスのオブジェクト。
 srcref のテキストを取得するために srcfile を読み込むかどうか。
 文字範囲の終わりを示すオプションの 2 番目の srcref オブジェクト。
 メソッドに対する追加の引数。
因子（文字列を含む）として解釈可能な1つ以上のオブジェクト、またはそのように解釈可能な要素を持つリスト（またはデータフレーム）。  (as.tableの場合は、特定のメソッドに渡される引数。as.data.frameの場合は、未使用。)
...のすべての要素について削除するレベル。  NAを含まず、useNAが指定されていない場合は、useNA = "ifany "を意味する。  非因子引数に対する解釈は'詳細'を参照。
NA値を表に含めるかどうか。  省略可能。
結果の次元に付ける名前（dimnames 名）。
デフォルトの dnn の構築方法を制御します。  詳細'を参照。
任意のRオブジェクト、またはas.data.frameメソッドのクラス "table "を継承したオブジェクト。as.data.frame.table(x,*)は、配列の "リシェーピング "のために、テーブルでないxに対して明示的に呼び出されることに注意してください。
データフレームの行名を指定する文字ベクトル。
表エントリの列に使用される名前（通常は counts）。
論理: 分類因子は、因子（デフォルト）として返すべきか、文字ベクトルとして返すべきか？
provideDimnames に渡されます。
cat (forwarnings()) に渡す引数。
warnings()が返す "warnings "オブジェクト。
warnings "または "summary.warnings "オブジェクト。
メッセージに "ラベル "を付けるための、xと同じ長さの文字ベクトル。  デフォルトは paste0(seq_len(n), ": ") forn >= 2 where n <- length(x).
メッセージが表示される前に cat()される文字列。
要約が必要なオブジェクト。
summary() のデフォルト・メソッドの結果。
要素について何段階表示するかを示す整数。
signif()(summary.defaultの場合)またはformat()(summary.data.frameの場合)で数値をフォーマットする際に使用する整数。  summary.defaultでは、指定されていない場合（つまり、missing(.)）、signif()は呼び出されなくなります（R >= 3.4.0以降では、デフォルトはprintメソッドとformatメソッドでroundのみに変更されています）。
quantile(*,type=quantile.type)でデフォルトメソッドに使用される整数コード。
生成される要約に影響を与える追加引数。
メソッドの選択に使用されるオブジェクト。
他のメソッドに渡される、または他のメソッドから渡される追加引数。
論理。文字列を引用符で囲んで出力するかどうかを示す。
0 の場合、余分な "Levels" 行は表示されません。  デフォルトのNULLは、max.levelsを選択して、レベルが幅の1行に印刷されることを意味する。
max.levelsがNULLの場合のみ使用される。
最小有効桁数、seeprint.default.
seeprint.default.印刷出力でNA値を示す文字列(またはNULL)。
ゼロ(0)をどのように出力するかを指定する文字; 疎な表の場合、". "を使用すると、Matrixで疎な行列を出力するのと同様に、より読みやすい結果を生成できます。
文字列を右揃えにするかどうかを示す論理文字。
文字列を左寄せにするか右寄せにするかを示す文字。
options(keep.source=TRUE)が使用されている場合など、内部的に保存されているソースを印刷に使用するかどうかを示す論理。
cat (forwarnings()) に渡す引数。
warnings()が返す "warnings "オブジェクト。
warnings "または "summary.warnings "オブジェクト。
メッセージに "ラベル "を付けるための、xと同じ長さの文字ベクトル。  デフォルトは paste0(seq_len(n), ": ") forn >= 2 where n <- length(x).
メッセージが表示される前に cat() される文字列。
数値または文字行列.
(オプション) 行名または列名をそれぞれ指定する文字ベクトル。  デフォルトでは、これらはdimnames(x)から取得される。
TRUE で x がモード "character "の場合、引用符(")が使用されます。
 TRUE で x が mode "character" の場合、出力列は右寄せになる。
NAの出力方法。  これがnullでない場合、その値がNAを表すのに使われる。
printメソッドの引数。
数値ベクトル、複素数ベクトル、論理ベクトル。
論理ベクトル。  欠損値を取り除くべきか？
 テーブル
例えば、行列の場合、1は行、2は列を表し、c(1, 2)は行と列を表します。xにdimnamesという名前がある場合、次元名を選択する文字ベクトルとすることができます。
 表
例えば行列の場合, 1は行, 2は列, c(1,2)は行と列を示す.
行列、配列、データフレームなどのRオブジェクト。
dimnames(x) に指定できる値。
作成された dimnames のベース記号と数字を区切るための文字列。
文字ベクトルの空でないリスト。  リストの構成要素は、空のdmnames構成要素の代替を構成するために順番に使用されます（必要に応じて再利用されます）。  例題も参照のこと。
構築された dimnames が、make.unique の意味で各次元内で一意であることを示す論理。
非負の数値ベクトル。
数値ベクトル。
整数ベクトル。
文字ベクトル。
接続。
論理。  trueの場合、押し戻された各文字列に改行が追加される。
部分的にマッチした文字列。  詳細を参照。
文字ベクトル。
接続。
論理。  trueの場合、押し戻された各文字列に改行が追加されます。
部分的にマッチした文字列。  詳細を参照。
環境（ワークスペース）を保存するかどうかを示す文字列。"no"、"yes"、"ask"、"default "のいずれか。
関連する場合、オペレーティングシステムに返される（数値の）エラーステータス。  通常は0が正常終了を示す。
.Last() を実行すべきか？
QR 分解が計算される数値行列または複素行列。  論理行列は数値に強制されます。
LAPACKが偽でxが実数の場合にのみ使用されます。
qr によって計算されるタイプの QR 分解。
方程式の右辺のベクトルまたは行列。
QR 分解または（qr.solve のみ）矩形行列。
実効ランク．
論理。  実数 x の場合, true なら LAPACK を使用し, それ以外なら LINPACK (デフォルト) を使用する.
他のメソッドに渡される、または他のメソッドから渡されるその他の引数
QR 分解を行う数値行列または複素行列。  論理行列は数値に強制されます。
LAPACKが偽でxが実数の場合のみ使用される。
qr によって計算されるタイプの QR 分解。
方程式の右辺のベクトルまたは行列。
QR 分解または（qr.solve のみ）矩形行列。
実効ランク．
論理。  実数 x の場合, true なら LAPACK を使用し, それ以外なら LINPACK (デフォルト) を使用する.
他のメソッドに渡される、または他のメソッドから渡されるその他の引数
QR 分解を行う数値行列または複素行列。  論理行列は数値に強制されます。
LAPACKが偽でxが実数の場合のみ使用される。
qr によって計算されるタイプの QR 分解。
方程式の右辺のベクトルまたは行列。
QR 分解または（qr.solve のみ）矩形行列。
実効ランク.
論理。  実数 x の場合, true なら LAPACK を使用し, それ以外なら LINPACK (デフォルト) を使用する.
他のメソッドに渡される、または他のメソッドから渡されるその他の引数
QR 分解を行う数値行列または複素行列。  論理行列は数値に強制されます。
LAPACKが偽でxが実数の場合のみ使用される。
qr によって計算されるタイプの QR 分解。
方程式の右辺のベクトルまたは行列。
QR 分解または（qr.solve のみ）矩形行列。
実効ランク.
論理。  実数 x の場合, true なら LAPACK を使用し, それ以外なら LINPACK (デフォルト) を使用する.
他のメソッドに渡される、または他のメソッドから渡されるその他の引数
QR分解を表すオブジェクト。  これは通常、qrまたはlsfitを呼び出したときに得られる。
長さ 1 の論理式。 \bold{Q} 行列または ¤bold{X} 行列の任意の直交補完を行うか、または ¤bold{R} 行列を正方形の上三角形の下にゼロ値の行を結合して補完するかを示す。
1:nrow(qr$qr) の範囲の整数。  再構築された \bold{X} に含まれる列数。  completeがFALSEの場合のデフォルトは、qrオブジェクトが構築された元の ˶{X} の最初のmin(ncol(X), nrow(X))列です。  completeがTRUEの場合のデフォルトは、最初のncol(X)列が元のΓbold{X}で、残りの列が任意の直交 補完（複素数の場合はユニタリ補完）を持つ正方行列です。
ベクトル（行列ではない）の対角値。  返された \bold{Q} の各列に対応する対角値が乗算されます。  デフォルトはすべて 1 です。
QR 分解が計算される数値行列または複素行列。  論理行列は，強制的に数値に変換されます．
LAPACKが偽でxが実数の場合のみ使用される。
qr によって計算されるタイプの QR 分解。
方程式の右辺のベクトルまたは行列。
QR 分解または（qr.solve のみ）矩形行列。
実効ランク．
論理。  実数 x の場合, true なら LAPACK を使用し, それ以外なら LINPACK (デフォルト) を使用する.
他のメソッドに渡される、または他のメソッドから渡されるその他の引数
QR 分解を行う数値行列または複素行列。  論理行列は数値に強制されます。
LAPACKが偽でxが実数の場合のみ使用される。
qr によって計算されるタイプの QR 分解。
方程式の右辺のベクトルまたは行列。
QR 分解または（qr.solve のみ）矩形行列。
実効ランク．
論理。  実数 x の場合, true なら LAPACK を使用し, それ以外なら LINPACK (デフォルト) を使用する.
他のメソッドに渡される、または他のメソッドから渡されるその他の引数
QR分解を表すオブジェクト。  これは通常、qrまたはlsfitを呼び出したときに得られる。
長さ 1 の論理式。 \bold{Q} 行列または ¤bold{X} 行列の任意の直交補完を行うか、または ¤bold{R} 行列を正方形の上三角形の下にゼロ値の行を結合して補完するかを示す。
1:nrow(qr$qr) の範囲の整数。  再構築された \bold{X} に含まれる列数。  completeがFALSEの場合のデフォルトは、qrオブジェクトが構築された元の ˶{X} の最初のmin(ncol(X), nrow(X))列です。  completeがTRUEの場合のデフォルトは、最初のncol(X)列が元のΓbold{X}で、残りの列が任意の直交 補完（複素数の場合はユニタリ補完）を持つ正方行列です。
ベクトル（行列ではない）の対角値。  返された \bold{Q} の各列に対応する対角値が乗算されます。  デフォルトはすべて 1 です。
QR 分解が計算される数値行列または複素行列。  論理行列は，強制的に数値に変換されます．
LAPACKが偽でxが実数の場合のみ使用される。
qr によって計算されるタイプの QR 分解。
方程式の右辺のベクトルまたは行列。
QR 分解または（qr.solve のみ）矩形行列。
実効ランク．
論理。  実数 x の場合, true なら LAPACK を使用し, それ以外なら LINPACK (デフォルト) を使用する.
他のメソッドに渡される、または他のメソッドから渡されるその他の引数
QR 分解を行う数値行列または複素行列。  論理行列は数値に強制されます。
LAPACKが偽でxが実数の場合のみ使用される。
qr によって計算されるタイプの QR 分解。
方程式の右辺のベクトルまたは行列。
QR 分解または（qr.solve のみ）矩形行列。
実効ランク．
論理。  実数 x の場合, true なら LAPACK を使用し, それ以外なら LINPACK (デフォルト) を使用する.
他のメソッドに渡される、または他のメソッドから渡されるその他の引数
QR分解を表すオブジェクト。  これは通常、qrまたはlsfitを呼び出したときに得られる。
長さ 1 の論理式。 \bold{Q} 行列または ¤bold{X} 行列の任意の直交補完を行うか、または ¤bold{R} 行列を正方形の上三角形の下にゼロ値の行を結合して補完するかを示す。
1:nrow(qr$qr) の範囲の整数。  再構築された \bold{X} に含まれる列数。  completeがFALSEの場合のデフォルトは、qrオブジェクトが構築された元の ˶{X} の最初のmin(ncol(X), nrow(X))列です。  completeがTRUEの場合のデフォルトは、最初のncol(X)列が元のΓbold{X}で、残りの列が任意の直交 補完（複素数の場合はユニタリ補完）を持つ正方行列です。
ベクトル（行列ではない）の対角値。  返された \bold{Q} の各列に対応する対角値が乗算されます。  デフォルトはすべて 1 です。
クラス "POSIXt" または "Date" を継承するオブジェクト。
論理ベクトル (再利用可能)。  名前は省略可能か？
クラス "POSIXt "または "Date "を継承した長さ1のオブジェクト。
他のメソッドの引数。
クラス "POSIXt" または "Date" を継承するオブジェクト。
論理ベクトル（再利用可能）。  名前は省略可能か？
クラス "POSIXt" または "Date" を継承する長さ 1 のオブジェクト。
他のメソッドの引数。
クラス "POSIXt" または "Date" を継承するオブジェクト。
論理ベクトル（再利用可能）。  名前は省略可能か？
クラス "POSIXt" または "Date" を継承する長さ 1 のオブジェクト。
他のメソッドの引数。
環境（ワークスペース）を保存するかどうかを示す文字列。"no"、"yes"、"ask"、"default "のいずれか。
関連する場合、オペレーティングシステムに返される（数値の）エラーステータス。  通常は0が正常終了を示す。
.Last() を実行すべきか？
構文的に有効なR式
呼び出し、つまりクラス（およびモード）"call "のRオブジェクト。
環境またはリスト・オブジェクト。  デフォルトは現在の評価環境。
package_versionの場合は、R.versionで得られるRversionオブジェクト。
無効な数値バージョンはエラーになる (デフォルト) かどうかを示す論理。
Rのホームディレクトリを示す "home "の他に、"bin"、"doc"、"etc"、"include"、"modules"、"share "は、Rのインストールの対応する部分へのパスを示す既知の値です。
数値または文字オブジェクト。
NAを省略するかどうかを示す論理。
論理的で、有限でない要素をすべて省略するかどうかを指定する。
数値または文字オブジェクト。
NAを省略するかどうかを示す論理値。
論理的で、有限でない要素をすべて省略すべきかどうかを示す。
数値、複素数、文字、または論理ベクトル。
TRUEならデータの欠損値は最後に置かれ、FALSEなら最初に置かれ、NAなら除去され、"keep "ならランクNAで保持される。
同値の扱い方を指定する文字列で、'詳細'を参照。
リストまたは式、つまり「リストのような」もの。
1つの "主 "引数の関数で、...を介してさらに引数を渡す。
クラス名の文字ベクトル、または任意のクラスにマッチする "ANY"。
デフォルトの結果（how = "replace "の場合は使用されない）。
与えられた3つの可能性に部分的にマッチする文字列。
fの呼び出しに渡される追加引数。
希望する長さ。
強制されるオブジェクト。
文字または生のベクトル。  入力の場合、これはR rawベクトルオブジェクトであり、出力コネクションの場合はコネクションの名前である。
文字。  標準接続オープン・モードのいずれか。
出力の生コネクション。
文字または生のベクトル。  入力の場合、これは R raw vector オブジェクトであり、出力コネクションの場合、コネクションの名前である。
文字。  標準接続オープン・モードのいずれか。
出力の生コネクション。
変換またはシフトされるオブジェクト。
論理: 変換は1文字の文字列に変換するのか、複数の個々の文字に変換するのか。
シフトするビット数。  正の数は右にシフトし、負の数は左にシフトします。
結果の型。
変換またはシフトされるオブジェクト。
論理：変換対象は1文字の文字列か、複数の文字か。
シフトするビット数。  正の数は右にシフトし、負の数は左にシフトします。
結果の型。
変換またはシフトされるオブジェクト。
論理：変換対象は1文字の文字列か、複数の文字か。
シフトするビット数。  正の数は右にシフトし、負の数は左にシフトします。
結果の型。
(一般化された)ベクトルまたは行列。  これらは名前付き引数として与えることができる。  他のRオブジェクトは適宜強制されるか、S4methodsが使用される: セクション'詳細'と'値'を参照。  (cbindの "data.frame "メソッドでは、data.frameにstringsAsFactorsのような引数を与えることができます)。
(cbindの "data.frame "メソッドでは、data.frameの引数として、stringsAsFactorsなどを指定することができます。) (デフォルトのメソッドでは) deparse.level = 0 はラベルを作成しません。
(データフレームメソッドのみ:) logical引数からユニークで有効な行名を作成するかどうかを指定します。
as.data.frameに渡されるlogicalは、...引数に(data.frameでない)文字が含まれる場合のみ有効です。
データフレームに因子が含まれている場合、デフォルトのTRUEは因子のNAレベルが保持されることを保証します。  Rの3.6.xまでのバージョンでは、factor.exclude = NAは暗黙のハードコード(R <= 3.6.0)またはデフォルト(R = 3.6.x, x >= 1)です。
(一般化された)ベクトルまたは行列。  これらは名前付き引数として与えることができる。  他のRオブジェクトは適宜強制されるか、S4methodsが使用される: セクション'詳細'と'値'を参照。  (cbindの "data.frame "メソッドでは、data.frameにstringsAsFactorsのような引数を与えることができます)。
(cbindの "data.frame "メソッドでは、data.frameの引数として、stringsAsFactorsなどを指定することができます。) (デフォルトのメソッドでは) deparse.level = 0 はラベルを作成しません。
(データフレームメソッドのみ:) logical引数からユニークで有効な行名を作成するかどうかを指定します。
as.data.frameに渡されるlogicalは、...引数に(data.frameでない)文字が含まれる場合のみ有効です。
データフレームに因子が含まれている場合、デフォルトのTRUEは因子のNAレベルが保持されることを保証します。  Rの3.6.xまでのバージョンでは、factor.exclude = NAは暗黙のハードコード(R <= 3.6.0)またはデフォルト(R = 3.6.x, x >= 1)になっています。
行列、qr の結果、または "lm" を継承したクラスからのフィット。
論理的。  結果は正確か？
条件数を計算する行列ノルムを指定する文字列。  rcondの場合、デフォルトは "O "で、One-normまたは1-normを意味する。  (現在のところ唯一の)他の可能な値は、無限大ノルムを意味する "I "である。
使用する方法を指定する部分一致文字列。"qr "は主にバックコンパチビリティのためのデフォルトである。
論理。  true の場合, 使用される行列は z の低三角部分のみである.
論理。  true で z が複素数でない場合、LINPACK ルーチン dtrco() が呼び出される。
ノルムが "2 "でない場合は、特に LINPACK。
数値。  入力は必要に応じて再利用される。
数値ベクトル.
数値ベクトル.
数値ベクトル.
数値ベクトル。
おそらく複合モードのオブジェクト。
複合モードのオブジェクト、またはメソッドが定義されているクラスのオブジェクト。
他のメソッドに渡される、または他のメソッドから渡される引数。
ファイル名または接続名を示す文字列。""はコンソールへの出力を示す。  read.dcfの場合は、圧縮ファイルの名前を指定できます（gzfileを参照）。
DCFファイルから読み込むフィールド。  デフォルトは全フィールドを読み込む。
allが偽の場合（デフォルト）、最後に出現したフィールドのみが使用される。
またはNULL（デフォルト）は、そのようなフィールドがないことを示す。  可能であれば文字に強制される。  空白をそのままにしないフィールドについては、read.dcfは先頭と末尾の空白を除去し、write.dcfはstrwrapを使用して折り返す。
は、書き込まれるオブジェクト、典型的にはデータ・フレームである。  そうでない場合は、xをデータフレームに強制しようとする。
論理。  TRUEの場合、出力はファイルに追加される。  FALSEの場合、その名前の既存のファイルは破棄される。
writeLines() に渡す論理値：「を参照。
出力エントリの継続行のインデントを指定する正の整数。
出力の折り返し行の対象となる列を指定する正の整数。
接続オブジェクト、またはファイル名や生のベクトルを指定する文字列。
読み込むベクトルのモードを指定するモード・オブジェクト、またはモードを記述する長さ1の文字ベクトル： "numeric", "double", "integer", "int", "logical", "complex", "character", "raw "のいずれか。
numeric。  読み込むレコードの（最大）数。  n件分のストレージが確保されているので、あまり大きくしすぎないように。
整数。  バイトストリームの要素あたりのバイト数。  デフォルトの NA_integer_ は、自然なサイズを使用する。生のベクトルや複雑なベクトルでは、サイズの変更はサポートされない。
論理値。  ファイル上の量を符号付き整数とみなすか符号なし整数とみなすかを決定する。
ファイルのターゲットシステムのエンディアン性（"big "または "little"）。  swap "を使用すると、強制的にエンディアンをスワップする。
接続に書き込むRオブジェクト。
writeLinesを参照のこと。
接続オブジェクト、ファイル名の文字列、または生のベクトル。
読み書きの対象となる（終端のない）文字列の長さを文字単位で指定する整数ベクトル。  要素は >= 0 でなければならない。
論理：readCharの場合、ncharsはマルチバイトロケールでは文字数ではなくバイト数とみなすべきか。  writeCharについては、writeLinesを参照のこと。
接続に書き込む文字ベクトルで、少なくとも nchars と同じ長さ。
'end of string': 文字列。  各文字列の後に書き込まれる終端文字で、ASCIIのNULLが続きます。
ユーザーに入力を促すときに表示される文字列。通常はスペース" "で終わるはずです。
接続オブジェクトまたは文字列。
整数。  読み込む(最大)行数。  負の値は、接続の入力の終わりまで読むべきであることを示す。
論理値。  n > 0 行が読み込まれる前に接続の終端に到達してもよいか。  そうでない場合はエラーが発生する。
論理的。  テキストファイルに最後の EOL がない場合や、ファイル内に null が埋め込まれている場合に警告を出す。
入力文字列に想定されるエンコーディング。  これは、文字列がLatin-1またはUTF-8であることを示すために使用されます。  入力文字列を再エンコードするために使用されるわけではありません。後者を行うには、接続の一部としてエンコーディングを指定するか、オプション(encoding=)で指定します。
logical: nulsをスキップするか。
シリアライズするRオブジェクト。
Rオブジェクトをシリアライズする。
論理。  TRUEまたはNAの場合、ASCII表現が書き込まれ、そうでない場合（デフォルト）、バイナリが使用される。
使用するワークスペース・フォーマットのバージョン。  NULLは現在のデフォルトバージョン(3)を指定します。他にサポートされている値は2のみで、これはR 1.4.0からR 3.5.0までのデフォルトです。
指定されたファイルへの保存に "gzip" 圧縮を使用するかどうかを指定する論理値、 または使用する圧縮の種類を示す "gzip"、"bzip2"、"xz" のいずれかを指定する論理値。  ファイルが接続の場合は無視される。
参照オブジェクトを扱うためのフック関数。
ファイルへのパスを示す長さ1文字のベクトル。  サポートされている場合は、チルダ展開が行われる。
渡されるすべての引数。
適切なアリティの関数（Reduceの場合はバイナリ、Filter、Find、Positionの場合は単項式、k個の引数で呼び出される場合はMapのk-ary）。  Negateの場合は任意の述語関数。
ベクトル。
xの要素と同じ種類のRオブジェクト。
左から右（デフォルト）へ進むか、右から左へ進むかを示す論理。
連続する reducecombination を累積するかどうかを示す論理。  デフォルトでは、最後の組み合わせのみが使用される。
マッチしない」（述語を満たす要素がない）場合に返される値。
vectors。
ファイナライズするオブジェクト。  環境または外部ポインタでなければならない。
ファイナライズ時に呼び出す関数。最終化するオブジェクトを引数として渡さなければならない。
論理: Rセッションの終了時にオブジェクトがまだ収集されていない場合、ファイナライザを実行しますか?
与えられた文字ベクトルでマッチする正規表現(fixed = TRUEの場合は文字列)を含む文字列。  可能であれば、as.characterによって文字列に強制されます。  長さが2以上の文字ベクトルが与えられた場合、警告とともに最初の要素が使用されます。  regexpr、gregexpr、regexec以外では、欠落値も許されます。
マッチを探す文字ベクトル、またはas.characterで文字ベクトルに強制できる オブジェクトを指定します。  長いベクトルがサポートされています。
FALSEの場合、パターンマッチは大文字小文字を区別し、TRUEの場合、 マッチング中に大文字小文字は無視されます。
論理的です。  Perl互換の正規表現を使うか。
FALSEの場合、grepによって決定されたマッチの(整数)インデックスを含むベクトルが返され、TRUEの場合、マッチ要素そのものを含むベクトルが返されます。
を論理的に返します。  TRUEの場合、patternはそのままマッチする文字列です。  すべての矛盾する引数を上書きします。
の論理引数を上書きします。  TRUE の場合、マッチングは文字単位ではなくバイト単位で行われます。  詳細'を参照。
論理値。  TRUE の場合、マッチしない要素のインデックスまたは値を返す。
の場合、マッチしたパターンを sub とgsub で置き換えます。  可能であれば文字に強制されます。  fixed = FALSE の場合、パターンの括弧付き部分式への後方参照 " \1" ～ " \9" を含めることができます。  perl=TRUEの場合のみ、残りの置換を大文字または小文字に変換する"˶U "または"˶L "と、大文字と小文字の変換を終了する"˶E "を含むことができます。  長さが 2 以上の文字ベクトルが供給された場合、警告と共に最初の要素が使用されます。  NA の場合、マッチに対応する結果のすべての要素が NA に設定される。
与えられた文字ベクトルでマッチする正規表現(fixed = TRUEの場合は文字列)を含む文字列。  可能であれば、as.characterによって文字列に強制されます。  長さが2以上の文字ベクトルが与えられた場合、警告とともに最初の要素が使用される。  regexpr、gregexpr、regexec以外では、欠落値も許されます。
マッチを探す文字ベクトル、またはas.characterで文字ベクトルに強制できる オブジェクトを指定します。  長いベクトルがサポートされています。
FALSEの場合、パターンマッチは大文字小文字を区別し、TRUEの場合、 マッチング中に大文字小文字は無視されます。
論理的です。  Perl互換の正規表現を使うか。
FALSEの場合、grepによって決定されたマッチの(整数)インデックスを含むベクトルが返され、TRUEの場合、マッチ要素そのものを含むベクトルが返されます。
を論理的に返します。  TRUEの場合、patternはそのままマッチする文字列です。  すべての矛盾する引数を上書きします。
の論理引数を上書きします。  TRUE の場合、マッチングは文字単位ではなくバイト単位で行われます。  詳細'を参照。
論理値。  TRUE の場合、マッチしない要素のインデックスまたは値を返す。
の場合、マッチしたパターンを sub とgsub で置き換えます。  可能であれば文字に強制されます。  fixed = FALSE の場合、パターンの括弧付き部分式への後方参照 " \1" ～ " \9" を含めることができます。  perl=TRUEの場合のみ、残りの置換を大文字または小文字に変換する"˶U "または"˶L "と、大文字と小文字の変換を終了する"˶E "を含むことができます。  長さが 2 以上の文字ベクトルが供給された場合、警告と共に最初の要素が使用されます。  NA の場合、マッチに対応する結果のすべての要素が NA に設定されます。
文字列または名前空間環境。
論理。
環境。
名前空間環境。
文字ベクトル。
オプションの文字ベクトル。
名前空間環境。
ロードするパッケージ/名前空間を指定する文字列。
ジェネリックと並列なパッケージ名のベクトル。
ライブラリを指定する文字ベクトル。
論理。
文字。
文字。
環境。
3列の文字行列。
文字。
任意のオブジェクト
文字引数。
メソッド・テーブル名。
symbol: 名前空間の名前。
文字ベクトルで、インポートから除外するシンボルを指定します。
文字列またはネームスペース環境。
論理。
環境。
名前空間環境。
文字ベクトル。
オプションの文字ベクトル。
名前空間環境。
ロードするパッケージ/名前空間を指定する文字列。
ジェネリックと並列なパッケージ名のベクトル。
ライブラリを指定する文字ベクトル。
論理。
文字。
文字。
環境。
3列の文字行列。
文字。
任意のオブジェクト
文字引数。
メソッド・テーブル名。
symbol: 名前空間の名前。
インポートから除外するシンボルを指定する文字ベクトル。
文字ベクトル
マッチデータを持つオブジェクト
TRUE の場合、マッチした部分文字列を抽出または置換します。
一致または非一致の部分文字列の適切な置換値を持つオブジェクト（詳細参照）。
文字ベクトル
マッチデータを持つオブジェクト
TRUE の場合、マッチした部分文字列を抽出または置換します。
マッチする、あるいはマッチしない部分文字列の適切な置換値を持つオブジェクト (詳細参照)。
削除するオブジェクトを、名前 (引用符で囲まれていないもの) あるいは文字列 (引用符で囲まれているもの) で指定します。
削除するオブジェクトを指定する文字ベクトル。
削除を行う場所。  デフォルトでは、現在の環境を使用します。  その他の可能性については 'details' を参照。
使用する環境。  詳細' を参照。
環境を囲むフレームを検査するか？
トップレベルタスクが正常に完了するたびに呼び出される関数。  戻り値は、コールバックをアクティブなコールバックのリストに保持するか、破棄するかを示す論理値でなければならない。
指定された場合、これはコールバック関数fの呼び出しにおける5番目の引数である。
整数の添字は1ベースであり、つまり最初の要素は1である。現在登録されているハンドラの名前は、getTaskCallbackNamesを使用して利用可能であり、addTaskCallbackの呼び出しでも返される。
character: 使用する名前。
(リストを含むあらゆるモードの)ベクトル、係数、(rep のみ)POSIXct、POSIXlt、Date オブジェクト、またはそのようなオブジェクトを含む S4 オブジェクト。
他のメソッドに渡す引数、または他のメソッドから渡される引数。内部のデフォルト・メソッドでは、次のようなものがあります:times 長さ(x)が長ければ各要素を繰り返す(非負の)回数、長さ1であればベクトル全体を繰り返す回数を与える整数値ベクトル。  他の入力は整数または double vector.length.outnon-negative integer に強制されます。  出力ベクトルの長さ。  他の入力は doublevector に強制され、最初の要素が取られる。  NA または無効な場合は無視される。  xの各要素は毎回繰り返される。  他の入力は整数または2倍ベクトルに強制され、最初の要素が取り出される。  NAまたは無効な場合は1として扱われる。
上記の ... を参照のこと。
(リストを含むあらゆるモードの)ベクトル、係数、(repに対してのみ)POSIXct、 POSIXlt、Dateオブジェクト、またはそのようなオブジェクトを含むS4オブジェクト。
他のメソッドに渡す引数、または他のメソッドから渡される引数。内部のデフォルト・メソッドでは、次のようなものがあります:times 長さ(x)が長ければ各要素を繰り返す(非負の)回数、長さ1であればベクトル全体を繰り返す回数を与える整数値ベクトル。  他の入力は整数または double vector.length.outnon-negative integer に強制されます。  出力ベクトルの長さ。  他の入力は doublevector に強制され、最初の要素が取られる。  NA または無効な場合は無視される。  xの各要素は毎回繰り返される。  他の入力は整数または2倍ベクトルに強制され、最初の要素が取り出される。  NAまたは無効な場合は1として扱われる。
上記の ... を参照のこと。
(リストを含むあらゆるモードの)ベクトル、係数、(repに対してのみ)POSIXct、 POSIXlt、Dateオブジェクト、またはそのようなオブジェクトを含むS4オブジェクト。
他のメソッドに渡す引数、または他のメソッドから渡される引数。内部のデフォルト・メソッドでは、次のようなものがあります:times 長さ(x)が長ければ各要素を繰り返す(非負の)回数、長さ1であればベクトル全体を繰り返す回数を与える整数値ベクトル。  他の入力は整数または double vector.length.outnon-negative integer に強制されます。  出力ベクトルの長さ。  他の入力は doublevector に強制され、最初の要素が取られる。  NA または無効な場合は無視される。  xの各要素は毎回繰り返される。  他の入力は整数または2倍ベクトルに強制され、最初の要素が取り出される。  NAまたは無効な場合は1として扱われる。
上記の ... を参照のこと。
date-time または date オブジェクト。
主に "POSIXlt "オブジェクトで変換に使用されるオプションのタイムゾーン指定。
文字列。  結果の単位。  省略可能。
文字列。  単位と同様だが、省略はできない。
時間間隔を指定する文字列または数値。
timの書式を指定する文字。  デフォルトはロケール固有の時間フォーマットです。
クラス "difftime "を継承したオブジェクト。
他のメソッドに渡す引数。
(リストを含むあらゆるモードの)ベクトル、係数、(repのみ)POSIXct、POSIXlt、Dateオブジェクト、またはそのようなオブジェクトを含むS4オブジェクト。
他のメソッドに渡す引数、または他のメソッドから渡される引数。内部のデフォルト・メソッドでは、次のようなものがあります:times 長さ(x)が長ければ各要素を繰り返す(非負の)回数、長さ1であればベクトル全体を繰り返す回数を与える整数値ベクトル。  他の入力は整数または double vector.length.outnon-negative integer に強制されます。  出力ベクトルの長さ。  他の入力は doublevector に強制され、最初の要素が取られる。  NA または無効な場合は無視される。  xの各要素は毎回繰り返される。  他の入力は整数または2倍ベクトルに強制され、最初の要素が取り出される。  NAまたは無効な場合は1として扱われる。
上記の ... を参照のこと。
(リストを含むあらゆるモードの)ベクトル、係数、(repに対してのみ)POSIXct、 POSIXlt、Dateオブジェクト、またはそのようなオブジェクトを含むS4オブジェクト。
他のメソッドに渡す引数、または他のメソッドから渡される引数。内部のデフォルト・メソッドでは、次のようなものがあります:times 長さ(x)が長ければ各要素を繰り返す(非負の)回数、長さ1であればベクトル全体を繰り返す回数を与える整数値ベクトル。  他の入力は整数または double vector.length.outnon-negative integer に強制されます。  出力ベクトルの長さ。  他の入力は doublevector に強制され、最初の要素が取られる。  NA または無効な場合は無視される。  xの各要素は毎回繰り返される。  他の入力は整数または2倍ベクトルに強制され、最初の要素が取り出される。  NAまたは無効な場合は1として扱われる。
上記の ... を参照のこと。
package_version の場合は、R.version で取得した Rversion オブジェクト。
無効な数値バージョンはエラーになる (デフォルト) かどうかを示す論理。
(リストを含むあらゆるモードの)ベクトル、係数、(rep のみ)POSIXct、POSIXlt、Date オブジェクト、またはそのようなオブジェクトを含む S4 オブジェクト。
他のメソッドに渡す引数、または他のメソッドから渡される引数。内部のデフォルト・メソッドでは、次のようなものがあります:times 長さ(x)が長ければ各要素を繰り返す(非負の)回数、長さ1であればベクトル全体を繰り返す回数を与える整数値ベクトル。  他の入力は整数または double vector.length.outnon-negative integer に強制されます。  出力ベクトルの長さ。  他の入力は doublevector に強制され、最初の要素が取られる。  NA または無効な場合は無視される。  xの各要素は毎回繰り返される。  他の入力は整数または2倍ベクトルに強制され、最初の要素が取り出される。  NAまたは無効な場合は1として扱われる。
上記の ... を参照のこと。
(リストを含むあらゆるモードの)ベクトル、係数、(repに対してのみ)POSIXct、 POSIXlt、Dateオブジェクト、またはそのようなオブジェクトを含むS4オブジェクト。
他のメソッドに渡す引数、または他のメソッドから渡される引数。内部デフォルトメソッドでは、次のような引数を指定できます: times 長さが length(x) の場合は各要素を繰り返す(非負の)回数、長さが 1 の場合はベクトル全体を繰り返す(非負の)回数を指定する整数値ベクトル。  他の入力は整数または double vector.length.outnon-negative integer に強制されます。  出力ベクトルの長さ。  他の入力は doublevector に強制され、最初の要素が取られる。  NA または無効な場合は無視される。  xの各要素は毎回繰り返される。  他の入力は整数または2倍ベクトルに強制され、最初の要素が取り出される。  NAまたは無効な場合は1として扱われる。
上記の ... を参照のこと。
長さが1であり、NAでない論理ベクトル。長さが1より大きい条件は、現在のところ警告付きで受理されるが、最初の要素のみが使用される。  環境変数_R_CHECK_LENGTH_1_CONDITION_がtrueに設定されると、代わりにエラーが通知される。  その他の型は、可能であれば論理型に強制され、クラスは無視される。
変数の構文名。
ベクトル（リストと式を含む）、ペアリスト、NULLを評価する式。  因子値は文字ベクトルに強制される。  R4.0.0から、これは長いベクタになる。
形式的な意味での式。  通常は { expr1 ; expr2 } のような形式です。
ベクトル
インデックスベクトル。
置換値
ベクトル（アトミックまたはリスト）または式オブジェクト。  その他のオブジェクト（クラス化されたオブジェクトを含む）は、base::as.listによって強制されます。
Xの各要素に適用される関数。  や%*%のような関数の場合、関数名はバッククォートか引用符で囲む必要があります。
FUNのオプション引数。
可能であれば、結果をベクトル、行列、高次元配列に簡略化するか。  デフォルト値のTRUEは、適切であればベクトルまたは行列を返すが、simplify = "array "の場合、結果はFUN(X[[i]])の結果よりも1つ上の "rank"(=length(dim(.)))の配列になる可能性がある。
論理; TRUEでXが文字の場合、Xが既に名前を持っていない限り、Xを結果の名前として使用する。  この引数は ... に続くので、その名前は省略できない。
(一般化された)ベクトル; FUNからの戻り値のテンプレート。  詳細'を参照。
整数: 複製数。
繰り返し評価する式（言語オブジェクト、通常は呼び出し）。
リスト。通常は lapply() から返される。
この2つのケースは、それぞれ sapply(*, simplify = "array") または simplify = TRUE に対応する。
パッケージの名前。character.onlyがFALSE（デフォルト）かTRUEかによって、名前か文字列、または文字列が指定されます。
ロードされた名前空間をアタッチする検索リストの位置。  search()で指定された現在の検索リスト上の位置の名前にすることもできます。
検索する Rlibrary ツリーの位置を表す文字ベクトル、または NULL。  デフォルト値の NULL は、現在 libPaths() で知られているすべてのライブラリに対応します。
packageまたはhelpを文字列とみなすかどうかを示す論理。
論理値。  TRUE の場合は FALSE、TRUE の場合は TRUE を返す。
論理値。  TRUE の場合、新しいパッケージのアタッチによる競合について警告が表示されます。  競合とは、関数をマスクする関数、または非関数をマスクする非関数のことです。conflicts.policy オプションで FALSE を指定しない限り、デフォルトは TRUE です。
論理。  TRUE の場合、追加の診断が表示される。
a 論理。  TRUE の場合、パッケージのアタッチを確認するメッセージは表示されず、 パッケージのアタッチに失敗してもエラーや警告は表示されないことが 多い。
パッケージ名を示す文字列。
ストリクト・コンフリクト・チェックが有効になっている場合に、 エラーを通知することなく検索パス上のオブジェクトをマスクできる オブジェクト名の文字ベクトル。
アタッチされたフレームに除外または含めるオブジェクト名の文字ベクトル。libraryまたはrequireの呼び出しでは、これらの引数のうち1つのみを使用することができる。
DESCRIPTION ファイルの Depends 節にリストされている必須パッケージを自動的にアタッチするかどうかを指定する論理。
文字列または名前空間オブジェクト。
アタッチする位置を指定する整数。
NULL またはパッケージのオブジェクト .Depends に記録される依存関係の文字ベクトル。
ロードするパッケージ/名前空間を指定する文字列。
ライブラリ検索パスを指定する文字ベクトル。
パッケージのインストール時以外は無視されます。
パッケージのインストール中以外は無視されます。
trueの場合、コードをロードした直後に停止する。
NULLまたはバージョン指定（opとversionで構成されるリスト）。
logical: 進捗メッセージとエラーメッセージを抑制するか。
文字列またはパッケージの「名前」、as.symbolを参照。
文字ベクトル。
loadNamespaceに渡すその他の引数。
条件オブジェクト。
呼び出し式。
条件オブジェクト。
評価される式。
戻り値または終了前に評価される式。
関数
文字列
文字列
リスタートを指定する文字列
restartオブジェクト。
オブジェクトを指定します。
条件クラスの名前を指定する文字列。
追加の引数。
条件オブジェクト。
呼び出し式。
条件オブジェクト。
評価される式。
リターンまたは終了する前に評価される式。
関数
文字列
文字列
リスタートを指定する文字列
restartオブジェクト。
オブジェクトを指定します。
条件クラスの名前を指定する文字列。
詳細は後述する。
Rオブジェクト。関数や環境、NULLではありません。
tracememまたはretracememが返す値。
空または 1 つ以上の name または name=expression 項。
式。
式。
トレースまたはアントレースする関数の名前。  untraceや複数の引数を持つtraceでは、quoted形式で複数の名前を指定することができ、それぞれに同じアクションが適用されます。  名前空間内のS3メソッドのような "隠された "関数では、通常、where = * も指定する必要があります。
には、関数か評価されない式を指定します。  関数が呼び出されるか、式が評価されるのは、呼び出しの最初か、引数atで指定された呼び出しのステップの前です。
関数または評価されない式のいずれか。  詳細はセクションを参照してください。
オプションの数値ベクトルまたはリスト。  詳細セクションを参照してください。
TRUE(デフォルト)の場合、トレース式が評価される前に説明行が表示されます。
 この引数が指定された場合、関数whatのメソッドのシグネチャとして指定する必要があります。  この場合、関数そのものではなく、そのメソッドがトレースされます。
 関数内のループ内をトレースするような複雑なトレースでは、関数本体を編集して必要な呼び出しを挿入する必要があります。  その場合、editar引数にTRUEを指定するか、使用したいエディタ名を指定します。  trace()はeditを呼び出し、編集後のバージョンの関数を使用します。  詳細については、詳細セクションを参照してください。
この引数の重要な使用法は、"隠された "あるいは別のパッケージから呼び出された パッケージの関数をトレースすることです。名前空間機構は、呼び出される関数をインポートします (ベース・パッケージの関数は例外です)。  呼び出される関数は、トップ・レベルから見たオブジェクトとは異なります（一般的に、インポートされたパッケージはアタッチされていないかもしれません）。  そのためには、引数whereを名前空間（またはその名前空間）の関数に設定します。  そうすると、トレース計算がその関数の環境(対応するパッケージの名前空間)を探し始めます(微妙ですが、ここでのセマンティクスはRで名前空間が機能するための中心的なものです)。
サポート関数tracingStateの呼び出しは、トレースがグローバルにオンになっていればTRUEを返し、そうでなければFALSEを返します。  これらの値のどちらか一方の引数が状態を設定します。  tracingState が FALSE の場合、トレースアクションは実際に発生しません（例えば、デバッグ中にトレースを停止するためにデバッグ関数で使用されます）。
exprはトレースアクション（browser()の呼び出しなど）で、msgはトレースアクションが発生する場所を特定する文字列です。
returnValueに戻り値がない場合（例えば、エラーや再起動、呼び出し元関数からの戻りを評価した結果、関数が終了した場合）、代わりにdefaultを返します。
反転が定義されているベクトルまたは他のオブジェクト。
ベクトルまたは反転が定義されている他のオブジェクト。
inverse.rle()ではクラス "rle "のオブジェクト。
ここでは無視される。
seeprint.default:印刷の有効桁数。
印字される各行の前に付加される文字列。
削除するオブジェクトの名前(引用符なし)または文字列(引用符付き)。
削除するオブジェクトを指定する文字ベクトル。
削除する場所。  デフォルトでは、現在の環境を使用する。  その他の可能性については 'details' を参照。
使用する環境。  詳細' を参照。
環境を囲むフレームを検査するか?
文字か NULL を指定する。  kind が文字列の場合、R の RNG を希望する種類に設定する。  default "を使用すると、Rのデフォルトに戻る。  NULLの解釈については'詳細'を参照のこと。
文字列またはNULL。  文字列の場合、正規表現方法を設定する。  default "を使うとRのデフォルトに戻る。  NULLでは何も変わらない。
文字列またはNULL。  文字列の場合、離散一様生成（sampleなどで使用）の方法を設定する。  default "を使うとRのデフォルトに戻る。  NULLは変更しない。
整数として解釈される単一の値、またはNULL(「詳細」を参照)。
バージョン番号を含む文字列、例えば "1.6.2"。  vstr が現在のバージョンより大きい場合、現在のRNGバージョンのデフォルト設定が使われる。
上記の種類を表す0:kの整数コード。
整数。  いくつ必要かは詳細を参照のこと(rng.kindに依存する)。
characterまたはNULL。  kindが文字列の場合、RのRNGを希望する種類に設定する。  default "を使用するとRのデフォルトに戻ります。  NULLの解釈については'詳細'を参照。
文字列またはNULL。  文字列の場合、正規表現方法を設定する。  default "を使うとRのデフォルトに戻る。  NULLでは何も変わらない。
文字列またはNULL。  文字列の場合、離散一様生成（sampleなどで使用）の方法を設定する。  default "を使うとRのデフォルトに戻る。  NULLは変更しない。
整数として解釈される単一の値、またはNULL(「詳細」を参照)。
バージョン番号を含む文字列、例えば "1.6.2"。  vstr が現在のバージョンより大きい場合、現在のRNGバージョンのデフォルト設定が使われる。
上記の種類を表す0:kの整数コード。
整数。  何個必要か(rng.kindに依存)については詳細を参照。
数値ベクトル。  roundやsignifの場合は複素数ベクトル。
小数点以下の桁数(round)または有効桁数(signif)を示す整数。
メソッドに渡す引数。
POSIXt" または "Date" を継承したオブジェクト。
記載されている単位のいずれか。  省略可能。
他のメソッドに渡す引数、または他のメソッドから渡される引数。
POSIXt "または "Date "を継承したオブジェクト。
記載されている単位のいずれか。  省略可能。
他のメソッドに渡す引数、または他のメソッドから渡される引数。
行列のようなオブジェクト、つまり 2 次元の dim を持つオブジェクト。
行列の次元、つまり長さ 2 の整数値の数値ベクトル（非負のエントリを持つ）。
数値としてではなく、行ラベルの係数（必要に応じて作成される）として値を返すかどうかを示す論理値。
クラス "data.frame" のオブジェクト、またはメソッドが定義されているその他のクラス。
論理値、つまり FALSE、NA、TRUE のうちの1つで、指定された行名、つまり値が無効な場合、例えば重複していたり NA だったりした場合にどうするかを示します。  デフォルト(バックコンパチブル)のFALSEはエラーを通知し、NA は行名を "自動 "にし、TRUEはvalidnamesを構築するためにmake.names(value, unique=TRUE)を呼び出します。
整数ベクトルでない限り、文字に強制されるオブジェクトです。  NULLも許されます: '詳細'を参照してください。
クラス "data.frame" のオブジェクト、またはメソッドが定義されているその他のクラス。
論理値、つまり FALSE、NA、TRUE のうちの1つで、指定された行名、つまり値が無効な場合、例えば重複していたり NA だった場合にどうするかを示します。  デフォルト(バックコンパチブル)のFALSEはエラーを通知し、NA は行名を "自動 "にし、TRUEはvalidnamesを構築するためにmake.names(value, unique=TRUE)を呼び出します。
整数ベクトルでない限り、文字に強制されるオブジェクトです。  NULLも許されます: '詳細'を参照してください。
クラス "data.frame" のオブジェクト、またはメソッドが定義されているその他のクラス。
論理値、つまり FALSE、NA、TRUE のうちの1つで、指定された行名、つまり値が無効な場合、例えば重複していたり NA だった場合にどうするかを示します。  デフォルト(バックコンパチブル)のFALSEはエラーを通知し、NA は行名を "自動 "にし、TRUEはvalidnamesを構築するためにmake.names(value, unique=TRUE)を呼び出します。
整数ベクトルでない限り、文字に強制されるオブジェクトです。  NULLも許されます: '詳細'を参照してください。
クラス "data.frame" のオブジェクト、またはメソッドが定義されているその他のクラス。
論理値、つまり FALSE、NA、TRUE のうちの1つで、指定された行名、つまり値が無効な場合、例えば重複していたり NA だった場合にどうするかを示します。  デフォルト(バックコンパチブル)のFALSEはエラーを通知し、NA は行名を "自動 "にし、TRUEはvalidnamesを構築するためにmake.names(value, unique=TRUE)を呼び出します。
整数ベクトルでない限り、文字に強制されるオブジェクトです。  NULLも許されます: '詳細'を参照してください。
クラス "data.frame" のオブジェクト、またはメソッドが定義されているその他のクラス。
論理値、つまり FALSE、NA、TRUE のうちの1つで、指定された行名、つまり値が無効な場合、例えば重複していたり NA だった場合にどうするかを示します。  デフォルト(バックコンパチブル)のFALSEはエラーを通知し、NA は行名を "自動 "にし、TRUEはvalidnamesを構築するためにmake.names(value, unique=TRUE)を呼び出します。
整数ベクトルでない限り、文字に強制されるオブジェクトです。  NULLも許されます: '詳細'を参照してください。
クラス "data.frame" のオブジェクト、またはメソッドが定義されているその他のクラス。
論理値、つまり FALSE、NA、TRUE のうちの1つで、指定された行名、つまり値が無効な場合、例えば重複していたり NA だった場合にどうするかを示します。  デフォルト(バックコンパチブル)のFALSEはエラーを通知し、NA は行名を "自動 "にし、TRUEはvalidnamesを構築するためにmake.names(value, unique=TRUE)を呼び出します。
整数ベクトルでない限り、文字に強制されるオブジェクトです。  NULLも許されます: '詳細'を参照してください。
数値、複素数、整数、論理値を含む 2 次元以上の配列、または数値データフレーム。  colSums() などでは、数値、整数、または論理の行列（または長さ m * n のベクトル）。
論理。  欠損値(NaNを含む)は計算から省かれるべきか?
整数：どの次元を'行'または'列'とみなして合計するか。  行* の場合、和または平均は dims+1, ... の次元に渡る。
行列 x の次元 for.colSums() など。
行列のような R オブジェクトで、少なくとも 2 次元の forcolnames。
論理。FALSEでnamesがNULLの場合、namesが作成される。
作成された名前。
dimnames(x)の構成要素に対して有効な値。  行列または配列の場合，これはNULLか，適切な次元に等しい長さの0でない文字ベクトルです．
colnames の場合は，少なくとも2つの次元を持つ，行列のような R オブジェクト．
論理。FALSEでnamesがNULLの場合，namesが作成されます．
作成された名前。
dimnames(x)の構成要素に対して有効な値。  行列または配列の場合，これは NULL か，適切な次元に等しい長さの文字ベクトルです．
数値データの行列、データフレーム、またはベクトル。  欠損値は許される。  数値ベクトルは列ベクトルとして扱われます。
欠落値は別のグループとして扱われ、警告が表示されます。
TRUE の場合、結果はソート(unique(group))順になり、FALSE の場合、グループが発生した順になります。
論理 (TRUE または FALSE)。  NA(NaNを含む)値を破棄するか。
メソッドに渡される、またはメソッドから渡されるその他の引数
数値データの行列、データ・フレーム、またはベクトル。  欠損値は許される。  数値ベクトルは列ベクトルとして扱われる。
欠落値は別のグループとして扱われ、警告が表示されます。
TRUE の場合、結果はソート(unique(group))順になり、FALSE の場合、グループが発生した順になります。
論理 (TRUE または FALSE)。  NA(NaNを含む)値を破棄するか。
メソッドに渡される、またはメソッドから渡されるその他の引数
数値データの行列、データ・フレーム、またはベクトル。  欠損値は許される。  数値ベクトルは列ベクトルとして扱われる。
欠落値は別のグループとして扱われ、警告が表示されます。
TRUE の場合、結果はソート(unique(group))順になり、FALSE の場合、グループが発生した順になります。
論理 (TRUE または FALSE)。  NA(NaNを含む)値を破棄するか。
メソッドに渡される、またはメソッドから渡されるその他の引数
数値、複素数、整数、論理値を含む 2 次元以上の配列、または数値データ・フレーム。  colSums() などでは、数値、整数、または論理の行列（または長さ m * n のベクトル）。
論理。  欠損値(NaNを含む)は計算から省かれるべきか?
整数：どの次元を '行' または '列' とみなして合計するか。  行* の場合、和または平均は dims+1, ... の次元に渡る。
行列 x の次元 for.colSums() など。
1つ以上の要素からなるベクトル，または正の整数．  詳細' を参照。
正の整数で、選択する項目の数。  詳細' を参照ください。
非負の整数で、選択する項目の数を指定します。
サンプリングは置換ありにするか？
サンプリングされるベクトルの要素を得るための確率の重みのベクトル。
アルゴリズムのハッシュ版を使用するかどうかを示す論理値。  replace=FALSE、prob=NULL、size <= n/2の場合のみ使用可能で、useHash=FALSEの場合はnに比例してメモリを消費するため、nが大きい場合に使用する必要があります。
useHash=FALSEは、nに比例してメモリを消費するので、本当にnが大きい場合に使うべきである。  詳細」を参照のこと。
正の数で、選択する項目の数。  詳細'を参照。
非負の整数で、選択する項目の数を指定する。
サンプリングは置換ありにするか？
サンプリングされるベクトルの要素を得るための確率の重みのベクトル。
アルゴリズムのハッシュ版を使用するかどうかを示す論理値。  replace=FALSE、prob=NULL、size <= n/2の場合のみ使用可能で、useHash=FALSEの場合はnに比例してメモリを消費するため、nが大きい場合に使用する必要があります。
ベクトル（アトミックまたはリスト）または式オブジェクト。  その他のオブジェクト（クラス化されたオブジェクトを含む）は、base::as.listによって強制されます。
Xの各要素に適用される関数。  や%*%のような関数の場合、関数名はバッククォートか引用符で囲む必要があります。
FUNのオプション引数。
可能であれば、結果をベクトル、行列、高次元配列に簡略化するか。  デフォルト値のTRUEは、適切であればベクトルまたは行列を返すが、simplify = "array "の場合、結果はFUN(X[[i]])の結果より1つ上の "rank"(=length(dim(.)))の配列になる可能性がある。
論理; TRUEでXが文字の場合、Xが既に名前を持っていない限り、Xを結果の名前として使用する。  この引数は ... に続くので、その名前は省略できない。
(一般化された)ベクトル; FUNからの戻り値のテンプレート。  詳細'を参照。
整数: 複製数。
繰り返し評価する式（言語オブジェクト、通常はコール）。
リスト。通常は lapply() から返される。
この2つのケースはそれぞれ、sapply(*, simplify = "array") またはsimplify = TRUEに対応する。
保存するオブジェクトの名前（シンボルまたは文字列）。
保存するオブジェクトの名前を含む文字ベクトル。
(書き込み可能なバイナリモードの)接続、またはデータが保存されるファイル名(チルダ展開が行われた場合)。  save.imageまたはversion = 1のファイル名でなければならない。
TRUE の場合、データの ASCII 表現が書き込まれます。  asciiのデフォルト値はFALSEで、バイナリファイルが書き込まれる。  NAかつversion >= 2の場合、2倍/複素数を2進数の分数として書き込む別のASCII表現が使用されます。
使用するワークスペース・フォーマットのバージョン。  NULLは現在のデフォルト・フォーマット(3)を指定する。  バージョン1はR 0.99.0からR 1.3.1まで、バージョン2はR 1.4.0から3.5.0までデフォルトであった。
保存するオブジェクトを検索する環境。
名前付きファイルへの保存に圧縮を使用するかどうかを指定する論理文字列または文字列。  TRUE は gzip 圧縮に対応し、文字列 "gzip"、"bzip2" または "xz" は圧縮のタイプを指定する。  ファイルが接続であり、ワークスペース形式がバージョン 1 の場合は無視される。
integer: 使用する圧縮レベル。  デフォルトは 6 で gzip 圧縮、9 で bzip2 または xz 圧縮。  可能な値とその利点については、help for file を参照のこと。
logical: 約束されているオブジェクトは保存前に強制されるべきか。
論理: 保存を開始する前 (特にファイル/接続を開く前) にオブジェクトの存在をチェックすべきか?  バージョン1の保存には適用されません。
論理的。  TRUE の場合、保存されたワークスペースの作成に一時ファイルが使用されます。  保存に成功すると、一時ファイルの名前はfileに変更されます。  これにより、保存に失敗した場合でも既存のワークスペース・ファイルが保持されますが、保存時に余分なディスク領域が使用されます。
保存するオブジェクトの名前（シンボルまたは文字列）。
保存するオブジェクトの名前を含む文字ベクトル。
(書き込み可能なバイナリモードの)接続、またはデータが保存されるファイル名(チルダ展開が行われる場合)。  save.imageまたはversion = 1のファイル名でなければならない。
TRUE の場合、データの ASCII 表現が書き込まれます。  asciiのデフォルト値はFALSEで、バイナリファイルが書き込まれる。  NAかつversion >= 2の場合、2倍/複素数を2進数の分数として書き込む別のASCII表現が使用されます。
使用するワークスペース・フォーマットのバージョン。  NULLは現在のデフォルト・フォーマット(3)を指定する。  バージョン1はR 0.99.0からR 1.3.1まで、バージョン2はR 1.4.0から3.5.0までデフォルトであった。
保存するオブジェクトを検索する環境。
名前付きファイルへの保存に圧縮を使用するかどうかを指定する論理または文字列。  TRUE は gzip 圧縮に対応し、文字列 "gzip"、"bzip2" または "xz" は圧縮のタイプを指定する。  ファイルが接続であり、ワークスペース形式がバージョン 1 の場合は無視される。
integer: 使用する圧縮レベル。  デフォルトは 6 で gzip 圧縮、9 で bzip2 または xz 圧縮。  可能な値とその利点については、help for file を参照のこと。
logical: 約束されているオブジェクトは保存前に強制されるべきか。
論理: 保存を開始する前 (特にファイル/接続を開く前) にオブジェクトの存在をチェックすべきか?  バージョン1の保存には適用されません。
論理的。  TRUE の場合、保存されたワークスペースの作成に一時ファイルが使用されます。  保存に成功すると、一時ファイルの名前がfileに変更されます。  これは、保存に失敗した場合に既存のワークスペース・ファイルを保持しますが、その代償として保存時に余分なディスク領域を使用します。
シリアライズする R オブジェクト。
接続、または R オブジェクトの保存先または読み込み元のファイル名。
論理。  TRUEまたはNAの場合、ASCII表現が書き込まれ、そうでない場合（デフォルト）はバイナリが使用される。
使用するワークスペース・フォーマットのバージョン。  NULLは現在のデフォルトバージョン(3)を指定する。他にサポートされている値は2のみで、これはR 1.4.0からR 3.5.0までのデフォルトです。
指定されたファイルへの保存に "gzip" 圧縮を使用するかどうかを指定する論理値、 または使用する圧縮の種類を示す "gzip"、"bzip2"、"xz" のいずれかを指定する論理値。  ファイルが接続の場合は無視される。
参照オブジェクトを扱うためのフック関数。
数値行列（オブジェクトのようなもの）。
ここで、「numeric-alike」は、is.numeric(.)が真でない場合に as.numeric(.)が正常に適用されることを意味する。
xの列数に等しい長さの論理値または数値類似ベクトル。
数値行列（オブジェクトのようなもの）。
ここで、'numeric-alike' は、is.numeric(.) が真でない場合に as.numeric(.) が正常に適用されることを意味する。
xの列数に等しい長さの論理値または数値に類似したベクトル。
データ値を読み込むファイル名。  指定されたファイルが""である場合、入力はキーボード（または入力がリダイレクトされるかRが埋め込まれている場合はstdin()が読み取るもの）から取り込まれる（この場合、入力は空行またはEOF信号（UnixではCtrl-D、WindowsではCtrl-Z）で終了できる）。スクリプトからRを実行する場合、file = "stdin "はプロセスの標準入 力ファイルストリームを参照するために使用できる。  接続がどのようなモードで開かれても、LF、CRLF、CRのいずれかが行のEOLマーカーとして受け入れられ、sep = "˶"と一致します。  (サポートされているURLスキームについては、urlのヘルプの'URLs'セクションを参照のこと。)現在のエンコーディングではないデータファイル(例えば、UTF-8ロケールのLatin-1ファイル、またはその逆)を読み込むには、エンコーディング引数(またはscanのfileEncoding引数)を設定するafile接続を使用する。
のタイプは、読み込むデータのタイプを与える。  (ここで'type'はtypeofの意味で使用されている。) サポートされている型は、論理型、整数型、数値型、複素数型、文字型、raw型、リスト型である。  whatがリストである場合、データファイルの行はそれぞれ長さ(what)の項目('フィールド')を含むレコードであり、リストの構成要素はリストされた最初の6つの(atomic)型のいずれか、またはNULLの要素を持つものと仮定される。
読み込むデータ値の最大数、またはwhatがリストの場合は読み込むレコードの最大数。  省略された場合、または正の値でない場合、または整数の値が無効な場合(および nlinesが正の値に設定されていない場合)、scanはファイルの最後まで読み込む。
integer: 読み込むデータ値の最大数。  無効な値は無視される。
デフォルトでは、scanは'white-space'区切りの入力フィールドを読み込むことを想定している。  あるいは、sepを使用してフィールドを区切る文字を指定することもできる。  指定された場合、これは空の文字列（デフォルト）かNULL、または1バイト文字だけを含む文字列でなければなりません。
指定された場合、これは空の文字列(デフォルト)かNULL、あるいは1バイト文字だけを含む文字列となります。  マルチバイトのロケールでは、クォート文字はASCII（シングルバイト）でなければならない。
小数点文字。  これは、シングルバイト文字を1つだけ含む文字列でなければならない。  (NULLやゼロ長の文字ベクトルも受け付けられ、デフォルトとされる)。
データ値を読み始める前にスキップする入力ファイルの行数。
正の場合は、読み込むデータの最大行数。
文字ベクトル。  このベクトルの要素は欠損(NA)値として解釈される。  論理フィールド、整数フィールド、数値フィールド、複合フィールドでは、空白フィールドも欠損値とみなされる。  このテストは、入力から空白が取り除かれた後に行われるので、na.strings値は、事前に空白を取り除く必要があるかもしれないことに注意。
論理: TRUEの場合、scanは要求されたフィールドの最後を読み取った後、行末までフラッシュする。これにより、最後のフィールドの後にコメントを置くことができるが、1行に複数のレコードを出力することはできない。
論理: TRUEならば、scanは、whatが意味するフィールド数より少ないフィールドを持つ行に、暗黙的に空のフィールドを追加する。
what引数の項目に対応する論理値のベクトル。  これは、sepが指定された場合にのみ使用され、文字フィールドから先頭と末尾の'空白'を取り除くことができます（数値フィールドは常に取り除かれます）。  そうでない場合、strip.white[i]がTRUEで、i番目のフィールドがモード文字である場合（what[i]がそうであるため）、i番目のフィールドの引用符で囲まれていない先頭と末尾の空白が取り除かれます。
論理: FALSE(デフォルト)の場合、scan()は何番目の項目が読み込まれたかを行に表示する。
論理: TRUE の場合、入力中の空白行は無視される。
論理。  何がリストの場合のみ使用される。  FALSEの場合、すべてのレコードが1行に表示されなければならない（ただし、複数のレコードを1行に表示することはできる）。  fill = TRUEを使うと、レコードは行末で終了することに注意。
character: 1文字または空文字列を含む長さ1の文字ベクトル。  ""を使用すると、コメントの解釈を完全にオフにすることができる（デフォルト）。
論理。  nのようなCスタイルのエスケープを処理すべきか（デフォルト）、そのまま読むべきか。   解釈されるエスケープは、制御文字であるa, \b, ˶f, ˶n, ˶r, ˶t, ˶vと、8進数や16進数表現である˶040や˶0x2Aです。  それ以外のエスケープされた文字は、バックスラッシュを含め、それ自体として扱われます。Unicodeエスケープ(ⅳuまたはⅳUで始まる: 引用を参照)は決して処理されないことに注意してください。
文字列: 空でない場合、ファイル(接続やキーボードではない)で使用されるエンコーディ ングを宣言します。  fileのヘルプの'Encoding'セクション、および'R DataImport/Export Manual'を参照のこと。
入力文字列に対して想定されるエンコーディング。  この値が "latin1 "または "UTF-8 "の場合、文字列がLatin-1またはUTF-8であることを示すために使用される。
文字列: ファイルが提供されず、これが提供される場合、データはテキスト接続を介してテキストの値から読み込まれます。
論理: 文字フィールドを読み込む際に NULL をスキップするか?
接続。
数値。  ファイル位置（originで指定された原点からの相対位置）、またはNA。
文字列。  空または "read "または "write"、部分一致可。
文字列。  start"、"current"、"end "のいずれか。
他のメソッドに渡される、あるいは他のメソッドから渡される引数。
接続。
数値。  ファイル位置 (origin で指定したオリジンからの相対位置)、または NA。
文字列。  空または "read "または "write"、部分一致可。
文字列。  start"、"current"、"end "のいずれか。
他のメソッドに渡される引数、または他のメソッドから渡される引数。
メソッドに渡される、またはメソッドから渡される引数。
これらのシーケンスの開始値と(最大)終了値。  無名の引数として "from "だけが与えられない限り、長さは1である。
number: シーケンスの増分。
number：シーケンスの増分。  seqおよびseq.intでは、端数がある場合は切り上げられる。
この引数の長さから長さを取ります。
メソッドに渡される、あるいはメソッドから渡される引数。
配列の開始値と（最大）終了値。  無名の引数としてfromだけが与えられない限り、長さは1。
number: シーケンスの増分。
number：シーケンスの増分。  seqおよびseq.intでは、端数がある場合は切り上げられる。
この引数の長さから長さを取ります。
メソッドに渡される、あるいはメソッドから渡される引数。
配列の開始値と（最大）終了値。  無名の引数としてfromだけが与えられない限り、長さは1。
number: シーケンスの増分。
number：シーケンスの増分。  seqおよびseq.intでは、端数がある場合は切り上げられる。
この引数の長さから長さを取る。
開始日。  必須
終了日。  オプション。
シーケンスの増分。  任意。  詳細'を参照。
整数、省略可能。  シーケンスの希望する長さ。
この引数の長さから長さを取る。
他のメソッドに渡される、あるいは他のメソッドから渡される引数。
メソッドに渡される、あるいはメソッドから渡される引数。
シーケンスの開始値と（最大）終了値。  無名の引数としてfromだけが与えられない限り、長さは1である。
number: シーケンスの増分。
number：シーケンスの増分。  seqおよびseq.intでは、端数がある場合は切り上げられる。
この引数の長さから長さを取ります。
メソッドに渡される、あるいはメソッドから渡される引数。
配列の開始値と（最大）終了値。  無名の引数としてfromだけが与えられない限り、長さは1。
number: シーケンスの増分。
number：シーケンスの増分。  seqおよびseq.intでは、端数がある場合は切り上げられる。
この引数の長さから長さを取る。
開始日。  必須。
終了日。  省略可能。
シーケンスの増分。  オプション。  詳細'を参照。
整数、省略可能。  シーケンスの希望する長さ。
この引数の長さから長さを取る。
他のメソッドに渡される、あるいは他のメソッドから渡される引数。
各要素がシーケンスの長さを指定する非負整数ベクトルに強制されます。
各要素がシーケンスの最初の要素を指定する整数ベクトルに強制されます。
各要素がシーケンスの要素間のステップサイズを指定する整数ベクトルに強制されます。
メソッドに渡される追加引数。
各要素がシーケンスの長さを指定する非負整数ベクトルに強制されます。
各要素がシーケンスの最初の要素を指定する整数ベクトルに強制されます。
各要素がシーケンスの要素間のステップサイズを指定する整数ベクトルに強制されます。
メソッドに渡される追加引数。
シリアライズするRオブジェクト。
オープンな接続、または (シリアライズする場合は) NULL、または (シリアライズしない場合は) 未処理のベクトル (「詳細」を参照ください)。
論理値。  TRUEまたはNAの場合、ASCII表現が書き込まれ、そうでない場合(デフォルト)はバイナリ表現となります。
論理値: バイナリ表現を使用する場合、ビッグエンディアンのもの (XDR) を使用するか。
使用するワークスペース形式のバージョン。  NULLは現在のデフォルト・バージョン(3)を指定します。他にサポートされている値は2のみで、これはR 1.4.0からR 3.5.0までのデフォルトです。
参照オブジェクトを扱うためのフック関数。
文字列。  詳細'を参照。
文字列。  接続のオープン方法の説明(最初にオープンする場合)。  指定できる値についてはセクション「モード」を参照。
論理値。  ブロック」のセクションを参照。
想定するエンコーディングの名前。  エンコーディング」のセクションを参照。
論理値。  trueを指定すると、'raw'インターフェイスが使用され、 通常のファイルではない引数、例えばキャラクタデバイスなどに適している。  これは、テキストモードの読み込みのためにオープンする際に、 圧縮ファイルであるかどうかのチェックを抑制し、「ファイル」がシーク可能でない可能性があることを表明する。
文字列、部分的に一致するtoc("default", "internal", "wininet", "libcurl"):「詳細」を参照。
HTTPrequests で使用する HTTP ヘッダの名前付き文字ベクトル。  非 HTTP URL では無視されます。  HTTPUserAgent オプション (オプション参照) にある User-Agent ヘッダが自動的に最初のヘッダとして使用されます。
0-9 の整数。  書き込み時に適用する圧縮の量を、なしから最大まで指定します。  forxzfile には負の値を指定することもできます: '圧縮'のセクションを参照ください。
数値: この接続で使用するタイムアウト (秒単位)。  OSによっては、非常に大きな値をゼロとして扱うことがあるので注意すること。ただし、POSIX標準では31日までの値をサポートしている。
オプションの文字ベクトル。現在のところ、TCPソケットでは "no-delay "のみがサポートされている。
zip ファイル内のファイル名。
文字列。  ポートのホスト名。
整数。  TCP ポート番号。
論理。  ソケットをクライアントにするかサーバーにするか。
接続をリッスンするサーバソケット。
コネクション。
文字列。  現在は無視される。
文字列。  空文字列または "read "または "write"、部分一致可。
他のメソッドに渡される、または他のメソッドから渡される引数。
character または NULL。  kindが文字列の場合、RのRNGを希望する種類に設定する。  Rのデフォルトに戻すには "default "を使用する。  NULLの解釈については'詳細'を参照。
文字列またはNULL。  文字列の場合、正規表現方法を設定する。  default "を使うとRのデフォルトに戻る。  NULLでは何も変わらない。
文字列またはNULL。  文字列の場合、離散一様生成（sampleなどで使用）の方法を設定する。  default "を使うとRのデフォルトに戻る。  NULLは変更しない。
整数として解釈される単一の値、またはNULL(「詳細」を参照)。
バージョン番号を含む文字列、例えば "1.6.2"。  vstr が現在のバージョンより大きい場合、現在のRNGバージョンのデフォルト設定が使われる。
上記の種類を表す0:kの整数コード。
整数。  何個必要か(これはrng.kindに依存する)については詳細を参照のこと。
(同じモードの)ベクトル. (概念的に)重複のない一連の項目を含む.
ベクトル（同じモード）：重複する値のない（概念上の）一連の項目を含む。
文字列: フック名
文字列: パッケージ/名前空間名
文字列: パッケージのイベント。  省略可能。
関数または関数のリスト、または action = "replace" の場合は NULL。
実行するアクション。  省略可能。
文字列または名前空間環境。
論理。
環境。
名前空間環境。
文字ベクトル。
オプションの文字ベクトル。
名前空間環境。
ロードするパッケージ/名前空間を指定する文字列。
ジェネリックと並列なパッケージ名のベクトル。
ライブラリを指定する文字ベクトル。
論理。
文字。
文字。
環境。
3列の文字行列。
文字。
任意のオブジェクト
文字引数。
メソッド・テーブル名。
symbol: 名前空間の名前。
インポートから除外するシンボルを指定する文字ベクトル。
double (長さ 1)。  総 CPU 時間または経過 CPU 時間の制限をそれぞれ秒単位で設定します。
論理値です。  TRUE の場合、制限は現在の計算の残りの部分にのみ適用されます。
double (長さ1)。  総 CPU 時間または経過した CPU 時間の制限をそれぞれ秒単位で設定する。
論理値。  TRUE の場合、制限は現在の計算の残りの部分のみに適用される。
文字列: チルダ展開が行われる。
logical: TRUE の場合、閉じた接続と標準の接続を含むすべての接続が表示されます。  false の場合、ユーザが作成したオープンな接続のみが表示されます。
整数：showConnections で指定したテーブルの行番号。
コネクション。
文字ベクトル。
character: シェルのクォートタイプ。  部分一致がサポートされます。  "cmd "および "cmd2 "はWindowsシェルを指します。"cmd "はWindowsのデフォルトです。
数値ベクトル
条件オブジェクト。
呼び出し式。
条件オブジェクト。
評価される式。
リターンまたは終了する前に評価される式。
関数
文字列
文字列
リスタートを指定する文字列
restartオブジェクト。
オブジェクトを指定します。
条件クラスの名前を指定する文字列。
追加の引数。
数値ベクトル。  roundとsignifの場合は複素数ベクトル。
小数点以下の桁数(round)または有効桁数(signif)を示す整数。
メソッドに渡す引数。
条件オブジェクト。
呼び出し式。
条件オブジェクト。
評価される式。
リターンまたは終了する前に評価される式。
関数
文字列
文字列
リスタートを指定する文字列
restartオブジェクト。
オブジェクトを指定します。
条件クラスの名前を指定する文字列。
追加の引数。
条件オブジェクト。
呼び出し式。
条件オブジェクト。
評価される式。
リターンまたは終了する前に評価される式。
関数
文字列
文字列
リスタートを指定する文字列
restartオブジェクト。
オブジェクトを指定します。
条件クラスの名前を指定する文字列。
追加の引数。
条件オブジェクト。
呼び出し式。
条件オブジェクト。
評価される式。
リターンまたは終了する前に評価される式。
関数
文字列
文字列
リスタートを指定する文字列
restartオブジェクト。
オブジェクトを指定します。
条件クラスの名前を指定する文字列。
追加の引数。
条件オブジェクト。
呼び出し式。
条件オブジェクト。
評価される式。
リターンまたは終了する前に評価される式。
関数
文字列
文字列
リスタートを指定する文字列
restartオブジェクト。
オブジェクトを指定します。
条件クラスの名前を指定する文字列。
追加の引数。
ベクター（アトミックまたはリスト）または式オブジェクト。  その他のオブジェクト(クラス化されたオブジェクトを含む)は、base::as.listによって強制されます。
Xの各要素に適用される関数。  や%*%のような関数の場合、関数名はバッククォートか引用符で囲む必要があります。
FUNのオプション引数。
可能であれば、結果をベクトル、行列、高次元配列に簡略化するか。  デフォルト値のTRUEは、適切であればベクトルまたは行列を返すが、simplify = "array "の場合、結果はFUN(X[[i]])の結果よりも1つ上の "rank"(=length(dim(.)))の配列になる可能性がある。
論理; TRUEでXが文字の場合、Xが既に名前を持っていない限り、Xを結果の名前として使用する。  この引数は ... に続くので、その名前を省略することはできない。
(一般化された)ベクトル; FUNからの戻り値のテンプレート。  詳細'を参照。
整数: 複製数。
繰り返し評価する式（言語オブジェクト、通常はコール）。
リスト。通常は lapply() から返される。
この2つのケースはそれぞれ、sapply(*, simplify = "array") またはsimplify = TRUEに対応する。
数値または複素数ベクトル。
2倍値は整数に強制されます。1以外の長さの引数を与えるとエラーになります。
強制またはテストされるオブジェクト。
他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
数値または複素数ベクトル
書き込み可能な接続、または書き込み先のファイルを指定する文字列。
論理。  TRUEの場合、出力はfileに追加され、そうでない場合はfileの内容を上書きする。
文字列。  出力ストリームまたはメッセージストリームのいずれか。  名前は部分的にマッチするので省略可能。
論理: TRUEの場合、出力はニュースリンクと現在の出力ストリームに送られます。
書き込み可能なコネクション、または書き込むファイルの名前を指定する文字列、またはシンクを停止するにはNULLを指定します。
論理値。  TRUEの場合、出力はfileに追加され、そうでない場合はfileの内容を上書きする。
文字列。  出力ストリームまたはメッセージストリームのいずれか。  名前は部分的にマッチするので省略可能。
論理: TRUEの場合、出力はニュースリンクと現在の出力ストリームに送られます。
数値または複素数ベクトル。
配列。  xにdimension属性がない場合は、1次元配列とみなされる。
スライスする次元数を指定する整数ベクトル。
文字列。  接続の説明： '詳細'を参照。
文字列。  接続のオープン方法の説明(最初にオープンする場合)。  指定できる値についてはセクション 'モード' を参照。
論理値。  ブロック」のセクションを参照。
想定するエンコーディングの名前。  エンコーディング」のセクションを参照。
論理値。  trueを指定すると、'raw'インターフェイスが使用され、 通常のファイルではない引数、例えばキャラクタデバイスなどに適している。  これは、テキストモードでの読み込みのためにオープンする際に、 圧縮ファイルであるかどうかのチェックを抑制し、「ファイル」がシーク可能でない可能性があることを表明する。
文字列、部分的に一致するtoc("default", "internal", "wininet", "libcurl"):「詳細」を参照。
HTTPrequests で使用する HTTP ヘッダの名前付き文字ベクトル。  非 HTTP URL では無視されます。  HTTPUserAgent オプション (オプション参照) にある User-Agent ヘッダが自動的に最初のヘッダとして使用されます。
0-9 の整数。  書き込み時に適用する圧縮の量を、なしから最大まで指定します。  forxzfile には負の値を指定することもできます: '圧縮'のセクションを参照ください。
数値: この接続で使用するタイムアウト (秒単位)。  OSによっては、非常に大きな値をゼロとして扱うことがあるので注意すること。ただし、POSIX標準では31日までの値をサポートしている。
オプションの文字ベクトル。現在のところ、TCPソケットでは "no-delay "のみがサポートされている。
zip ファイル内のファイル名。
文字列。  ポートのホスト名。
整数。  TCP ポート番号。
論理。  ソケットをクライアントにするかサーバーにするか。
接続をリッスンするサーバソケット。
コネクション。
文字列。  現在は無視される。
文字列。  空文字列または "read "または "write"、部分一致可。
他のメソッドに渡される、または他のメソッドから渡される引数。
文字列。  接続の説明。'詳細' を参照。
文字列。  接続のオープン方法の説明(最初にオープンする場合)。  指定できる値についてはセクション 'モード' を参照。
論理値。  ブロック」のセクションを参照。
想定するエンコーディングの名前。  エンコーディング」のセクションを参照。
論理値。  trueを指定すると、'raw'インターフェイスが使用され、 通常のファイルではない引数、例えばキャラクタデバイスなどに適している。  これは、テキストモードの読み込みのためにオープンする際に、 圧縮ファイルであるかどうかのチェックを抑制し、「ファイル」がシーク可能でない可能性があることを表明する。
文字列、部分的に一致するtoc("default", "internal", "wininet", "libcurl"):「詳細」を参照。
HTTPrequests で使用する HTTP ヘッダの名前付き文字ベクトル。  非 HTTP URL では無視されます。  HTTPUserAgent オプション (オプション参照) にある User-Agent ヘッダが自動的に最初のヘッダとして使用されます。
0-9 の整数。  書き込み時に適用する圧縮の量を、なしから最大まで指定します。  forxzfile には負の値を指定することもできます: '圧縮'のセクションを参照ください。
数値: この接続で使用するタイムアウト (秒単位)。  OSによっては、非常に大きな値をゼロとして扱うことがあるので注意すること。ただし、POSIX標準では31日までの値をサポートしている。
オプションの文字ベクトル。現在のところ、TCPソケットでは "no-delay "のみがサポートされている。
zip ファイル内のファイル名。
文字列。  ポートのホスト名。
整数。  TCP ポート番号。
論理。  ソケットをクライアントにするかサーバーにするか。
接続をリッスンするサーバソケット。
コネクション。
文字列。  現在は無視される。
文字列。  空文字列または "read "または "write"、部分一致可。
他のメソッドに渡される、または他のメソッドから渡される引数。
開いているソケット接続とサーバーソケットのリスト。
論理。  TRUEの場合、対応するソケットが書き込み可能になるのを待つ。TRUEの場合、対応するソケットが読み込み可能になるのを待つ。
数値または NULL。NULLは無期限に待つことを意味する。
文字列。  詳細」を参照。
文字列。  接続のオープン方法(最初にオープンする場合)。  指定できる値についてはセクション「モード」を参照。
論理値。  ブロック」のセクションを参照。
想定するエンコーディングの名前。  エンコーディング」のセクションを参照。
論理値。  trueを指定すると、'raw'インターフェイスが使用され、 通常のファイルではない引数、例えばキャラクタデバイスに適している。  これは、テキストモードでの読み込みのためにオープンする際に、 圧縮ファイルであるかどうかのチェックを抑制し、「ファイル」がシーク可能でない可能性があることを表明する。
文字列、部分的に一致するtoc("default", "internal", "wininet", "libcurl"):「詳細」を参照。
HTTPrequests で使用する HTTP ヘッダの名前付き文字ベクトル。  非 HTTP URL では無視されます。  HTTPUserAgent オプション (options を参照) で指定した User-Agent ヘッダが自動的に最初のヘッダとして使用されます。
0-9 の整数。  書き込み時に適用する圧縮の量を、なしから最大まで指定します。  forxzfile には負の値を指定することもできます: '圧縮'のセクションを参照ください。
数値: この接続で使用するタイムアウト (秒単位)。  OSによっては、非常に大きな値をゼロとして扱うことがあるので注意すること。ただし、POSIX標準では31日までの値をサポートしている。
オプションの文字ベクトル。現在のところ、TCPソケットでは "no-delay "のみがサポートされている。
zip ファイル内のファイル名。
文字列。  ポートのホスト名。
整数。  TCP ポート番号。
論理。  ソケットをクライアントにするかサーバーにするか。
接続をリッスンするサーバソケット。
コネクション。
文字列。  現在は無視される。
文字列。  空文字列または "read "または "write"、部分一致可。
他のメソッドに渡される、または他のメソッドから渡される引数。
連立一次方程式の係数を含む正方数値または複素行列。  論理行列は数値に強制されます。
連立一次方程式の右辺を示す数値または複素数のベクトルまたは行列。  これがない場合, b は豆の恒等行列とみなされ, solve は a の逆行列を返す.
デフォルトは .Machine$double.epsです.現在、複素行列 a では使用されていません。
論理的です。  無効でエラー。
他のメソッドに渡される、または他のメソッドから渡されるさらなる引数
線形システムの係数を含む正方数値行列または複素行列。  論理行列は数値に強制される。
連立一次方程式の右辺を表す数値または複素数のベクトルまたは行列。  これがない場合, b は豆の恒等行列とみなされ, solve は a の逆行列を返す.
デフォルトは .Machine$double.epsです.現在、複素行列 a では使用されていません。
論理的です。  無効でエラー。
他のメソッドに渡される、または他のメソッドから渡されるさらなる引数
QR 分解が計算される数値行列または複素行列。  論理行列は数値に強制される。
LAPACKが偽でxが実数の場合のみ使用される。
qr によって計算されるタイプの QR 分解。
方程式の右辺のベクトルまたは行列。
QR 分解または（qr.solve のみ）矩形行列。
実効ランク．
論理。  実数 x の場合, true なら LAPACK を使用し, それ以外なら LINPACK (デフォルト) を使用する.
他のメソッドに渡される引数、または他のメソッドから渡される引数
sort.int の場合、数値、複素数、文字、論理ベクトル。  sort.intの場合は、数値、複素数、文字、論理ベクトル、または係数。
論理。  radix "メソッドでは、...の引数の数に等しい長さのベクトルを指定することができる。その他のメソッドでは、長さは1でなければならない。部分ソートでは使用できません。
メソッドに渡す引数、またはメソッドから sort.int に渡す引数。
TRUEの場合、データの欠損値は最後に置かれ、FALSEの場合は最初に置かれ、NAの場合は除去されます。
NULLまたは部分ソート用のインデックスのベクトル。
使用するアルゴリズムを指定する文字列。  部分ソートでは使用できない。  省略可能。
順序付けインデックスベクトルも返すかどうかを示す論理値。任意のna.lastモードとデータ型ではmethod == "radix"、その他のメソッドではna.last = NA (デフォルト)で非要素を完全にソートする場合にサポートされる。
sort.intは、Rオブジェクトをクラスまたは数値、複素数、文字、論理ベクトルでソートします。  sort.intの場合は、数値、複素数、文字、論理ベクトル、または因子。
論理。  radix "メソッドでは、...の引数の数に等しい長さのベクトルを指定することができる。その他のメソッドでは、長さは1でなければならない。部分ソートでは使用できません。
メソッドに渡す引数、またはメソッドから sort.int に渡す引数。
TRUEの場合、データの欠損値は最後に置かれ、FALSEの場合は最初に置かれ、NAの場合は除去されます。
NULLまたは部分ソート用のインデックスのベクトル。
使用するアルゴリズムを指定する文字列。  部分ソートでは使用できない。  省略可能。
順序付けインデックスベクトルも返すかどうかを示す論理値。任意のna.lastモードとデータ型ではmethod == "radix"、その他のメソッドではna.last = NA (デフォルト)で非要素を完全にソートする場合にサポートされる。
sort.intは、Rオブジェクトをクラス、数値、複素数、文字、論理ベクトルでソートします。  sort.int、数値、複素数、文字、論理ベクトル、または因子の場合。
論理。  radix "メソッドでは、...の引数の数に等しい長さのベクトルを指定することができる。その他のメソッドでは、長さは1でなければならない。部分ソートでは使用できません。
メソッドに渡す引数、またはメソッドから sort.int に渡す引数 (デフォルトのメソッドとクラスを持たないオブジェクトの場合)。
TRUEの場合、データの欠損値は最後に置かれ、FALSEの場合は最初に置かれ、NAの場合は除去されます。
NULLまたは部分ソート用のインデックスのベクトル。
使用するアルゴリズムを指定する文字列。  部分ソートでは使用できない。  省略可能。
順序付けインデックスベクトルも返すかどうかを示す論理値。任意のna.lastモードとデータ型ではmethod == "radix"、その他のメソッドではna.last = NA (デフォルト)で非要素を完全にソートする場合にサポートされます。
数値ベクトル、複素数ベクトル、文字ベクトル、論理ベクトル、すべて同じ長さのシーケンス、またはクラス化されたRオブジェクト。
メソッド "shell "および "quick "の原子ベクトル。  xが非原子のRオブジェクトの場合、デフォルトの "auto "と "radix "メソッドは、order(x,...)が動作する場合に動作します。
部分ソート用のインデックスのベクトル(NULL以外の値は実装されていません)。
を論理的に指定します。  ソート順は増加か減少か？radix "メソッドの場合、これは...の引数の数に等しい長さのベクトルである。その他のメソッドでは、長さは1でなければならない。
TRUEの場合、データの欠損値は最後に置かれ、FALSEの場合、欠損値は最初に置かれる。
使用するメソッド: 部分一致が許される。  デフォルト("auto")は、短い数値ベクトル、整数ベクトル、論理ベクトル、因数に対して "radix "を意味する。
sort.intの場合、数値、複素数、文字、論理ベクトル。  sort.int、数値、複素数、文字、論理ベクトル、または因数。
論理。  radix "メソッドでは、...の引数の数に等しい長さのベクトルを指定することができる。その他のメソッドでは、長さは1でなければならない。部分ソートでは使用できません。
メソッドに渡す引数、またはメソッドから sort.int に渡す引数 (デフォルトのメソッドとクラスを持たないオブジェクトの場合)。
TRUEの場合、データの欠損値は最後に置かれ、FALSEの場合は最初に置かれ、NAの場合は除去されます。
NULLまたは部分ソート用のインデックスのベクトル。
使用するアルゴリズムを指定する文字列。  部分ソートでは使用できない。  省略可能。
順序付けインデックスベクトルも返すかどうかを示す論理値。method == "radix "の場合はna.lastモードとデータ型、その他の場合はna.last = NA (デフォルト)と非要素を完全にソートする場合にサポートされます。
読み込むファイルまたはURLのパス名を指定する文字列。  "" は、接続 stdin() を示す。
TRUE、FALSE、または環境を指定し、解析された式がどこで評価されるかを指定します。  FALSE (既定値) はユーザのワークスペース (グローバル環境) に対応し、TRUE は source が呼び出された環境に対応します。
TRUE の場合、各式は解析後、評価前に出力されます。
TRUE の場合、各式 i に対して eval(i) の結果が出力されます。
source() および withAutoprint(*, evaluated=TRUE) では、ファイル、式、呼び出し、または呼び出しのリストを指定する代わりに、評価されない "式" を指定します。
exprsがソースに渡され(exprs= *)、したがって評価されなければならないことを示す論理。
echo=TRUEの場合）各式の前に改行（つまり空行）を表示するかどうかを示す。
TRUEを指定すると、入力の解析と評価中に、各式に関する追加情報を含む、（echo = TRUEよりも）多くの診断が表示されます。
character; echo = TRUE の場合に使用するプロンプトを指定します。
integer; echoがTRUEの場合にのみ使用され、1つの式のdeparseに出力される最大文字数を指定します。
ソース参照がない場合にのみ使用されます。
文字ベクトル。deparse() に制御として渡されます。  R のバージョン <= 3.3.x では、これは "showAttributes" にハードコードされており、これが現在のデフォルトである。
TRUEでfileがパス名の場合、Rの作業ディレクトリは一時的に評価用のファイルを含むディレクトリに変更される。
文字ベクトル。  fileが文字列である場合に想定されるエンコーディング。  エンコーディングが推測される場合、"unknown "という値もあり得る。
文字; echo = TRUE の場合に継続行で使用するプロンプトを指定する。
整数: echo = TRUE の場合にスキップするファイル先頭のコメント行数を指定します。
論理: 式を echo するとき、可能ならソースの書式を保持するか?
(withAutoprint():の場合) source(.)に渡す追加の(ファイルに関連しない)引数。
グループに分割する値を含むベクトルまたはデータ・フレーム。
as.factor(f)がグループ化を定義するという意味での'因子'、またはそのような因子のリストで、それらの相互作用がグループ化に使用されます。xがデータフレームである場合、fは変数gで分割するための~ gの形の式、またはより一般的には~ g1 + ... + gkの形の式にすることもできる。また、より一般的には、変数g1, ..., gkの相互作用によって分割する~ g1 + ..., gkの形式をとることもできる。
発生しないレベルを削除するかどうかを示す論理（fが因子またはリストの場合）。
長さが一致しない場合はリサイクルが適用されます。
文字列、fがリストの場合にinteractionに渡される。
論理。fがリストの場合に相互作用に渡される。
メソッドに渡されるその他の引数。
グループに分けられる値を含むベクトルまたはデータフレーム。
as.factor(f)がグループ化を定義するという意味での'因子'、またはそのような因子のリストで、それらの相互作用がグループ化に使用されます。xがデータフレームである場合、fは変数gで分割するための~ gの形の式、またはより一般的には~ g1 + ... + gkの形の式にすることもできる。また、より一般的には、変数g1, ..., gkの相互作用によって分割する~ g1 + ..., gkの形式をとることもできる。
発生しないレベルを削除するかどうかを示す論理（fが因子またはリストの場合）。
長さが一致しない場合はリサイクルが適用されます。
文字列、fがリストの場合にinteractionに渡される。
論理。fがリストの場合に相互作用に渡される。
メソッドに渡されるその他の潜在的な引数。
要約または印刷される日付オブジェクト。
計算の有効桁数。
数値またはNULLで、表示するエントリの最大数を指定します。  デフォルトでは、NULL の場合は getOption("max.print") が使用されます。
他のメソッドから渡される、または他のメソッドに渡される引数。
グループに分けられる値を含むベクトルまたはデータフレーム。
as.factor(f)がグループ化を定義するという意味での'因子'、またはそのような因子のリストで、それらの相互作用がグループ化に使用されます。xがデータフレームである場合、fは変数gで分割するための~ gの形の式、またはより一般的には~ g1 + ... + gkの形の式にすることもできる。また、より一般的には、変数g1, ..., gkの相互作用によって分割する~ g1 + ..., gkの形式をとることもできる。
発生しないレベルを削除するかどうかを示す論理（fが因子またはリストの場合）。
長さが一致しない場合はリサイクルが適用されます。
文字列、fがリストの場合にinteractionに渡される。
論理。fがリストの場合に相互作用に渡される。
メソッドに渡されるその他の潜在的な引数。
date-timeクラスの1つから、印刷または要約されるオブジェクト。
format.POSIXctに渡されます。
出力するエントリの最大数を指定します。  デフォルトでは、NULL の場合、getOption("max.print") が使用されます。
計算の有効桁数: 最も重要でない時間単位を正確に表すのに十分な桁数でなければならない。
他のメソッドから、あるいは他のメソッドに渡す引数。
日時オブジェクト
日時オブジェクトまたは文字ベクトル。  (文字ベクトルはas.POSIXct.によって変換される)
数値ベクトル（秒単位）
==, !=, <, <=, >=のいずれか。
グループに分割される値を含むベクトルまたはデータフレーム。
as.factor(f)がグループ分けを定義するという意味での'因子'、またはそのような因子のリストで、それらの相互作用がグループ分けに使われます。xがデータフレームである場合、fは変数gで分割するための~ gの形の式、またはより一般的には~ g1 + ... + gkの形の式にすることもできる。また、より一般的には、変数g1, ..., gkの相互作用によって分割する~ g1 + ..., gkという形式の式もあり、これらの変数はデータフレームx内で通常の非標準評価ルールを使って評価される。
発生しないレベルを削除するかどうかを示す論理（fが因子またはリストの場合）。
長さが一致しない場合はリサイクルが適用されます。
文字列、fがリストの場合にinteractionに渡される。
論理。fがリストの場合に相互作用に渡される。
メソッドに渡されるその他の引数。
グループに分けられる値を含むベクトルまたはデータフレーム。
as.factor(f)がグループ分けを定義するという意味での'因子'、またはそのような因子のリストで、それらの相互作用がグループ分けに使われます。xがデータフレームである場合、fは変数gで分割するための~ gの形の式、またはより一般的には~ g1 + ... + gkの形の式にすることもできる。また、より一般的には、変数g1, ..., gkの相互作用によって分割する~ g1 + ..., gkという形式の式もあり、これらの変数はデータフレームx内で通常の非標準評価ルールを使って評価される。
発生しないレベルを削除するかどうかを示す論理（fが因子またはリストの場合）。
長さが一致しない場合はリサイクルが適用されます。
文字列、fがリストの場合にinteractionに渡される。
論理。fがリストの場合に相互作用に渡される。
メソッドに渡されるその他の引数。
グループに分けられる値を含むベクトルまたはデータフレーム。
as.factor(f)がグループ分けを定義するという意味での'因子'、またはそのような因子のリストで、それらの相互作用がグループ分けに使われます。xがデータフレームである場合、fは変数gで分割するための~ gの形の式、またはより一般的には~ g1 + ... + gkの形の式にすることもできる。また、より一般的には、変数g1, ..., gkの相互作用によって分割する~ g1 + ..., gkという形式の式もあり、これらの変数はデータフレームx内で通常の非標準評価ルールを使って評価される。
発生しないレベルを削除するかどうかを示す論理（fが因子またはリストの場合）。
長さが一致しない場合はリサイクルが適用されます。
文字列、fがリストの場合にinteractionに渡される。
論理。fがリストの場合に相互作用に渡される。
メソッドに渡されるその他の引数。
フォーマット文字列の文字ベクトルで、それぞれ最大8192バイト。
fmtに渡される値。  論理ベクトル、整数ベクトル、実数ベクトル、文字ベクトルのみがサポートされますが、多少の強制は行われます。最大100まで。
gettext を参照のこと。
数値または複素数のベクトルまたは配列。
文字ベクトルに強制される R オブジェクト。
使用する引用符の種類。
 ファイル名。
 ファイルの文字エンコーディング。
 文字列を作成する際のエンコーディング： parseのencoding引数を参照のこと。
 ソース行の文字ベクトル。  他のRオブジェクトは文字に強制される。
 ファイルのコピーに使用するタイムスタンプ。
 この srcfilecopy がファイルシステムファイルから取得されたものであることが知られているか？
 srcfile オブジェクト。
 行番号。
 ソースの位置を示す 4 個、6 個、または 8 個の値からなるベクトル。
 適切なクラスのオブジェクト。
 srcref のテキストを取得するために srcfile を読み込むかどうか。
 文字範囲の終わりを示すオプションの 2 番目の srcref オブジェクト。
 メソッドに対する追加の引数。
 ファイル名。
 ファイルの文字エンコーディング。
 文字列を作成する際のエンコーディング： parseのencoding引数を参照してください。
 ソース行の文字ベクトル。  他のRオブジェクトは文字に強制される。
 ファイルのコピーに使用するタイムスタンプ。
 この srcfilecopy がファイルシステムファイルから取得されたものであることが知られているか？
 srcfile オブジェクト。
 行番号。
 ソースの位置を示す 4 個、6 個、または 8 個の値からなるベクトル。
 適切なクラスのオブジェクト。
 srcref のテキストを取得するために srcfile を読み込むかどうか。
 文字範囲の終わりを示すオプションの 2 番目の srcref オブジェクト。
 メソッドに対する追加の引数。
 ファイル名。
 ファイルの文字エンコーディング。
 文字列を作成する際のエンコーディング： parseのencoding引数を参照してください。
 ソース行の文字ベクトル。  他のRオブジェクトは文字に強制される。
 ファイルのコピーに使用するタイムスタンプ。
 この srcfilecopy がファイルシステムファイルから取得されたものであることが知られているか？
 srcfile オブジェクト。
 行番号。
 ソースの位置を示す 4 個、6 個、または 8 個の値からなるベクトル。
 適切なクラスのオブジェクト。
 srcref のテキストを取得するために srcfile を読み込むかどうか。
 文字範囲の終わりを示すオプションの 2 番目の srcref オブジェクト。
 メソッドに対する追加の引数。
 ファイル名。
 ファイルの文字エンコーディング。
 文字列を作成する際のエンコーディング： parseのencoding引数を参照してください。
 ソース行の文字ベクトル。  他のRオブジェクトは文字に強制される。
 ファイルのコピーに使用するタイムスタンプ。
 この srcfilecopy がファイルシステムファイルから取得されたものであることが知られているか？
 srcfile オブジェクト。
 行番号。
 ソースの位置を示す 4 個、6 個、または 8 個の値からなるベクトル。
 適切なクラスのオブジェクト。
 srcref のテキストを取得するために srcfile を読み込むかどうか。
 文字範囲の終わりを示すオプションの 2 番目の srcref オブジェクト。
 メソッドに対する追加の引数。
ジェネリックの名前。
ジェネリック関数の定義。新しいジェネリックを定義するときには渡されません。
start "が考慮される文字列のベクトル。
文字ベクトル（多くの場合長さは1）。
logical:trueの場合、閉じた接続と標準の接続を含むすべての接続が表示されます。  false の場合、ユーザが作成したオープンな接続のみが含まれます。
整数。showConnections で指定したテーブルの行番号。
で指定したテーブルの行番号。
論理: true の場合、閉じた接続と標準の接続を含むすべての接続が表示されます。  false の場合、ユーザが作成したオープンな接続のみが含まれます。
integer: showConnections で指定したテーブルの行番号。
で指定したテーブルの行番号。
論理: true の場合、閉じた接続と標準の接続を含むすべての接続が表示されます。  false の場合、ユーザが作成したオープンな接続のみが含まれます。
integer: showConnections で指定したテーブルの行番号。
コネクション。
文字に強制できる0個以上のオブジェクト(セパレータなしで一緒に貼り付けられる)、または単一の条件オブジェクト。
呼び出しがエラーメッセージの一部になるかどうかを示す論理値。
gettextを参照のこと。  NAの場合、メッセージは翻訳されない。
(すべての論理ベクトルの)TRUEに評価されるべき任意の数のR式。  後者は通常 { expr1 expr2 ...} 形式の評価されない式である。 ...に名前が指定された場合、デフォルトのエラーメッセージの代わりに使用される。
exprsまたは...に代わるもの: 「式のような」オブジェクトで、通常は式ですが、呼び出し、名前、TRUEなどの原子定数でもかまいません。
(exprsが使用された場合のみ:) 式が評価されるべき環境を示します。デフォルトでは、stopifnot()が呼び出された環境です。
任意のRオブジェクト。
オブジェクトの希望するモードまたは'保存モード'(型)を示す文字列。
任意のRオブジェクト。
オブジェクトの希望するモードまたは'記憶モード'(型)を指定する文字列。
fileが""でテキストがないかNULLの場合、入力はコンソールから取得されます。
integer (または integer に強制される)。  パースする式の最大数。  nがNULLか負かNAの場合、入力はすべて解析される。
文字ベクトル。  解析するテキスト。  要素はファイルの行のように扱われる。  他のRオブジェクトは、可能であればcharacterに強制される。
NULLは、RのプロンプトgetOption("prompt")を使用することを意味します。
NULLはRのプロンプト、getOption("prompt")を使うことを意味する。
NULLの場合は文字ベクトル、asrcfileオブジェクト。  詳細」セクションを参照。
入力文字列に使用するエンコーディング。  この値が "latin1 "または "UTF-8 "の場合、文字列がLatin-1またはUTF-8であることを示すために使用されます。  後者を行うには、接続conの一部またはoptions(encoding=)でエンコーディングを指定します。encoding="latin1 "とencoding="UTF-8 "の引数は、MBCSロケールで実行すると警告とともに無視される。
長さ1の文字ベクトル、すなわち「文字列」。
fileが""でtextがないかNULLの場合、入力はコンソールから取得される。
integer (または integer に強制される)。  パースする式の最大数。  nがNULLか負かNAの場合、入力はすべて解析される。
文字ベクトル。  解析するテキスト。  要素はファイルの行のように扱われる。  他のRオブジェクトは、可能であればcharacterに強制される。
NULLは、RのプロンプトgetOption("prompt")を使用することを意味します。
NULLはRのプロンプト、getOption("prompt")を使うことを意味する。
NULLの場合は文字ベクトル、asrcfileオブジェクト。  詳細」セクションを参照。
入力文字列に使用するエンコーディング。  この値が "latin1 "または "UTF-8 "の場合、文字列がLatin-1またはUTF-8であることを示すために使用されます。  後者を行うには、接続conの一部またはoptions(encoding=)でエンコーディングを指定します。encoding="latin1 "とencoding="UTF-8 "の引数は、MBCSロケールで実行すると警告とともに無視される。
長さ1の文字ベクトル、すなわち「文字列」。
変換するオブジェクト：strptimeの場合は文字ベクトル、 strftimeの場合は "POSIXlt "に変換できるオブジェクト。
変換に使用するタイムゾーンを指定する文字列。  システム固有(as.POSIXltを参照)ですが、""は現在のタイムゾーンで、"GMT "はUTCです。無効な値はUTCとして扱われるのが一般的で、プラットフォームによっては警告が表示されます。
文字列。  formatmethodsのデフォルトは、要素に深夜以外の時間要素がある場合は"%Y-%m-%d %H:%M:%S"、そうでない場合は"%Y-%m-%d "です。  options("digits.secs")が設定されている場合は、指定した桁数までの秒数を表示します。
他のメソッドから、または他のメソッドに渡されるさらなる引数。
論理的に指定します。  タイムゾーンの省略形を出力に付加するか。  これは時刻を出力する際に使用され、"%Z "を使用するよりも信頼性が高い。
変換するオブジェクト。strptimeの場合は文字ベクトル、 strftimeの場合は "POSIXlt "に変換できるオブジェクト。
変換に使用するタイムゾーンを指定する文字列。  システム固有(as.POSIXltを参照)ですが、""は現在のタイムゾーンで、"GMT "はUTCです。無効な値はUTCとして扱われるのが一般的で、プラットフォームによっては警告が表示されます。
文字列。  formatmethodsのデフォルトは、要素に深夜以外の時間要素がある場合は"%Y-%m-%d %H:%M:%S"、そうでない場合は"%Y-%m-%d "です。  options("digits.secs")が設定されている場合は、指定した桁数までの秒数を表示します。
他のメソッドから、または他のメソッドに渡されるさらなる引数。
論理的に指定します。  タイムゾーンの省略形を出力に付加するか。  これは時刻を出力する際に使用され、"%Z "を使用するよりも信頼性が高い。
文字ベクトル、またはas.characterを使用して文字ベクトルに強制できるオブジェクト。
xの各要素を繰り返す（非負の）回数を与える整数ベクトル。
文字ベクトル。その各要素は分割される。  因子を含む他の入力はエラーとなる。
分割に使用する正規表現(fixed = TRUEでない限り)を含む文字ベクトル(またはそのように強制できるオブジェクト)。  空のマッチが発生した場合、特にsplitの長さが0の場合、 xは1文字に分割されます。splitの長さが1より大きい場合、xに沿って再循環されます。
に沿って再循環されます。  TRUEならsplitに正確にマッチし、そうでなければ正規表現を使う。  perlより優先される。
論理的な正規表現を使用する。  Perl互換の正規表現を使用するか。
論理的。  TRUE の場合、マッチングは文字単位ではなくバイト単位で行われ、 エンコーディングがマークされた入力は変換されない。  これは、"bytes"(エンコーディングを参照)とマークされた入力が 見つかった場合に(警告とともに)強制される。
文字ベクトル、またはas.characterでこれに強制できるもの。
2以上36以下の整数、または0(デフォルト)。
文字ベクトル、またはas.characterによって文字ベクトルに強制できるオブジェクト。
正の整数値：xの長さにリサイクルされます。
様々な属性を持つオブジェクト。
タグ = 値形式で指定された、データに付加される属性。
文字ベクトル、またはas.characterで文字ベクトルに変換できるオブジェクト。
出力の折り返し行の対象となる列を与える正の整数。
段落の最初の行のインデントを指定する非負の整数。
段落内の後続行のインデントを指定する非負の整数。
先頭行を除く各行のプレフィックスとして使用する文字列。
論理値。  TRUEの場合、結果は行テキストの1文字ベクトルであり、そうでない場合は、xと同じ長さのリストであり、その要素はxの対応する要素から得られる行テキストの文字ベクトルである(従って、前者の場合の結果は、後者の場合のそれをリスト解除することによって得られる)。
与えられた文字ベクトルでマッチする正規表現(fixed = TRUEの場合は文字列)を含む文字列。  可能であれば、as.characterによって文字列に強制されます。  長さが2以上の文字ベクトルが与えられた場合、警告とともに最初の要素が使用されます。  regexpr、gregexpr、regexec以外では、欠落値も許されます。
マッチを探す文字ベクトル、またはas.characterで文字ベクトルに強制できる オブジェクトを指定します。  長いベクトルがサポートされています。
FALSEの場合、パターンマッチは大文字小文字を区別し、TRUEの場合、 マッチング中に大文字小文字は無視されます。
論理的です。  Perl互換の正規表現を使うか。
FALSEの場合、grepによって決定されたマッチの(整数)インデックスを含むベクトルが返され、TRUEの場合、マッチ要素そのものを含むベクトルが返されます。
を論理的に返します。  TRUEの場合、patternはそのままマッチする文字列です。  すべての矛盾する引数を上書きします。
論理引数。  TRUE の場合、マッチングは文字単位ではなくバイト単位で行われます。  詳細'を参照。
論理値。  TRUE の場合、マッチしない要素のインデックスまたは値を返す。
の場合、マッチしたパターンを sub とgsub で置き換えます。  可能であれば文字に強制されます。  fixed = FALSE の場合、パターンの括弧付き部分式への後方参照 " \1" ～ " \9" を含めることができます。  perl=TRUEの場合のみ、残りの置換を大文字または小文字に変換する"˶U "または"˶L "と、大文字と小文字の変換を終了する"˶E "を含むことができます。  長さが 2 以上の文字ベクトルが供給された場合、警告と共に最初の要素が使用されます。  NA の場合、一致に対応する結果のすべての要素が NA に設定されます。
サブセットされるオブジェクト。
保持する要素または行を示す論理式。
データ・フレームから選択する列を示す式。
インデックス作成演算子に渡されます。
他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
サブセットされるオブジェクト。
保持する要素または行を示す論理式。
データ・フレームから選択する列を示す式。
インデックス作成演算子に渡されます。
他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
サブセットされるオブジェクト。
保持する要素または行を示す論理式。
データ・フレームから選択する列を示す式。
インデックス作成演算子に渡されます。
他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
サブセットされるオブジェクト。
保持する要素または行を示す論理式。
データ・フレームから選択する列を示す式。
インデックス作成演算子に渡されます。
他のメソッドに渡される、または他のメソッドから渡される引数。
構文的に有効なR式
呼び出し、つまり "call" クラス（およびモード）の R オブジェクト。
環境またはリスト・オブジェクト。  デフォルトは現在の評価環境です。
文字ベクトル。
整数。  置換される最初の要素。
整数。  置換される最後の要素。
文字ベクトル。
文字ベクトル。
整数。  置換される最初の要素。
整数。  置換される最後の要素。
文字ベクトル。
文字ベクトル。
整数。  置換される最初の要素。
整数。  置換される最後の要素。
文字ベクトル。
文字ベクトル。
整数。  置換される最初の要素。
整数。  置換される最後の要素。
文字ベクトル。
数値または複素数または論理ベクトル。
論理ベクトル。  欠損値（NaNを含む）は削除すべきか？
要約が必要なオブジェクト。
summary() のデフォルトメソッドの結果。
要素について何段階表示すべきかを示す整数。
signif()(summary.defaultの場合) またはformat()(summary.data.frameの場合) による数値のフォーマットに使用する整数。  summary.defaultでは、指定されていない場合（つまり、missing(.)）、signif()は呼び出されなくなります（R >= 3.4.0以降では、デフォルトはprintおよびformatメソッドでroundのみに変更されています）。
quantile(*,type=quantile.type)でデフォルトメソッドに使用される整数コード。
生成される要約に影響を与える追加引数。
文字列。  接続の説明: '詳細'を参照。
文字列。  接続のオープン方法(最初にオープンする場合)。  指定できる値についてはセクション 'モード' を参照のこと。
論理値。  ブロック」のセクションを参照。
想定するエンコーディングの名前。  エンコーディング」のセクションを参照。
論理値。  trueを指定すると、'raw'インターフェイスが使用され、 通常のファイルではない引数、例えばキャラクタデバイスなどに適している。  これは、テキストモードでの読み込みのためにオープンする際に、 圧縮ファイルであるかどうかのチェックを抑制し、「ファイル」がシーク可能でない可能性があることを表明する。
文字列、部分的に一致するtoc("default", "internal", "wininet", "libcurl"):「詳細」を参照。
HTTPrequests で使用する HTTP ヘッダの名前付き文字ベクトル。  非 HTTP URL では無視されます。  HTTPUserAgent オプション (options を参照) で指定した User-Agent ヘッダが自動的に最初のヘッダとして使用されます。
0-9 の整数。  書き込み時に適用する圧縮の量を、なしから最大まで指定します。  forxzfile には負の値を指定することもできます: '圧縮'のセクションを参照ください。
数値: この接続で使用するタイムアウト (秒単位)。  OSによっては、非常に大きな値をゼロとして扱うことがあるので注意すること。ただし、POSIX標準では31日までの値をサポートしている。
オプションの文字ベクトル。現在のところ、TCPソケットでは "no-delay "のみがサポートされている。
zip ファイル内のファイル名。
文字列。  ポートのホスト名。
整数。  TCP ポート番号。
論理。  ソケットをクライアントにするかサーバーにするか。
接続をリッスンするサーバソケット。
コネクション。
文字列。  現在は無視される。
文字列。  空文字列または "read "または "write"、部分一致も可。
他のメソッドに渡される、または他のメソッドから渡される引数。
要約が必要なオブジェクト。
summary() のデフォルトメソッドの結果。
要素に対して何段階表示するかを示す整数。
signif()(summary.defaultの場合) またはformat()(summary.data.frameの場合) による数値のフォーマットに使用する整数。  summary.defaultでは、指定されていない場合（つまり、missing(.)）、signif()は呼び出されなくなります（R >= 3.4.0以降では、デフォルトはprintおよびformatメソッドでroundのみに変更されています）。
quantile(*,type=quantile.type)でデフォルトメソッドに使用される整数コード。
生成される要約に影響する追加引数。
オブジェクトに渡されます。
メソッドに渡される追加引数。
論理: 欠落値を削除するか?
要約または印刷される日付オブジェクト。
計算の有効桁数。
数値またはNULLで、表示するエントリの最大数を指定します。  デフォルトでは、NULL の場合は getOption("max.print") が使用されます。
他のメソッドから、または他のメソッドに渡すさらなる引数。
要約または印刷される日付オブジェクト。
計算の有効桁数。
数値またはNULLで、表示するエントリの最大数を指定します。  デフォルトでは、NULL の場合は getOption("max.print") が使用されます。
他のメソッドから渡される、または他のメソッドに渡されるさらなる引数。
要約が必要なオブジェクト。
summary() のデフォルト・メソッドの結果。
要素について何段階表示するかを示す整数。
signif()(summary.defaultの場合) またはformat()(summary.data.frameの場合) による数値のフォーマットに使用する整数。  summary.defaultでは、指定されていない場合（つまり、missing(.)）、signif()は呼び出されなくなります（R >= 3.4.0以降では、デフォルトはprintおよびformatメソッドでroundのみに変更されています）。
quantile(*,type=quantile.type)でデフォルトメソッドに使用される整数コード。
生成される要約に影響する追加引数。
date-time または date オブジェクト。
主に "POSIXlt "オブジェクトで変換に使用されるオプションのタイムゾーン指定。
文字列。  結果の単位。  省略可能。
文字列。  単位と同様だが、省略はできない。
時間間隔を指定する文字列または数値。
timの書式を指定する文字。  デフォルトはロケール固有の時間フォーマットです。
クラス "difftime "を継承したオブジェクト。
他のメソッドに渡す引数。
要約が必要なオブジェクト。
summary() のデフォルトメソッドの結果。
要素について何段階表示するかを示す整数。
signif()(summary.defaultの場合) またはformat()(summary.data.frameの場合) による数値のフォーマットに使用する整数。  summary.defaultでは、指定されていない場合（つまり、missing(.)）、signif()は呼び出されなくなります（R >= 3.4.0以降では、デフォルトはprintおよびformatメソッドでroundのみに変更されています）。
quantile(*,type=quantile.type)でデフォルトメソッドに使用される整数コード。
生成される要約に影響を与える追加引数。
データのベクトルで、通常は少数の値を取ります。
x が取り得るユニークな値(文字列)のオプションのベクトル。  デフォルトは、as.character(x)が取る値の一意な集合をxの昇順にソートしたものである。
ラベルの重複値は、x の異なる値を同じ因子レベルに対応付けるために使用できます。
レベルのセットを形成するときに除外される値のベクトル。  これは、x と同じレベル・セットを持つ因子であるか、または文字である必要があります。
レベルを (指定された順序で) 並べ替えられたものと見なすかどうかを決定する論理フラグ。
詳細'を参照。
(in ordered(.)) ：ordered 自体を除いた上記のいずれか。
すなわち、if any(is.na(x)) です。
要約が必要なオブジェクト。
summary() の既定メソッドの結果。
整数。因子について、いくつのレベルを表示するかを示す。
signif()(summary.defaultの場合)またはformat()(summary.data.frameの場合)で数値をフォーマットする際に使用する整数。  summary.defaultでは、指定されていない場合（つまり、missing(.)）、signif()は呼び出されなくなります（R >= 3.4.0以降では、デフォルトはprintメソッドとformatメソッドでroundのみに変更されています）。
quantile(*,type=quantile.type)でデフォルトメソッドに使用される整数コード。
生成される要約に影響を与える追加引数。
package_version の場合は、R.version によって得られる Rversion オブジェクト。
無効な数値バージョンはエラーになる (デフォルト) かどうかを示す論理値。
データのベクトルで、通常は少数個の値を取ります。
xが取り得るユニークな値（文字列）を表すオプションのベクトル。  デフォルトは、as.character(x)が取った値の一意な集合をxの昇順にソートしたものである。
ラベルの重複値は、x の異なる値を同じ因子レベルに対応付けるために使用できます。
レベルのセットを形成するときに除外される値のベクトル。  これは、x と同じレベル・セットを持つ因子であるか、または文字である必要があります。
レベルを (指定された順序で) 並べ替えられたものと見なすかどうかを決定する論理フラグ。
詳細'を参照。
(in ordered(.)) ：ordered 自体を除いた上記のいずれか。
NAレベルが使用される場合のみ、すなわちif any(is.na(x))の場合のみNAレベルを追加する。
date-timeクラスの1つから、印刷または要約されるオブジェクト。
format.POSIXctに渡されます。
出力するエントリの最大数を指定します。  デフォルトでは、NULL の場合、getOption("max.print") が使用されます。
計算の有効桁数: 最も重要でない時間単位を正確に表すのに十分な桁数でなければならない。
他のメソッドから、あるいは他のメソッドに渡す引数。
日時オブジェクト
日時オブジェクトまたは文字ベクトル。  (文字ベクトルはas.POSIXct.によって変換される)
数値ベクトル（秒単位）
==, !=, <, <=, >=のいずれか。
date-timeクラスの1つから出力または要約されるオブジェクト。
format.POSIXctに渡されます。
出力するエントリの最大数を指定します。  デフォルトでは、NULL の場合、getOption("max.print") が使用されます。
計算の有効桁数: 最も重要でない時間単位を正確に表すのに十分な桁数でなければならない。
他のメソッドから、あるいは他のメソッドに渡す引数。
日時オブジェクト
日時オブジェクトまたは文字ベクトル。  (文字ベクトルはas.POSIXct.によって変換される)
数値ベクトル（秒単位）
==, !=, <, <=, >=のいずれか。
date-timeクラスの1つから出力または要約されるオブジェクト。
format.POSIXctに渡されます。
出力するエントリの最大数を指定します。  デフォルトでは、NULL の場合、getOption("max.print") が使用されます。
計算の有効桁数: 最も重要でない時間単位を正確に表すのに十分な桁数でなければならない。
他のメソッドから、あるいは他のメソッドに渡す引数。
日時オブジェクト
日時オブジェクトまたは文字ベクトル。  (文字ベクトルはas.POSIXct.によって変換される)
数値ベクトル（秒単位）
==, !=, <, <=, >=のいずれか。
date-timeクラスの1つから出力または要約されるオブジェクト。
format.POSIXctに渡されます。
出力するエントリの最大数を指定します。  デフォルトでは、NULL の場合、getOption("max.print") が使用されます。
計算の有効桁数: 最も重要でない時間単位を正確に表すのに十分な桁数でなければならない。
他のメソッドから、あるいは他のメソッドに渡す引数。
日時オブジェクト
日時オブジェクトまたは文字ベクトル。  (文字ベクトルはas.POSIXct.によって変換される)
数値ベクトル（秒単位）
==, !=, <, <=, >=のいずれか。
 ファイル名。
 ファイルの文字エンコーディング。
 文字列を作成する際のエンコード： parseのencoding引数を参照。
 ソース行の文字ベクトル。  他のRオブジェクトは文字に強制される。
 ファイルのコピーに使用するタイムスタンプ。
 この srcfilecopy がファイルシステムファイルから取得されたものであることが知られているか？
 srcfile オブジェクト。
 行番号。
 ソースの位置を示す 4 個、6 個、または 8 個の値からなるベクトル。
 適切なクラスのオブジェクト。
 srcref のテキストを取得するために srcfile を読み込むかどうか。
 文字範囲の終わりを示すオプションの 2 番目の srcref オブジェクト。
 メソッドに対する追加の引数。
 ファイル名。
 ファイルの文字エンコーディング。
 文字列を作成する際のエンコーディング： parseのencoding引数を参照してください。
 ソース行の文字ベクトル。  他のRオブジェクトは文字に強制される。
 ファイルのコピーに使用するタイムスタンプ。
 この srcfilecopy がファイルシステムファイルから取得されたものであることが知られているか？
 srcfile オブジェクト。
 行番号。
 ソースの位置を示す 4 個、6 個、または 8 個の値からなるベクトル。
 適切なクラスのオブジェクト。
 srcref のテキストを取得するために srcfile を読み込むかどうか。
 文字範囲の終わりを示すオプションの 2 番目の srcref オブジェクト。
 メソッドに対する追加の引数。
因子（文字列を含む）として解釈可能な1つ以上のオブジェクト、またはそのように解釈可能な要素を持つリスト（またはデータフレーム）。  (as.tableの場合は、特定のメソッドに渡される引数。as.data.frameの場合は、未使用。)
...のすべての要素について削除するレベル。  NAを含まず、useNAが指定されていない場合は、useNA = "ifany "を意味する。  非因子引数に対する解釈は'詳細'を参照。
NA値を表に含めるかどうか。  省略可能。
結果の次元に付ける名前（dimnames 名）。
デフォルトの dnn の構築方法を制御します。  詳細'を参照。
任意のRオブジェクト、またはas.data.frameメソッドのクラス "table "を継承したオブジェクト。as.data.frame.table(x,*)は、配列の "リシェーピング "のために、テーブルでないxに対して明示的に呼び出されることに注意してください。
データフレームの行名を指定する文字ベクトル。
表エントリの列に使用される名前（通常は counts）。
論理: 分類因子は、因子（デフォルト）として返すべきか、文字ベクトルとして返すべきか？
provideDimnames に渡されます。
cat (forwarnings()) に渡す引数。
warnings()が返す "warnings "オブジェクト。
warnings "または "summary.warnings "オブジェクト。
メッセージに "ラベル "を付けるための、xと同じ長さの文字ベクトル。  デフォルトは paste0(seq_len(n), ": ") forn >= 2 where n <- length(x).
メッセージが出力される前に cat()される文字列。
文字に強制することができる0個以上のオブジェクト(セパレータなしで一緒に貼り付けられる)、または(formessageのみ)単一の条件オブジェクト。
gettext を参照のこと。  NAの場合、メッセージは翻訳されません。
logical:文字列として与えられたメッセージは改行されるべきか？
評価する式。
文字。どのクラスのメッセージを抑制するかを示す。
文字に強制できる0個以上のオブジェクト（区切り文字なしで一緒に貼り付けられる）、または（formessageのみ）1つの条件オブジェクト。
gettext を参照のこと。  NAの場合、メッセージは翻訳されません。
logical:文字列として与えられたメッセージは改行されるべきか？
評価する式。
文字。どのクラスのメッセージを抑制するかを示す。
characterに強制できる0個以上のオブジェクト（区切り文字なしで一緒に貼り付けられる）、または単一の条件オブジェクト。
論理。その呼び出しが警告メッセージの一部になるかどうかを示す。
論理的に、getOption("warn") <= 0であっても、呼び出しを直ちに出力すべきかどうかを示す。
options("warn")が1であるとき、メッセージを1行として出力すべきかどうかを示す。
評価する式。
gettext を参照。  NAの場合、メッセージは翻訳されない。
文字。どのクラスの警告を抑制するかを示す。
条件オブジェクト。
call式。
条件オブジェクト。
評価される式。
リターンまたは終了する前に評価される式。
関数
文字列
文字列
リスタートを指定する文字列
restartオブジェクト。
オブジェクトを指定します。
条件クラスの名前を指定する文字列。
追加の引数。
SVD 分解が計算される数値行列または複素行列。  論理行列は，強制的に数値に変換されます．
これは 0 から n = nrow(x) の間でなければなりません．
これは，0 から p = ncol(x) までの値でなければならない．
論理値。  無効でエラー。
行列を含む配列.
xがdimnamesという名前を持つ場合、次元名を選択する文字ベクトルになります。
掃き出す要約統計量。
掃引を実行するために使用される関数。
論理。  TRUE (デフォルト)の場合、STATS の長さまたは次元が x の指定された次元と一致しない場合に警告を出す。
FUNのオプション引数。
数値または文字列を評価する式。
選択肢のリスト。  EXPRが文字列の値を持つことを意図している場合、おそらく「デフォルト」値として使われる1つの選択肢を除いて、これらは命名される。
非負の場合はフレーム番号、負の場合は遡るフレーム数。
遡る世代数。  (「詳細」セクションを参照)
負でない場合はフレーム番号、負の場合は遡るフレーム数。
遡る世代数。  (「詳細」セクションを参照)
単一のパス名を含む文字ベクトル。  tildeexpansion(path.expand参照)が行われる。
ファイルまたはディレクトリのパスを含む文字ベクトル。  Tildeexpansion（path.expandを参照）が実行される。
logical; 失敗時の警告を表示するか。
論理的。last以外のパスの要素を作成するか。  trueの場合、Unixコマンドmkdir -pのようになる。
Unix-alikeで使用するモード： as.octmodeによって強制されます。  Sys.chmodの場合はパスに沿ってリサイクルされます。
論理: モードがumask設定によって制限されるか。
非負の場合はフレーム番号、負の場合は遡るフレーム数。
遡る世代数。  (「詳細」セクションを参照)。
非負の場合はフレーム番号、負の場合は遡るフレーム数。
遡る世代数。  (「詳細」セクションを参照)
非負の場合はフレーム番号、負の場合は遡るフレーム数。
遡る世代数。  (「詳細」セクションを参照)
文字ベクトル、または NULL。
文字列。
論理: 結果に名前を付けるか。  NA(デフォルト)の場合、単一要素の結果には名前が付きませんが、複数要素の結果には名前が付きます。
文字列。  以下のカテゴリは常にサポートされるべきである：「LC_ALL」、「LC_COLLATE」、「LC_CTYPE」、「LC_MONETARY」、「LC_NUMERIC」、「LC_TIME」。  システムによっては（Windowsではない）"LC_MESSAGES"、"LC_PAPER"、"LC_MEASUREMENT "もサポートする。
文字列。  使用中のシステムで有効なロケール名。  通常は""(デフォルト)がシステムのデフォルトロケールを拾う。
相対パスまたは絶対パスのパターンを表す文字ベクトル。  欠落した値は無視される。
論理: / で終わっていない pattern からディレクトリへのマッチには、スラッシュを付加する必要がありますか?  すべてのプラットフォームでサポートされるとは限りません。
.row_names_info(): "row.names "属性を持つ、通常はデータフレームです。.gt、.gtn:通常は S3 または S4 クラスです。
.getRequiredPackages():パッケージの'DESCRIPTION'ファイルへのフルパス。.lazyLoadDBfetch():lazyloadデータベースへのファイルパス。
lazyLoadDBfetch():検索するRlibraryツリーの位置を表す文字ベクトル、またはNULL。  デフォルトの値 NULL は、.libPaths() で現在認識されているすべてのライブラリに対応します。
論理的に指定します。  パッケージが見つからない場合に、警告やエラーを出さないようにするか?
論理的。  Imports フィールドを処理すべきか?
論理: メッセージを出力すべきか。
packageDescription2" クラスの 'DESCRIPTION' ファイル。
cpu-vendor-os "形式のプラットフォーム文字列。
保存またはロードする画像ファイルの名前。
整数。  現在 type = 0 は内部の "row.names" 属性 (NULL の可能性もある) を返し、 type = 2 はその属性が意味する行数を返し、 type = 1 は '自動' 行名の負の符号を返します。
整数。  行数。
package:MASS" のような文字列。
lazyloadデータベースのオブジェクト名。
論理: データベースの値が圧縮されているか。
ロードフック: unserializeを参照。
長さ1の整数ベクトル。
インデックス。
論理値。
Rオブジェクト。
クラスに入れるクラスレスオブジェクト。
オプションのタイムゾーン。
デフォルト・クラスを含むクラスのオプションの文字ベクトル。
difftime を参照してください。
ドット名でないバージョンに渡される引数。
整数。
同じオブジェクトの文字ベクトル。
マスクされるパッケージを示す文字列。
マスクが bypkg で行われるか、(by = FALSE) pkg から行われるかを示す論理値。
非負の場合はフレーム番号、負の場合は遡るフレーム数。
遡る世代数。  (「詳細」セクションを参照)。
非負の場合はフレーム番号、負の場合は遡るフレーム数。
遡る世代数。  (「詳細」セクションを参照)
非負の場合はフレーム番号、負の場合は遡るフレーム数。
遡る世代数。  (「詳細」セクションを参照)
非負の場合はフレーム番号、負の場合は遡るフレーム数。
遡る世代数。  (「詳細」セクションを参照)。
ファイルパスの文字ベクトル。  チルダ展開が行われます:path.expandを参照してください。
.row_names_info(): "row.names "属性を持つ、通常はデータフレーム。.gt、.gtn:通常はS3またはS4クラス。
.getRequiredPackages():パッケージの'DESCRIPTION'ファイルへのフルパス。.lazyLoadDBfetch():lazyloadデータベースへのファイルパス。
lazyLoadDBfetch():検索するRlibraryツリーの位置を表す文字ベクトル、またはNULL。  デフォルトの値 NULL は、.libPaths() で現在認識されているすべてのライブラリに対応します。
論理的に指定します。  パッケージが見つからない場合に、警告やエラーを出さないようにするか?
論理的。  Imports フィールドを処理すべきか?
論理: メッセージを出力すべきか。
packageDescription2" クラスの 'DESCRIPTION' ファイル。
cpu-vendor-os "形式のプラットフォーム文字列。
保存またはロードする画像ファイルの名前。
整数。  現在 type = 0 は内部の "row.names" 属性 (NULL の可能性もある) を返し、 type = 2 はその属性が意味する行数を返し、 type = 1 は '自動' 行名の負の符号を返します。
整数。  行数。
package:MASS" のような文字列。
lazyloadデータベースのオブジェクト名。
論理: データベースの値が圧縮されているか。
ロードフック: unserializeを参照。
長さ1の整数ベクトル。
インデックス。
論理値。
Rオブジェクト。
クラスに入れるクラスレスオブジェクト。
オプションのタイムゾーン。
デフォルト・クラスを含むクラスのオプションの文字ベクトル。
difftime を参照してください。
ドット名でないバージョンに渡される引数。
整数。
同じオブジェクトの文字ベクトル。
マスクされるパッケージを示す文字列。
マスクが bypkg で行われるか、(by = FALSE) pkg から行われるかを示す論理値。
文字列と同じ値を持つ名前付き引数。
文字ベクトル、または文字と保 存可能なオブジェクト。
ファイルまたはディレクトリのパスを含む文字ベクトル。
クラス "POSIXct "の日付時刻、またはその値に強制されるオブジェクト。  秒の端数は無視される。  パスに沿って再利用される。
文字列。  以下のカテゴリは常にサポートされるべきである：「LC_ALL"、"LC_COLLATE"、"LC_CTYPE"、"LC_MONETARY"、"LC_NUMERIC"、"LC_TIME"。  システムによっては（Windowsではない）"LC_MESSAGES"、"LC_PAPER"、"LC_MEASUREMENT "もサポートする。
文字列。  使用中のシステムで有効なロケール名。  通常は""(デフォルト)がシステムのデフォルトロケールを拾う。
実行を一時停止する時間間隔を秒単位で指定する。
読み込むファイルを指定する文字列。
式を評価する環境を指定するRオブジェクト。  デフォルト値のNULLは、基本環境での評価に対応します。  通常、明示的にenvir引数を与えるべきです。
TRUEを指定すると、Rの作業ディレクトリが評価対象のファイルを含むディレクトリに変更されます。
論理。  TRUEを指定すると、関数はコメントを含むソースを保持します。
を参照してください。  TRUEでkeep.sourceもTRUEの場合、関数は解析データをソースとともに保持します。
式を評価する際にトップレベルとして使用するR環境。  この引数は、パッケージテストを実行するフレームワークで有用です。
非負の場合はフレーム番号、負の場合は遡るフレーム数。
遡る世代数。  (詳細」セクションを参照）。
logical: defunct: 無視され、偽の値には警告が表示される。
使用するタイムゾーンデータベース: デフォルトでは、既知の場所を見つかるまで試します。
単一のパス名を含む文字ベクトル。  tildeexpansion（path.expandを参照）が行われる。
ファイルまたはディレクトリのパスを含む文字ベクトル。  Tildeexpansion（path.expandを参照）が実行される。
論理; 失敗時の警告を表示するか。
論理的。last以外のパスの要素を作成するか。  trueの場合、Unixコマンドmkdir -pのようになる。
Unix-alikeで使用するモード： as.octmodeによって強制されます。  Sys.chmodの場合はパスに沿ってリサイクルされます。
論理: モードがumask設定によって制限されるか。
文字列に強制可能な値を持つ名前付き引数。
文字ベクトル、または文字と互換性のあるオブジェクト。
実行可能な名前またはパスの文字ベクトル。
文字列として、呼び出されるシステム・コマンド。
コマンドの出力をR文字ベクトルとしてキャプチャするかどうかを示す論理（NAではない）。
stdout'または'stderr'に書き込まれたメッセージを無視するかどうかを示す論理（NAではない）。
Rインタープリタがコマンドの終了を待つべきか、それとも非同期で実行すべきかを示す論理値（NAではない）。  intern = TRUEの場合、これは無視される（インタプリタは常に待機する）。コマンドを非同期に実行する場合、WindowsのRguiconsoleには出力が表示されません（代わりにドロップされます）。
文字ベクトルが与えられた場合、これは1行につき1文字列ずつ一時ファイルにコピーされ、commandの標準入力はそのファイルにリダイレクトされます。
timeoutは秒単位で指定され、0の場合は無視されます。これは、コマンドを別プロセスで実行した場合の経過時間の制限です。  秒未満の端数は無視されます。
Windowsでは使用できるが、このプラットフォームでは無視される引数。
パッケージ内のサブディレクトリとファイルを指定する文字ベクトル。  デフォルトのnoneはパッケージのルートを返します。  ワイルドカードはサポートされていません。
複数のパッケージ名を指定するとエラーになります。
デフォルト値の NULL の意味については、'詳細' を参照してください。
論理値。  TRUE の場合、マッチするファイルがないとエラーになる。
有効なR式。
論理 - タイミングの直前にガベージ・コレクションを実行するか。  デフォルトはTRUE。
呼び出されるシステム・コマンド（文字列）。
コマンドへの引数の文字ベクトル。
stdout'または'stderr'への出力をどこに送るか。  可能な値は、""、Rconsole（デフォルト）、NULLまたはFALSE（出力を破棄する）、 TRUE（出力を文字ベクトルで取り込む）、またはファイル名を指定する文字列です。
入力を流用しますか?  ""はデフォルト、またはファイル名の文字列を意味する。  入力が与えられた場合は無視される。
文字ベクトルが与えられた場合、これは一時ファイルに1行につき1文字列コピーされ、コマンドの標準入力はそのファイルにリダイレクトされます。
環境変数を設定するname=値文字列の文字ベクトル。
Rinterpreterがコマンドの終了を待つべきか、非同期で実行すべきかを示す論理値（NAではない）。  stdout = TRUEまたはstderr = TRUEの場合、これは無視される（インタプリタは常に待機する）。コマンドを非同期に実行する場合、WindowsのRguiコンソールに出力は表示されません（代わりにドロップされます）。
timeoutは秒数で、0の場合は無視されます。これは、別プロセスでコマンドを実行した場合の経過時間の制限です。   秒未満の端数は無視される。
Windowsでは受け入れられるが、このプラットフォームでは無視される引数。
行列またはデータフレーム。
2倍値は整数に強制される。1以外の長さの引数を指定するとエラーになる。
強制またはテストされるオブジェクト。
他のメソッドに渡される、あるいは他のメソッドから渡されるさらなる引数。
行列またはデータフレーム。
行列またはデータフレーム。
因子（文字列を含む）として解釈できる1つ以上のオブジェクト、またはそのように解釈できる要素を持つリスト（またはデータフレーム）。  (as.tableの場合は特定のメソッドに渡される引数。as.data.frameの場合は未使用。)
...のすべての要素について削除するレベル。  NAを含まず、useNAが指定されていない場合は、useNA = "ifany "を意味する。  非因子引数に対する解釈は'詳細'を参照。
NA値を表に含めるかどうか。  省略可能。
結果の次元に与える名前（dimnames 名）。
デフォルトの dnn の構築方法を制御します。  詳細'を参照。
任意のRオブジェクト、またはas.data.frameメソッドのクラス "table "を継承したオブジェクト。as.data.frame.table(x,*)は、配列の "リシェーピング "のために、テーブルでないxに対して明示的に呼び出されることに注意してください。
データフレームの行名を指定する文字ベクトル。
表エントリの列に使用される名前（通常は counts）。
論理: 分類因子を因子（デフォルト）として返すか、文字ベクトルとして返すか。
provideDimnames に渡されます。
(正の整数の) 数値ベクトル、または因子。長いベクトルもサポートされます。
使用するビンの数。
数値ベクトルまたは複素数ベクトル。
数値または複素数ベクトル
数値ベクトルまたは複素数ベクトル。
分割メソッドが存在する R オブジェクト。  典型的にはベクトル型で、[.でサブセットできる。
Xと同じ長さの1つ以上の因子のリスト。要素はas.factorによって因子に強制されます。
のような関数の場合、関数名はバッククォートまたは引用符で囲む必要があります。  FUNがNULLの場合、tapplyは、tapplyが通常生成する多項配列の添え字に使用できるベクトルを返す。
FUNのオプション引数： 注記セクション。
(配列への単純化の場合のみ)配列がarray(default, dim = ...)として初期化される値。  R 3.4.0以前では、これはarray()のデフォルトNAにハードコードされていた。  これがNA（デフォルト）の場合、NA_real_のような解答型の欠損値が選択されます（"raw "の場合はas.raw(0)）。  数値の場合は、例えばFUN(integer(0))に設定される。
FALSEの場合、tapplyは常に "list "モードの配列を返す。  TRUE（デフォルト）の場合、FUNが常にスカラーを返すと、tapplyはスカラーのモードを持つ配列を返す。
この場合、各要素は、コールバック関数である "f "という要素と、コールバックが呼び出されたときにコールバックに供給される5番目の引数である "data "というオプション要素を持つリストとなる。
この引数にTRUEを指定し、addTaskCallbackを手動で呼び出すことで、関数が登録されるタイミングを制御できます。
TRUEを指定すると、ディスパッチマネージャが実行する特定のアクティビティに関する情報がコンソールに出力されます。
数値または複素行列（またはベクトル）： y = NULL は x と同じ行列とみなされます。ベクトルは、コンテキストに応じて、1列または1行の行列に昇格します。
名前の最初の部分を示す、空でない文字ベクトル。
ディレクトリ名を与える空でない文字ベクトル
ファイル拡張子を指定する，空でない文字ベクトル
tmpdir()がチェックされ、有効でなくなった場合に再作成されるかどうかを示す論理値。
名前の最初の部分を指定する、空でない文字ベクトル。
ディレクトリ名を指定する、空でない文字ベクトル。
ファイル拡張子を指定する、空でない文字ベクトル。
tmpdir()がチェックされ、有効でなくなった場合に再作成されるべきかどうかを示す論理。
文字。  入力接続の場合、これはR文字ベクトルオブジェクトであり、出力接続の場合、出力を受け取るR文字ベクトルの名前、またはNULL(何もない場合)。
文字列。  入力接続の場合は "r"（または同等の""）、出力接続の場合は "w "または "a"。
論理。  出力接続にのみ使用される。  TRUEの場合、出力は呼び出し環境の変数に代入される。  それ以外の場合は、グローバル環境が使用される。
接続名を指定する文字列。
部分一致文字列。  入力接続にのみ使用されます。  現在のロケールに変換するか、バイト単位で使用するか、UTF-8に変換するかです。
出力テキスト接続。
文字。  入力接続の場合は R 文字ベクトルオブジェクト、出力接続の場合は出力を受け取る R 文字ベクトルの名前、または NULL (何もない場合)。
文字列。  入力接続の場合は "r"（または同等の""）、出力接続の場合は "w "または "a"。
論理。  出力接続にのみ使用される。  TRUEの場合、出力は呼び出し環境の変数に代入される。  それ以外の場合は、グローバル環境が使用される。
接続名を指定する文字列。
部分一致文字列。  入力接続にのみ使用されます。  現在のロケールに変換するか、バイト単位で使用するか、UTF-8に変換するかです。
出力テキスト接続。
文字ベクトル、またはas.characterによって文字に強制できるオブジェクト。
翻訳される文字を指定する文字列。  長さが2以上の文字ベクトルが与えられた場合、警告とともに最初の要素が使用されます。
翻訳を指定する文字列。長さが2以上の文字ベクトルが与えられた場合、警告とともに最初の要素が使用される。
論理: 大文字または小文字に変換しますか?
環境。
他の条件が満たされる前にこの環境がマッチした場合、この環境を返す。  デフォルトのオプションtopLevelEnvironmentは、sys.sourceによって設定され、特定の環境をトップレベル環境として扱います。引数にNULLまたはemptyenv()を指定すると、決してマッチしません。
変換するオブジェクト。
最大フィールド幅を指定します。  受け入れられる最小値は 6 で、それより小さい値は 6 とみなされます。
メソッドに渡される、またはメソッドから渡されるオプションの引数。
変換されるオブジェクト。
最大フィールド幅の提案。  受け入れられる最小値は6で、より小さい値は6とみなされます。
メソッドに渡される、またはメソッドから渡されるオプションの引数。
文字ベクトル、またはas.characterによってcharacterに強制できるオブジェクト。
翻訳される文字を指定する文字列。  長さが2以上の文字ベクトルが与えられた場合、警告とともに最初の要素が使用されます。
翻訳を指定する文字列。長さが2以上の文字ベクトルが与えられた場合、警告とともに最初の要素が使用される。
論理: 大文字または小文字に変換しますか?
トレースまたはトレース解除する関数の名前。  untraceまたは複数の引数を持つtraceの場合、quoted形式で複数の名前を指定することができ、それぞれに同じアクションが適用されます。  名前空間内のS3メソッドのような "隠された "関数では、通常、where = * も指定する必要があります。
には、関数か評価されない式を指定します。  関数が呼び出されるか、式が評価されるのは、呼び出しの最初か、引数atで指定された呼び出しのステップの前です。
関数または評価されない式のいずれか。  詳細はセクションを参照してください。
オプションの数値ベクトルまたはリスト。  詳細セクションを参照してください。
TRUE(デフォルト)の場合、トレース式が評価される前に説明行が表示されます。
 この引数を指定する場合は、関数whatのメソッドのシグネチャとして指定します。  この場合、関数そのものではなく、そのメソッドがトレースされます。
 関数内のループ内をトレースするような複雑なトレースでは、関数本体を編集して必要な呼び出しを挿入する必要があります。  その場合、editar引数にTRUEを指定するか、使用したいエディタ名を指定します。  trace()はeditを呼び出し、編集後のバージョンの関数を使用します。  詳細については、詳細セクションを参照してください。
この引数の重要な使用法は、"隠された "あるいは別のパッケージから呼び出されたパッケージの関数をトレースすることです。名前空間機構は、呼び出される関数をインポートします(基本パッケージの関数は例外です)。  呼び出される関数は、トップ・レベルから見たオブジェクトとは異なります（一般的に、インポートされたパッケージはアタッチされていないかもしれません）。  そのためには、引数whereを名前空間（またはその名前空間）の関数に設定します。  そうすると、トレース計算がその関数の環境(対応するパッケージの名前空間)を探し始めます(微妙ですが、ここでのセマンティクスはRで名前空間が機能するための中心的なものです)。
サポート関数tracingStateの呼び出しは、トレースがグローバルにオンになっていればTRUEを返し、そうでなければFALSEを返します。  これらの値のどちらか一方の引数が状態を設定します。  tracingState が FALSE の場合、トレースアクションは実際に発生しません（例えば、デバッグ中にトレースを停止するためにデバッグ関数で使用されます）。
exprはトレースアクション（browser()の呼び出しなど）で、msgはトレースアクションが発生する場所を特定する文字列です。
returnValue が戻り値を返さない場合 (例えば、関数がエラー、再起動、または呼び出し元関数からの戻り値の評価結果として終了した場合)、代わりに default を返します。
NULL（デフォルト、.Tracebackを意味する）、または現在のスタックでスキップする呼び出しの整数カウント、または呼び出しのリストまたはペアリストを返します。  詳細を参照。
1回の呼び出しで出力される行の最大数を数値で指定する。  デフォルトは無制限である。  xがNULL、呼び出しのリストまたはペアリストの場合にのみ適用されます。
関数や環境、NULLではないRオブジェクト。
tracememまたはretracememが返す値。
トレースまたはアントレースされる関数の名前。  untraceや複数の引数を持つtraceでは、quoted形式で複数の名前を与えることができ、それぞれに同じアクションが適用されます。  名前空間内のS3メソッドのような "隠された "関数では、通常、where = * も指定する必要があります。
には、関数か評価されない式を指定します。  関数が呼び出されるか、式が評価されるのは、呼び出しの最初か、引数atで指定された呼び出しのステップの前です。
関数または評価されない式のいずれか。  詳細はセクションを参照してください。
オプションの数値ベクトルまたはリスト。  詳細セクションを参照してください。
TRUE(デフォルト)の場合、トレース式が評価される前に説明行が表示されます。
 この引数を指定する場合は、関数whatのメソッドのシグネチャとして指定します。  この場合、関数そのものではなく、そのメソッドがトレースされます。
 関数内のループ内をトレースするような複雑なトレースでは、関数本体を編集して必要な呼び出しを挿入する必要があります。  その場合、editar引数にTRUEを指定するか、使用したいエディタ名を指定します。  trace()はeditを呼び出し、編集後のバージョンの関数を使用します。  詳細については、詳細セクションを参照してください。
この引数の重要な使用法は、"隠された "あるいは別のパッケージから呼び出されたパッケージの関数をトレースすることです。名前空間機構は、呼び出される関数をインポートします(基本パッケージの関数は例外です)。  呼び出される関数は、トップ・レベルから見たオブジェクトとは異なります（一般的に、インポートされたパッケージはアタッチされていないかもしれません）。  そのためには、引数whereを名前空間（またはその名前空間）の関数に設定します。  そうすると、トレース計算がその関数の環境(対応するパッケージの名前空間)を探し始めます(微妙ですが、ここでのセマンティクスはRで名前空間が機能するための中心的なものです)。
サポート関数tracingStateの呼び出しは、トレースがグローバルにオンになっていればTRUEを返し、そうでなければFALSEを返します。  これらの値のどちらか一方の引数が状態を設定します。  tracingState が FALSE の場合、トレースアクションは実際に発生しません（例えば、デバッグ中にトレースを停止するためにデバッグ関数で使用されます）。
exprはトレースアクション（browser()の呼び出しなど）で、msgはトレースアクションが発生する場所を特定する文字列です。
returnValueに戻り値がない場合（例えば、エラーや再起動、呼び出し元関数からの戻りを評価した結果、関数が終了した場合）、代わりにdefaultを返します。
変換されるオブジェクト
tag=value 形式のさらなる引数
変換されるオブジェクト
tag=value 形式のさらなる引数
変換されるオブジェクト
tag=value 形式のさらなる引数
非負の数値ベクトル。
数値ベクトル。
整数ベクトル。
文字ベクトル
先頭と末尾の両方の空白を削除するか（デフォルト）、先頭のみ（"left"）または末尾のみ（"right"）を削除するかを指定する文字列。  省略可能。
ホワイトスペース "にマッチする正規表現を指定する文字列。
数値ベクトル。  round や signif の場合は、複素数ベクトル。
使用する小数点以下の桁数(round)または有効桁数(signif)を示す整数。
メソッドに渡す引数。
POSIXt" または "Date" を継承したオブジェクト。
記載されている単位のいずれか。  省略可能。
他のメソッドに渡す引数、または他のメソッドから渡される引数。
POSIXt "または "Date "を継承したオブジェクト。
記載されている単位のいずれか。  省略可能。
他のメソッドに渡す引数、または他のメソッドから渡される引数。
接続。
数値。  ファイル位置（originで指定されたオリジンからの相対位置）、またはNA。
文字列。  空または "read "または "write"、部分一致可。
文字列。  start"、"current"、"end "のいずれか。
他のメソッドに渡される、あるいは他のメソッドから渡される引数。
接続。
数値。  ファイル位置 (origin で指定したオリジンからの相対位置)、または NA。
文字列。  空または "read "または "write"、部分一致可。
文字列。  start"、"current"、"end "のいずれか。
他のメソッドに渡される、または他のメソッドから渡される引数。
試行するR式。
論理: エラーメッセージの報告を抑制するか。
デフォルトでは silent が false の場合にのみ使用されます。
条件オブジェクト。
呼び出し式。
条件オブジェクト。
評価される式。
リターンまたは終了する前に評価される式。
関数
文字列
文字列
リスタートを指定する文字列
restartオブジェクト。
オブジェクトを指定します。
条件クラスの名前を指定する文字列。
追加の引数。
条件オブジェクト。
呼び出し式。
条件オブジェクト。
評価される式。
リターンまたは終了する前に評価される式。
関数
文字列
文字列
リスタートを指定する文字列
restartオブジェクト。
オブジェクトを指定します。
条件クラスの名前を指定する文字列。
詳細は後述する。
任意のRオブジェクト。
Rオブジェクト。
valueにはNULLを指定することもできる。
戻り値に影響を与える論理値。
解釈されたR関数。
ブラウザ入力時に取得可能なテキスト文字列。
ブラウザ入力時に取得可能な条件。
オプションのメソッド・シグネチャ。指定された場合、メソッドはジェネリックではなくデバッグされます。
サポート関数debuggingStateの呼び出しは、デバッグがグローバルにオンになっていればTRUEを返し、そうでなければFALSEを返します。  引数にこれらの値のどちらか一方を指定すると、状態が設定される。  デバッグ状態がFALSEの場合、デバッグ動作は何も起こりません（しかし、関数内の明示的なブラウザ呼び出しは動作し続けます）。
ベクトル（同じモード）には、重複する値のない（概念上の）一連の項目が含まれます。
ベクトル、データフレーム、配列、NULL。
FALSE は特別な値で、すべての値を比較できることを意味し、デフォルト以外のメソッドでは唯一の値となります。  内部的にはxと同じ型に強制される。
つまり、同じ要素の最後（または右端）が保持されます。  これは、ordimnamesという名前の場合のみ重要である。
期待される一意な項目の最大数 (1より大きい)。
特定のメソッドの引数。
固定される配列のマージン。
ベクトル、データフレーム、配列、NULL。
FALSE は特別な値で、すべての値が比較可能であることを意味し、デフォルト以外のメソッドでは唯一の値となります。  内部的にはxと同じ型に強制される。
つまり、同じ要素の最後（または右端）が保持されます。  これは、ordimnamesという名前の場合のみ重要である。
期待される一意な項目の最大数 (1より大きい)。
特定のメソッドの引数。
固定される配列のマージン。
ベクトル、データフレーム、配列、NULL。
FALSE は特別な値で、すべての値が比較可能であることを意味し、デフォルト以外のメソッドでは唯一の値となります。  内部的にはxと同じ型に強制される。
つまり、同じ要素の最後（または右端）が保持されます。  これは、ordimnamesという名前の場合のみ重要である。
期待される一意な項目の最大数 (1より大きい)。
特定のメソッドの引数。
固定される配列のマージン。
ベクトル、データフレーム、配列、NULL。
FALSE は特別な値で、すべての値が比較可能であることを意味し、デフォルト以外のメソッドでは唯一の値となります。  内部的にはxと同じ型に強制される。
つまり、同じ要素の最後（または右端）が保持されます。  これは、ordimnamesという名前の場合のみ重要である。
期待される一意な項目の最大数 (1より大きい)。
特定のメソッドの引数。
固定される配列のマージン。
ベクトル、データフレーム、配列、NULL。
FALSE は特別な値で、すべての値が比較可能であることを意味し、デフォルト以外のメソッドでは唯一の値となります。  内部的にはxと同じ型に強制される。
つまり、同じ要素の最後（または右端）が保持されます。  これは、ordimnamesという名前の場合のみ重要である。
期待される一意な項目の最大数 (1より大きい)。
特定のメソッドの引数。
固定される配列のマージン。
package_version の場合は R.version で取得した Rversion オブジェクト。
無効な数値バージョンはエラーになるか(デフォルト)、ならないかを示す論理。
date-timeクラスの1つから出力または要約されるオブジェクト。
format.POSIXctに渡されます。
出力するエントリの最大数を指定します。  デフォルトでは、NULL の場合、getOption("max.print") が使用されます。
計算の有効桁数: 最も重要でない時間単位を正確に表すのに十分な桁数でなければならない。
他のメソッドから、あるいは他のメソッドに渡す引数。
日時オブジェクト
日時オブジェクトまたは文字ベクトル。  (文字ベクトルはas.POSIXct.によって変換される)
数値ベクトル（秒単位）
==, !=, <, <=, >=のいずれか。
cat (forwarnings())に渡す引数。
warnings()が返す "warnings "オブジェクト。
warnings "または "summary.warnings "オブジェクト。
メッセージに "ラベル "を付けるための、xと同じ長さの文字ベクトル。  デフォルトは paste0(seq_len(n), ": ") forn >= 2 where n <- length(x).
メッセージが表示される前に cat()される文字列。
date-time または date オブジェクト。
主に "POSIXlt "オブジェクトで変換に使われるオプションのタイムゾーン指定。
文字列。  結果の単位。  省略可能。
文字列。  単位と同様だが、省略はできない。
時間間隔を指定する文字列または数値。
timの書式を指定する文字。  デフォルトはロケール固有の時間フォーマットです。
クラス "difftime "を継承したオブジェクト。
他のメソッドに渡す引数。
date-time または date オブジェクト。
変換に使用するオプションのタイムゾーン指定。
文字列。  変換結果の単位。  省略可能。
文字列。  単位と同様だが、省略はできない。
時間間隔を指定する文字列または数値。
timの書式を指定する文字。  デフォルトはロケール固有の時間フォーマットです。
クラス "difftime "を継承したオブジェクト。
他のメソッドに渡す引数。
date-time または date オブジェクト。
変換に使用するオプションのタイムゾーン指定。
文字列。  変換結果の単位。  省略可能。
文字列。  単位と同様だが、省略はできない。
時間間隔を指定する文字列または数値。
timの書式を指定する文字。  デフォルトはロケール固有の時間フォーマットです。
クラス "difftime "を継承したオブジェクト。
他のメソッドに渡す引数。
date-time または date オブジェクト。
変換に使用するオプションのタイムゾーン指定。
文字列。  変換結果の単位。  省略可能。
文字列。  単位と同様だが、省略はできない。
時間間隔を指定する文字列または数値。
timの書式を指定する文字。  デフォルトはロケール固有の時間フォーマットです。
クラス "difftime "を継承したオブジェクト。
他のメソッドに渡す引数。
(引数)
削除するファイル名またはディレクトリ名を指定する文字ベクトル。
論理的に削除されます。  ディレクトリを再帰的に削除するか。
論理的。  可能であれば）パーミッションを変更して、ファイルまたはディレクトリを削除できるようにするか。
論理的。ワイルドカード（以下の「詳細」を参照）やチルダ（path.expandを参照）を展開すべきか？
Rオブジェクト（通常はリストまたはベクトル）。
論理的。  x の listcomponents に unlisting を適用すべきか？
論理的。  名前を保持するか。
文字列または名前空間オブジェクト。
アタッチする位置を指定する整数。
NULL または依存関係の文字ベクトルで、パッケージ内のオブジェクト .Depends に記録する。
ロードするパッケージ/名前空間を指定する文字列。
ライブラリ検索パスを指定する文字ベクトル。
パッケージのインストール時以外は無視されます。
パッケージのインストール中以外は無視されます。
trueの場合、コードをロードした直後に停止する。
NULLまたはバージョン指定（opとversionで構成されるリスト）。
logical: 進捗メッセージとエラーメッセージを抑制するか。
文字列またはパッケージの「名前」、as.symbolを参照。
文字ベクトル。
loadNamespaceに渡すその他の引数。
環境。
バインディングをロックするかどうかを指定する論理。
名前オブジェクトまたは文字列。
0個または1個の引数をとる関数。
Rオブジェクト。
論理。trueの場合、data.framesからもdimnames（名前とrowname）が削除される。
シリアライズするRオブジェクト。
オープンな接続、または（シリアライズする場合は）NULL、または（シリアライズしない場合は）生のベクトル（'詳細'を参照）。
論理値。  TRUEまたはNAの場合、ASCII表現が書き込まれ、そうでない場合(デフォルト)はバイナリ表現が書き込まれます。
論理値: バイナリ表現を使用する場合、ビッグエンディアンのもの (XDR) を使用するか。
使用するワークスペース・フォーマットのバージョン。  NULLは現在のデフォルト・バージョン(3)を指定します。他にサポートされている値は2のみで、これはR 1.4.0からR 3.5.0までのデフォルトです。
参照オブジェクトを扱うためのフック関数。
グループに分けられる値を含むベクトルまたはデータフレーム。
as.factor(f)がグループ化を定義するという意味での'因子'、またはそのような因子のリストで、それらの相互作用がグループ化に使用されます。xがデータフレームである場合、fは変数gで分割するための~ gの形の式、またはより一般的には~ g1 + ... + gkの形の式にすることもできる。また、より一般的には、変数g1, ..., gkの相互作用によって分割する~ g1 + ..., gkの形式をとることもできる。
発生しないレベルを削除するかどうかを示す論理（fが因子またはリストの場合）。
長さが一致しない場合はリサイクルが適用されます。
文字列、fがリストの場合にinteractionに渡される。
論理。fがリストの場合に相互作用に渡される。
メソッドに渡されるその他の引数。
トレースまたはアントレースする関数の名前。  untraceや複数の引数を持つtraceでは、quoted形式で複数の名前を与えることができ、それぞれに同じアクションが適用されます。  名前空間内のS3メソッドのような "隠された "関数では、通常、where = * も指定する必要があります。
には、関数か評価されない式を指定します。  関数が呼び出されるか、式が評価されるのは、呼び出しの最初か、引数atで指定された呼び出しのステップの前です。
関数または評価されない式のいずれか。  詳細はセクションを参照してください。
オプションの数値ベクトルまたはリスト。  詳細セクションを参照してください。
TRUE(デフォルト)の場合、トレース式が評価される前に説明行が表示されます。
 この引数を指定する場合は、関数whatのメソッドのシグネチャとして指定します。  この場合、関数そのものではなく、そのメソッドがトレースされます。
 関数内のループ内をトレースするような複雑なトレースでは、関数本体を編集して必要な呼び出しを挿入する必要があります。  その場合、editar引数にTRUEを指定するか、使用したいエディタ名を指定します。  trace()はeditを呼び出し、編集後のバージョンの関数を使用します。  詳細については、詳細セクションを参照してください。
この引数の重要な使用法は、"隠された "あるいは別のパッケージから呼び出されたパッケージの関数をトレースすることです。名前空間機構は、呼び出される関数をインポートします(基本パッケージの関数は例外です)。  呼び出される関数は、トップ・レベルから見たオブジェクトとは異なります（一般的に、インポートされたパッケージはアタッチされていないかもしれません）。  そのためには、引数whereを名前空間（またはその名前空間）の関数に設定します。  そうすると、トレース計算がその関数の環境(対応するパッケージの名前空間)を探し始めます(微妙ですが、ここでのセマンティクスはRで名前空間が機能するための中心的なものです)。
サポート関数tracingStateの呼び出しは、トレースがグローバルにオンになっていればTRUEを返し、そうでなければFALSEを返します。  これらの値のどちらか一方の引数が状態を設定します。  tracingState が FALSE の場合、トレースアクションは実際に発生しません（例えば、デバッグ中にトレースを停止するためにデバッグ関数で使用されます）。
exprはトレースアクション（browser()の呼び出しなど）で、msgはトレースアクションが発生する場所を特定する文字列です。
returnValueが戻り値を返さない場合（例えば、エラー、再起動、呼び出し元関数からのreturnを評価した結果、関数が終了した場合）、代わりにdefaultを返します。
関数でも環境でもNULLでもないRオブジェクト。
tracememまたはretracememが返す値。
文字列。  詳細'を参照。
文字列。  接続のオープン方法の説明(最初にオープンする場合)。  指定できる値については「モード」のセクションを参照のこと。
論理値。  ブロック」のセクションを参照。
想定するエンコーディングの名前。  エンコーディング」のセクションを参照。
論理値。  trueを指定すると、'raw'インターフェイスが使用され、 通常のファイルではない引数、例えばキャラクタデバイスなどに適している。  これは、テキストモードの読み込みのためにオープンする際に、 圧縮ファイルであるかどうかのチェックを抑制し、「ファイル」がシーク可能でない可能性があることを表明する。
文字列、部分的に一致するtoc("default", "internal", "wininet", "libcurl"):「詳細」を参照。
HTTPrequests で使用する HTTP ヘッダの名前付き文字ベクトル。  非 HTTP URL では無視されます。  HTTPUserAgent オプション (オプション参照) にある User-Agent ヘッダが自動的に最初のヘッダとして使用されます。
0-9 の整数。  書き込み時に適用する圧縮の量を、なしから最大まで指定します。  forxzfile には負の値を指定することもできます: '圧縮'のセクションを参照ください。
数値: この接続で使用するタイムアウト (秒単位)。  OSによっては、非常に大きな値をゼロとして扱うことがあるので注意すること。ただし、POSIX標準では31日までの値をサポートしている。
オプションの文字ベクトル。現在のところ、TCPソケットでは "no-delay "のみがサポートされている。
zip ファイル内のファイル名。
文字列。  ポートのホスト名。
整数。  TCP ポート番号。
論理。  ソケットをクライアントにするかサーバーにするか。
接続をリッスンするサーバソケット。
コネクション。
文字列。  現在は無視される。
文字列。  空文字列または "read "または "write"、部分一致可。
他のメソッドに渡される、または他のメソッドから渡される引数。
length(dim(x)) == 2を持つ行列または他のRオブジェクト。バックコンパチビリティのため、上記を満たさない場合、as.matrix(x)が最初に呼び出されます。
論理的です。  対角を含めるか？
文字列。  接続の説明： '詳細'を参照。
文字列。  接続の開き方(最初に開く場合)。  指定できる値については「モード」のセクションを参照のこと。
論理値。  ブロック」のセクションを参照。
想定するエンコーディングの名前。  エンコーディング」のセクションを参照。
論理値。  trueを指定すると、'raw'インターフェイスが使用され、 通常のファイルではない引数、例えばキャラクタデバイスに適している。  これは、テキストモードでの読み込みのためにオープンする際に、 圧縮ファイルであるかどうかのチェックを抑制し、「ファイル」がシーク可能でない可能性があることを表明する。
文字列、部分的に一致するtoc("default", "internal", "wininet", "libcurl"):「詳細」を参照。
HTTPrequests で使用する HTTP ヘッダの名前付き文字ベクトル。  非 HTTP URL では無視されます。  HTTPUserAgent オプション (options を参照) で指定した User-Agent ヘッダが自動的に最初のヘッダとして使用されます。
0-9 の整数。  書き込み時に適用する圧縮の量を、なしから最大まで指定します。  forxzfile には負の値を指定することもできます: '圧縮'のセクションを参照ください。
数値: この接続で使用するタイムアウト (秒単位)。  OSによっては、非常に大きな値をゼロとして扱うことがあるので注意すること。ただし、POSIX標準では31日までの値をサポートしている。
オプションの文字ベクトル。現在のところ、TCPソケットでは "no-delay "のみがサポートされている。
zip ファイル内のファイル名。
文字列。  ポートのホスト名。
整数。  TCP ポート番号。
論理。  ソケットをクライアントにするかサーバーにするか。
接続をリッスンするサーバソケット。
コネクション。
文字列。  現在は無視される。
文字列。  空文字列または "read "または "write"、部分一致可。
他のメソッドに渡される、または他のメソッドから渡される引数。
関数を指定する文字列 (組み込みの演算子ではありません)。  UseMethodでは必須。
UseMethod: ディスパッチされるメソッドを決定するクラスを持つオブジェクト。  デフォルトは、関数の最初の引数です。
次のメソッドに渡されるさらなる引数。
変換されるオブジェクト。
論理: 変換は、1文字の文字列に変換するのか、複数の個々の文字に変換するのか。
論理：サロゲート・ペアの解釈を試みるべきか？  (multiple = FALSE の場合のみサポートされます。
文字ベクトル。
文字ベクトル。
ベクトル（アトミックまたはリスト）または式オブジェクト。  その他のオブジェクト(クラス化されたオブジェクトを含む)はbase::as.listによって強制されます。
Xの各要素に適用される関数。  や%*%のような関数の場合、関数名はバッククォートか引用符で囲む必要があります。
FUNのオプション引数。
可能であれば、結果をベクトル、行列、高次元配列に簡略化するか。  デフォルト値のTRUEは、適切であればベクトルまたは行列を返すが、simplify = "array "の場合、結果はFUN(X[[i]])の結果よりも1つ上の "rank"(=length(dim(.)))の配列になる可能性がある。
論理; TRUEでXが文字の場合、Xが既に名前を持っていない限り、Xを結果の名前として使用する。  この引数は ... に続くので、その名前は省略できない。
(一般化された)ベクトル; FUNからの戻り値のテンプレート。  詳細'を参照。
整数: 複製数。
繰り返し評価する式（言語オブジェクト、通常はコール）。
リスト。通常は lapply() から返される。
この2つのケースはそれぞれ、sapply(*, simplify = "array") またはsimplify = TRUEに対応する。
アトミックモードを指定する文字列、"リスト"、"式"、または（vectorを除く）"any"。  現在のところ、is.vector()は、modeに任意の型(seetypeof)を指定でき、modeが "any "でない場合、is.vector(x, mode)は、typeof(x) == modeとほぼ同じです。
は、必要な長さを指定する非負整数です。  長いベクトル、すなわち length > .Machine$integer.maxの場合、"double "型でなければなりません。  長さが 1 以外の引数を指定するとエラーになります。
R オブジェクト。
適用する関数。match.funを介して見つかる。
ベクトル化されるべき引数の文字ベクトル。  デフォルトはFUNの全引数。
結果をベクトル、行列、高次元配列に縮小しようとする。
最初の...引数がnamesの場合はnamesを使用し、文字ベクトルの場合はその文字ベクトルをnamesとして使用する。
文字に強制できる0個以上のオブジェクト（区切り文字なしで一緒に貼り付けられる）、または単一の条件オブジェクト。
論理。呼び出しが警告メッセージの一部になるかどうかを示す。
論理的に、getOption("warn") <= 0であっても、呼び出しを直ちに出力すべきかどうかを示す。
options("warn")が1であるとき、メッセージを1行として出力すべきかどうかを示す。
評価する式。
gettext を参照。  NAの場合、メッセージは翻訳されない。
文字。どのクラスの警告を抑制するかを示す。
条件オブジェクト。
call式。
条件オブジェクト。
評価される式。
リターンまたは終了する前に評価される式。
関数
文字列
文字列
リスタートを指定する文字列
restartオブジェクト。
オブジェクトを指定します。
条件クラスの名前を指定する文字列。
詳細は後述する。
cat (forwarnings()) に渡す引数。
warnings()が返す "warnings "オブジェクト。
warnings "または "summary.warnings "オブジェクト。
メッセージに "ラベル "を付けるための、xと同じ長さの文字ベクトル。  デフォルトは paste0(seq_len(n), ": ") forn >= 2 where n <- length(x).
メッセージが出力される前に cat()される文字列。
クラス "POSIXt "または "Date "を継承したオブジェクト。
論理ベクトル（再利用可能）。  名前は省略されるべきか？
クラス "POSIXt "または "Date "を継承したlength-oneオブジェクト。
他のメソッドの引数。
クラス "POSIXt" または "Date" を継承するオブジェクト。
論理ベクトル（再利用可能）。  名前は省略可能か？
クラス "POSIXt" または "Date" を継承する長さ 1 のオブジェクト。
他のメソッドの引数。
クラス "POSIXt" または "Date" を継承するオブジェクト。
論理ベクトル（再利用可能）。  名前は省略可能か？
クラス "POSIXt" または "Date" を継承する長さ 1 のオブジェクト。
他のメソッドの引数。
論理ベクトルまたは配列。  NAは省略可能です（FALSEのように扱われます）。
論理。x が配列の場合、配列のインデックスを返すべきか？
which(x)の結果の整数値インデックス・ベクトル。
dim(.) 整数ベクトル
useNamesがtrueの場合、arrayInd()（したがってwhich(*, arr.ind=TRUE)）のためのdimnamesの構築に使用されます。names(.dimnames)が空でない場合、これらは列名として使用されます。  .dimnames[[1]]は行名として使用されます。
arrayInd()の値が(nullでない)dimnamesを持つかどうかを示す論理値。
数値(論理、整数、またはdouble)ベクトル、またはdoubleへの内部強制が働くRオブジェクト。
数値（論理、整数またはdouble）ベクトル、または内部強制で2倍が働くRオブジェクト whosemin または max を検索します。
1以上の長さの条件は、現在のところ警告付きで受け付けられますが、最初の要素だけが使用されます。  環境変数_R_CHECK_LENGTH_1_CONDITION_がtrueに設定されると、代わりにエラーが通知されます。  その他の型は、可能であれば論理型に強制され、クラスは無視される。
変数の構文名。
ベクトル（リストと式を含む）、ペアリスト、NULLを評価する式。  因子値は文字ベクトルに強制される。  R4.0.0から、これは長いベクタになる。
形式的な意味での式。  通常は { expr1 ; expr2 } のような形式です。
環境構築に使用するデータ。デフォルトのwithメソッドの場合、これは環境、リスト、データフレーム、またはsys.callのような整数となります。within の場合は、リストまたはデータ・フレームです。
特にwithin()の場合は、「複合」式、つまり { a <- somefun() b <- otherfun() ...... rm(unused1, temp) } のような形式をとることが多い。
within()のリスト・メソッドでは、結果のリストがデータからの属性を保持し、その名前を同じ順序にするかどうかを指定する論理。  結果はいずれにせよ名前付きリストになるため、多くの場合これは不要であり、keepAttrs = FALSEの方が効率的です。
将来の）メソッドに渡す引数。
環境構築に使用するデータ。デフォルトのwithメソッドでは、これは環境、リスト、データフレーム、またはsys.callのような整数になります。within メソッドでは、リストまたはデータ・フレームになります。
特にwithin()の場合は、「複合」式、つまり { a <- somefun() b <- otherfun() ...... rm(unused1, temp) } のような形式をとることが多い。
within()のリスト・メソッドでは、結果のリストがデータからの属性を保持し、その名前を同じ順序にするかどうかを指定する論理。  結果はいずれにせよ名前付きリストになるため、多くの場合これは不要であり、keepAttrs = FALSEの方が効率的です。
将来の）メソッドに渡す引数。
接続、または読み込むファイルやURLのパス名を示す文字列。  "" は、接続 stdin() を示す。
TRUE、FALSE、または解析された式を評価する環境を指定します。  FALSE (既定値) はユーザのワークスペース (グローバル環境) に対応し、TRUE は source が呼び出された環境に対応します。
TRUE の場合、各式は解析後、評価前に出力されます。
TRUE の場合、各式 i に対して eval(i) の結果が出力されます。
source() および withAutoprint(*, evaluated=TRUE) では、ファイル、式、呼び出し、または呼び出しのリストを指定する代わりに、評価されない "式" を指定します。
exprsがソースに渡され(exprs= *)、したがって評価されなければならないことを示す論理。
echo=TRUEの場合）各式の前に改行（つまり空行）を表示するかどうかを示す。
TRUEを指定すると、入力の解析と評価中に、各式に関する追加情報を含む、（echo = TRUEよりも）多くの診断が表示されます。
character; echo = TRUE の場合に使用するプロンプトを指定します。
integer; echoがTRUEの場合にのみ使用され、1つの式のdeparseに出力される最大文字数を指定します。
ソース参照がない場合にのみ使用されます。
文字ベクトル。deparse() に制御として渡されます。  R のバージョン <= 3.3.x では、これは "showAttributes" にハードコードされており、これが現在のデフォルトである。
TRUEでfileがパス名の場合、Rの作業ディレクトリは一時的に評価用のファイルを含むディレクトリに変更される。
文字ベクトル。  fileが文字列である場合に想定されるエンコーディング。  エンコーディングが推測される場合、"unknown "という値もあり得る。
文字; echo = TRUE の場合に継続行で使用するプロンプトを指定する。
整数: echo = TRUE の場合にスキップするファイル先頭のコメント行数を指定します。
論理: 式を echo するとき、可能ならソースの書式を保持するか?
(withAutoprint():の場合) source(.)に渡す追加の(ファイルに関連しない)引数。
条件オブジェクト。
呼び出し式。
条件オブジェクト。
評価される式。
戻り値または終了前に評価される式。
関数
文字列
文字列
リスタートを指定する文字列
restartオブジェクト。
オブジェクトを指定します。
条件クラスの名前を指定する文字列。
追加の引数。
環境構築に使用するデータ。デフォルトのwithメソッドの場合、これは環境、リスト、データフレーム、またはsys.callのような整数になります。withinの場合は、リストまたはデータフレームです。
特にwithin()の場合は、「複合」式、つまり { a <- somefun() b <- otherfun() ...... rm(unused1, temp) } のような形式をとることが多い。
within()のリスト・メソッドでは、結果のリストがデータからの属性を保持し、その名前を同じ順序にするかどうかを指定する論理。  結果はいずれにせよ名前付きリストになるため、多くの場合これは不要であり、keepAttrs = FALSEの方が効率的です。
将来の）メソッドに渡す引数。
環境構築に使用するデータ。デフォルトのwithメソッドでは、これは環境、リスト、データフレーム、またはsys.callのような整数になります。within メソッドでは、リストまたはデータ・フレームになります。
特にwithin()の場合は、「複合」式、つまり { a <- somefun() b <- otherfun() ...... rm(unused1, temp) } のような形式をとることが多い。
within()のリスト・メソッドでは、結果のリストがデータからの属性を保持し、その名前を同じ順序にするかどうかを指定する論理。  結果はいずれにせよ名前付きリストになるため、多くの場合これは不要であり、keepAttrs = FALSEの方が効率的です。
将来の）メソッドに渡す引数。
環境構築に使用するデータ。デフォルトのwithメソッドでは、これは環境、リスト、データフレーム、またはsys.callのような整数になります。within メソッドでは、リストまたはデータ・フレームになります。
特にwithin()の場合は、「複合」式、つまり { a <- somefun() b <- otherfun() ...... rm(unused1, temp) } のような形式をとることが多い。
within()のリスト・メソッドでは、結果のリストがデータからの属性を保持し、その名前を同じ順序にするかどうかを指定する論理。  結果はいずれにせよ名前付きリストになるため、多くの場合これは不要であり、keepAttrs = FALSEの方が効率的です。
将来の）メソッドに渡す引数。
条件オブジェクト。
呼び出し式。
条件オブジェクト。
評価される式。
リターンまたは終了する前に評価される式。
関数
文字列
文字列
リスタートを指定する文字列
restartオブジェクト。
オブジェクトを指定します。
条件クラスの名前を指定する文字列。
追加の引数。
評価される式。
書き出すデータ。通常はアトミック・ベクトル。
接続、または書き出すファイルを指定する文字列。  .Platform$OS.type != "windows "で、"|cmd "の場合、出力は'cmd'で指定されたコマンドにパイプされる。
データを書き込む列数。
TRUE の場合、データ x が接続に追加される。
列を区切るための文字列。  デフォルトは" "。
""はコンソールへの出力を示します。  read.dcfの場合は、圧縮ファイル名を指定できます（gzfileを参照）。
DCFファイルから読み込むフィールド。  デフォルトは全フィールドを読み込む。
allが偽の場合（デフォルト）、最後に出現したフィールドのみが使用される。
またはNULL（デフォルト）は、そのようなフィールドがないことを示す。  可能であれば文字に強制される。  空白をそのままにしないフィールドについては、read.dcfは先頭と末尾の空白を除去し、write.dcfはstrwrapを使用して折り返す。
は、書き込まれるオブジェクト、典型的にはデータ・フレームである。  そうでない場合は、xをデータフレームに強制しようとする。
論理。  TRUEの場合、出力はファイルに追加される。  FALSEの場合、その名前の既存のファイルは破棄される。
writeLines() に渡す論理値：「を参照。
出力エントリの継続行のインデントを指定する正の整数。
出力の折り返し行の対象となる列を指定する正の整数。
接続オブジェクト、またはファイル名や生のベクトルを指定する文字列。
読み込むベクトルのモードを指定するモード・オブジェクト、またはモードを記述する長さ1の文字ベクトル： "numeric", "double", "integer", "int", "logical", "complex", "character", "raw "のいずれか。
numeric。  読み込むレコードの（最大）数。  n件分のストレージが確保されているので、あまり大きくしすぎないように。
整数。  バイトストリームの要素あたりのバイト数。  デフォルトの NA_integer_ は、自然なサイズを使用する。生のベクトルや複雑なベクトルでは、サイズの変更はサポートされない。
論理値。  ファイル上の量を符号付き整数とみなすか符号なし整数とみなすかを決定する。
ファイルのターゲットシステムのエンディアン性（"big "または "little"）。  swap "を使用すると、強制的にエンディアンをスワップする。
接続に書き込むRオブジェクト。
writeLinesを参照のこと。
接続オブジェクト、ファイル名の文字列、または生のベクトル。
読み書きの対象となる（終端のない）文字列の長さを文字単位で指定する整数ベクトル。  要素は >= 0 でなければならない。
論理：readCharの場合、ncharsはマルチバイトロケールでは文字数ではなくバイト数とみなすべきか。  writeCharについては、writeLinesを参照のこと。
接続に書き込む文字ベクトルで、少なくとも nchars と同じ長さ。
'end of string': 文字列。  各文字列の後に書き込まれる終端文字で、ASCIIのNULLが続きます。
文字ベクトル
接続オブジェクトまたは文字列。
文字列。  各テキスト行の後に接続に書き込まれる文字列。
論理的な文字列。  詳細」を参照。
生ベクトル、論理ベクトル、'数値のような' ベクトル (double 型 (numeric クラス)、 integer 型、 complex 型)、またはメソッドが記述されたオブジェクト。
クラス data.frame のオブジェクト。
新旧の行の名前。
R オブジェクト。
R オブジェクト。
R オブジェクト。
Rオブジェクト
Rオブジェクト
Rオブジェクト
R オブジェクト。
package_versionの場合は、R.versionで得られるRversionオブジェクト。
無効な数値バージョンはエラーになる (デフォルト) かどうかを示す論理。
R オブジェクト。
R オブジェクト。
文字列。  接続の説明。
文字列。  接続の開き方(最初に開く場合)。  指定できる値については、セクション「モード」を参照。
論理値。  ブロック」のセクションを参照。
想定するエンコーディングの名前。  エンコーディング」のセクションを参照。
論理値。  trueを指定すると、'raw'インターフェイスが使用され、 通常のファイルではない引数、例えばキャラクタデバイスに適している。  これは、テキストモードでの読み込みのためにオープンする際に、 圧縮ファイルであるかどうかのチェックを抑制し、「ファイル」がシーク可能でない可能性があることを表明する。
文字列、部分的に一致するtoc("default", "internal", "wininet", "libcurl"):「詳細」を参照。
HTTPrequests で使用する HTTP ヘッダの名前付き文字ベクトル。  非 HTTP URL では無視されます。  HTTPUserAgent オプション (options を参照) で指定した User-Agent ヘッダが自動的に最初のヘッダとして使用されます。
0-9 の整数。  書き込み時に適用する圧縮の量を、なしから最大まで指定します。  forxzfile には負の値を指定することもできます: '圧縮'のセクションを参照ください。
数値: この接続で使用するタイムアウト (秒単位)。  OSによっては、非常に大きな値をゼロとして扱うことがあるので注意すること。ただし、POSIX標準では31日までの値をサポートしている。
オプションの文字ベクトル。現在のところ、TCPソケットでは "no-delay "のみがサポートされている。
zip ファイル内のファイル名。
文字列。  ポートのホスト名。
整数。  TCP ポート番号。
論理。  ソケットをクライアントにするかサーバーにするか。
接続をリッスンするサーバソケット。
コネクション。
文字列。  現在は無視される。
文字列。  空文字列または "read "または "write"、部分一致可。
他のメソッドに渡される、または他のメソッドから渡される引数。
数値または複素数ベクトル、または round メソッドと log10() を含む基本的な算術メソッドを持つ R 数類似オブジェクト。
使用する精度を示す整数。
切片と傾き、単一の値。
変換を解除するかどうかを尋ねる論理値。  詳細'を参照。
水平線のy値。
垂直線のx値。
切片と傾きを与える長さ2のベクトル。
coef メソッドを持つオブジェクト。  詳細'を参照。
(ベクトルとして使うこともできる: '詳細'を参照) xpd, 線の特性lend, ljoin, lmitre.
描画する点の座標
描画する点の座標。  少なくとも1つは
矢の頭の辺の長さ（インチ）。
矢の軸から矢の頭の端までの角度。
描画する矢印の種類を指定する整数コード。
colにNAの値があると、矢印は省略される。
xpd、線特性lend、ljoin、lmitreなどの図形パラメータ。
行列形式の2次元分割表。
正と負のピアソン残差の描画にそれぞれ使用される色を与える長さ2の文字ベクトル。
各長方形の間に残されたスペース(平均的な長方形の幅と高さに対する割合)。
プロット全体のタイトル。
x軸のラベル。  デフォルトは、xの行次元の名前（もしあれば）。
y軸のラベル。  デフォルトは x の列寸法の名前 (もしあれば)。
軸がプロットのどの側に描画されるかを指定する整数。  軸は以下のように配置される：1=下、2=左、3=上、4=右。
目盛りが引かれる点を指定する。  有限でない(infinite, NaN または NA)値は省略される。  デフォルトでは(NULLの場合)目盛りの位置が計算される。
これは、目盛りに(数値)注釈を付けるかどうかを指定する論理値か、目盛りに付けるラベルの文字または式のベクトルです。  (他のオブジェクトは、as.graphicsAnnotによって強制されます。)これが論理的でない場合、atも同じ長さで供給されるべきです。  labelsが強制された後に長さが0になった場合、TRUEを与えるのと同じ効果があります。
目盛りと軸線を描画するかどうかを指定する論理値。
NA でない場合は、軸線が描画される余白の行数。
軸線を描画する座標。NA でない場合、line の値を上書きします。
標準のプロットマージンではなく、外側のプロットマージンに軸を描画するかどうかを示す論理値。
テキストのフォント。  デフォルトはpar("font")。
軸線と目盛りの線種。
軸線と目盛りの線幅。  ゼロまたは負の値は、線または目盛りを抑制します。
col = NULL は、par("fg") を使用することを意味し、場合によってはインラインで指定します。 col.ticks = NULL は、col が解決した色を使用することを意味します。
調整（par("adj")を参照）は、すべてのラベルを、読み取り方向に対して平行（'horizontal'）に調整する。  これが有限の値でない場合、デフォルトが使用されます（軸に平行な文字列の中央揃え、それ以外の場合は軸に最も近い端の揃え）。
読み方向に垂直な目盛ラベルの調整。  軸に平行なラベルの場合, padj = 0は右または上揃え, padj = 1は左または下揃えを意味する。  padjが有限の値でない場合（デフォルト）、par("las")の値が調整を決定する。  軸に垂直にプロットされた文字列の場合、デフォルトは文字列を中央に配置する。
オプションの(通常は非負の)数値係数は、'm'のサイズと乗算され、描画されるラベル間の最小ギャップを決定します。デフォルトのNAは、軸に平行に描画される目盛りラベルの場合は1に対応し、それ以外の場合は0.25に対応します。| (!is.x && (las %in% 1:2))  } gap.axis <- if(perpendicular(side, las)) 0.25 else 1gap.axisは通常、at = ..目盛りの位置が明示的に指定されている場合に関係するかもしれません。
他のグラフィカルパラメータもこの関数に引数として渡すことができる。特に、軸の注釈、すなわち目盛りラベルのためのcex.axis、col.axis、font.axis、位置決めのためのmgpとxaxpまたはyaxp、目盛りマークの長さと方向のためのtckまたはtcl、ラベルの垂直/水平方向のためのlas、またはcolの代わりにfg、クリッピングのためのxpd。  これらについてはparを参照のこと。パラメータxaxt（辺1および3）およびyaxt（辺2および4）は、軸がまったくプロットされないかどうかを制御する。  (デフォルトの軸は既にplot.windowによって設定されているので、labはaxisによって作用されません)
軸が描画されるべき範囲を示すオブジェクト
目盛りマークが描画されるポイント。
軸がプロットのどの側に描画されるかを指定する整数。  軸は以下のように配置される：1=下、2=左、3=上、4=右。
これは、目盛りに(数値)注釈を付けるかどうかを指定する論理値か、目盛りに付けるラベルの文字または式ベクトルである。文字または式ベクトルとして指定する場合は、atを指定し、同じ長さにする必要があります。
メソッドに渡される引数、およびおそらくはaxisに渡される引数。
date-time または date オブジェクト。
axis を参照してください。
strptime を参照。
目盛りに注釈を付けるかどうかを指定する論理値、または目盛りに配置する文字列のベクトル。
他のメソッドから渡される、または他のメソッドに渡されるさらなる引数。
date-timeまたはdateオブジェクト。
axisを参照。
strptimeを参照。
目盛りに注釈を付けるかどうかを指定する論理値、または目盛りに配置する文字列のベクトル。
他のメソッドから、または他のメソッドに渡されるさらなる引数。
axisと同様に1:4の整数。
長さ3の数値ベクトル, デフォルトはar("xaxp")またはpar("yaxp")です(sideが1または3の場合はpar("xaxp")、sideが2または4の場合はpar("yaxp"))。
par("usr")の該当部分をデフォルトとする）（par("usr")[1:2]またはpar("usr")[3:4]、それぞれ辺が(1,3)または(2,4)）。
ログ座標がアクティブであるかどうかを示す論理。
(logがtrueの場合のみ使用): 刻み間隔のおおよその(下限)数; デフォルトはar("lab")[j]。  2.14.xより前のRバージョンと同じ動作をさせたい場合はInfに設定。
プロットを構成するバーを記述する値のベクトルまたは行列.  heightがベクトルの場合,プロットは,ベクトルの値で指定された高さの長方形の棒の列で構成されます.  heightが行列で、besidesがFALSEの場合、プロットの各バーはheightの列に対応し、列の値はバーを構成する積み重ねられたサブバーの高さを与える。  height が行列で beside が TRUE の場合, 各列の値は積み重ねられるのではなく, 並置されます.
オプションのバーの幅のベクトル。描画されるバーの長さに再循環される。  xlim が指定されない限り、単一の値を指定しても効果はありません。
各バーの前に残された (平均バー幅に対する) スペースの量。  1つの数値として指定することも、バーごとに1つの数値を指定することもできる。  height が行列で、かつbeside が TRUE の場合、スペースは2つの数値で指定することができます。  明示的に指定しない場合, height が行列で beside が TRUE なら c(0,1), それ以外なら 0.2 がデフォルトとなる.
各棒または棒のグループの下にプロットされる名前のベクトル。  この引数が省略された場合、heightがベクトルの場合はheightのnames属性から、行列の場合は列名から名前が取られる。
プロットの凡例を構成するために使用されるテキストのベクトル、または凡例が含まれるべきかどうかを示す論理。  この場合、凡例のラベルはheightの行に対応する必要があります。legend.textがtrueの場合、heightの行名がnullでなければラベルとして使用されます。
論理値。  FALSEの場合、heightの列は積み重ねられた棒として描かれ、TRUEの場合、列は並置された棒として描かれる。
論理値。  FALSEの場合、バーは最初のバーが左になるように垂直に描画される。  TRUE の場合、バーは水平に描画され、最初のバーが一番下になります。
デフォルト値の NULL は、陰影線が描画されないことを意味します。密度の値が正でない場合も、陰線は描画されません。
バーまたはバーの構成要素の濃淡線の傾き。
デフォルトでは、height がベクトルの場合は灰色が使用され、 height が行列の場合はガンマ補正された灰色パレットが使用されます。
ボーダーを省略するには border = NA を使用します。  陰影線がある場合、 border = TRUE は、陰影線と同じ色を境界線に使用することを意味する。
プロットの全体タイトルとサブタイトル。
x軸のラベル
y軸のラベル。
x軸のリミット。
y軸のリミット。
論理的。棒グラフが領域外に出ることを許可するか?
軸のスケールを対数にするかどうかを指定する文字列; seeplot.default。
論理。  TRUE の場合、垂直軸 (horiz が true の場合は水平軸) が描画されます。
論理。  TRUEの場合、そしてames.arg（上記参照）がある場合、もう1つの軸が（lty = 0で）描画され、ラベルが付けられます。
数値軸ラベル（seepar('cex')）の展開係数。
軸名（棒ラベル）の展開係数。
論理。  TRUE の場合、隣接する (積み重ねられない!) 棒を分割する線が描画されます。  ただし、space = 0 の場合のみ適用される (beside = TRUE の場合は部分的に適用される)。
論理的。  FALSE の場合、何も描画されない。
カテゴリ軸（デフォルトは水平軸）の軸と目盛りに適用されるグラフィック・パラメータ lty (seepar('lty')).  デフォルトでは、軸は抑制されていることに注意。
棒グラフをx軸に対してどれだけシフトさせるかを示すベクトル。
既に存在するプロットに棒グラフを追加するかどうかを指定する論理。
デフォルトの注釈(main,sub,xlab,ylab)をプロットに表示するかどうかを指定する論理。
legend()に渡す追加引数のリスト。  リストの名前が引数名として使用されます。
y 変数がカテゴリ x 変数に対してプロットする数値データである数式。  y ~ x y ~ x1 + x2 cbind(y1, y2) ~ x（例を参照）。
式中の変数を取り出すデータフレーム（またはリスト）。
使用するオブザベーションのサブセットを指定するオプションのベクトル。
データにNAの値が含まれる場合の処理を示す関数。  デフォルトでは、指定された変数の欠損値は無視されます。
他のメソッドとの間で渡される引数。  defaultメソッドでは、引数(axes、asp、mainなど)とグラフパラメータ(parを参照)が含まれ、これらはplot.window()、title()、axisに渡されます。
は、プロットを構成するバーを記述する値のベクトルまたは行列です。  height が vector の場合, plot は, vector の値で指定された高さを持つ矩形の棒の並びで構成されます.  heightが行列で、besidesがFALSEの場合、プロットの各バーはheightの列に対応し、列の値はバーを構成する積み重ねられたサブバーの高さを与える。  height が行列で beside が TRUE の場合, 各列の値は積み重ねられるのではなく, 並置されます.
オプションのバーの幅のベクトル。描画されるバーの長さに再循環される。  xlim が指定されない限り、単一の値を指定しても効果はありません。
各バーの前に残された (平均バー幅に対する) スペースの量。  1つの数値として指定することも、バーごとに1つの数値を指定することもできる。  height が行列で、かつbeside が TRUE の場合、スペースは2つの数値で指定することができます。  明示的に指定しない場合, height が行列で beside が TRUE なら c(0,1), それ以外なら 0.2 がデフォルトとなる.
各棒または棒のグループの下にプロットされる名前のベクトル。  この引数が省略された場合、heightがベクトルの場合はheightのnames属性から、行列の場合は列名から名前が取られる。
プロットの凡例を構成するために使用されるテキストのベクトル、または凡例が含まれるべきかどうかを示す論理。  この場合、凡例のラベルはheightの行に対応する必要があります。legend.textがtrueの場合、heightの行名がnullでなければラベルとして使用されます。
論理値。  FALSEの場合、heightの列は積み重ねられた棒として描かれ、TRUEの場合、列は並置された棒として描かれる。
論理値。  FALSEの場合、バーは最初のバーが左になるように垂直に描画される。  TRUE の場合、バーは水平に描画され、最初のバーが一番下になります。
デフォルト値の NULL は、陰影線が描画されないことを意味します。密度の値が正でない場合も、陰線は描画されません。
バーまたはバーの構成要素の濃淡線の傾き。
デフォルトでは、height がベクトルの場合は灰色が使用され、 height が行列の場合はガンマ補正された灰色パレットが使用されます。
ボーダーを省略するには border = NA を使用します。  陰線がある場合、 border = TRUE は、陰線と同じ色を境界線に使用することを意味します。
プロットの全体タイトルとサブタイトル。
x軸のラベル
y軸のラベル。
x軸のリミット。
y軸のリミット。
論理的。棒グラフが領域外に出ることを許可するか?
軸のスケールを対数にするかどうかを指定する文字列; seeplot.default。
論理。  TRUE の場合、垂直軸 (horiz が true の場合は水平軸) が描画されます。
論理。  TRUEの場合、そしてames.arg（上記参照）がある場合、もう1つの軸が（lty = 0で）描画され、ラベルが付けられます。
数値軸ラベル（seepar('cex')）の展開係数。
軸名（棒ラベル）の展開係数。
論理。  TRUE の場合、隣接する (積み重ねられない!) 棒を分割する線が描画されます。  ただし、space = 0 の場合のみ適用される (beside = TRUE の場合は部分的に適用される)。
論理的。  FALSE の場合、何も描画されない。
カテゴリ軸（デフォルトは水平軸）の軸と目盛りに適用されるグラフィック・パラメータ lty (seepar('lty')).  デフォルトでは、軸は抑制されていることに注意。
棒グラフをx軸に対してどれだけシフトさせるかを示すベクトル。
既に存在するプロットに棒グラフを追加するかどうかを指定する論理。
デフォルトの注釈(main,sub,xlab,ylab)をプロットに表示するかどうかを指定する論理。
legend()に渡す追加引数のリスト。  リストの名前が引数名として使用されます。
y 変数がカテゴリ x 変数に対してプロットする数値データである数式。  y ~ x y ~ x1 + x2 cbind(y1, y2) ~ x（例を参照）。
式中の変数を取り出すデータフレーム（またはリスト）。
使用するオブザベーションのサブセットを指定するオプションのベクトル。
データにNAの値が含まれる場合の処理を示す関数。  デフォルトでは、指定された変数の欠損値は無視されます。
他のメソッドとの間で渡される引数。  defaultメソッドでは、引数(axes、asp、mainなど)と、plot.window()、title()、axisに渡されるグラフパラメータ(parを参照)が含まれます。
文字。"plot"、"figure"、"inner"、"outer "のいずれか。
ボックスの線種。
bty,col,lwdなどのグラフィカルパラメータはpar.xpdを参照。  クリッピングは常にデバイス領域で行われるため、xpdは受け付けられないことに注意。
y ~ grpのような式。ここでyは、グループ化変数grp（通常は係数）に従ってグループに分割されるデータ値の数値ベクトルである。  g1 + g2はg1:g2と等価であることに注意。
変数informulaが取り出されるべきdata.frame（またはリスト）。
プロットに使用するオブザベーションのサブセットを指定するオプションのベクトル。
データにNAが含まれる場合の処理を示す関数。  デフォルトは、応答またはグループのどちらかの欠損値を無視する。
R 3.6.0以降のx軸とy軸の注釈。デフォルトは空。  ann=FALSEで省略可能。
軸に注釈を付けるかどうかを示す論理値（xlab と ylab）。
split.default に渡される。
箱ひげ図を作成するデータを指定する。数値ベクトル、またはそのようなベクトルを含む単一のリスト。追加の無名引数は、別のベクトル（それぞれがボックスプロットの構成要素に対応する）としてさらにデータを指定します。
formulaメソッドでは、defaultメソッドに渡される名前付き引数。defaultメソッドでは、名前なし引数は追加のデータベクトル（xがリストでない限り無視される）であり、名前付き引数は引数parsで与えられるものに加えてbxpに渡される引数およびグラフパラメータである（そしてparsのそれらを上書きする）。bxpは、渡されたグラフィカルパラメータを使用する場合と使用しない場合があることに注意してください。
これは、プロットのひげがボックスからどの程度広がるかを決定します。  rangeが正の場合、ウィスカーはボックスから四分位範囲間のrange倍以下の最も極端なデータ点まで伸びる。値がゼロの場合、ひげはデータの極値まで伸びる。
プロットを構成するボックスの相対幅を指定するベクトル。
varwidth が TRUE の場合、ボックスはグループ内のオブザベーション数の平方根に比例した幅で描画されます。
notch が TRUE の場合、ボックスの各辺にノッチが描画される。  2つのプロットのノッチが重ならない場合、これは2つの中央値が異なるという「強力な証拠」である(Chambers et al, 1983, p. 62)。  使用された計算は、boxplot.statsを参照。
アウトラインが真でない場合、外れ値は描画されない（S+が線を使うのに対して、点として）。
各boxplotの下に表示されるグループラベル。文字ベクトルまたは式（seeplotmath）である。
すべてのボックスに適用されるスケールファクター。  グループ数が少ない場合、ボックスを狭くすることでプロットの見栄えを良くすることができます。
ステープル線幅の拡張、ボックス幅に比例。
外れ線の幅をボックス幅に比例して拡大する。
TRUE (デフォルト) なら箱ひげ図が作成される。  そうでない場合は、箱ひげ図に基づく要約が返される。
boxplots の輪郭の色を指定するオプションのベクトル。  border の長さがプロットの数より小さい場合は、 border の値は再利用される。
colがnullでない場合、箱ひげ図本体の色に使用される色が入っているものとみなされる。デフォルトでは背景色となる。
x 座標、y 座標、または両方の座標を対数スケールでプロットするかどうかを示す文字。
これらは（plotがtrueの場合）boxxpに渡される; 詳細はそちらを参照のこと。
boxplotを水平にするかどうかを示す論理値; デフォルトのFALSEは垂直ボックスを意味する。
論理、もしtrueなら、現在のプロットにボックスプロットを追加する。
特に add = TRUE の場合; デフォルトは 1:n で、n はボックスの数です。
y ~ grpのような数式。yは、グループ化変数grp（通常は係数）に従ってグループに分割されるデータ値の数値ベクトル。  g1 + g2はg1:g2と等価であることに注意。
変数informulaが取り出されるべきdata.frame（またはリスト）。
プロットに使用するオブザベーションのサブセットを指定するオプションのベクトル。
データにNAが含まれる場合の処理を示す関数。  デフォルトは、応答またはグループのどちらかの欠損値を無視する。
R 3.6.0以降のx軸とy軸の注釈。デフォルトは空。  ann=FALSEで省略可能。
軸に注釈を付けるかどうかを示す論理値（xlab と ylab）。
split.default に渡される。
箱ひげ図を作成するデータを指定する。数値ベクトル、またはそのようなベクトルを含む単一のリスト。追加の無名引数は、別のベクトル（それぞれがボックスプロットの構成要素に対応する）としてさらにデータを指定します。
formulaメソッドでは、defaultメソッドに渡される名前付き引数。defaultメソッドでは、名前なし引数は追加のデータベクトル（xがリストでない限り無視される）であり、名前付き引数は引数parsで与えられるものに加えてbxpに渡される引数およびグラフパラメータである（そしてparsのそれらを上書きする）。bxpは、渡されたグラフィカルパラメータを使用する場合と使用しない場合があることに注意してください。
これは、プロットのひげがボックスからどの程度広がるかを決定します。  rangeが正の場合、ウィスカーはボックスから四分位範囲間のrange倍以下の最も極端なデータ点まで伸びる。値がゼロの場合、ひげはデータの極値まで伸びる。
プロットを構成するボックスの相対幅を指定するベクトル。
varwidth が TRUE の場合、ボックスはグループ内のオブザベーション数の平方根に比例した幅で描画されます。
notch が TRUE の場合、ボックスの各辺にノッチが描画される。  2つのプロットのノッチが重ならない場合、これは2つの中央値が異なるという「強力な証拠」である(Chambers et al, 1983, p. 62)。  使用された計算は、boxplot.statsを参照。
アウトラインが真でない場合、外れ値は描画されない（S+が線を使うのに対して、点として）。
各boxplotの下に表示されるグループラベル。文字ベクトルまたは式（seeplotmath）である。
すべてのボックスに適用されるスケールファクター。  グループ数が少ない場合、ボックスを狭くすることでプロットの見栄えを良くすることができます。
ステープル線幅の拡張、ボックス幅に比例。
外れ線の幅をボックス幅に比例して拡大する。
TRUE (デフォルト) なら箱ひげ図が作成される。  そうでない場合は、箱ひげ図に基づく要約が返される。
boxplots の輪郭の色を指定するオプションのベクトル。  border の長さがプロットの数より小さい場合は、 border の値は再利用される。
colがnullでない場合、箱ひげ図本体の色に使用される色が入っているものとみなされる。デフォルトでは背景色となる。
x 座標、y 座標、または両方の座標を対数スケールでプロットするかどうかを示す文字。
これらは（plotがtrueの場合）boxxpに渡される; 詳細はそちらを参照のこと。
boxplotを水平にするかどうかを示す論理値; デフォルトのFALSEは垂直ボックスを意味する。
論理、もしtrueなら、現在のプロットにボックスプロットを追加する。
特に add = TRUE の場合; デフォルトは 1:n で、n はボックスの数です。
数値行列.
列(デフォルト)と行(use.cols = FALSE)のどちらをプロットするかを示す論理値.
boxplotのさらなる引数。
プロットの作成に使用するデータ要約を含むリスト。  これらは通常boxplotを呼び出した結果であるが、どのような方法で生成してもよい。
notchがTRUEの場合、ボックスの両側にノッチが描かれる。  2つのプロットのノッチが重ならない場合、中央値は5%水準で有意に異なる。
プロットを構成するボックスの相対幅を与えるベクトル。
varwidth が TRUE の場合、ボックスの幅は各グループの観察数の平方根に比例して描画される。
が真でない場合、外れ値は描画されない。
(0,1) の数値。notch = TRUEの場合, ノッチが使用するボックス幅の分数.
character または numeric (vector), 枠線の色。  複数のボックスで再利用されます。  boxcol, medcol, whiskcol, staplecol, および outcol オプション（後述）のデフォルトとして使用されます。
plot.defaultのように、任意の軸を対数スケールで描画するかどうかを指定します。
axes=FALSEが指定されない限り、デフォルトはTRUEである。
boxplots を水平にするかどうかを示す論理値; デフォルトの FALSE は垂直ボックスを意味する。
デフォルトの注釈（タイトル、x軸とy軸のラベル）をプロットに表示するかどうかを示す論理値。
論理値、true の場合、現在のプロットに boxplot を追加する。
特に add = TRUE の場合; デフォルトは1:nで、nはボックスの数です。
TRUEまたはFALSEに設定すると、各グループにx軸ラベルを印刷するかどうかのデフォルトを上書きする。
この関数への引数として、リスト（pars）または通常（...）としてグラフィカル・パラメータ（その他）を渡すことができる。  (...内のものがpars内のものより優先されます。)現在のところ、yaxsとylimは'boxplotに沿って'使用されます、xaxt、yaxt、las、cex.axis、gap.axis、およびcol.axisはaxisに渡され、main、cex.main、col.main、sub、cex.sub、col.sub、xlab、ylab、cex.lab、およびcol.labはtitleに渡されます。さらに、axesが受け付けられ（seeplot.window）、デフォルトはTRUEです。以下の引数（またはparsコンポーネント）はボックスプロットグラフィックスのさらなるカスタマイズを可能にします。  boxwex:すべてのボックスに適用されるスケール係数。  いくつかのグループしかない場合、ボックスを狭くすることによってプロットの外観を改善することができます。  デフォルトはatに依存し、通常0.8.staplewex, outwex:ボックス幅に比例するステープルと外れ値の線幅拡大;どちらもデフォルトは0.5.boxlty、boxlwd、boxcol、boxfill:ボックスの輪郭の種類、幅、色、および塗りつぶしの色（現在のデフォルトは col で、将来は par("bg") になる予定です）.medlty、medlwd、medpch、medcex、medcol、medbg:中央線の種類、線幅、ポイント文字、ポイントサイズの拡張、色、および背景色。  medlwdのデフォルトは、デフォルトのlwdの3倍であることに注意。whisklty, whisklwd, whiskcol:ひげ線の種類(デフォルト: "破線")、幅、色。staplelty、staplelwd、staplecol:ステープル (= ひげの終端) 線種、幅、および色。 outlty、outlwd、outpch、outcex、outcol、outbg:外れ値 線種、線幅、ポイント文字、ポイントサイズ拡張、色、および背景色。  デフォルトの outlty = "blank" は行を抑制し、outpch = NA は点を抑制する。
オブジェクト。デフォルトのメソッドでは、1つの数値変数（またはこれと共有可能なオブジェクト）を想定しています。
従属変数と解釈される "因子"
1つの従属 "因子 "と1つの数値説明変数を持つ y ~ x 型の "式"。
オプションのデータフレーム
論理。計算された条件密度をプロットするか？
2つのラベル間の距離がこの閾値以下になった場合、それらは等距離にプロットされる。
従属変数の水準をどの順序でプロットするかを指定する文字または数値ベクトル.
densityに渡される引数
levels(y) と同じ長さの塗りつぶし色のベクトル.
陰影ポリゴンの境界色.
注釈用文字列
y軸の注釈のための文字ベクトル, デフォルトはlevels(y).
デフォルトはlevels(y)。
プロットに使用する観測値のサブセットを指定するオプションのベクトル.
クリッピング矩形のユーザ座標
スクリーン行列または4つの列を持つ行列の行数と列数を表す2要素ベクトル. 行列の場合, 各行は画面の左, 右, 下, 上 (この順) の値をNDC単位で持つ画面を記述する.
分割する画面を示す番号。  デフォルトは現在の画面があればその画面、なければデバイスの全領域。
論理: 選択された画面をクリアするか。
描画(screen)、消去(erase.screen)、閉じる(close.screen)のために準備する画面を示す数値。  (close.screenはスクリーン番号のベクトルを受け付ける)。
スクリーンに描画するための準備の一部として、スクリーンを消去すべきかどうかを示す論理値。
すべてのスクリーンを閉じるべきかどうかを示す論理値。
コンディショニング・プロットの形式を記述する式。  y〜x｜aという形式の式は、y対xのプロットが変数aを条件として作成されるべきであることを示します。y〜x｜a * bindという形式の式は、y対xのプロットが2つの変数aおよびbを条件として作成されるべきであることを示します。3つまたは4つの変数はすべて、数値または因子のいずれかです。xまたはyが因子の場合、結果はほぼas.numeric()が適用されたかのようになりますが、factoraまたはbの場合は、条件付け（およびshow.givenがtrueの場合はそのグラフィックス）が適応されます。
は、式中の任意の変数の値を含むデータフレームです。  デフォルトではcoplotが呼び出された環境が使用されます。
bがない場合（つまり、aに対してのみ条件づけを行う場合）、通常これは、条件づけされる区間を与える各行が2つの列を持つ行列ですが、（条件づけされる変数が因子の場合）1つの数値のベクトルまたは因子レベルのセットであることもできます。この場合(bなし)、co.intervalの結果は引数given.valuesとして直接使用することができます。
関数(x, y, col, pch, ...)： ディスプレイの各パネルで実行されるアクションを与える。  デフォルトはpointsです。
rowsは、配列の行数を表します。
はパネルレイアウト配列の列数。
logical (2つの条件付け変数の場合は長さ2): 対応する条件付け変数に対して条件付けプロットを表示するかどうか (デフォルトは TRUE)。
点のプロットに使用する色のベクトル。  短すぎる場合、値はリサイクルされます。
プロットする記号または文字のベクトル。  短すぎる場合、値は再利用される。
num "と "fac "を成分とする名前付きベクトル。それぞれ、数値変数と因子条件変数の(シングル・)バーの背景色を与える。
文字; x 軸と最初の条件変数に使用するラベル。  ラベルが1つだけ指定された場合、x軸にはそのラベルが使用され、条件付け変数にはデフォルトのラベルが使用される。
文字; y軸と2番目の条件付け変数に使用するラベル。
logical:trueの場合、パネル関数に追加の（3番目の）引数subscriptsが与えられ、そのパネルに渡されたデータの添え字が与えられます。
x または y が要因のときに軸（目盛）ラベルを作成する関数。
整数; aとbの条件づけ区間の数,場合によっては長さ2。対応する条件づけ変数が因子でない場合にのみ使用される。
数値 < 1; 条件づけ変数の重なりの割合。  overlap < 0の場合、データスライス間にギャップが生じる。
x軸の範囲。
y軸の範囲。
panel関数の追加引数。
数値ベクトル。
zの値が測定されるグリッド線の位置。  これらは昇順でなければならない。  デフォルトでは、0から1までの等間隔の値が使用されます。  x がリストの場合、x$x と x$y がそれぞれ x と y に使用される。リストに成分 z がある場合は、これが z に使用される。
プロットする値を含む行列（NAは許される）。  便宜上, z の代わりに x を使うことができることに注意。
flevelsが与えられない場合に必要な等高線レベルの数.
等高線を描画するレベルの数値ベクトル.
輪郭線のラベルを与えるベクトル.  NULLの場合はレベルがラベルとして使用され, それ以外の場合はas.character.cexによって強制されます.
cex を用いて等高線のラベル付けが行われる.  これは絶対サイズであり、par("cex")の倍数ではない。
論理値。  TRUEの場合、輪郭はラベル付けされる。
ラベルの位置を指定する文字列。指定可能な値は、"simple"、"edge" および "flattest"（デフォルト）。  詳細」セクションを参照。
NULL の場合、現在のフォントファミリーとフォントフェイスが輪郭ラベルに使用される。  長さ 2 の文字ベクトルならば、Hershey ベクトルフォントが輪郭ラベルに使われます。ベクトルの最初の要素は書体を選択し、2 番目の要素はフォントインデックスを選択します (詳細についてはテキストを参照)。デフォルトは、テキストを高品質に回転させるグラフィックデバイスでは NULL であり、そうでない場合は c("sans serif", "plain") となります。
プロットの x、y、z-リミット。
軸またはボックスのどちらを描画するかを示す論理。
描画する線の色。
線の種類(複数可).
描画する線の幅。
論理。TRUE の場合、現在のプロットに追加します。
plot.window,title,Axis,boxへの追加引数、通常はcex.axisなどのグラフィックパラメータ。
z の値が測定されるグリッド線の位置。  これらは昇順でなければならない。  デフォルトでは、0から1までの等間隔の値が使用される。  x がリストの場合、x$x と x$y がそれぞれ x と y に使用される。リストに成分 z がある場合は、これが z に使用される。
プロットする値を含む行列（NAは許される）。  便宜上, z の代わりに x を使うことができることに注意。
flevelsが与えられない場合に必要な等高線レベルの数.
等高線を描画するレベルの数値ベクトル.
輪郭線のラベルを与えるベクトル.  NULLの場合はレベルがラベルとして使用され, それ以外の場合はas.character.cexによって強制されます.
cex を用いて等高線のラベル付けが行われる.  これは絶対サイズであり、par("cex")の倍数ではない。
論理値。  TRUEの場合、輪郭はラベル付けされる。
ラベルの位置を指定する文字列。指定可能な値は、"simple"、"edge" および "flattest"（デフォルト）。  詳細」セクションを参照。
NULL の場合、現在のフォントファミリーとフォントフェイスが輪郭ラベルに使用される。  長さ 2 の文字ベクトルならば、Hershey ベクトルフォントが輪郭ラベルに使われます。ベクトルの最初の要素は書体を選択し、2 番目の要素はフォントインデックスを選択します (詳細についてはテキストを参照)。デフォルトは、テキストを高品質に回転させるグラフィックデバイスでは NULL であり、そうでない場合は c("sans serif", "plain") となります。
プロットの x、y、z-リミット。
軸またはボックスのどちらを描画するかを示す論理。
描画する線の色。
線の種類(複数可).
描画する線の幅。
論理。TRUE の場合、現在のプロットに追加します。
plot.window,title,Axis,boxへの追加引数で、一般的にはcex.axisなどのグラフパラメータです。
コンディショニングプロットのフォームを記述する式。  y〜x｜aという形式の式は、y対xのプロットが変数aを条件として作成されるべきであることを示します。y〜x｜a * bindという形式の式は、y対xのプロットが2つの変数aとbを条件として作成されるべきであることを示します。
は、式中の任意の変数の値を含むデータフレームです。  デフォルトではcoplotが呼び出された環境が使用されます。
bがない場合（つまり、aに対してのみ条件づけを行う場合）、通常これは、条件づけされる区間を与える各行が2つの列を持つ行列ですが、（条件づけされる変数が因子の場合）1つの数値のベクトルまたは因子レベルのセットであることもできます。この場合(bなし)、co.intervalの結果は引数given.valuesとして直接使用することができます。
関数(x, y, col, pch, ...)： ディスプレイの各パネルで実行されるアクションを与える。  デフォルトはpointsです。
rowsは、配列の行数を表します。
はパネルレイアウト配列の列数。
logical (2つの条件付け変数の場合は長さ2): 対応する条件付け変数に対して条件付けプロットを表示するかどうか (デフォルトは TRUE)。
点のプロットに使用する色のベクトル。  短すぎる場合、値はリサイクルされます。
プロットする記号または文字のベクトル。  短すぎる場合、値は再利用される。
num "と "fac "を成分とする名前付きベクトル。それぞれ、数値変数と因子条件変数の(シングル・)バーの背景色を与える。
文字; x 軸と最初の条件変数に使用するラベル。  ラベルが1つだけ指定された場合、x軸にはそのラベルが使用され、条件付け変数にはデフォルトのラベルが使用される。
文字; y軸と2番目の条件付け変数に使用するラベル。
logical:trueの場合、パネル関数に追加の（3番目の）引数subscriptsが与えられ、そのパネルに渡されるデータの添え字が与えられます。
x または y が要因のときに軸（目盛）ラベルを作成する関数。
整数; aとbの条件づけ区間の数,場合によっては長さ2。対応する条件づけ変数が因子でない場合にのみ使用される。
数値 < 1; 条件づけ変数の重なりの割合。  overlap < 0の場合、データスライス間にギャップが生じる。
x軸の範囲。
y軸の範囲。
panel関数の追加引数。
数値ベクトル。
関数の名前、呼び出し、またはxと同じ長さのオブジェクトを評価するxの関数として書かれた式。
ベクトル化」数値R関数。
plotとの互換性のためのfromのエイリアス
関数がプロットされる範囲。
整数; 評価するx値の数。
論理; TRUEの場合、既にあるプロットに追加する。NAの場合、新しいプロットを開始する。  nographics デバイスが開いている場合、FALSE とみなされる (異なる値が与えられた場合は警告が出る)。
NULLまたは長さ2の数値ベクトル; NULLでない場合、c(from, to)のデフォルトを提供し、 add = TRUEでない限り、プロットのx-limitsを選択します - seeplot.window。
plot type: plot.defaultを参照してください。
x 軸に使用される名前を与える文字列.
ラベルとグラフパラメータも引数として指定できる。  log.plotの "function "メソッドでは、...はexpr.を除くcurve.plotの他の引数を含むことができます。
は、数値のベクトルまたは行列です（NAは許されます）。  xが行列の場合, 全体のプロットは, 各行の点描画を並べたものになります.  is.numeric(x)を満たすがis.vector(x) || is.matrix(x)を満たさない入力はas.numericで強制され, 警告が表示されます.
ベクトルの場合, デフォルトは names(x) であり, 行列の場合, 行ラベル dimnames(x)[[1]] です.
x が行列の場合, groups のデフォルトは x の列となります.
これは通常，各グループの中央値や平均値などの要約である．
ylab とラベルのインチ単位のオフセット。R 4.0.0以前は0.4に設定されていた。
デフォルトの注釈（タイトル、x軸とy軸のラベル）をプロットに表示するかどうかを示す論理値。
x 軸スタイルを示す文字列; 抑制するには "n" を使用し、par("xaxt") も参照。
プロットの周囲にボックスを描画するかどうかを示す論理。
plot.default.を参照のこと. 片方の軸を対数にするかどうかを示す文字列.
使用する文字サイズ。  cextを1より小さい値に設定すると、ラベルの重なりを避けるのに便利です。  他の多くのグラフィック関数とは異なり、これはpar("cex")の倍数ではなくactualsizeを設定します。
これは plot() の cex のように動作します。
使用するプロット文字またはシンボル。
グループ値に使用するプロット文字またはシンボル。
プロット全体の背景色を設定するには par(bg= *) を使用します。
点とラベルに使用する色。
グループラベルと値に使用する単一色。
水平線に使用する色。
プロットの水平範囲、例えばseeplot.window。
プロット全体のタイトル。
titleにあるような軸の注釈。
グラフパラメータは引数として指定することもできます。
行列の場合、各行は画面の左、右、下、上(この順)の値をNDC単位、つまりデバイス表面の左下隅を0、右上隅を1として画面を記述する。
分割する画面を示す番号。  デフォルトは現在の画面があればその画面、なければデバイスの全領域。
論理: 選択された画面をクリアするか。
描画(screen)、消去(erase.screen)、閉じる(close.screen)のために準備する画面を示す数値。  (close.screenはスクリーン番号のベクトルを受け付ける)。
スクリーンに描画するための準備の一部として、スクリーンを消去すべきかどうかを示す論理値。
すべてのスクリーンを閉じるべきかどうかを示す論理値。
z の値を測定するグリッド線の位置。  これらは昇順でなければならない。  (この記述の残りの部分は.filled.contourには適用されません。)デフォルトでは、0から1までの等間隔の値が使用されます。  xがリストの場合、その構成要素x$xとx$yがそれぞれxとyに使用される。  リストが componentz を持つ場合は、これが z に使われる。
プロットする値を含む数値行列。  便宜上、zの代わりにxを使うこともできる。
x プロットの限界値.
y プロットの限界値.
z プロットの限界値.
z の範囲を分割するために使用されるレベルの集合。  連続するレベル間のz値を持つ領域は同じ色で塗られます.
levelsが指定されない場合、z,値の範囲はおよそこの数のレベルに分割される。
プロット内の色の割り当てに使用されるカラーパレット関数.
この引数は、パレット関数の指定よりも優先されます。  この引数は、パレット関数の指定よりも優先されます。
メインプロットにタイトルを追加するステートメント。
メインプロットに軸（およびボックス）を描画するステートメント。  これはデフォルトの軸を上書きします。
プロットキーにタイトルを追加するステートメント。
これは、デフォルトの軸を上書きします。
y/x のアスペクト比。
x軸のスタイル。  デフォルトはinternallabelingです。
y軸スタイル.  デフォルトはinternallabelingを使用する。
使用するラベルのスタイル。  デフォルトは水平ラベル付け。
plot.defaultのように、軸とボックスを描画するかどうかを示す論理値。
追加のグラフィカルパラメータ、現在はtitle()にのみ渡される。
配列形式の2×2×k分割表、またはkが1の場合は2×2の行列。
各2×2表の小さい対角線と大きい対角線に使用する色を指定する長さ2のベクトル.
オッズ比の信頼リングに使用される信頼水準。  1より小さい1つの非負の数値でなければならない; 0に設定された場合、信頼リングは抑制される。
表の標準化方法を指定する文字列。"margins"、"ind.max"、"all.max "のいずれかと一致しなければならず、頭文字を省略することができる。"margins "に設定すると、各2×2表は、オッズ比を保持したまま、marginで指定されたマージンと等しくなるように標準化される。  "ind.max "または "all.max "の場合、表は個別に、または同時に、最大セル頻度1に標準化される。
等化するマージンを表す数値ベクトル。  1,2,c(1,2)(デフォルト)のいずれかでなければならない。これは、各2×2表の行、列、または両方の余白を標準化することに対応する。
行と列のラベルに使用されるスペースの量(四分円の最大半径に対する割合)。
4つ折りタイトルの文字列。
c(nr, nc)形式の数値ベクトルであり、2×2表の表示が行ごとに塗りつぶされたnr×ncのレイアウトで配置されるべきであることを示す。
c(nr, nc)形式の数値ベクトルで、2×2表の表示がannr by ncレイアウトで配置され、列で埋められるべきであることを示す。
座標の数値ベクトル。
変換する座標系を指定する文字列。
座標の数値ベクトル。
変換する座標系を指定する文字列。
xおよびy方向のグリッドのセル数。  NULLの場合、デフォルトのように、グリッドは対応するデフォルト軸の目盛り(すなわち、axTicksによって計算される目盛り)に整列する。  NAの場合、対応する方向にグリッド線は引かれない。
グリッド線の色。
グリッド線の線種。
グリッド線の線幅を与える非負の数値。
論理値。対数座標および軸目盛りとの整列が有効な場合にのみ使用される。  この場合，equilogs = FALSE を設定すると，等距離にない目盛り揃えグリッド線が得られます．
ヒストグラムを作成したい値のベクトル．
ヒストグラムのセル間のブレークポイントを与えるベクトル，ブレークポイントのベクトルを計算する関数，ヒストグラムのセル数を与える1つの数値，セル数を計算するアルゴリズム（「詳細」を参照）を指定する文字列，セル数を計算する関数のいずれか．  breaksが関数の場合，xベクトルが唯一の引数として与えられます（そして，breakの数は利用可能なメモリ量によってのみ制限されます）．
論理; TRUE の場合，ヒストグラムのグラフィックは度数（結果の計数成分）の表現となり，FALSE の場合，確率密度（成分密度）がプロットされます（ヒストグラムの総面積が1になるように）．  FALSEの場合、確率密度、成分密度がプロットされる（ヒストグラムの総面積が1になる）。
Sとの互換性のため、!.freqのエイリアス。
論理; TRUEの場合、ブレーク値と等しいx[i]が最初の(right = FALSEの場合は最後の)バーに含まれる。  これは，breaks がベクトルでない限り（警告とともに）無視されます．
TRUE の場合，ヒストグラムのセルは右閉じ（左開き）区間となります．
デフォルト値の NULL は，陰影線が描画されないことを意味します．密度の値が正でない場合も，陰影線の描画を抑制する。
シェーディング線の傾きを、反時計回りの角度で指定します。
バーの塗りつぶしに使用する色。デフォルトの NULL は、塗りつぶされていないバーになります。
棒を囲む境界線の色。  デフォルトは、標準の前景色を使用します。
メイン・タイトルと軸ラベル: これらの引数title()は、ここで "スマート "なデフォルトを得る。例えば、 freqがtrueの場合、defaultylabは "Frequency "となる。
xlimはヒストグラムの定義（ブレーク）には使用されず、プロット（plot = TRUEの場合）のみに使用されることに注意してください。
論理値。  TRUE (デフォルト) の場合, plot が描画されると軸が描画されます.
論理。  TRUE (デフォルト)の場合，ヒストグラムがプロットされ，そうでない場合は区切りとカウントのリストが返されます．  後者の場合、(通常グラフィカルな) 引数が plot = TRUE の場合にのみ適用されるように指定されていると警告が表示されます。
論理文字列または文字列。  FALSEでない場合は，棒グラフの上にラベルを描画します．
numeric (整数)。  S(-PLUS)との互換性のためにのみ、nclassはスカラまたは文字引数のbreakと等価です。
論理。  plot = FALSE かつ warn.unused = TRUE の場合， グラフィカル・パラメータが hist.default() に渡されると警告が発せられます．
plot = TRUEの場合）plot.histogramに渡され，さらにtitleとaxisに渡される引数とグラフパラメータ．
ヒストグラムを作成したい値のベクトル．
ヒストグラムのセル間のブレークポイントを与えるベクトル，ブレークポイントのベクトルを計算する関数，ヒストグラムのセル数を与える1つの数値，セル数を計算するアルゴリズム（'詳細'を参照）を指定する文字列，セル数を計算する関数のいずれか．  breaksが関数の場合，xベクトルが唯一の引数として与えられます（そして，breakの数は利用可能なメモリ量によってのみ制限されます）．
論理; TRUE の場合，ヒストグラムのグラフィックは度数（結果の計数成分）の表現となり，FALSE の場合，確率密度（成分密度）がプロットされます（ヒストグラムの総面積が1になるように）．  FALSEの場合、確率密度、成分密度がプロットされる（ヒストグラムの総面積が1になる）。
Sとの互換性のため、!.freqのエイリアス。
論理; TRUEの場合、ブレーク値と等しいx[i]が最初の(right = FALSEの場合は最後の)バーに含まれる。  これは，breaks がベクトルでない限り（警告とともに）無視されます．
TRUE の場合，ヒストグラムのセルは右閉じ（左開き）区間となります．
デフォルト値の NULL は，陰影線が描画されないことを意味します．密度の値が正でない場合も，陰影線の描画を抑制する。
シェーディング線の傾きを、反時計回りの角度で指定します。
バーの塗りつぶしに使用する色。デフォルトの NULL は、塗りつぶされていないバーを生成します。
棒を囲む境界線の色。  デフォルトは、標準の前景色を使用します。
メイン・タイトルと軸ラベル: これらの引数title()は、ここで "スマート "なデフォルトを得る。例えば、 freqがtrueの場合、defaultylabは "Frequency "となる。
xlimはヒストグラムの定義（ブレーク）には使用されず、プロット（plot = TRUEの場合）のみに使用されることに注意してください。
論理値。  TRUE (デフォルト) の場合, plot が描画されると軸が描画されます.
論理。  TRUE (デフォルト)の場合，ヒストグラムがプロットされ，そうでない場合は区切りとカウントのリストが返されます．  後者の場合、(通常グラフィカルな) 引数が plot = TRUE の場合にのみ適用されるように指定されていると警告が表示されます。
論理文字列または文字列。  FALSEでない場合は，棒グラフの上にラベルを描画します．
numeric (整数)。  S(-PLUS)との互換性のためにのみ、nclassはスカラまたは文字引数のbreakと同等です。
論理。  plot = FALSE かつ warn.unused = TRUE の場合， グラフィカル・パラメータが hist.default() に渡されると警告が発せられます．
plot = FALSE かつ warn unused = TRUE の場合，グラフパラメータが hist.default() に渡されると警告が発せられます．
散布図における点の座標．  あるいは，座標を定義する任意のオブジェクト（プロット構造体，時系列など： xy.coordsを参照してください）をx,yとして与えることもできます．
点のラベルを与えるオプションの文字ベクトル．  as.characterを使用して強制され、必要に応じてxの長さまで再利用されます。余分なラベルは警告とともに破棄されます。
posがTRUEの場合、各識別点から相対的にどこにテキストがプロットされたかを示す成分がturn valueに追加される: Valueを参照のこと。
識別される点の最大数。
logical: plot が TRUE の場合、ラベルは点の近くに印刷され、FALSE の場合は省略される。
論理: TRUE かつ plot = TRUE の場合、ラベルの左下隅は、点からの相対位置ではなく、クリックした点にプロットされる。
ラベルと識別された点を隔てる距離（文字幅）。  負の値が許される。  atpen = TRUEの場合は使用しません。
ポインタが点に「十分近く」あるための最大距離（インチ単位）。
orderがTRUEの場合、turnの値にポイントが特定された順番を示す成分が追加される。
parに渡されるその他の引数（cex、col、fontなど）。
z の値を測定するグリッド線の位置。  これらは有限で、欠落がなく、（厳密に）昇順でなければならない。  デフォルトでは、0から1までの等間隔の値が使用される。  xがリストの場合、x$xとx$yはそれぞれxとyに使用される。リストが構成要素zを持つ場合、これはzに使用される。
は、プロットされる値を含む数値または論理行列である（NAは許される）。  便宜上、zの代わりにxを使うことができることに注意。
色をプロットするzの最小値と最大値。デフォルトはzの有限値の範囲。指定された各色は、この範囲の等間隔の区間を彩色するために使用される。区間の中点は範囲をカバーするので、範囲外の値はプロットされない。
プロットされるxとyの値の範囲。デフォルトはxとyの範囲。
hcl.colors、gray.colors、または同様の関数によって生成されるような色のリスト。
論理; TRUEの場合、現在のプロットに追加します(次の4つの引数は無視されます)。  imageは既存のグラフィックの上に「描画」するため、これはほとんど役に立ちません。
x軸とy軸のスタイル。  デフォルトの "i "は画像に適している。  par.を参照。
each x軸とy軸のラベルを指定する文字列。  デフォルトはxまたはyの'呼び出し名'、指定されていない場合は""。
色のための有限の数値ブレークポイントの集合:色よりも1つ多いブレークポイントを持ち、かつ、昇順でなければならない。  ソートされていないベクトルは、警告とともにソートされる。
論理的。trueの場合, 色区間の中点は等間隔になり, zlim[1]と zlim[2]は中点とみなされる.  デフォルトでは、色区間の長さは等しくなります。
TRUE の場合、ポリゴンの代わりにビットマップラスターが使用されます。この場合、グリッドは規則的でなければならず、そうでない場合はエラーが発生します。   これが指定されていない場合の動作については、'詳細'を参照のこと。
plot のグラフィカルパラメータもこの関数の引数として渡すことができ、 plot のアスペクト比asp や軸を指定することができる(plot.window を参照)。
z の値を測定するグリッド線の位置。  これらは有限で、欠落がなく、（厳密に）昇順でなければなりません。  デフォルトでは、0から1までの等間隔の値が使用される。  xがリストの場合、x$xとx$yはそれぞれxとyに使用される。リストが構成要素zを持つ場合、これはzに使用される。
は、プロットされる値を含む数値または論理行列である（NAは許される）。  便宜上、zの代わりにxを使うことができることに注意。
色をプロットするzの最小値と最大値。デフォルトはzの有限値の範囲。指定された各色は、この範囲の等間隔の区間を彩色するために使用される。区間の中点は範囲をカバーするので、範囲外の値はプロットされない。
プロットされるxとyの値の範囲。デフォルトはxとyの範囲。
hcl.colors、gray.colors、または同様の関数によって生成されるような色のリスト。
論理; TRUEの場合、現在のプロットに追加します(次の4つの引数は無視されます)。  imageは既存のグラフィックの上に「描画」するため、これはほとんど役に立ちません。
x軸とy軸のスタイル。  デフォルトの "i "は画像に適している。  par.を参照。
each x軸とy軸のラベルを指定する文字列。  デフォルトはxまたはyの'呼び出し名'、指定されていない場合は""。
色のための有限の数値ブレークポイントの集合: 色よりも1つ多いブレークポイントを持ち、かつ、増加順でなければならない。  ソートされていないベクトルは、警告とともにソートされる。
論理的。trueの場合, 色区間の中点は等間隔になり, zlim[1]と zlim[2]は中点とみなされる.  デフォルトでは、色区間の長さは等しくなります。
TRUE の場合、ポリゴンの代わりにビットマップラスターが使用されます。この場合、グリッドは規則的でなければならず、そうでない場合はエラーが発生します。   これが指定されていない場合の動作については、'詳細'を参照のこと。
plot のグラフィカルパラメータもこの関数の引数として渡すことができ、 plot のアスペクト比asp や軸を指定することができる(plot.window を参照)。
出力デバイス上の次のN個の図形の位置を指定する行列オブジェクト。  行列の各値は0か正の整数でなければなりません.  Nが行列内で最大の正の整数である場合, 整数{1, ..., N-1}も行列内に少なくとも1回は出現しなければなりません.
デバイス上の列の幅を表す値のベクトル.  相対幅は数値で指定する。    絶対幅（センチメートル単位）は lcm() 関数で指定する（例を参照）。
相対的な高さと絶対的な高さを指定することができます。
論理値または行列オブジェクト。  後者の場合、matと同じ次元を持ち、行列の各値は0または1でなければなりません。
プロットする図形の数。
センチメートル数として解釈される寸法。
出力デバイス上の次のN個の図形の位置を指定する行列オブジェクト。  行列の各値は0または正の整数でなければならない。  Nが行列の中で最大の正の整数である場合、整数{1, ..., N-1}も行列の中に少なくとも1回は現れなければなりません。
デバイス上の列の幅を表す値のベクトル.  相対幅は数値で指定する。    絶対幅（センチメートル単位）は lcm() 関数で指定する（例を参照）。
相対的な高さと絶対的な高さを指定することができます。
論理値または行列オブジェクト。  後者の場合、matと同じ次元を持ち、行列の各値は0または1でなければなりません。
プロットする図形の数。
センチメートル数として解釈される寸法。
出力デバイス上の次のN個の図形の位置を指定する行列オブジェクト。  行列の各値は0または正の整数でなければならない。  Nが行列の中で最大の正の整数である場合、整数{1, ..., N-1}も行列の中に少なくとも1回は現れなければなりません。
デバイス上の列の幅を表す値のベクトル.  相対幅は数値で指定する。    絶対幅（センチメートル単位）は lcm() 関数で指定する（例を参照）。
相対的な高さと絶対的な高さを指定することができます。
論理値または行列オブジェクト。  後者の場合、matと同じ次元を持ち、行列の各値は0または1でなければなりません。
プロットする図形の数。
センチメートル数として解釈される寸法。
凡例を配置するために使用するx座標とy座標。これらはキーワードで指定するか、xy.coordsが受け付ける任意の方法で指定することができる：詳細」を参照。
凡例に現れる、長さ1以上の文字または式ベクトル。  それ以外のオブジェクトは as.graphicsAnnot によって強制されます。
この引数が指定された場合、指定された色で塗りつぶされた (または指定された色で陰影が付けられた) 枠が凡例テキストの横に表示される。
凡例に現れる点や線の色。
ボックスの枠色（塗りつぶしが指定されている場合にのみ使用される）。
凡例に現れる線の種類と幅。  線描画の場合は、これら2つのうち1つを指定しなければならない。
凡例に現れるプロットシンボル、数値ベクトルまたは1文字文字列のベクトル（seepoints）。点とは異なり、これはすべて1つの複数文字列として指定することができる。  シンボル描画の場合は指定する必要がある。
シェーディング線の角度。
数値で正の場合、陰影線の密度。NULLまたは負、NAの場合、色塗りが仮定される。
凡例を囲むように描かれるボックスのタイプ。  許容される値は "o"(デフォルト)と "n "である。
凡例ボックスの背景色。  (これは、bty != "n "の場合のみ使用されることに注意)。
凡例ボックスの線の種類，幅，色（bty = "o "の場合）．
引数 bg に対応する点の背景色。
currentpar("cex") に対する相対的な文字拡大係数。  テキストに使用され，pt.cex のデフォルトとなる．
点の拡大係数（複数可）。
点の線幅．デフォルトは，par("lwd")．
legendx の位置に対する凡例の両端揃え。  0は左寄せ、0.5は中央寄せ、1は右寄せを意味する。
xと同じで、凡例yの位置を指定する。
横方向(x)の文字間隔を指定する。
垂直方向 (y) の行間も同じ。
凡例テキストの文字列調整。  ラベルがplotmath式の場合のy調整に有用。
x ("user") 座標での凡例テキストの幅。  (逆x軸の場合でも単一の正の数であるべきです。) デフォルトは、strwidth(legend) によって計算された適切な値です。
凡例テキストに使用される色。
凡例テキストに使用されるフォント。
TRUE の場合、点と線をマージするが、塗りつぶしボックスはマージしない。  点 と 線があ る 場合のデ フ ォ ル ト は TRUE。
logical; TRUE の場合、凡例がどのような計算を行うかを示す。
論理。  FALSEの場合、何もプロットされないが、サイズは返される。
凡例項目を設定する列数(デフォルトは1、垂直凡例)。
TRUE の場合、凡例を垂直ではなく水平に設定する（horiz を指定すると ncol の指定が上書きされる）。
文字列または長さ 1 の式で、凡例の先頭に配置するタイトルを指定します。  他のオブジェクトはas.graphicsAnnotによって強制されます。
キーワードによって凡例が配置されるときの、余白からの挿入距離（複数可）。
与えられた場合、凡例が描画されている間に使用されるグラフィカルパラメータxpdの値。
タイトルの色。
タイトルの水平調整： par("adj") のヘルプを参照。
lty および/または lwd を示すために描かれる線の長さ（文字幅の単位）。
結合する点の座標ベクトル。
実際には plot.default にあるようなタイプのいずれかです。
特に、線種、lty、線幅、lwd、色、col、type = "b" の場合は pch。  また、線の特性は、ljoinとlmitreを貸す。
結合する点の座標ベクトル。
plot.default にあるように、実際にはどのタイプでもよい。
特に、線種、lty、線幅、lwd、色、col、type = "b" の場合は pch。  また、線の特性は、ljoinとlmitreを貸す。
位置を特定する点の最大数。  有効な値は 1 から始まる。
n"、"p"、"l"、"o "のいずれか。p "または "o "の場合、点はプロットされ、"l "または "o "の場合、点は線で結ばれる。
type != "n "の場合、位置をプロットするために使用される追加のグラフィックス・パラメータ。
プロットするデータのベクトルまたは行列。  行数は一致していなければならない。  どちらかが欠けている場合、もう一方がyとなり、1:nのxベクトルが使用される。  R 4.0.0以降、"Date "のようなxとyのclass(.)は通常保存される。
文字列（長さ1ベクトル）または1文字列のベクトルで、yの各列のプロットのタイプを示す。  typeの最初の文字は最初のプロットを定義し、2番目の文字は2番目のプロットを定義する。
最初の要素は最初の列、2番目の要素は2番目の列、といったように、すべての列に対して線が描かれない場合でも、線の種類、幅、終了スタイルを表すベクトル。線種は、すべてのプロットが描画されるまで循環的に使用される。
文字列または1文字または整数のベクトルで、文字をプロットする。  デフォルトは数字 (1 から 9, 0) で、次に小文字と大文字。
色のベクトル。  色は循環的に使用される。
これはpar("cex")の倍数として動作する。  NULLは1.0に等しい。
pch=21:25で指定されたプロットシンボルの背景色（塗りつぶし色）のベクトル。  デフォルトのNAは、基礎となる関数plot.xyのものに対応する。
x 軸と y 軸のタイトル。
plot と同様に、x軸とy軸の範囲。
グラフィカルパラメータ（par参照）とplotの追加引数（典型的にはplot.default）もこの関数の引数として与えることができます。  したがって、parで説明した高レベルのグラフィクス制御引数やtitleの引数もこの関数に与えることができます。
論理。  TRUEの場合、点と線を使用して現在のプロットに追加されます。
論理。  TRUEの場合、何が行われたかを1行記述する。
プロットするデータのベクトルまたは行列。  行数は一致していなければならない。  どちらかが欠落している場合、もう一方がyとされ、1:nのxベクトルが使用される。  R 4.0.0以降、"Date "のようなxとyのclass(.)は通常保存される。
文字列（長さ1ベクトル）または1文字列のベクトルで、yの各列のプロットのタイプを示します。  typeの最初の文字は最初のプロットを定義し、2番目の文字は2番目のプロットを定義する。
最初の要素は最初の列、2番目の要素は2番目の列、といったように、すべての列に対して線が描かれない場合でも、線の種類、幅、終了スタイルを表すベクトル。線種は、すべてのプロットが描画されるまで循環的に使用される。
文字列または1文字または整数のベクトルで、文字をプロットする。  デフォルトは数字 (1 から 9, 0) で、次に小文字と大文字。
色のベクトル。  色は循環的に使用される。
これはpar("cex")の倍数として動作する。  NULLは1.0に等しい。
pch=21:25で指定されたプロットシンボルの背景色（塗りつぶし色）のベクトル。  デフォルトのNAは、基礎となる関数plot.xyのものに対応する。
x 軸と y 軸のタイトル。
plot と同様に、x軸とy軸の範囲。
グラフィカルパラメータ（par参照）とplotの追加引数（典型的にはplot.default）もこの関数の引数として与えることができます。  したがって、parで説明した高レベルのグラフィクス制御引数やtitleの引数もこの関数に与えることができます。
論理。  TRUEの場合、点と線を使用して現在のプロットに追加されます。
論理。  TRUEの場合、何が行われたかを1行記述する。
プロットするデータのベクトルまたは行列。  行数は一致していなければならない。  どちらかが欠落している場合、もう一方がyとされ、1:nのxベクトルが使用される。  R 4.0.0以降、"Date "のようなxとyのclass(.)は通常保存される。
文字列（長さ1ベクトル）または1文字列のベクトルで、yの各列のプロットのタイプを示します。  typeの最初の文字は最初のプロットを定義し、2番目の文字は2番目のプロットを定義する。
最初の要素は最初の列、2番目の要素は2番目の列、といったように、すべての列に対して線が描かれない場合でも、線の種類、幅、終了スタイルを表すベクトル。線種は、すべてのプロットが描画されるまで循環的に使用される。
文字列または1文字または整数のベクトルで、文字をプロットする。  デフォルトは数字 (1 から 9, 0) で、次に小文字と大文字。
色のベクトル。  色は循環的に使用される。
これはpar("cex")の倍数として動作する。  NULLは1.0に等しい。
pch=21:25で指定されたプロットシンボルの背景色（塗りつぶし色）のベクトル。  デフォルトのNAは、基礎となる関数plot.xyのものに対応する。
x 軸と y 軸のタイトル。
plot と同様に、x軸とy軸の範囲。
グラフィカルパラメータ（par参照）とplotの追加引数（典型的にはplot.default）もこの関数の引数として与えることができます。  したがって、parで説明した高レベルのグラフィクス制御引数やtitleの引数もこの関数に与えることができます。
論理。  TRUEの場合、点と線を使用して現在のプロットに追加されます。
論理。  TRUEの場合、何が行われたかを1行記述する。
dimnames(x)属性で指定されたオプションのカテゴリラベルを持つ、配列形式の分割表。  この表は、table() コマンドで作成するのが最適である。
モザイク・タイトルの文字列。
モザイクのサブタイトル（一番下）の文字列。
デフォルトでは、names(dmnames(X))の1番目と2番目の要素（つまり、Xの1番目と2番目の変数の名前）。
ベクトルによる変数の並び順。1:length(dim(x)) (デフォルト)の整数の並べ替えを含む。
モザイクの各レベルのパーセンテージ間隔を決定するオフセットのベクトル（適切な値は0から20の間で、デフォルトは2次元テーブルの分割数の20倍、それ以外は10）。  最大50にリスケーリングされ、必要に応じて再利用される。
モザイクの各レベルの分割方向（垂直方向は "v"，水平方向は "h"）のベクトル．  デフォルトは、垂直方向の分割から始まり、交互に分割される。
論理または(リサイクリング)色シェーディングのための色のベクトル.  デフォルトではグレーのボックスが描画されます.
拡張モザイクプロットを作成するかどうかを示す論理値、または残差のカットポイントの絶対値を与える最大5つの明確な正数からなる数値ベクトル。  デフォルトでは、shadeはFALSEであり、単純なモザイクが作成される。  shade = TRUEを使用すると、2および4で絶対値がカットされます。
対数線形モデルに適合させるマージナル合計を持つベクトルのリスト。  デフォルトでは、独立モデルがフィットされます。詳細は loglin を参照してください。
軸の注釈に使用される倍率、par("cex")の倍数。
軸ラベルのスタイル。
セルの境界の色： polygon を参照。
表現される残差のタイプを示す文字列。  pearson"（ピアソンのカイ2乗の成分を与える）、"deviance"（尤度比カイ2乗の成分を与える）、Freeman-Tukey残差の "FT "のいずれかでなければならない。  この引数の値は省略できる。
y ~ xのような式。
データ・フレーム（またはリスト）、または式中の変数を取り出す分割表。
メソッドに渡される、またはメソッドから渡されるその他の引数。
プロットに使用するデータフレーム内のオブザベーションのサブセットを指定するオプションのベクトル。
データにクロス集計される変数が含まれ、これらの変数にNAが含まれる場合の処理を示す関数。  デフォルトでは、いずれかの変数にNAが含まれるケースは省略されます。  集計は欠損値を含むすべてのケースを省略するので、これはna.action関数が欠損値を置換する場合にのみ有用です。
書き込まれるテキストを指定する文字または式ベクトル。  その他のオブジェクトはas.graphicsAnnotによって強制されます。
プロットのどの側（1=下、2=左、3=上、4=右）。
どのMARgin線の上に書くか。
可能なら外側の余白を使う。
各文字列の位置をユーザー座標で指定する。  特定のテキスト項目に対応するatの成分が有限の値でない場合（デフォルト）、位置はadj.によって決定される。
各文字列の読み取り方向の調整。  軸に平行な文字列の場合、adj = 0は左またはボトムアライメントを意味し、adj = 1は右またはトップアライメントを意味する。adjが有限値でない場合（デフォルト）、par("las")の値が調整を決定する。  軸に平行にプロットされた文字列の場合、デフォルトは文字列を中央に配置する。
(これは adj によって制御される) 読み取り方向に垂直な各文字列の調整。  軸に平行な文字列の場合、padj = 0は右または上揃え、padj = 1は左または下揃えを意味する。padjが有限の値でない場合（デフォルト）、par("las")の値が調整を決定する。  軸に垂直にプロットされた文字列の場合、デフォルトは文字列を中央に配置する。
文字拡大係数。  NULLとNAは1.0と等価。  これは絶対的な尺度であり、par("cex")やpar("mfrow")やpar("mfcol")の設定によってスケーリングされることはありません。  ベクトル。
使用する色。  ベクトル。  NA値（デフォルト）はpar("col")を使用することを意味します。
テキストのフォント。  ベクトルで指定。  NA値（デフォルト）は、par("font")を使用することを意味します。
family、las、xpd を含む、さらなるグラフィカルパラメータ（par を参照）。  増やすことしかできない)。
行列またはデータフレームの数値列として与えられた点の座標。  論理列と因子列は、data.matrixと同じ方法で数値に変換されます。
各項はペアプロットで別々の変数を与えるので、項は数値ベクトルでなければならない。  (応答は別の変数として解釈されるが、特別な扱いはされないので、1つを使うと混乱する)。
data.frame(またはリスト)で、そこから変数informulaを取り出す。
プロットに使用するオブザベーションのサブセットを指定するオプションのベクトル。
データにNAが含まれる場合の処理を示す関数。  デフォルトでは、パネル関数に欠損値を渡しますが、na.action = na.omitを指定すると、いずれかの変数に欠損値があるケースを完全に省略します。
変数名
関数(x, y, ...) は、ディスプレイの各パネルの内容を描画するために使用されます。
メソッドに渡す引数、またはメソッドから渡す引数。また、グラフィカル・パラメーターは、mainのようなプロットへの引数として与えることができます。par("oma")は、指定しない限り、適切に設定されます。
横軸と縦軸にそれぞれプロットする変数の（数値）インデックス。
対角の下と上でそれぞれ使用する個別のパネル関数（またはNULL）。
対角線上に適用するオプションの関数(x, ...).
対角線上に適用されるオプション関数(x, y, labels, cex, font, ...).
テキストパネルにおけるラベルの y 位置。
mainが指定された場合、line.mainはタイトルを描画するmtext()にline引数を与える。  line.mainを変更するときにomaを指定するとよい。
テキスト・パネルのグラフィック・パラメータ。
論理的なレイアウトを指定します。  レイアウトを行列のように1行目を上にするか、グラフのように1行目を下にするか。  後者（デフォルトではない）は、基本的に対称な散布図行列になります。
サブプロット間の距離をマージンラインで指定します。
対数軸を使用するかどうかを示す文字列（plot.defaultを参照）、またはxとyの両方で対数軸を使用する変数のインデックスを指定するインデックスの数値ベクトル log = "xy" は、すべての変数の対数軸を指定します。
論理 (または整数) 水平軸と垂直軸のラベリングがどのように行われるかを決定する。  trueの場合、軸のラベル付けはそれぞれ最初の（左上からの）行または列から始まる。
行列またはデータフレームの数値列として与えられた点の座標。  論理列と因子列は、data.matrixと同じ方法で数値に変換されます。
各項はペア・プロットで別々の変数を与えるので、項は数値ベクトルでなければならない。  (応答は別の変数として解釈されるが、特別な扱いはされないので、1つを使うと混乱する)。
data.frame(またはリスト)で、そこから変数informulaを取り出す。
プロットに使用するオブザベーションのサブセットを指定するオプションのベクトル。
データにNAが含まれる場合の処理を示す関数。  デフォルトでは、パネル関数に欠損値を渡しますが、na.action = na.omitを指定すると、いずれかの変数に欠損値があるケースを完全に省略します。
変数名
関数(x, y, ...) は、ディスプレイの各パネルの内容を描画するために使用されます。
メソッドに渡す引数、またはメソッドから渡す引数。また、グラフィカル・パラメーターは、mainのようなプロットへの引数として与えることができます。par("oma")は、指定しない限り、適切に設定されます。
横軸と縦軸にそれぞれプロットする変数の（数値）インデックス。
対角の下と上でそれぞれ使用する個別のパネル関数（またはNULL）。
対角線上に適用するオプションの関数(x, ...).
対角線上に適用されるオプション関数(x, y, labels, cex, font, ...).
テキストパネルにおけるラベルの y 位置。
mainが指定された場合、line.mainはタイトルを描画するmtext()にline引数を与える。  line.mainを変更するときにomaを指定するとよい。
テキスト・パネルのグラフィック・パラメータ。
論理的なレイアウトを指定します。  レイアウトを行列のように1行目を上にするか、グラフのように1行目を下にするか。  後者（デフォルトではない）は、基本的に対称な散布図行列になります。
サブプロット間の距離をマージンラインで指定します。
対数軸を使用するかどうかを示す文字列（plot.defaultを参照）、またはxとyの両方で対数軸を使用する変数のインデックスを指定するインデックスの数値ベクトル log = "xy" は、すべての変数の対数軸を指定します。
論理 (または整数) 水平軸と垂直軸のラベリングがどのように行われるかを決定する。  trueの場合、軸のラベル付けはそれぞれ最初の（左上からの）行または列から始まる。
同じ長さの数値ベクトル
点の色、点の種類、大きさを表す数値または文字コード。
線がスムージングを描画する際に使用する色.
lowessのスムージングパラメータf。
lowessのロバストネス反復回数。
linesへのさらなる引数。
tag = value形式の引数、またはタグ付き値のリスト。  タグは、'グラフィカルパラメータ'セクションで説明されているグラフィカルパラメータの名前でなければなりません。
TRUE で他の引数がない場合は、同じデバイス上で後続の par() 呼び出しで設定可能なパラメータのみが返される。
z の値を測定するグリッド線の位置。  これらは昇順でなければなりません。  デフォルトでは、0 から 1 までの等間隔の値が使用されます。  x がリストの場合、その構成要素 x$x と x$y がそれぞれ x と y に使用される。
プロットする値を含む行列（NAは許される）。  便宜上、zの代わりにxを使うこともできる。
x-、y-、z-リミット。  これらはサーフェスの値の範囲をカバーするように選択されるべきである: '詳細'を参照.
軸のタイトル。  N.B.これらは文字列でなければなりません。  数値は文字列に強制されます。
メイン・タイトルとサブ・タイトル。
thetaは方位角、phitheは大緯度を示す。
プロットボックスの中心からのアイポイントの距離。
dは透視変換の強さを変えるのに使える値です。  dの値が1より大きいと遠近効果が弱くなり、1より小さいと遠近効果が誇張される。
表示する前に、サーフェスを定義する点のx,y,z座標は区間[0,1]に変換されます。  scaleがTRUEの場合、x、y、z座標は別々に変換されます。  scaleがFALSEの場合、アスペクト比が保持されるように座標がスケーリングされます。これはDEM情報などをレンダリングするときに便利です。
z 座標に適用される拡大係数。しばしば0 < expand < 1で使用され、z方向にプロットボックスを縮小します。
サーフェスファセットの色。  透明な色は無視される.  これは(nx-1)(ny-1)ファセットにリサイクルされる.
デフォルトのNULLはpar("fg")に対応します。NAの値は境界線の描画を無効にします：これはサーフェスがシェーディングされている場合に便利です。
ltheta と lphi に有限の値が指定された場合、サーフェスは方位 ltheta と colatitude lphi で指定された方向から照らされているかのようにシェーディングされます。
ここで d は、面の法線方向の単位ベクトルと光源方向の単位ベクトルの内積である。  shadeの値が1に近いと点光源モデルと同様のシェーディングが得られ、0に近いとシェーディングが得られません。  0.5から0.75の範囲の値は、昼光照明に近似します。
サーフェスのバウンディングボックスを表示するかどうか。デフォルトはTRUEです。
ボックスに目盛りとラベルを追加するか。  デフォルトはTRUE。  boxがFALSEの場合、目盛りやラベルは描画されません。
文字を描画します："simple "は、増加方向を示すために軸に平行な矢印だけを描画する。"detailed "は、2Dプロットと同様に通常の目盛りを描画する。
軸上に描画する目盛りの(おおよその)数。  ticktypeが "simple "である場合は影響しない。
追加のグラフィカルパラメータ (par を参照)。
x の値は、パイスライスの面積として表示されます。
スライスの名前を与える1つ以上の式または文字列。  その他のオブジェクトはas.graphicsAnnotで強制されます。  空またはNA（文字への強制の後）のラベルの場合、ラベルも指し線も描かれない。
パイの円形の輪郭は、この数の辺を持つ多角形で近似されます。
スライスにラベルを付ける文字列が長い場合は、半径を小さくする必要があるかもしれない。
スライスを時計回りに描くか反時計回り（つまり数学的に正の方向）に描くかを示す論理。
スライスの開始角度(indegrees)を指定する数値。デフォルトは0（つまり'3時'）。ただし、時計回りが真でない場合は、init.angleのデフォルトは90（度）、（つまり'12時'）。
デフォルト値のNULLは、陰影線が描画されないことを意味します。デフォルト値の NULL は、シェーディング・ラインが描画されないことを意味する。密度の値が正でない場合も、シェーディング・ラインの描画は抑制される。
シェーディングラインの傾きを指定します。
スライスを塗りつぶしたり陰影をつけるのに使う色のベクトル。par("fg")が使用されるときに密度が指定されない限り、6色のパステルカラーのセットが使用されます。
(おそらくベクトル) 各スライスを描画する polygon に渡される引数。
プロット全体のタイトル。
グラフィカルパラメータは topie の引数として与えることができる。  これらはメインタイトルとラベルにのみ影響します。
x と y 引数はプロットの x と y の座標を指定します。  座標を定義する合理的な方法は何でも構いません。  詳しくは関数 xy.coords を参照してください。  別々に与える場合は、同じ長さでなければならない。
希望するプロットのタイプを示す1文字の文字列。  詳細はplotを参照のこと: "p "は点、"l "は線、"b "は点と線の両方、"c "は線で結ばれた空の点、"o "はオーバープロットされた点と線、"s "と "S "は階段状、"h "はヒストグラムのような垂直線。  最後に、"n "は点または線を生成しない。
はプロットのx限界(x1, x2)を指定する。  デフォルト値のNULLは、プロットされる定数値の範囲を使用することを示す。
プロットのy限界。
x 軸が対数の場合は "x", y 軸が対数の場合は "y", 両軸が対数の場合は "xy" または "yx" を含む文字列.
プロットのメインタイトル。
プロットのサブタイトル。
x軸のラベル、デフォルトはxの説明。
y軸のラベル、デフォルトはyの説明。
デフォルトの注釈（タイトル、x軸とy軸のラベル）をプロットに表示するかどうかを示す論理値。
両軸をプロット上に描画するかどうかを示す論理値。  片方の軸だけを抑制するには、グラフィカル・パラメータ "xaxt "または "yaxt "を使用する。
プロットの周囲にボックスを描画するかどうかを示す論理値。
プロット軸が設定された後、プロットが行われる前に評価される'式'。  これは背景格子や散布図の平滑化を描画するのに便利です。  これは遅延評価によって動作することに注意してください: 他のプロットメソッドからこの引数を渡すと、評価されるのが早すぎるため、動作しない可能性があります。
プロットが行われた後、軸、タイトル、ボックスが追加される前に評価される式です。  panel.firstに関するコメントを参照。
y/xアスペクト比、 plot.windowを参照。
2つのaxis()呼び出しにgap.axisとして渡されるx/y軸のギャップ係数（デフォルトのようにaxesがtrueの場合）。
その他のグラフパラメータ（以下の「詳細」セクションを参照）。
xとyの引数は、プロットのためのxとyの座標を提供します。  座標を定義する妥当な方法は何でもよい。  詳細は関数xy.coordsを参照。  別々に与える場合は、同じ長さでなければならない。
希望するプロットのタイプを示す1文字の文字列。  詳細はplotを参照のこと: "p "は点、"l "は線、"b "は点と線の両方、"c "は線で結ばれた空の点、"o "はオーバープロットされた点と線、"s "と "S "は階段状、"h "はヒストグラムのような垂直線。  最後に、"n "は点や線を生成しない。
はプロットの x 限界 (x1, x2) を指定する。  デフォルト値のNULLは、プロットされる定数値の範囲を使用することを示す。
プロットのy限界。
x 軸が対数の場合は "x", y 軸が対数の場合は "y", 両軸が対数の場合は "xy" または "yx" を含む文字列.
プロットのメインタイトル。
プロットのサブタイトル。
x軸のラベル、デフォルトはxの説明。
y軸のラベル、デフォルトはyの説明。
デフォルトの注釈（タイトル、x軸とy軸のラベル）をプロットに表示するかどうかを示す論理値。
両軸をプロット上に描画するかどうかを示す論理値。  片方の軸だけを抑制するには、グラフィカル・パラメータ "xaxt "または "yaxt "を使用する。
プロットの周囲にボックスを描画するかどうかを示す論理値。
プロット軸が設定された後、プロットが行われる前に評価される'式'。  これは背景格子や散布図の平滑化を描画するのに便利です。  これは遅延評価によって動作することに注意してください: 他のプロットメソッドからこの引数を渡すと、評価されるのが早すぎるため、動作しない可能性があります。
プロットが行われた後、軸、タイトル、ボックスが追加される前に評価される式です。  panel.firstに関するコメントを参照。
y/xアスペクト比、 plot.windowを参照。
2つのaxis()呼び出しにgap.axisとして渡されるx/y軸のギャップ係数（デフォルトのようにaxesがtrueの場合）。
その他のグラフパラメータ（以下の「詳細」セクションを参照）。
設計因子と任意で応答を含むデータフレーム、または数式またはterms オブジェクト。
x で与えられていない場合は、応答。
各サブセットに適用される関数（またはその名前）。  これは、数値（ベクトル）入力に対して1つの数値を返さなければならない。
データ・フレーム： xで参照される変数を含むデータ・フレーム。
col などのグラフパラメータ。
plot.defaultのようなy値の範囲。
x軸ラベル。
スマート'デフォルトのy軸ラベル。
title を参照。
新しいページを開始する前にユーザに尋ねるかどうかを示す論理値 - 複数のyの場合.
x軸のタイプを指定する文字。
軸を描画するかどうかを示す論理。
X軸に目盛りを付けるかどうかを示す論理。
xと同じ長さのオブジェクトを評価する関数名、呼び出し、またはxの関数として書かれた式。
ベクトル化」数値R関数。
plotとの互換性のためのfromのエイリアス
関数がプロットされる範囲。
整数; 評価するx値の数。
論理; TRUEの場合、既にあるプロットに追加する。NAの場合、新しいプロットを開始する。  nographics デバイスが開いている場合、FALSE とみなされる (異なる値が与えられた場合は警告が出る)。
NULLまたは長さ2の数値ベクトル; NULLでない場合、c(from, to)のデフォルトを提供し、 add = TRUEでない限り、プロットのx-limitsを選択します - seeplot.window。
plot type: plot.defaultを参照してください。
x 軸に使用される名前を与える文字列.
ラベルとグラフパラメータも引数として指定できる。  plotの "function "メソッドでは、...はcurveの他の引数、expr以外の引数を含むことができます。
長さ2の数値ベクトルで、x座標とy座標の範囲を与える。
文字。どの軸を対数スケールにするかを示す。
アスペクト比 y/x を与える数値。
関連するものは、xaxs, yaxs, lab.である。
xy.coordsから得られる4要素リスト。
1文字コード: plot.defaultを参照.NULLは "p "の同義語として扱われます.
点の種類を表す文字または整数コード、seepoints.defaultを参照。
line type コード、 lines を参照。
色コードまたは色名, colors,paletteを参照.  ここでは NULL は色 0 を意味する.
開いているプロット記号の背景(塗りつぶし)色 21:25:points.defaultを参照。
文字展開。
線幅、(塗りつぶされていない) プロットシンボル、シーライン、ポイントにも使われる。
xpd,lend,ljoin,lmitreなどのグラフィカルパラメータ.
プロットする点の座標ベクトル。
プロットの種類を示す文字; 実際には、plot.defaultにあるような種類のいずれか。
更なるグラフィカルパラメータを引数として与えることもできる。  詳細'を参照のこと。
プロットする点の座標ベクトル.
プロットする点の座標ベクトル. プロットの種類を示す文字; 実際には plot.default にあるような型のいずれか.
更なるグラフィカルパラメータも引数として与えることができる。  Details'を参照のこと。
多角形の頂点の座標を含むベクトル。
陰影線の密度を1インチあたりの線で表します。  デフォルト値の NULL は、シェーディング線が描画されないことを意味します。 密度がゼロの場合は、シェーディングも塗りつぶしも行われませんが、 負の値や NA の場合は、シェーディングは行われません (したがって、色による塗りつぶしも行われます)。
シェーディングラインの傾きを度単位で指定します (反時計回り)。
ポリゴンを塗りつぶす色。デフォルトの NA は、密度が指定されない限り、ポリゴンを塗りつぶさない。  (後方互換性のために、NULL は NA と等価です。) density が正の値で指定された場合、これはシェーディング線の色となります。
境界線を描画する色。  デフォルトのNULLはpar("fg")を使うことを意味する。  S との互換性のために、 border は論理値にもできます。この場合、FALSE は NA (ボーダーは省略) と等価であり、TRUE は NULL (前景色を使用) と等価です、
のように、使用する線種を指定します。
xpd、lend、ljoin、lmitre などのグラフィカル・パラメータを引数として与えることができる。
ポリゴンシェーディングモードを制御する論理。  デフォルトは FALSE。
パスの頂点の座標を含むベクトル。
パスを塗りつぶす色。デフォルトは NA で、 パスは塗りつぶされません。
境界を描画する色。  デフォルトの NULL は、 par("fg") を使用することを意味します。  S との互換性のために、 border を論理的に指定することもでき、 その場合 FALSE は NA と等価 (境界は省略)、 TRUE は NULL と等価 (前景色を使用)、
使用する線種。
パスの塗りつぶしモードを指定する文字値: "winding" または "evenodd" のいずれか。
xpd、lend、ljoin、lmitre などのグラフィカルパラメータを引数として与えることができます。
ラスターオブジェクト、または as.raster によってラスターオブジェクトに変換できるオブジェクト。
左x位置のベクトル（またはスカラー）。
底辺y位置のベクトル（またはスカラー）。
右x位置のベクトル（またはスカラー）。
上端y位置のベクトル（またはスカラー）.
回転角度（度単位、正のx軸から反時計回り、左下隅を中心として）。
描画時に画像に線形補間を適用するかどうかを示す論理ベクトル（またはスカラー）。
グラフィカルパラメータ。
左x位置のベクトル（またはスカラー）。
底辺y位置のベクトル（またはスカラー）。
右x位置のベクトル（またはスカラー）。
上部y位置のベクトル（またはスカラー）。
デフォルト値の NULL は、シェーディング線が描画されないことを意味します。密度がゼロの場合はシェーディング線が描画されないことを意味し、負の値 (および NA) の場合はシェーディング線が描画されないことを意味します (したがって、色塗りが許可されます)。
シェーディング線の角度 (度単位)。
デフォルトの NA (または NULL) は、density が指定されていない限り、塗りつぶさない、つまり透明な矩形を描画することを意味します。
矩形の境界の色。  デフォルトは par("fg") です。  シェーディングラインがある場合、 border = TRUE は、シェーディングラインと同じ色をボーダーに使うことを意味します。
ボーダーとシェーディングの線種。デフォルトは "solid"。
ボーダーとシェーディングの線幅。  デフォルトは "solid "です。
xpd、lend、ljoin、lmitre などのグラフィカル・パラメータを引数として与えることができる。
数値ベクトル
'ラグ'を構成する目盛りの長さ。
ラグはプロットボックスのどの側にプロットされるか。通常は 1 (下) または 3 (上)。
目盛りの線幅。  デバイスによってはデフォルトの幅を1に丸めるものもある。
目盛りの色。
クリップ値に関する警告を表示するかどうかを示す論理値。
axisに渡されるさらなる引数。lineやposなど、ラグの位置を指定するための引数。
行列の場合、各行は、画面の左、右、下、上（この順）の値をNDC単位で持つ画面を記述する。
分割する画面を示す番号。  デフォルトは現在の画面があればその画面、なければデバイスの全領域。
論理: 選択された画面をクリアするか。
描画(screen)、消去(erase.screen)、閉じる(close.screen)のために準備する画面を示す数値。  (close.screenはスクリーン番号のベクトルを受け付ける)。
スクリーンに描画するための準備の一部として、スクリーンを消去すべきかどうかを示す論理値。
すべてのスクリーンを閉じるべきかどうかを示す論理値。
描画する点の座標。
描画する点の座標。  少なくとも1つは与えなければならない。
parにあるようなグラフィカルパラメータ（おそらくベクトル）。  colにNAの値を指定すると，セグメントは省略される．
xpd や線路特性 lend、ljoin、lmitre などの（par にある）さらなるグラフィカルパラメータ。
xとyの引数は、プロットのためのxとyの座標を提供します。  座標を定義する合理的な方法であれば何でもかまいません。  詳細は関数 xy.coords を参照。  別々に与える場合は、同じ長さでなければなりません。
数値ベクトル (長さ 1 (両方向) または 2 (x と y を別々に指定)) 密度推定のための等間隔の格子点の数を指定する; 直接 bkde2D() の gridize として使用される.
欠損している場合は, 多少なりとも有用なデフォルト値が使用されます. 帯域幅は, 引き続いて関数bkde2Dに渡されます.
整数 n を引数にとり, n 個の色を返す関数.
密度画像に重ね合わせる点の数.  最も密度の低い領域から最初の nr 点がプロットされる。  プロットにポイントを追加することで、外れ値を識別することができる。  すべての点をプロットする場合は、 nrpoints = Inf を選択する。
nrpoints > 0 の場合，「低密度」点の順序付きインデックスを返すことを論理的に示す．
nrpoints > 0 の場合に points に渡される引数: 点の記号，文字拡大係数，色。
密度スケールをカラースケールにマッピングする関数．
NULL または image の後に（引数なしで）呼び出される関数．
image に渡される，軸ラベルとして使用される文字列．
軸の限界を指定する長さ2の数値ベクトル。
imageに渡されるその他の引数（add=TRUE や useRaster=TRUEなど）。
オブジェクト、デフォルト・メソッドは、単一変数（説明変数と解釈される）または2元表のいずれかを期待する。  Seedetails.
従属変数と解釈される "因子
単一の従属 "因子 "と単一の説明変数を持つ y ~ x タイプの "式"。
オプションのデータフレーム。
breaksはhistに渡され、引数のリストとすることができます。
2つのラベル間の距離がこの閾値以下になった場合、それらは等距離にプロットされます。
バー間の垂直オフセット（単位：パーセント）.スピノグラムでは0に固定され、スパイン・プロットではデフォルトで2に設定される。
従属変数の水準をどの順序でプロットするかを指定する文字または数値ベクトル。
levels(y)と同じ長さの塗りつぶし色のベクトル。デフォルトはgray.colorsを呼び出す。
注釈用文字列
x軸とy軸の注釈のための文字ベクトル.spineプロットではそれぞれlevels(y)とlevels(x)がデフォルト.スピノグラムのx軸ラベルでは、区切りが使用されます。
xとyの値の範囲。
を論理的に指定します。  FALSEの場合、すべての軸(レベル名を含む)が抑制されます。
rect に渡される追加引数。
プロットに使用するオブザベーションのサブセットを指定するオプションのベクトル。
因子は未使用のレベルを削除すべきか？デフォルトはFALSE。
スクリーン行列または4つの列を持つ行列の行数と列数を表す2つの要素ベクトル. 行列の場合, 各行は, NDC単位でスクリーンの左, 右, 下, 上 (この順序で) の値を持つスクリーンを記述します.
分割する画面を示す番号。  デフォルトは現在の画面があればその画面、なければデバイスの全領域。
論理: 選択された画面をクリアするか。
描画(screen)、消去(erase.screen)、閉じる(close.screen)のために準備する画面を示す数値。  (close.screenはスクリーン番号のベクトルを受け付ける)。
スクリーンに描画するための準備の一部として、スクリーンを消去すべきかどうかを示す論理値。
すべての画面を閉じるべきかどうかを示す論理値。
欠損値(NA)は許容されるが、(スケーリングが必要であれば)0であるかのように扱われる。
論理フラグ: TRUE の場合、セグメントプロットは完全な円を占める。  そうでない場合は、（上側の）半円のみを占めます。
論理フラグ: TRUEの場合、データ行列の列は、各列の最大値が1、最小値が0になるように独立してスケーリングされる。
論理フラグ: TRUEの場合, データの各変数に対応する半径が描画される.
S関数のstarsとは異なり、labels = NULLの場合、ラベルの作成は行われない。
各セグメントプロットの配置に使用する x 座標と y 座標の 2 列の行列、またはすべてのプロットを重ね合わせる場合 (「スパイダープロット」の場合) の長さ 2 の数値。デフォルトでは、location = NULL の場合、セグメントプロットは矩形グリッドに配置されます。
location が NULL の場合に使用する行と列の数を指定する整数。  デフォルトでは、 nrow == ncol で、正方形のレイアウトが使用されます。
半径またはセグメントの長さのスケールファクター。
単位キーの x 座標と y 座標のベクトル。
単位キーのこれらのセグメントにラベルを付けるための文字列のベクトル。  省略された場合は、dimnames(x) の第2成分が使用されます。
単位キーのクリッピングスイッチ（描画とラベル付け）。
描画する x 座標の範囲を vector で指定します。
プロットするy座標の範囲を指定するベクトル。
ラベルの位置をダイアグラム間で上下に反転させるかどうかを示す論理。デフォルトはヒューリスティック。
論理。TRUE の場合、セグメント図を描画します。
色ベクトル(整数または文字、seepar)、それぞれセグメント(変数)の1つの色を指定します。  draw.segments = FALSE の場合は無視される。
色ベクトル (整数または文字, seepar), それぞれが星(ケース)の1つの色を指定する.  draw.segments = TRUE の場合は無視される.
色ベクトル (整数または文字, seepar), それぞれ線 (ケース) の色を指定する.  draw.segments = TRUE の場合は無視されます．
論理フラグ: TRUEの場合、プロットに軸が追加されます。
論理フラグ: TRUE の場合、プロット領域がフレーム化されます。
プロットのメインタイトル.
プロットのサブタイトル.
x 軸のラベル.
y軸のラベル.
ラベルの文字拡大率.
描画に使用する線幅
描画に使用する線の種類。
クリッピングを行うかどうかを示す論理値またはNA、separ(xpd = .)。
par(mar = *)の引数。通常、デフォルトよりも小さいマージンを選択する。
frame.plotがtrueの場合、plot.defaultとtox()を参照。
TRUE の場合、現在のプロットに星を追加する。
論理、FALSE の場合は何もプロットされない。
数値ベクトル。
プロットの長さを制御する。
プロットの幅。
許容誤差。
寸法を決定する文字または式ベクトル。  他のオブジェクトはas.graphicsAnnotによって強制される。
sがどの単位で測定されるかを示す文字。"user"、"inch"、"figure "のいずれかでなければならない。
par("cex")を掛けると最終的な文字サイズが得られます。デフォルトのNULLは1と等価です。
フォントに関する追加情報。グラフィックパラメータ "family "を含む。
プロットの元となるデータ。  defaultメソッドでは、データは1つの数値ベクトルとして指定することもできますし、 各々が各プロットに対応する数値ベクトルのリストとして指定することもできます。  数式法では、y ~ gの形の記号的指定が与えられ、ベクトルyのオブザベーションが因子gの水準に従ってグループ化されることを示す。  データにはNAが許される。
x の変数を取り出す data.frame (またはリスト)。
プロットに使用するオブザベーションのサブセットを指定するオプションのベクトル。
データにNAが含まれる場合の処理を示す関数。  デフォルトは、応答またはグループのどちらかの欠損値を無視する。
プロットの外観を制御するために、デフォルトのメソッド、またはplot.window、points、axis、titleに渡される追加パラメータ。
デフォルトのメソッド "overplot "は、このような点をオーバープロットするが、"jitter "を指定して点をジッターさせたり、"stack "を指定して一致する点をスタックさせることもできる。  最後の方法は、非常に粒度の細かいデータに対してのみ意味がある。
method = "jitter "の場合、jitterは適用されるジッターの量を示す。
stackingが使用された場合、ポイントはこの数ラインハイト（シンボル幅）間隔でスタックされる。
verticalをTRUEにすると、プロットはデフォルトの水平ではなく垂直に描画される。
グループ・ラベルは、各プロットの横に(または下に)印刷されます。
論理 (true)の場合、現在のプロットにチャートを追加します。
特に add = TRUE の場合。デフォルトは 1:n で、n はボックスの数。
ラベル: titleを参照。
軸ラベルを指定する別の方法: '詳細'を参照。
plot limits: plot.windowを参照のこと。
どの軸で対数スケールを使用するか: seeplot.default
グラフィカルパラメータ: parを参照。
軸制御: plot.defaultを参照。
次元が決定される文字または式ベクトル。  他のオブジェクトはas.graphicsAnnotで強制されます。
sがどの単位で測定されるかを示す文字。"user"、"inch"、"figure "のいずれかでなければならない。
par("cex")を掛けると最終的な文字サイズが得られます。デフォルトのNULLは1と等価です。
グラフィックパラメータ "family" を含むフォントに関する追加情報。
長さnのx座標の数値ベクトル、またはplot.defaultのような他の有効なプロット構造体、 xy.coordsも参照してください。
長さnのy座標の数値ベクトル.
number[i] = (x[i], y[i])の複製数, 0でもよい. デフォルト(missing(number)): 点x[], y[]の正確な多重度をxyTable()で計算.
対数座標スケールを示す文字, seeplot.default.
number が計算される場合 (つまり, 指定されない場合), 乗数が計算される前に x と y は有効数字に丸められます.
x 軸または y 軸の文字ラベル.
数値(2) x 軸または y 軸の範囲を制限する。
logical; プロットを前のプロットの上に追加するか? デフォルトはFALSE.
論理; TRUEの場合、ひまわりをランダムに回転させる(アーティファクトを防ぐ)。
点(number[i]==1)とひまわりの中心に使用するプロット文字。
中心点の文字サイズ拡大(s. pch).
花の葉がある場合の中心点の縮小係数(cex / cex.fact)。
プロットシンボルの色、plot.defaultに渡される。
ひまわりの葉のインチ数、1[in] := 2.54[cm]。デフォルト：1/8"、約3.2mm。
ひまわりの葉を構成するセグメントに使用する色、par(col=) 参照; col = "gold" 本物のひまわりを連想させる。
数値; 葉のセグメントの線幅。
plot [ifadd = FALSE]、または別のメソッドに渡す、または別のメソッドから渡される追加の引数。
y ~ x のような数式。
変数informulaを取得するdata.frame（またはリスト）。
フィッティングに使用する観測値のサブセットを指定するオプションのベクトル。
データにNAが含まれる場合の処理を示す関数。  デフォルトは欠損値を無視する。
xy.coordsが受け付ける任意の方法で指定することができる。
円の半径を指定するベクトル。
正方形の辺の長さを表すベクトル.
2列の行列.  最初の列は長方形の幅を与え、2番目の列は高さを与える。
3列以上の行列は，星の中心からの光線の長さを表す．  NAの値は0に置き換えられる。
3列または4列の行列.  最初の2列は、温度計のシンボルの幅と高さを示す。3つの列がある場合、3番目の列は比率としてとられる：温度計はその底辺からこの比率の高さまで塗りつぶされる（色fgを使用）。  列が4つある場合は、3番目と4番目の列が割合としてとられ、熱量計はこの2つの高さの割合の間で塗りつぶされる。  fgで塗りつぶされなかった部分は、bgで指定された背景色（デフォルトは透明）で塗りつぶされる。
は5列の行列である。  最初の2列はボックスの幅と高さ, 次の2列は下ひげと上ひげの長さ, そして5番目は中央線が描かれるボックスの上方への割合 ([0,1] 以外の場合は警告)。
TRUE, FALSE または正の数を指定する。
add が TRUE の場合、シンボルは既存のプロットに追加され、そうでない場合は新しいプロットが作成されます。
シンボルを描画する色。
指定された場合、シンボルは色で塗りつぶされ、ベクトル bg はシンボルの数にリサイクルされます。
addがtrueでない場合, プロットのxラベル.
プロットの y ラベル。  add = TRUE なら未使用。
プロットのメインタイトル。  add = TRUE の場合は未使用。
長さ 2 の数値ベクトルで、プロットの x リミットを指定する。  add = TRUE の場合は未使用。
長さ2の数値ベクトルで、plotのyリミットを指定する。  add = TRUEの場合は未使用。
グラフィックパラメータは、プロットのアスペクト比と同様に、この関数に渡すこともできます (plot.window を参照)。
テキストラベルを書き込む座標の数値ベクトル。  xとyの長さが異なる場合、短い方が再利用されます。
書き込まれるテキストを指定する文字ベクトルまたは式。  labelsがxとyより長い場合、座標はlabelsの長さに再利用される。
0,1]に1つまたは2つの値を指定し、ラベルのx(およびオプションでy)の調整('justification')を指定します。0はleft/bottom、1はright/top、0.5はcenteredです。  ほとんどのデバイスでは、[0, 1]以外の値でも動作します。  以下を参照のこと。
テキストの位置指定子。  指定された場合、これは与えられたadj値を上書きします。  1,2,3,4の値はそれぞれ、指定された(x,y)座標の下、左、上、右の位置を示す。
pos が指定された場合、この値は指定された座標からのテキストラベルの距離（'オフセット'）を文字幅の端数で制御します。
カ レ ン ト フ ォ ン ト フ ァ ミ リ の場合は NULL、 Hershey ベ ク ト ル フ ォ ン ト の場合は長 さ 2 の文字ベ ク ト ル。  ベクトルの最初の要素は書体を選択し、2番目の要素はスタイルを選択する。  labelsが式の場合は無視される。
NULLとNAは1.0と等価です。
使用する色と（vfont = NULL の場合）フォント。  これらのデフォルトは、par() のグローバルグラフィカルパラメータの値です。
srt、family、xpd などの（par からの）さらなるグラフィカルパラメータ。
テキストラベルを書き込む座標の数値ベクトル。  xとyの長さが異なる場合、短い方が再利用される。
書き込むテキストを指定する文字ベクトルまたは式。  labelsがxとyより長い場合、座標はlabelsの長さに再利用される。
0,1]に1つまたは2つの値を指定し、ラベルのx(およびオプションでy)の調整('justification')を指定します。0はleft/bottom、1はright/top、0.5はcenteredです。  ほとんどのデバイスでは、[0, 1]以外の値でも動作します。  以下を参照のこと。
テキストの位置指定子。  指定された場合、これは与えられたadj値を上書きします。  1,2,3,4の値はそれぞれ、指定された(x,y)座標の下、左、上、右の位置を示す。
pos が指定された場合、この値は指定された座標からのテキストラベルの距離（'オフセット'）を文字幅の端数で制御します。
カ レ ン ト フ ォ ン ト フ ァ ミ リ の場合は NULL、 Hershey ベ ク ト ル フ ォ ン ト の場合は長 さ 2 の文字ベ ク ト ル。  ベクトルの最初の要素は書体を選択し、2番目の要素はスタイルを選択する。  labelsが式の場合は無視される。
NULLとNAは1.0と等価です。
使用する色と（vfont = NULL の場合）フォント。  これらのデフォルトは、par() のグローバルグラフィカルパラメータの値です。
srt、family、xpdなどの（parからの）さらなるグラフィカル・パラメータ。
メインタイトル（上部）は、フォント、サイズ（文字拡張）、色を使用 par(c("font.main", "cex.main", "col.main")).
フ ォ ン ト ・ サ イ ズ ・ 色を用いた （下側の） サブ タ イ ト ル par("font.sub", "cex.sub", "col.sub"))。
フォント、サイズ、色を用いた X 軸ラベル par(c("font.lab", "cex.lab", "col.lab")).
Y軸ラベル、xlabと同じフォント属性。
lineに値を指定すると、ラベルのデフォルトの配置が上書きされ、プロットエッジからこの行数だけ外側に配置される。
論理値。  TRUE の場合、タイトルはプロットの外側の余白に配置される。
par.Graphical.Parameterからさらにグラフィカルなパラメータを指定する。  xpdはクリッピング領域を設定するために使用できます: outer = TRUEでない限り、デフォルトは図領域で、そうでなければデバイス領域で、増加させることしかできません。
数値ベクトル
長さ 1 または 2 の数値。
TRUE の場合、ログスケールが有効な場合に警告が表示されます。
多角形の頂点の座標を含むベクトル。xy.coords を参照。
制御点に対するスプラインの形状を制御する -1 から 1 までの数値ベクトル。
スプラインが開いた形状か閉じた形状かを示す論理値。
開いたXスプラインの場合、曲線を描くために最初と最後の制御点を複製するかどうかを示す論理値。閉じたXスプラインの場合は無視される。
logical: Xスプラインを描画するか。  falseの場合、曲線を描画する線分のセットが返され、何も描画されません。
曲線を描く色。   border = NA を使用すると、境界線が描画されません。
図形を塗りつぶす色。デフォルトはNAで、塗りつぶさない。
lty、xpd、lend、ljoin、lmitreなどのグラフィックパラメータを引数として与えることができます。
数値ベクトル
長さ1または2の数値。
TRUE の場合、ログスケールが有効な場合に警告が表示されます。
数値ベクトル
長さ1または2の数値。
TRUE の場合、ログスケールが有効な場合に警告が表示されます。
 n x m 行列 (m= 1 の場合はベクトル)
 m x p 行列（m = 1 の場合はベクトル）。
矩形行列またはデータフレーム（おそらく相関行列）．
データ行列，データフレーム，またはベクトル（関数に依存）．
データ行列，データフレーム，またはベクトル
因子分析（fa）または主成分分析（principal）から返されるオブジェクト。
桁丸め
lowerCorのminlengthに省略される
ペアワイズ削除を行うか、または他のオプションの1つをcorにするか
相関行列の対角上のNAをチェックすべきか
"pearson"、"kendall"、"spearman"
ループ変数の現在値
ループが達成する最大値
どの関数がループしているか
キー反転される因子または成分（因子番号による）
char2numericのflag=TRUEは、数値であった変数にフラグを立てます。
この項目で可能な限りの情報を入力してください。
log関数の基数は何か（default=2、eは基数=exp(1)を意味する）
アクティブにするパッケージ(またはパッケージのリスト)の名前を指定し、すべての例をテストさせます。
このパッケージの依存関係を調べます。
どのタイプの依存関係を調べるか?
依存関係を調べ、そのすべての例をテストする。
これらの依存関係をテストしない
データフレームまたは行列から選択する
select from column with name from から select from column with name to です。
select from 列 from 列 to 列 to
正当なオブジェクトの文字列
データのdata.frameや行列、または共分散行列や相関行列。
キーが反転される項目がある場合は、すべての項目の方向を指定するか、どの項目を反転させるかのベクトルだけを指定する。
この実行を識別するための任意のテキスト文字列
は、項目の合計または項目の平均を反映する。  デフォルト値は mean。
カテゴリ度数を報告する場合に考慮するカテゴリ/項目の数。  デフォルトは10で、link{response.frequencies}に渡される。
デフォルトは、欠損値を除去し、一対の相関を求める
TRUE の場合、第1主成分を見つけ、負の負荷量を持つキー項目を反転させる。  この場合は警告を出します。
ブートストラップ信頼区間が必要な場合の反復回数
分散のない項目を削除し、警告を出す。
cor関数に渡すオプション"everything", "all.obs", "complete.obs", "na.or.complete", または "pairwise.complete.obs".デフォルトは "pairwise "である。
デフォルトでは、警告と項目が逆であったというメッセージを表示する。warnings = FALSEの場合、メッセージを表示しない。
信頼区間に使用する値
相関行列を入力として使う場合、オブザベーションの数を指定することで、信頼区間を求めることができる
欠損データをどのようにインピュートすべきか？まったくない、中央値、または平均値
尺度の項目数（r.barを求める）
信頼区間の幅 (pval/2 から 1-p.val/2)
alpha.ciに何桁使うか
データのdata.frameまたは行列，または共分散行列または相関行列
キーが反転される項目がある場合は、すべての項目の方向を指定するか、どの項目を反転させるかのベクトルだけを指定する。
この実行を識別するための任意のテキスト文字列
は、項目の合計または項目の平均を反映する。  デフォルト値は mean。
カテゴリ度数を報告する場合に考慮するカテゴリ/項目の数。  デフォルトは10で、link{response.frequencies}に渡される。
デフォルトは、欠損値を除去し、一対の相関を求める
TRUE の場合、第1主成分を見つけ、負の負荷量を持つキー項目を反転させる。  この場合は警告を出します。
ブートストラップ信頼区間が必要な場合の反復回数
分散のない項目を削除し、警告を出す。
cor関数に渡すオプション"everything", "all.obs", "complete.obs", "na.or.complete", または "pairwise.complete.obs".デフォルトは "pairwise "である。
デフォルトでは、警告と項目が逆であったというメッセージを表示する。warnings = FALSEの場合、メッセージを表示しない。
信頼区間に使用する値
相関行列を入力として使う場合、オブザベーションの数を指定することで、信頼区間を求めることができる
欠損データをどのようにインピュートすべきか？まったくない、中央値、または平均値
尺度の項目数（r.barを求める）
信頼区間の幅 (pval/2 から 1-p.val/2)
alpha.ciに使用する桁数
setCor, mediate, omega, fa のオブジェクト。
さらに同じ型のオブジェクトをここに与えてもよい
TP、FP、FN、TN 値の 4 x 1 ベクトルまたは 2 x 2 表（下記参照）。
成功した結果または実際の症状の基本率（t が指定されていない場合）
候補または診断の選択率（tが指定されていない場合）
予測変数と結果変数の間のPhi相関係数（tが指定されていない場合）。
Valid Positives (成功した選択された応募者；正しい診断)の数 (tとPhiが指定されていない場合)
変数1と変数2の名前
"b"（両方）、"d"（決定理論）、"a"（auc）、または "n "どちらでもない。
Trueの場合、ノイズ分布は0を中心とする。
0のセル値は正しい値に置き換えられる。(これが必要な理由については tetrachoric を参照)。
VPとFPの色の選択。デフォルトは=c("blue", "red")だが、色を避けたい場合はc("gray", "black")にすることもできる。
ベクトル，data.frame，または行列
差分を求める際に使用するラグ。
グループ化に使用するx data.frameの列
欠損データは取り除くべきか？
autoRでの欠損データの扱い方
因数分解に適した相関行列またはデータ行列
1からnfactorsまでの因子が抽出される。nfactors がベクトルの場合、ベクトルで指定された因子の数だけが抽出されます。(例を参照)。
因子法。  デフォルトは 'minres' 因子分解です。  ただし、オリジナルのGoldbergの論文と一致させるために、主成分を使用することもできます (fm ="pca")。
適用する回転のタイプ。  因子のデフォルトは oblimin です。  デフォルトがvarimaxである通常のpcaの呼び出しとは異なり、bassAckwardではpcaのデフォルトはobliminである。
どの因子スコアリング・アルゴリズムを使用するか。デフォルトは "tenBerge "で、その他に "regression "や "bartlett "がある。
もし、"tenBerge "以外のスコアリング・アルゴリズムを使用する場合、因子スコアのフィット不足のために相関を調整すべきでしょうか？
デフォルトではbassAckwardダイアグラムを描く
欠損データの扱い方。  use='pairwise "はペアワイズ完全相関を見つける。
どのような相関を見つけるか。  デフォルトはPearson。
ケースは重み付けされるべきか？  デフォルトはno。
テトラコリック相関またはポリコリック相関を見つける場合、空のセルにどのような補正を適用するか（デフォルトは0.5）。
bassAckwardが返すオブジェクト
各パスに表示する桁数
abs(cut) より大きい値がパス図に表示される。
ラベルは、bassAckward 関数の出力から取ることもできるし、リストとして指定することもできる。
余白は、図がきれいになるように、通常より少し大きく設定されます。
図のメインタイトル
TRUE の場合、要因に関連する項目を表示する。
TRUE の場合、因子負荷量によって項目を並べ替える
図を左から右に描くか、上から下に描くか。
同じレベルで因子間の相関を表示するかどうか
より見やすい図にするために、最も低い2つの水準で因子の名前を変更して並べ替える
TRUE の場合、この因子によって説明される分散のパーセンテージを表示します。
その他のグラフィック・パラメータ（例：cex）
相関行列または因数分解に適したデータ行列
1 から nfactors までの因子が抽出される。nfactors がベクトルの場合，ベクトルで指定された因子の数だけが抽出される．(例を参照)。
因子法。  デフォルトは 'minres' 因子分解です。  しかし、オリジナルのGoldbergの論文と一致させるために、主成分を使用することもできます (fm ="pca")。
適用する回転のタイプ。  因子のデフォルトは oblimin です。  デフォルトがvarimaxである通常のpcaの呼び出しとは異なり、bassAckwardではpcaのデフォルトはobliminである。
どの因子スコアリング・アルゴリズムを使用するか。デフォルトは "tenBerge "で、その他に "regression "や "bartlett "がある。
もし、"tenBerge "以外のスコアリング・アルゴリズムを使用する場合、因子スコアがフィットしないために相関を調整する必要がありますか？
デフォルトではbassAckwardダイアグラムを描く
欠損データの扱い方。  use='pairwise "はペアワイズ完全相関を見つける。
どのような相関を見つけるか。  デフォルトはPearson。
ケースは重み付けされるべきか？  デフォルトはno。
テトラコリック相関またはポリコリック相関を見つける場合、空のセルにどのような補正を適用するか（デフォルトは0.5）。
bassAckwardが返すオブジェクト
各パスに表示する桁数
abs(cut) より大きい値がパス図に表示される。
ラベルは、bassAckward 関数の出力から取ることもできるし、リストとして指定することもできる。
余白は、図がきれいになるように、通常より少し大きく設定されます。
図のメインタイトル
TRUE の場合、要因に関連する項目を表示する。
TRUE の場合、因子負荷量によって項目を並べ替える
図を左から右に描くか、上から下に描くか。
同じレベルで因子間の相関を表示するかどうか
より見やすい図にするために、最も低い2つの水準で因子の名前を変更して並べ替える
TRUE の場合、この因子によって説明される分散のパーセンテージを表示します。
その他のグラフィック・パラメータ（例：cex）
関数によってデータ行列またはデータフレーム。
bestScales と bestItems の経験的ターゲットとなる変数（名前または場所）。  別のオブジェクトでもよい。
min.itemからmax.itemまでの単位重み付けスケールと相関重み付けスケールを見つける。
これらはすべてfinal.multi.validオブジェクトにまとめられる。
予測r + delta * rのse < max値のアイテムを返す
abs(x[,c1]) > cutのすべての値を返す。
重み付き尺度を求めるとき、0次相関を持つすべての項目を使用する > wtd.cut
重み付き尺度を求める場合， wtd.cut よりも大きい wtd.n 個の項目を使用する．
生データ（相関を求める）または相関行列（raw=FALSE）。
TRUEの場合、bestItemsの絶対値でソート
f$loadings 行列の rownames またはデータ行列または相関行列の colnames に対応する rownames と，項目内容のエントリ（複数列でもよい）を持つ data.frame．
TRUE の場合、分散のない項目を削除
経験的尺度を構成する項目数、または (bestItems、bestn.itemsを表示)
他の基準との相関は、bestScalesのための公平なゲームですか？
最良の尺度、ひいては基準との相関を見つけるとき、欠損データをどのように扱うべきでしょうか？  デフォルトでは、欠損項目は削除されます。(つまり、ペアワイズ完全相関を使用します）。
ブートストラップ推定を何回実行するか．最良の項目関数をn.iter 回複製して、各回のケースの約1-1/eをサンプリングし、各反復のケースの残りの1/eで検証する。
folds > 1の場合、これはk-folds検証である。  ブートストラップ集計を行うにはn.iter > 1とし、k-foldsを行うにはfolds > 1とする。   
最終的なベスト・キーに項目を含めるために必要な反復の割合。
相関の確率の対数に基づいて項目を選択する。  これは、対になるケースの数が対ごとに大きく異なる場合にのみ効果がある。  
出力を表示するときは桁数に丸める。
関数によってはデータ行列またはデータフレーム。
bestScalesとbestItemsの経験的ターゲットとなる変数（名前または場所）。  別のオブジェクトでもよい。
min.itemからmax.itemまでの単位重み付けスケールと相関重み付けスケールを見つける。
これらはすべてfinal.multi.validオブジェクトにまとめられる。
予測r + delta * rのse < max値のアイテムを返す
abs(x[,c1]) > cutのすべての値を返す。
重み付き尺度を求めるとき、0次相関を持つすべての項目を使用する > wtd.cut
重み付き尺度を求める場合， wtd.cut よりも大きい wtd.n 個の項目を使用する．
生データ（相関を求める）または相関行列（raw=FALSE）。
TRUEの場合、bestItemsの絶対値でソート
f$loadings 行列の rownames またはデータ行列または相関行列の colnames に対応する rownames と，項目内容のエントリ（複数列でもよい）を持つ data.frame．
TRUE の場合、分散のない項目を削除
経験的尺度を構成する項目数、または (bestItems、bestn.itemsを表示)
他の基準との相関は、bestScalesのための公平なゲームですか？
最良の尺度、ひいては基準との相関を見つけるとき、欠損データをどのように扱うべきでしょうか？  デフォルトでは、欠損項目は削除されます。(つまり、ペアワイズ完全相関を使用します）。
ブートストラップ推定を何回実行するか．最良の項目関数をn.iter 回複製して、各回のケースの約1-1/eをサンプリングし、各反復のケースの残りの1/eで検証する。
folds > 1の場合、これはk-folds検証である。  ブートストラップ集計を行うにはn.iter > 1とし、k-foldsを行うにはfolds > 1とする。   
最終的なベスト・キーに項目を含めるために必要な反復の割合。
相関の確率の対数に基づいて項目を選択する。  これは、対になるケースの数が対ごとに大きく異なる場合にのみ効果がある。  
出力を表示するときは桁数を丸める。
データを指定するデータフレームまたは行列
プロットする変数
グループ化変数。
水平（デフォルト）または垂直バー
2つのグループの色 - デフォルトは青と赤
指定された場合、従属軸のラベル
TRUE の場合、数値を 0 から最大 -min の範囲にするために最小値を引く。  これは、高さを表示する場合に役立つ
適切な場合はx軸ラベル
そうでない場合はy軸ラベル
グラフ作成プログラムに渡すその他のパラメータ
荷重行列
荷重行列
荷重行列
どの回転を使用するか？
(Promaxの)バリマックス荷重を上げるべき乗
Promaxのさまざまな負荷量を上げるためのべき乗。
任意のターゲット行列，任意の重みで構成できるが，おそらく-1,0,1の重み．  もし見つからない場合，ターゲットは，すべての項目を最も負荷の高い因子に割り当てることによって決定される独立クラスター構造である．
行列が変換される値（主に0，1，NA）の行列．
初期回転行列
最適化ルーチン（GPArotationパッケージおよびPromaxのGPForth）に渡されるパラメータ。
最適化ルーチン（GPArotation パッケージの GPForth）に渡されるパラメータ。
最適化ルーチン（GPArotation パッケージの GPForth）に渡されるパラメータ
(faRotateなどに)渡すその他のパラメータには、以下のものがあります。 ターゲットリストまたは行列
数値変数のデータセット
サブセットのサイズは？デフォルトは NCOL (x)/4
標準の相関オプション。  "pairwise" は欠損データを許す
デフォルトはPearson相関、代替はpolychoric。  
fa、fa.polyまたはscores=TRUEオプション付きprincipalからの出力。
NULLの場合、プロット文字(pch)を指定して点を描画する。データ点を識別するには，labels= 1:n (n はオブザベーションの数)，または labels =rownames(data) (data は因子分析で分析されたデータセット)を指定する．
データ・ラベルと因子ラベルのプロット・サイズのベクトル
2因子バイプロットのメイン・タイトル
2つ以上の因子をプロットする場合，因子スコアのヒストグラムの色
x スコアの限界．デフォルトはプラス/マイナス3シグマ．
得点のy限界。デフォルトはプラス/マイナス3シグマ。
因子負荷量のx限界値．
因子負荷量の y 限界値.デフォルトはプラスマイナス1.0.
3次元（またはそれ以上）のプロットを行う場合，どのサイズで "o "のプロットから". "のプロットに切り替えるべきか？
ヒストグラムの調整係数
データ点と因子負荷ラベルの色のベクトル
ラベルをプロットする場合、どの位置に置くべきか？1=下,2=左,3=上,4=右。もし見つからない場合は、データ点の代わりにラベルが印刷されることを想定しています。
 矢印の頭の長さ
pch=16は適度な大きさの点を与える。pch=". "は小さな点を与える。  色をつける場合は、pchを21から25の間で使う（例を参照）。
指定された因子だけをプロットする
abs(factor scores) < cuts) (実際には、xとyのスコアの0からの距離)を持つケースにラベルを付けない。
2つの空間での共同性が < cutl である変数にラベルを付けない
スコアのグループ化変数のベクトル．  グループごとに異なる色とシンボルを表示する。
TRUE の場合、平滑散布図（データ点ではなく、密度を表示）を表示します。大きなデータセットにのみ有効です。
TRUE の場合、変数に矢印を引き、得点をプロットします。  FALSEの場合、得点に矢印を引き、変数をプロットします。
グラフィックスのその他のオプション
負荷量行列
負荷量行列
負荷量行列
どの回転を使用するか？
(Promaxの)バリマックス荷重を上げるべき乗
Promaxのさまざまな負荷量を上げるためのべき乗。
任意のターゲット行列，任意の重みで構成できるが，おそらく-1,0,1の重み．  もし見つからない場合，ターゲットは，すべての項目を最も負荷の高い因子に割り当てることによって決定される独立クラスター構造である．
行列が変換される値（主に0，1，NA）の行列．
初期回転行列
最適化ルーチン（GPArotationパッケージおよびPromaxのGPForth）に渡されるパラメータ。
最適化ルーチン（GPArotation パッケージの GPForth）に渡されるパラメータ。
最適化ルーチン（GPArotation パッケージの GPForth）に渡されるパラメータ
(faRotateなどに)渡す他のパラメータには、ターゲットリストまたは行列が含まれます。
a) 2値データ（例えば、bockデータセットのlsat6）のデータフレームまたは行列、または離散数値（例えば、あまり多くないレベル、c) 4つの細胞頻度に対応する要素を持つベクトル（四頻度 の場合） d) 2つの限界頻度（行と列）と合併症の要素を持つベクトル（四頻 度の場合）。
離散スコアの（行列またはデータフレーム）。四分位法の場合，これらは二分位であるべきで，多分位法の場合はあまり多くないレベルであるべきで，双列の場合はあまり多くない(<10?)カテゴリを持つ離散的な(例えば，項目応答)であるべきである．
tetrachoric,polychoric,polybi,mixed.corの入力セルがゼロの場合に連続性を補正するために使用する補正値。  連続性を補正する場合としない場合の効果については、例を参照のこと。
TRUEで、テトラコロリック/ポリコロリック行列が正定値でない場合、cor.smoothを用いて簡単な平滑化アルゴリズムを適用する。
対相関を求めるとき、タウパラメータの大域的な値(多少速くなる)と局所的な値(global=FALSE)のどちらを使うべきか？  global=TRUEは、1つの項目のペアについて、それらの項目の度数を用いて他のペアから情報を借用します。   これは、欠損データが多い場合に違いが生じます。global=FALSE、correct=TRUEで標本サイズが非常に小さい場合、この関数は失敗します（理由は未定です）。
他のパッケージが壊れないようにするために残しておいた、もう使われないオプション。
各ケースに適用する重みを指定するオブザベーション数の長さのベクトル。  NULLの場合は、すべてのケースで重みが1に相当する。  
 short=TRUEは、相関を表示するだけ、short=FALSEは、John Foxのhetcor関数がインストールされている場合、およびpolychoricを実行している場合、そのhetcor出力を表示します。
std.err=FALSEは標準誤差を報告しない（より速く）非推奨
プログレスバーを表示する（マルチコアでない場合）
 ML=FALSEは2ステップで素早く、ML=TRUEはより長い最尤法を行う！非推奨
欠損データは削除すべきか
分散のないケースは、処理を進める前に警告とともに削除されます。
多項式で悩むカテゴリの最大数。  
polydiへの多値入力
polydiへの2値入力
多値変数のタウ値 - global=TRUE の場合
2値変数のタウ値 - globabl = TRUEの場合
無作為化する被験者数。  実験条件数の倍数でなければならない。
各 IV の条件数。  デフォルトは1つのIVに対して2水準。  複数のIVがある場合は、ベクトルで指定する。名前が与えられている場合はそれが使用され、そうでない場合はIVはIV1 ... とラベル付けされる。IVn
矩形行列またはデータフレーム（おそらく相関行列）．
データ行列，データフレーム，またはベクトル．
データ行列，データフレーム，またはベクトル
因子分析（fa）または主成分分析（principal）から返されるオブジェクト．
桁丸め
lowerCorのminlengthに省略される
ペアワイズ削除を行うか、または他のオプションの1つをcorにするか
相関行列の対角上のNAをチェックすべきか
"pearson"、"kendall"、"spearman"
ループ変数の現在値
ループが達成する最大値
どの関数がループしているか
キー反転される因子または成分（因子番号による）
char2numericのflag=TRUEは、数値であった変数にフラグを立てます。
この項目で可能な限りの情報を入力してください。
log関数の基数は何か（default=2、eは基数=exp(1)を意味する）
アクティブにするパッケージ(またはパッケージのリスト)の名前を指定し、すべての例をテストさせます。
このパッケージの依存関係を調べます。
どのタイプの依存関係を調べるか?
依存関係を調べ、そのすべての例をテストする。
これらの依存関係をテストしない
データフレームまたは行列から選択する
select from column with name from から select from column with name to です。
select from 列 from 列 to 列 to
正当なオブジェクトの文字列
 Pearson r
Fisher z
信頼区間のサンプルサイズ
tまたはgの自由度
信頼区間
pを両側pとして扱う
効果量（ヘッジのg）
スチューデントのt値
カイ2乗
相関行列を共分散行列に変換するために使用する標準偏差のベクトル
 シミュレーションする変数の数
シミュレーションする被験者数
 circum=TRUEはcircumplex構造，FALSEは単純構造
sim.sphericalの場合は，単純構造または球状構造
1次元目の平均負荷
2次元目の平均荷重
sim.sphericalにおける3次元目の平均負荷
一般因子の平均負荷（デフォルト=0）
傾きを導入する場合，1次元目の中心からどの程度ずれているか
2次元目にスキューを導入する
3次元目にスキューを導入する - sim.sphericalを使用する場合
 連続変数またはカテゴリ変数。  
 lowより小さい値は、強制的にlowになります（item.dichotでは0になります）。
 high より大きい値は，high に強制される（または item.dichot で 1）．
cutpoint より小さい値をすべて cutpoint に変更する。
カットポイントとは
sim.sphericalの第1因子の変数数
sim.sphericalの第2因子と第3因子の変数数
行列またはデータフレーム
連続値をカテゴリ値に変換する際にカットポイントとして使用するoldの値
oldのどの列をカテゴリ変数に変換するか。  見つからない場合は、すべての列が変換される。
シミュレーションする標本サイズのベクトル
シミュレーションする変数の数のベクトル
simulation.circの結果のデータフレーム
シミュレーションするサンプルサイズのベクトル
シミュレーションする変数の数のベクトル
simulation.circの結果のデータフレーム
 負荷量の行列
 負荷量は相関行列の負荷量か？
 変数をソートするか
時刻を最初の値とする観測値のデータフレームまたは行列（コードで指定されていない場合、角度は時間またはラジアンとして指定できます）。
被験者識別変数
データの行列またはデータフレーム。  指定された場合、angle と code は変数名（または場所）。  例を参照。
グループによる比較を行う場合は、グループ・コードを指定する。
スプリット・ハーフの信頼性を求めるときに使用する、被験者ごとのオブザベーションの最小数。
信頼度は、奇数と偶数の項目 (TRUE) または前半と後半の項目 (FALSE) に基づきます。  デフォルトは前半と後半。
時間帯は24時間のリズムを持つものと仮定されるが、他のリズムが適合することもある。cosinor.periodを呼び出す場合は、範囲を指定することができる。
IDフィールドはどの列番号か
1つの変数に対して、どの特定の被験者番号をプロットするか
もしTRUEなら、最初の変数（角度）をプロットする
opti=TRUE: 反復最適化 (遅い) または opti=FALSE: 線形フィット (速い)
TRUEの場合、測定は24時間単位、それ以外はラジアン単位。
位相角と相関させる外部変数のセット
欠損データを削除するか？
デフォルトが機能しない場合は、y軸の範囲を指定する。
y軸のラベル
x軸のラベル
グラフィックのタイトル
複数の（スパゲッティ）プロットを行う場合、2つ目以降のプロットにはadd = TRUEを設定する。
複数（スパゲッティ）プロットを行う場合、1つ目以降のプロットにはmulti=TRUEを設定する。
線種をgraphicsに渡す
その他のグラフィックパラメータ
時刻を最初の値とする観測値のデータフレームまたは行列（コードで指定しない限り） 角度は時間またはラジアンのいずれかで指定可能）
被験者識別変数
データの行列またはデータフレーム。  指定された場合、angle と code は変数名（または場所）。  例を参照。
グループによる比較を行う場合は、グループ・コードを指定する。
スプリット・ハーフの信頼性を求めるときに使用する、被験者ごとのオブザベーションの最小数。
信頼度は、奇数と偶数の項目 (TRUE) または前半と後半の項目 (FALSE) に基づきます。  デフォルトは前半と後半。
時間帯は24時間のリズムを持つものと仮定されるが、他のリズムが適合することもある。cosinor.periodを呼び出す場合は、範囲を指定することができる。
IDフィールドはどの列番号か
1つの変数に対して、どの特定の被験者番号をプロットするか
もしTRUEなら、最初の変数（角度）をプロットする
opti=TRUE: 反復最適化 (遅い) または opti=FALSE: 線形フィット (速い)
TRUEの場合、測定は24時間単位、それ以外はラジアン単位。
位相角と相関させる外部変数のセット
欠損データを削除するか？
デフォルトが機能しない場合は、y軸の範囲を指定する。
y軸のラベル
x軸のラベル
グラフィックのタイトル
複数の（スパゲッティ）プロットを行う場合、2つ目以降のプロットにはadd = TRUEを設定する。
複数（スパゲッティ）プロットを行う場合、1つ目以降のプロットにはmulti=TRUEを設定する。
線種をgraphicsに渡す
その他のグラフィックパラメータ
時刻を最初の値とする観測値のデータフレームまたは行列（コードで指定しない限り） 角度は時間またはラジアンのいずれかで指定可能）
被験者識別変数
データの行列またはデータフレーム。  指定された場合、angle と code は変数名（または場所）。  例を参照。
グループによる比較を行う場合は、グループ・コードを指定する。
スプリット・ハーフの信頼性を求めるときに使用する、被験者ごとのオブザベーションの最小数。
信頼度は、奇数と偶数の項目 (TRUE) または前半と後半の項目 (FALSE) に基づきます。  デフォルトは前半と後半。
時間帯は24時間のリズムを持つものと仮定されるが、他のリズムが適合することもある。cosinor.periodを呼び出す場合は、範囲を指定することができる。
IDフィールドはどの列番号か
1つの変数に対して、どの特定の被験者番号をプロットするか
もしTRUEなら、最初の変数（角度）をプロットする
opti=TRUE: 反復最適化 (遅い) または opti=FALSE: 線形フィット (速い)
TRUEの場合、測定は24時間単位、それ以外はラジアン単位。
位相角と相関させる外部変数のセット
欠損データを削除するか？
デフォルトが機能しない場合は、y軸の範囲を指定する。
y軸のラベル
x軸のラベル
グラフィックのタイトル
複数の（スパゲッティ）プロットを行う場合、2つ目以降のプロットにはadd = TRUEを設定する。
複数（スパゲッティ）プロットを行う場合、1つ目以降のプロットにはmulti=TRUEを設定する。
線種をgraphicsに渡す
その他のグラフィックパラメータ
時刻を最初の値とする観測値のデータフレームまたは行列（コードで指定しない限り） 角度は時間またはラジアンのいずれかで指定可能）
被験者識別変数
データの行列またはデータフレーム。  指定された場合、angle と code は変数名（または場所）。  例を参照。
グループによる比較を行う場合は、グループ・コードを指定する。
スプリット・ハーフの信頼性を求めるときに使用する、被験者ごとのオブザベーションの最小数。
信頼度は、奇数と偶数の項目 (TRUE) または前半と後半の項目 (FALSE) に基づきます。  デフォルトは前半と後半。
時間帯は24時間のリズムを持つものと仮定されるが、他のリズムが適合することもある。cosinor.periodを呼び出す場合は、範囲を指定することができる。
IDフィールドはどの列番号か
1つの変数に対して、どの特定の被験者番号をプロットするか
もしTRUEなら、最初の変数（角度）をプロットする
opti=TRUE: 反復最適化 (遅い) または opti=FALSE: 線形フィット (速い)
TRUEの場合、測定は24時間単位、それ以外はラジアン単位。
位相角と相関させる外部変数のセット
欠損データを削除するか？
デフォルトが機能しない場合は、y軸の範囲を指定する。
y軸のラベル
x軸のラベル
グラフィックのタイトル
複数の（スパゲッティ）プロットを行う場合、2つ目以降のプロットにはadd = TRUEを設定する。
複数（スパゲッティ）プロットを行う場合は、1つ目以降のプロットにmulti=TRUEを設定する。
線種をgraphicsに渡す
その他のグラフィックパラメータ
時刻を最初の値とする観測値のデータフレームまたは行列（コードで指定しない限り） 角度は時間またはラジアンのいずれかで指定可能）
被験者識別変数
データの行列またはデータフレーム。  指定された場合、angle と code は変数名（または場所）。  例を参照。
グループによる比較を行う場合は、グループ・コードを指定する。
スプリット・ハーフの信頼性を求めるときに使用する、被験者ごとのオブザベーションの最小数。
信頼度は、奇数と偶数の項目 (TRUE) または前半と後半の項目 (FALSE) に基づきます。  デフォルトは前半と後半。
時間帯は24時間のリズムを持つと仮定されるが、他のリズムが適合することもある。cosinor.periodを呼び出す場合は、範囲を指定することができる。
IDフィールドはどの列番号か
1つの変数に対して、どの特定の被験者番号をプロットするか
もしTRUEなら、最初の変数（角度）をプロットする
opti=TRUE: 反復最適化 (遅い) または opti=FALSE: 線形フィット (速い)
TRUEの場合、測定は24時間単位、それ以外はラジアン単位。
位相角と相関させる外部変数のセット
欠損データを削除するか？
デフォルトが機能しない場合は、y軸の範囲を指定する。
y軸のラベル
x軸のラベル
グラフィックのタイトル
複数の（スパゲッティ）プロットを行う場合、2つ目以降のプロットにはadd = TRUEを設定する。
複数（スパゲッティ）プロットを行う場合、1つ目以降のプロットにはmulti=TRUEを設定する。
線種をgraphicsに渡す
その他のグラフィックパラメータ
時刻を最初の値とする観測値のデータフレームまたは行列（コードで指定しない限り） 角度は時間またはラジアンのいずれかで指定可能）
被験者識別変数
データの行列またはデータフレーム。  指定された場合、angle と code は変数名（または場所）。  例を参照。
グループによる比較を行う場合は、グループ・コードを指定する。
スプリット・ハーフの信頼性を求めるときに使用する、被験者ごとのオブザベーションの最小数。
信頼度は、奇数と偶数の項目 (TRUE) または前半と後半の項目 (FALSE) に基づきます。  デフォルトは前半と後半。
時間帯は24時間のリズムを持つものと仮定されるが、他のリズムが適合することもある。cosinor.periodを呼び出す場合は、範囲を指定することができる。
IDフィールドはどの列番号か
1つの変数に対して、どの特定の被験者番号をプロットするか
もしTRUEなら、最初の変数（角度）をプロットする
opti=TRUE: 反復最適化 (遅い) または opti=FALSE: 線形フィット (速い)
TRUEの場合、測定は24時間単位、それ以外はラジアン単位。
位相角と相関させる外部変数のセット
欠損データを削除するか？
デフォルトが機能しない場合は、y軸の範囲を指定する。
y軸のラベル
x軸のラベル
グラフィックのタイトル
複数の（スパゲッティ）プロットを行う場合、2つ目以降のプロットにはadd = TRUEを設定する。
複数（スパゲッティ）プロットを行う場合、1つ目以降のプロットにはmulti=TRUEを設定する。
線種をgraphicsに渡す
その他のグラフィックパラメータ
時刻を最初の値とする観測値のデータフレームまたは行列（コードで指定しない限り） 角度は時間またはラジアンのいずれかで指定可能）
被験者識別変数
データの行列またはデータフレーム。  指定された場合、angle と code は変数名（または場所）。  例を参照。
グループによる比較を行う場合は、グループ・コードを指定する。
スプリット・ハーフの信頼性を求めるときに使用する、被験者ごとのオブザベーションの最小数。
信頼度は、奇数と偶数の項目 (TRUE) または前半と後半の項目 (FALSE) に基づきます。  デフォルトは前半と後半。
時間帯は24時間のリズムを持つものと仮定されるが、他のリズムが適合することもある。cosinor.periodを呼び出す場合は、範囲を指定することができる。
IDフィールドはどの列番号か
1つの変数に対して、どの特定の被験者番号をプロットするか
もしTRUEなら、最初の変数（角度）をプロットする
opti=TRUE: 反復最適化 (遅い) または opti=FALSE: 線形フィット (速い)
TRUEの場合、測定は24時間単位、それ以外はラジアン単位。
位相角と相関させる外部変数のセット
欠損データを削除するか？
デフォルトが機能しない場合は、y軸の範囲を指定する。
y軸のラベル
x軸のラベル
グラフィックのタイトル
複数の（スパゲッティ）プロットを行う場合、2つ目以降のプロットにはadd = TRUEを設定する。
複数（スパゲッティ）プロットを行う場合、1つ目以降のプロットにはmulti=TRUEを設定する。
線種をgraphicsに渡す
その他のグラフィックパラメータ
時刻を最初の値とする観測値のデータフレームまたは行列（コードで指定しない限り） 角度は時間またはラジアンのいずれかで指定可能）
被験者識別変数
データの行列またはデータフレーム。  指定された場合、angle と code は変数名（または場所）。  例を参照。
グループによる比較を行う場合は、グループ・コードを指定する。
スプリット・ハーフの信頼性を求めるときに使用する、被験者ごとのオブザベーションの最小数。
信頼度は、奇数と偶数の項目 (TRUE) または前半と後半の項目 (FALSE) に基づきます。  デフォルトは前半と後半。
時間帯は24時間のリズムを持つものと仮定されるが、他のリズムが適合することもある。cosinor.periodを呼び出す場合は、範囲を指定することができる。
IDフィールドはどの列番号か
1つの変数に対して、どの特定の被験者番号をプロットするか
TRUEならば、最初の変数（角度）をプロットする。
opti=TRUE: 反復最適化 (遅い) または opti=FALSE: 線形フィット (速い)
TRUEの場合、測定は24時間単位、それ以外はラジアン単位。
位相角と相関させる外部変数のセット
欠損データを除去するか？
デフォルトが機能しない場合は、Y軸の範囲を指定する。
y軸のラベル
x軸のラベル
グラフィックのタイトル
複数の（スパゲッティ）プロットを行う場合、2つ目以降のプロットにはadd = TRUEを設定する。
複数（スパゲッティ）プロットを行う場合は、1つ目以降のプロットにmulti=TRUEを設定する。
線種をgraphicsに渡す
その他のグラフィックパラメータ
時刻を最初の値とする観測値のデータフレームまたは行列（コードで指定しない限り） 角度は時間またはラジアンのいずれかで指定可能）
被験者識別変数
データの行列またはデータフレーム。  指定された場合、angle と code は変数名（または場所）。  例を参照。
グループによる比較を行う場合は、グループ・コードを指定する。
スプリット・ハーフの信頼性を求めるときに使用する、被験者ごとのオブザベーションの最小数。
信頼度は、奇数と偶数の項目 (TRUE) または前半と後半の項目 (FALSE) に基づきます。  デフォルトは前半と後半。
時間帯は24時間のリズムを持つものと仮定されるが、他のリズムが適合することもある。cosinor.periodを呼び出す場合は、範囲を指定することができる。
IDフィールドはどの列番号か
1つの変数に対して、どの特定の被験者番号をプロットするか
もしTRUEなら、最初の変数（角度）をプロットする
opti=TRUE: 反復最適化 (遅い) または opti=FALSE: 線形フィット (速い)
TRUEの場合、測定は24時間単位、それ以外はラジアン単位。
位相角と相関させる外部変数のセット
欠損データを削除するか？
デフォルトが機能しない場合は、y軸の範囲を指定する。
y軸のラベル
x軸のラベル
グラフィックのタイトル
複数の（スパゲッティ）プロットを行う場合、2つ目以降のプロットにはadd = TRUEを設定する。
複数（スパゲッティ）プロットを行う場合、1つ目以降のプロットにはmulti=TRUEを設定する。
線種をgraphicsに渡す
その他のグラフィックパラメータ
時刻を最初の値とする観測値のデータフレームまたは行列（コードで指定しない限り） 角度は時間またはラジアンのいずれかで指定可能）
被験者識別変数
データの行列またはデータフレーム。  指定された場合、angle と code は変数名（または場所）。  例を参照。
グループによる比較を行う場合は、グループ・コードを指定する。
スプリット・ハーフの信頼性を求めるときに使用する、被験者ごとのオブザベーションの最小数。
信頼度は、奇数と偶数の項目 (TRUE) または前半と後半の項目 (FALSE) に基づきます。  デフォルトは前半と後半。
時間帯は24時間のリズムを持つものと仮定されるが、他のリズムが適合することもある。cosinor.periodを呼び出す場合は、範囲を指定することができる。
IDフィールドはどの列番号か
1つの変数に対して、どの特定の被験者番号をプロットするか
もしTRUEなら、最初の変数（角度）をプロットする
opti=TRUE: 反復最適化 (遅い) または opti=FALSE: 線形フィット (速い)
TRUEの場合、測定は24時間単位、それ以外はラジアン単位。
位相角と相関させる外部変数のセット
欠損データを削除するか？
デフォルトが機能しない場合は、y軸の範囲を指定する。
y軸のラベル
x軸のラベル
グラフィックのタイトル
複数の（スパゲッティ）プロットを行う場合、2つ目以降のプロットにはadd = TRUEを設定する。
複数（スパゲッティ）プロットを行う場合、1つ目以降のプロットにはmulti=TRUEを設定する。
線種をgraphicsに渡す
その他のグラフィックパラメータ
スケール/クラスタキーのリスト、またはクラスタキーの行列
相関行列
相関行列または生データ行列のいずれか
statsByからの出力。  scoreByに必要。
 TRUEを指定すると、生相関と減衰補正相関の両方が表示される。
相関行列の共同性推定値として二乗重相関を使うべきか？
SMC=TRUEの場合、項目のsmcsを関数に渡すか、計算する。
TRUEの場合、平均項目間相関に基づいて欠測相関をインプットし、そうでなければNAを返す。
そうでない場合は NA を返します。オーバーラップの補正に平均 r を使用しますか？ そうでない場合は smcs を返します。
デフォルトでは、採点キーに含まれる項目の統計量のみを求める。これにより、悪い項目が採点キーの集合に含まれていない場合、その項目を含む行列からスコアを見つけることができます。
相関を定義するために必要な対のオブザベーションの最小数（scoreBy の場合）
scoreBy で使用される行列が正半定値でない場合、平滑化すべきか？
適合される元の相関行列
 クラスタ負荷量 - つまり、項目の重複を補正したクラスタと個々の項目の相関。
クラスター構造
 対角行列もフィットすべきか？  
 クラスタキー：-1,0,1のクラスタ重み行列
 相関行列
信頼性を補正
共同性の推定として二乗重相関を使用し、そうでなければ各変数の最大の相関を使用する
負荷量を含む因子分析またはクラスター分析の出力、または項目ごとのクラスター相関の行列。または kmeans クラスタ分析の出力。
 クラスタ・メンバーシップのベクトル
 絶対負荷量が > cut の場合、項目をクラスタに割り当てます。
row.namesが存在する場合はプロットに追加され、存在しない場合はラベルを指定できます。  labels =NULL で行名がない場合、変数は行番号でラベル付けされる)。
 任意のタイトル
ほとんど同じ因子負荷量をプロットする場合，ポイントをジッタリングして "ジグル "させると便利なことがある．デフォルトは、ジグルしない。
jiggle=TRUE の場合、ポイントはどれくらいジッタリングされるべきか？
因子とクラスターは、pch+1から始まる異なるpch値で表示されます。
2次元プロットのラベルのテキストの位置。1=下, 2=左, 3=上, 4=右
点にラベルを追加する場合，点だけでなくラベルも表示すべきか．  多くの点については、点を表示せず、ラベルだけを表示する方がよい。
プロットする因子/クラスターを指定する
任意のタイトル - タイトルと冗長
プロットするその他のオプション
クラスタ割り当てのベクトル、またはクラスタのベクトルを含む "kmeans "クラスのオブジェクト。
データ・フレームまたは行列（数式モードで指定可能）
2値グループ化変数（数式入力で指定可能（例を参照））。
group2で定義された各サブグループに対して cohen.dを適用（数式でも指定可能）
数式モードを使用し、特定の変数を指定する場合（例を参照）
効果量
d.robustで平均と標準偏差を求める際に使用されるトリミングの量
第1群と第2群の合計標本サイズ
1群の標本サイズ（1群のみの場合）
2群の標本サイズ
2つの分散をプールする
スチューデントのt統計量
1-αは信頼区間の幅
相関ではなく共分散行列を求める
効果量に変換される相関
グループ1の平均
第2群の平均
第1群の標準偏差
第2群の標準偏差
cohen.dの結果を並べ替えるべきか（並べ替えるとしたらどの方向に並べ替えるべきか）。方向は "減少 "か "増加 "か。
説明されている項目は何か？
cohen.dでマハラノビス距離を求める。
データフレームまたは行列（数式モードで指定可能）
何らかの二項グループ化変数（数式入力で指定可能（例参照）
group2で定義された各サブグループに対して cohen.dを適用（数式でも指定可能）
数式モードを使用し、特定の変数を指定する場合（例を参照）
効果量
d.robustで平均と標準偏差を求める際に使用されるトリミングの量
第1群と第2群の合計標本サイズ
1群の標本サイズ（1群のみの場合）
2群の標本サイズ
2つの分散をプールする
スチューデントのt統計量
1-αは信頼区間の幅
相関ではなく共分散行列を求める
効果量に変換される相関
グループ1の平均
第2群の平均
第1群の標準偏差
第2群の標準偏差
cohen.dの結果を並べ替えるべきか（並べ替えるとしたらどの方向に並べ替えるべきか）。方向は "減少 "か "増加 "か。
説明されている項目は何か？
cohen.dでマハラノビス距離を求める。
データフレームまたは行列（数式モードで指定可能）
何らかの二項グループ化変数（数式入力で指定可能（例参照）
group2で定義された各サブグループに対して cohen.dを適用（数式でも指定可能）
数式モードを使用し、特定の変数を指定する場合（例を参照）
効果量
d.robustで平均と標準偏差を求める際に使用されるトリミングの量
第1群と第2群の合計標本サイズ
1群の標本サイズ（1群のみの場合）
2群の標本サイズ
2つの分散をプールする
スチューデントのt統計量
1-αは信頼区間の幅
相関ではなく共分散行列を求める
効果量に変換される相関
グループ1の平均
第2群の平均
第1群の標準偏差
第2群の標準偏差
cohen.dの結果を並べ替えるべきか（並べ替えるとしたらどの方向に並べ替えるべきか）。方向は "減少 "か "増加 "か。
説明されている項目は何か？
cohen.dでマハラノビス距離を求める。
1からpまでのカテゴリー値を持つ2×nのデータか、p×pの表のどちらか。  データ配列の場合は表が求まる。
重みの p x p 行列。  指定されない場合、0 (対角) および (対角からの距離) ^2 に設定される。
オブザベーションの数（入力が正方行列の場合）。
信頼区間の確率水準
x または y のいくつかの水準が完全に欠損している場合に水準を指定する。  例を参照
 因子負荷量の行列または因子負荷量の行列のリスト
 因子負荷量の2番目の行列（x がリストの場合，y は空でもよい）
反映に使用される項目の中点．データから求められる場合は NULL.
一般化距離の指数．(r=1は街区, r=2はユークリッド, r=100以上は最大距離を強調)
診断カテゴリー1の割合
診断カテゴリー2の割合
併存疾患の割合（診断カテゴリー1および2）
カテゴリー1と2の名前
 シミュレーションする変数の数
シミュレーションする被験者数
 circum=TRUEはcircumplex構造、FALSEは単純構造
sim.sphericalの単純構造または球状構造
1次元目の平均負荷
2次元目の平均荷重
sim.sphericalにおける3次元目の平均負荷
一般因子の平均負荷（デフォルト=0）
傾きを導入する場合，1次元目の中心からどの程度ずれているか
2次元目にスキューを導入する
3次元目にスキューを導入する - sim.sphericalを使用する場合
 連続変数またはカテゴリ変数。  
 lowより小さい値は、強制的にlowになります（item.dichotでは0になります）。
 high より大きい値は，high に強制される（または item.dichot で 1）．
cutpoint より小さい値をすべて cutpoint に変更する。
カットポイントとは
sim.sphericalの第1因子の変数数
sim.sphericalの第2因子と第3因子の変数数
行列またはデータフレーム
連続値をカテゴリ値に変換する際にカットポイントとして使用するoldの値
oldのどの列をカテゴリ変数に変換するか。  見つからない場合は，すべての列が変換される。
シミュレーションする被験者の数。NULL の場合，母集団モデルを返す
 検定の因子負荷量のベクトル
誤差分散のベクトル - NULL の場合， error = 1 - 負荷 2.
short=TRUE: ただ検定相関を与えるだけ， short=FALSE: 暗黙のパターン行列と同様に，観測された検定スコアを報告する．
 連続変数またはカテゴリ変数（離散変数）．  
 Lowより小さい値はLowに強制される
 highより大きい値はhighに強制される。
指定され、かつ categorical = TRUE の場合、結果の連続出力を cuts の値でカットする。
 因子負荷量の行列，または因子負荷量の行列のリスト．
 因子負荷量の2番目の行列（x がリストの場合，y は空でもよい）．
反映に使用する項目の中間点．データから求められる場合は NULL.
一般化距離の指数．(r=1は街区、r=2はユークリッド、r=100以上は最大距離を強調)
生データ，またはブートストラップを行わない場合は相関行列．
NULL の場合，生の相関の信頼区間が求められる．  そうでない場合は、相関行列に適用されたキー（cluster.corに似たロジックですが、ベルやホイッスルはありません）から複合尺度が形成され、それらの複合尺度の相互相関の信頼度が求められます。
ブートストラップする反復回数。テトラコリック相関やポリコリック相関を使用する場合、これは非常に遅くなります。
上下の信頼領域は，分布の1-pを含む．
true の場合，重複する尺度間の相関は，項目の重複のために補正される．
FALSEの場合、指定された手法（デフォルトはPearson）を用いて相関を求める。  TRUE の場合、ポリコーリック相関が（ゆっくりと）求められます。  polychoric関数はマルチコアを使用し、corCiも同様に使用するため、使用するコア数はoptions("mc.cores")^2となる。
"pearson", "spearman", "kendall"
相関を確率値でスケーリングした相関プロットを表示する。  信頼区間で行列を表示するには、cor.plot.upperLowerCiを使用します。
cisの略号で使用する最小長は？デフォルトは5
相関行列から信頼区間を求める場合、nを指定します。
軸に関するその他のパラメータ（例えば、フォントサイズを変更するcex.axis、プロット内の数値を回転させるsrt）。
相関行列または fa, principal, omega の出力。  
cor.ciから返されるオブジェクト
相関の数値を表示する。(2019年9月現在）デフォルトはTRUE。
デフォルトはTRUEで、色はcolorRampPaletteの赤から白、青までの色を使用するが、colors=FALSEはグレースケールを使用する。
使用するシ ェ ーデ ィ ン グのレベル数。  デフォルトは 51。
タイトル。デフォルトは "correlation plot"。
色付けする値の範囲 - デフォルトは -1 から 1。 NULL を指定すると、デフォルトは観測された相関の最小値と最大値になります。
色の凡例(キー)が右側に表示される。
NULL の場合は列名と行名を使用し、そうでない場合はラベルを使用する。
凡例にいくつのカテゴリーをラベル付けするか？
終了時にグラフィックパラメータを元に戻す
数値をpvalsでスケーリングし、cutの値に基づいて分類する。
pval < cuts で定義されたカテゴリで数値をスケーリングする。
数値の大きさを有意水準でスケーリングすべきか？
プロットする変数のサブセットを選択
文字の大きさ。  変数の数が多い場合は、少し小さくする。
本当に長いラベルや大きなフォントを使用する場合、余白を調整できるようにする。
対角線上の行列は描画すべきか、空白のままか？
対角線を表示すべきか？
デフォルトでは、非対称行列が与えられた場合、pair.wise completeを用いて相関を求め、それを表示します。  非対称行列を表示したい場合は、対称行列をFALSEに指定してください。
魔法のastricksを使って相関の「有意性」を表示したい場合は、stars=TRUEを指定します。
有意性を表示する場合、多重検定を調整すべきか？  デフォルトでは、対角線の下に0次確率を表示し、対角線の上に'ホルム'補正を用いて調整します。adjustは、公称アルファ信頼区間(adjust =FALSE)またはBonferonni修正信頼区間(adjust=TRUE)を表示するために、corPlotUpperLowerCIでも使用されます。
x軸ラベルの向き (1 = 水平, 0, 軸に平行, 2, 軸に垂直)
y軸ラベルの向き（1 = 水平, 0, 軸に平行, 2 軸に垂直）
デフォルトでは、図の下に描画する。  xaxis=3 の場合、図の上に描画されます。
色のグラデーション：例えば、gr <- colorRampPalette(c("#B52127", "white", "#2171B5"))を使うと、（一部の人には）少し好ましい色になります。次から最後の例を参照してください。
透明度 (0 = 完全に、1 = 透明でない)。デフォルト値0.75は、数字を使った場合に、やや見栄えのよいプロットを作成します。
NULLでない場合は、行/列ラベルに使用する最大文字数。
軸に関するその他のパラメータ (例えば、フォントサイズを変更する cex.axis、プロット内の数値を回転させる srt)
相関行列または fa, principal, omega の出力。  
cor.ciから返されるオブジェクト
相関の数値を表示する。(2019年9月現在）デフォルトはTRUE。
デフォルトはTRUEで、色はcolorRampPaletteの赤から白、青までの色を使用するが、colors=FALSEはグレースケールを使用する。
使用するシ ェ ーデ ィ ン グのレベル数。  デフォルトは 51。
タイトル。デフォルトは "correlation plot"。
色付けする値の範囲 - デフォルトは -1 から 1。 NULL を指定すると、デフォルトは観測された相関の最小値と最大値になります。
色の凡例(キー)が右側に表示される。
NULL の場合は列名と行名を使用し、そうでない場合はラベルを使用する。
凡例にいくつのカテゴリをラベル付けするか？
終了時にグラフィックパラメータを元に戻す
数値をpvalsでスケーリングし、cutの値に基づいて分類する。
pval < cuts で定義されたカテゴリで数値をスケーリングする。
数値の大きさを有意水準でスケーリングすべきか？
プロットする変数のサブセットを選択
文字の大きさ。  変数の数が多い場合は、少し小さくする。
本当に長いラベルや大きなフォントを使用する場合、余白を調整できるようにする。
対角線上の行列は描画すべきか、空白のままか？
対角線を表示すべきか？
デフォルトでは、非対称行列が与えられた場合、pair.wise completeを用いて相関を求め、それを表示します。  非対称行列を表示したい場合は、対称行列をFALSEに指定してください。
魔法のastricksを使って相関の「有意性」を表示したい場合は、stars=TRUEを指定します。
有意性を表示する場合、多重検定を調整すべきか？  デフォルトでは、対角線の下に0次確率を表示し、対角線の上に'ホルム'補正を用いて調整します。adjustは、公称アルファ信頼区間(adjust =FALSE)またはBonferonni修正信頼区間(adjust=TRUE)を表示するために、corPlotUpperLowerCIでも使用されます。
x軸ラベルの向き (1 = 水平, 0, 軸に平行, 2, 軸に垂直)
y軸ラベルの向き（1 = 水平, 0, 軸に平行, 2 軸に垂直）
デフォルトでは、図の下に描画する。  xaxis=3 の場合、図の上に描画されます。
色のグラデーション：例えば、gr <- colorRampPalette(c("#B52127", "white", "#2171B5"))を使うと、（一部の人には）少し好ましい色になります。次から最後の例を参照してください。
透明度 (0 = 完全に、1 = 透明でない)。デフォルト値0.75は、数字を使った場合に、やや見栄えのよいプロットを作成します。
NULLでない場合は、行/列ラベルに使用する最大文字数。
軸に関するその他のパラメータ (例えば、フォントサイズを変更する cex.axis、プロット内の数値を回転させる srt)
相関行列または生データ行列
許容できる最小固有値
すべてのabs(残差) > cutを報告
相関行列または生データ行列.
許容可能な固有値の最小値
すべての abs(residuals) > cut を報告
行列またはデータフレーム
分析する変数
重みのセット（標本サイズなど）
標本の標準偏差（標準誤差で重み付けする場合に使用）
レポート相関（デフォルト）または共分散
矩形行列またはデータフレーム（おそらく相関行列）
データ行列，データフレーム，またはベクトル（関数に依存）．
データ行列，データフレーム，またはベクトル
因子分析（fa）または主成分分析（principal）から返されるオブジェクト。
桁丸め
lowerCorのminlengthに省略される
ペアワイズ削除を行うか、または他のオプションの1つをcorにするか
相関行列の対角上のNAをチェックすべきか
"pearson"、"kendall"、"spearman"
ループ変数の現在値
ループが達成する最大値
どの関数がループしているか
キー反転される因子または成分（因子番号による）
char2numericのflag=TRUEは、数値であった変数にフラグを立てます。
この項目で可能な限りの情報を入力してください。
log関数の基数は何か（default=2、eは基数=exp(1)を意味する）
アクティブにするパッケージ(またはパッケージのリスト)の名前を指定し、すべての例をテストさせます。
このパッケージの依存関係を調べます。
どのタイプの依存関係を調べるか?
依存関係を調べ、そのすべての例をテストする。
これらの依存関係をテストしない
データフレームまたは行列から選択する
select from column with name from から select from column with name to です。
select from 列 from 列 to 列 to
正当なオブジェクトの文字列
 Pearson r
Fisher z
信頼区間のサンプルサイズ
tまたはgの自由度
信頼区間
pを両側pとして扱う
効果量（ヘッジのg）
スチューデントのt値
カイ2乗
相関行列を共分散行列に変換するために使用される標準偏差のベクトル
正方ならば相関行列と仮定され，そうでなければ相関が最初に求められる．
生データ，またはブートストラップを行わない場合は相関行列
NULL の場合，生の相関の信頼区間が求められる．  そうでない場合は、相関行列に適用されたキー（cluster.corに似たロジックですが、ベルやホイッスルはありません）から複合尺度が形成され、それらの複合尺度の相互相関の信頼区間が求められます。
ブートストラップする反復回数。テトラコリック相関やポリコリック相関を使用する場合、これは非常に遅くなります。
上下の信頼領域は，分布の1-pを含む．
true の場合，重複する尺度間の相関は，項目の重複のために補正される．
FALSEの場合、指定された手法（デフォルトはPearson）を用いて相関を求める。  TRUE の場合、ポリコーリック相関が（ゆっくりと）求められます。  polychoric関数はマルチコアを使用し、corCiも同様に使用するため、使用するコア数はoptions("mc.cores")^2となる。
"pearson", "spearman", "kendall"
相関を確率値でスケーリングした相関プロットを表示する。  信頼区間で行列を表示するには、cor.plot.upperLowerCiを使用します。
cisの略号で使用する最小長は？デフォルトは5
相関行列から信頼区間を求める場合、nを指定します。
軸に関するその他のパラメータ（例えば、フォントサイズを変更するcex.axis、プロット内の数値を回転させるsrt）。
data.frameまたはデータ行列
デフォルトでは、相関行列を返す。  covar が TRUE なら、共分散行列と ML 適合関数を含むリストを返す。
show=TRUEの場合、欠損のパターンを表示するだけで、FIMLは行わない。  fimlのプロセスを理解するのに便利。
相関行列または fa, principal, omega の出力。  
cor.ciから返されるオブジェクト
相関の数値を表示する。(2019年9月現在）デフォルトはTRUE。
デフォルトはTRUEで、色はcolorRampPaletteの赤から白、青までの色を使用しますが、colors=FALSEではグレースケールを使用します。
使用するシ ェ ーデ ィ ン グのレベル数。  デフォルトは 51。
タイトル。デフォルトは "correlation plot"。
色付けする値の範囲 - デフォルトは -1 から 1。 NULL を指定すると、デフォルトは観測された相関の最小値と最大値になります。
色の凡例(キー)が右側に表示される。
NULL の場合は列名と行名を使用し、そうでない場合はラベルを使用する。
凡例にいくつのカテゴリをラベル付けするか？
終了時にグラフィックパラメータを元に戻す
数値をpvalsでスケーリングし、cutの値に基づいて分類する。
pval < cuts で定義されたカテゴリで数値をスケーリングする。
数値の大きさを有意水準でスケーリングすべきか？
プロットする変数のサブセットを選択
文字の大きさ。  変数の数が多い場合は、少し小さくする。
本当に長いラベルや大きなフォントを使用する場合、余白を調整できるようにする。
対角線上の行列は描画すべきか、空白のままか？
対角線を表示すべきか？
デフォルトでは、非対称行列が与えられた場合、pair.wise completeを用いて相関を求め、それを表示します。  非対称行列を表示したい場合は、対称行列をFALSEに指定してください。
魔法のastricksを使って相関の「有意性」を表示したい場合は、stars=TRUEを指定します。
有意性を表示する場合、多重検定を調整すべきか？  デフォルトでは、対角線の下に0次確率を表示し、対角線の上に'ホルム'補正を用いて調整します。adjustは、公称アルファ信頼区間(adjust =FALSE)またはBonferonni修正信頼区間(adjust=TRUE)を表示するために、corPlotUpperLowerCIでも使用されます。
x軸ラベルの向き (1 = 水平, 0, 軸に平行, 2, 軸に垂直)
y軸ラベルの向き（1 = 水平, 0, 軸に平行, 2 軸に垂直）
デフォルトでは、図の下に描画する。  xaxis=3 の場合、図の上に描画されます。
色のグラデーション：例えば、gr <- colorRampPalette(c("#B52127", "white", "#2171B5"))を使うと、（一部の人には）少し好ましい色になります。次から最後の例を参照してください。
透明度 (0 = 完全に、1 = 透明でない)。デフォルト値0.75は、数字を使った場合に、やや見栄えのよいプロットを作成します。
NULLでない場合は、行/列ラベルに使用する最大文字数。
軸に関するその他のパラメータ (例えば、フォントサイズを変更する cex.axis、プロット内の数値を回転させる srt)
相関行列または fa, principal, omega の出力。  
cor.ciから返されるオブジェクト
相関の数値を表示する。(2019年9月現在）デフォルトはTRUE。
デフォルトはTRUEで、色はcolorRampPaletteの赤から白、青までの色を使用しますが、colors=FALSEではグレースケールを使用します。
使用するシ ェ ーデ ィ ン グのレベル数。  デフォルトは 51。
タイトル。デフォルトは "correlation plot"。
色付けする値の範囲 - デフォルトは -1 から 1。 NULL を指定すると、デフォルトは観測された相関の最小値と最大値になります。
色の凡例(キー)が右側に表示される。
NULL の場合は列名と行名を使用し、そうでない場合はラベルを使用する。
凡例にいくつのカテゴリをラベル付けするか？
終了時にグラフィックパラメータを元に戻す
数値をpvalsでスケーリングし、cutの値に基づいて分類する。
pval < cuts で定義されたカテゴリで数値をスケーリングする。
数値の大きさを有意水準でスケーリングすべきか？
プロットする変数のサブセットを選択
文字の大きさ。  変数の数が多い場合は、少し小さくする。
本当に長いラベルや大きなフォントを使用する場合、余白を調整できるようにする。
対角線上の行列は描画すべきか、空白のままか？
対角線を表示すべきか？
デフォルトでは、非対称行列が与えられた場合、pair.wise completeを用いて相関を求め、それを表示します。  非対称行列を表示したい場合は、対称行列をFALSEに指定してください。
魔法のastricksを使って相関の「有意性」を表示したい場合は、stars=TRUEを指定します。
有意性を表示する場合、多重検定を調整すべきか？  デフォルトでは、対角線の下に0次確率を表示し、対角線の上に'ホルム'補正を用いて調整します。adjustは、公称アルファ信頼区間(adjust =FALSE)またはBonferonni修正信頼区間(adjust=TRUE)を表示するために、corPlotUpperLowerCIでも使用されます。
x軸ラベルの向き (1 = 水平, 0, 軸に平行, 2, 軸に垂直)
y軸ラベルの向き（1 = 水平, 0, 軸に平行, 2 軸に垂直）
デフォルトでは、図の下に描画する。  xaxis=3 の場合、図の上に描画されます。
色のグラデーション：例えば、gr <- colorRampPalette(c("#B52127", "white", "#2171B5"))を使うと、（一部の人には）少し好ましい色になります。次から最後の例を参照してください。
透明度 (0 = 完全に、1 = 透明でない)。デフォルト値0.75は、数字を使った場合に、やや見栄えのよいプロットを作成します。
NULLでない場合は、行/列ラベルに使用する最大文字数。
軸に関するその他のパラメータ (例えば、フォントサイズを変更する cex.axis、プロット内の数値を回転させる srt)
行列またはデータフレーム
xと同じ行数の2番目の行列またはデータフレーム。
use="pairwise" はデフォルト値で，症例のペアワイズ削除を行います．use="complete" は，完全な症例のみを選択します．
method="pearson" がデフォルト値．  corに渡される選択肢は、"spearman "と "kendall "である。  最後の2つは、特に大きなデータ集合ではかなり遅い。
多重検定の調整には何を使うべきか？("holm", "hochberg", "hommel", "bonferroni", "BH", "BY", "fdr", "none").なぜ "bonferroni "ではなく "holm "を使うかについての詳細はp.adjustを参照）。
信頼区間のアルファ水準
相関行列
corr.pを使用する場合のオブザベーションの数。（corr.testから返されるような）行列、またはスケーラのどちらでもよい。偏相関の有意性を求める場合は n - np に設定。(下記参照）。
デフォルトでは信頼区間が求められる。  しかし、これは、特に大きな問題では、顕著なスピードダウンにつながる。  したがって、rs, ts, psだけの場合は、ci=FALSEに設定してください。
省略形の最小の長さ。  デフォルトは5です。
デフォルトでは， method="spearman" と method="kendall" の確率は正規理論によって求められる．  normal=="FALSE "の場合、cor.testが繰り返し呼び出される。  これはより遅いですが、より正確なp値が得られます。 exactはFALSEに設定され、同値の問題を考慮すると、小さな標本の正確なp値は求められないことを意味します。
行列またはデータフレーム
x と同じ行数の2番目の行列またはデータフレーム。
use="pairwise" はデフォルト値で，症例のペアワイズ削除を行う．
method="pearson" がデフォルト値．  corに渡される選択肢は、"spearman "と "kendall "である。  最後の2つは、特に大きなデータ集合ではかなり遅い。
多重検定の調整には何を使うべきか？("holm", "hochberg", "hommel", "bonferroni", "BH", "BY", "fdr", "none").なぜ "bonferroni "ではなく "holm "を使うかについての詳細はp.adjustを参照）。
信頼区間のアルファ水準
相関行列
corr.pを使用する場合のオブザベーションの数。（corr.testから返されるような）行列、またはスケーラのどちらでもよい。偏相関の有意性を求める場合は n - np に設定。(下記参照）。
デフォルトでは信頼区間が求められる。  しかし、これは、特に大きな問題では、顕著なスピードダウンにつながる。  したがって、rs, ts, psだけの場合は、ci=FALSEに設定してください。
省略形の最小の長さ。  デフォルトは5です。
デフォルトでは， method="spearman" と method="kendall" の確率は正規理論によって求められる．  normal=="FALSE "の場合、cor.testが繰り返し呼び出される。  これは、より遅いですが、より正確なp値が得られます。 exactをFALSEに設定すると、同値の問題を考慮すると、小さい標本の正確なp値は求められません。
 生の相関行列
 信頼度のベクトル
相関行列。(R1が矩形でなく、 cor=TRUE の場合、相関が求められる)。
相関行列．  R2 が矩形でなく， cor=TRUE ならば，相関が求められる．R2 が NULL の場合， R1 が恒等行列であるかどうかだけを検定する．
R1 のサンプルサイズ
R2の標本サイズ
相関をフィッシャーz変換するか？
デフォルトでは、入力行列が対称行列でない場合、相関行列に変換されます。  つまり、生データと同じように扱われます。  cor=FALSE の場合、入力行列は相関行列とみなされます。
相関行列。(Rが正方でない場合、相関が見つかり、警告が出される。
サンプル・サイズ（指定がない場合は 100 とみなされる）。
行列の対角を 1 に置き換え、相関行列とする。
相関行列。(R1が矩形でなく、cor=TRUEの場合、相関が見つかる)。
相関行列。  R2 が矩形でなく， cor=TRUE ならば，相関が見つかる．R2 が NULL の場合， R1 が恒等行列であるかどうかだけを検定する．
R1 のサンプルサイズ
R2の標本サイズ
相関をフィッシャーz変換するか？
デフォルトでは、入力行列が対称行列でない場合、相関行列に変換されます。  つまり、生データと同じように扱われます。  cor=FALSE の場合、入力行列は相関行列とみなされます。
相関行列。(R1が矩形でなく、cor=TRUEの場合、相関が求められる)。
相関行列。  R2 が矩形でなく，かつ cor=TRUE ならば，相関が求められる．R2 が NULL の場合， R1 が恒等行列であるかどうかだけを検定する．
R1 のサンプルサイズ
R2の標本サイズ
相関をフィッシャーz変換するか？
デフォルトでは、入力行列が対称行列でない場合、相関行列に変換されます。  つまり、生データと同じように扱われます。  cor=FALSE の場合、入力行列は相関行列とみなされます。
相関行列。(R1が矩形でなく、cor=TRUEの場合、相関が求められる)。
相関行列。  R2 が矩形でなく，かつ cor=TRUE ならば，相関が求められる．R2 が NULL の場合， R1 が恒等行列であるかどうかだけを検定する．
R1 のサンプルサイズ
R2の標本サイズ
相関をフィッシャーz変換するか？
デフォルトでは、入力行列が対称行列でない場合、相関行列に変換されます。  つまり、生データと同じように扱われます。  cor=FALSE の場合、入力行列は相関行列とみなされます。
時刻を最初の値とする観測値のデータ・フレームまたは行列（コードで指定されていない場合） 角度は、時間またはラジアンとして指定できる）。
被験者識別変数
データの行列またはデータフレーム。  指定された場合、angle と code は変数名（または場所）。  例を参照。
グループによる比較を行う場合は、グループ・コードを指定する。
スプリット・ハーフの信頼性を求めるときに使用する、被験者ごとのオブザベーションの最小数。
信頼度は、奇数と偶数の項目 (TRUE) または前半と後半の項目 (FALSE) に基づきます。  デフォルトは前半と後半。
時間帯は24時間のリズムを持つものと仮定されるが、他のリズムが適合することもある。cosinor.periodを呼び出す場合は、範囲を指定することができる。
IDフィールドはどの列番号か
1つの変数に対して、どの特定の被験者番号をプロットするか
もしTRUEなら、最初の変数（角度）をプロットする
opti=TRUE: 反復最適化 (遅い) または opti=FALSE: 線形フィット (速い)
TRUEの場合、測定は24時間単位、それ以外はラジアン単位。
位相角と相関させる外部変数のセット
欠損データを削除するか？
デフォルトが機能しない場合は、y軸の範囲を指定する。
y軸のラベル
x軸のラベル
グラフィックのタイトル
複数の（スパゲッティ）プロットを行う場合、2つ目以降のプロットにはadd = TRUEを設定する。
複数（スパゲッティ）プロットを行う場合、1つ目以降のプロットにはmulti=TRUEを設定する。
線種をgraphicsに渡す
その他のグラフィックパラメータ
時刻を最初の値とする観測値のデータフレームまたは行列（コードで指定しない限り） 角度は時間またはラジアンのいずれかで指定可能）
被験者識別変数
データの行列またはデータフレーム。  指定された場合、angle と code は変数名（または場所）。  例を参照。
グループによる比較を行う場合は、グループ・コードを指定する。
スプリット・ハーフの信頼性を求めるときに使用する、被験者ごとのオブザベーションの最小数。
信頼度は、奇数と偶数の項目 (TRUE) または前半と後半の項目 (FALSE) に基づきます。  デフォルトは前半と後半。
時間帯は24時間のリズムを持つものと仮定されるが、他のリズムが適合することもある。cosinor.periodを呼び出す場合は、範囲を指定することができる。
IDフィールドはどの列番号か
1つの変数に対して、どの特定の被験者番号をプロットするか
もしTRUEなら、最初の変数（角度）をプロットする
opti=TRUE: 反復最適化 (遅い) または opti=FALSE: 線形フィット (速い)
TRUEの場合、測定は24時間単位、それ以外はラジアン単位。
位相角と相関させる外部変数のセット
欠損データを削除するか？
デフォルトが機能しない場合は、y軸の範囲を指定する。
y軸のラベル
x軸のラベル
グラフィックのタイトル
複数の（スパゲッティ）プロットを行う場合、2つ目以降のプロットにはadd = TRUEを設定する。
複数（スパゲッティ）プロットを行う場合、1つ目以降のプロットにはmulti=TRUEを設定する。
線種をgraphicsに渡す
その他のグラフィックパラメータ
時刻を最初の値とする観測値のデータフレームまたは行列（コードで指定しない限り） 角度は時間またはラジアンのいずれかで指定可能）
被験者識別変数
データの行列またはデータフレーム。  指定された場合、angle と code は変数名（または場所）。  例を参照。
グループによる比較を行う場合は、グループ・コードを指定する。
スプリット・ハーフの信頼性を求めるときに使用する、被験者ごとのオブザベーションの最小数。
信頼度は、奇数と偶数の項目 (TRUE) または前半と後半の項目 (FALSE) に基づきます。  デフォルトは前半と後半。
時間帯は24時間のリズムを持つものと仮定されるが、他のリズムが適合することもある。cosinor.periodを呼び出す場合は、範囲を指定することができる。
IDフィールドはどの列番号か
1つの変数に対して、どの特定の被験者番号をプロットするか
もしTRUEなら、最初の変数（角度）をプロットする
opti=TRUE: 反復最適化 (遅い) または opti=FALSE: 線形フィット (速い)
TRUEの場合、測定は24時間単位、それ以外はラジアン単位。
位相角と相関させる外部変数のセット
欠損データを削除するか？
デフォルトが機能しない場合は、y軸の範囲を指定する。
y軸のラベル
x軸のラベル
グラフィックのタイトル
複数の（スパゲッティ）プロットを行う場合、2つ目以降のプロットにはadd = TRUEを設定する。
複数（スパゲッティ）プロットを行う場合、1つ目以降のプロットにはmulti=TRUEを設定する。
線種をgraphicsに渡す
その他のグラフィックパラメータ
 入力行列。通常は、相関させる準備ができたデータ行列。
 オプションの2番目の入力行列
TRUEならば対角線を報告し，そうでなければ対角線をNAで埋める。
その他のパラメータ
<= min の項目を持つ項目ペアの数を数える
<= min の項目を持つ項目ペアの表を表示する
どの項目がどの尺度に属するかを指定するkeys.list.
記述またはインプットされる相関行列
セルのサイズがcutより小さい項目ペアと数値を報告する
TRUE の場合，すべての NA 相関を，その尺度内または尺度間の平均相関に置き換える
対角線上外側の行列を描画するか、空白にするか？
NULLの場合は列と行の名前を使用し、そうでない場合はラベルを使用する。
色の凡例（キー）を右側に示す。
凡例にはいくつのカテゴリーを表示するか。
colors=TRUEは、colorRampPaletteの赤から白、 青までの色を使用します。
NULLでない場合は、行/列ラベルに使用する最大文字数。
x 軸ラベルの向き (1 = 水平、0 は軸に平行、2 は軸に垂直)
y軸ラベルの向き（1 = 水平、0, 軸に平行、2 軸に垂直）。
タイトル。デフォルトは "Relative Frequencies" （相対周波数）。
色のグラデーション：例えば、gr <- colorRampPalette(c("#B52127", "white", "#2171B5"))は、（一部の人にとって）少し好ましい色を生成します。corPlotの次の例を参照してください。  
pairwiseCount を用いてペアワイズ・オブザベーションの数をカウントすべきか、それとも単に行列のカウントをプロットすべきか？
pairwiseSample でサンプリングする変数数のサンプルサイズ
3つのオプション：'式'形式（lmと同様）、またはy集合の列番号（例えば、c(2,4,6)）またはy集合の列名（例えば、c("Flags", "Addition")）のいずれか。それぞれについての注釈と例を参照のこと。
 xとyは、lmの数式スタイルを使用して設定することもできる。
相関の行列または data.frame、正方形でない場合は生データ。
分散/共分散行列または相関行列
媒介変数の集合の列名または番号（mediateを参照）．
共変量集合の列名または列番号．
指定された場合、信頼区間などが計算されるが、生データが与えられた場合は必要ない。
pairwise"(デフォルト)または "complete "ケース（lm関数と一致）を使用して相関を求める。
標準化ベータ（相関に基づく）または生bs（共分散に基づく）をレポート。
z は、部分相関（TRUE）または部分相関（デフォルト）が見つかった場合に指定されます。
データは相関行列かデータ行列か？
行列入力の場合は， matReg のデータの平均のベクトル．
setCor.diagramのタイトル
FALSEの場合、正方行列はデータ行列としてではなく、相関行列として扱われます。変数と同じ数のケースを持つようなまれなケースでは、square=TRUE を設定します。
setCorの出力は，図を描くのに使うことができる
setCor.diagramには何桁の数字が表示されますか?
x と y のセットの間の重み付けされていない行列の相関を表示しますか?
交互作用項を見つける前に、x 変数をゼロ・センタリングします。
ベータ係数の信頼区間のp値
デフォルトでは，setCor は結果のプロットを作成する．
図中の変数を表示するボックスのテキストサイズ
矢印の数字のテキストサイズ、デフォルトはcex
setCor.diagramのグラフィカル・パラメータの追加
setCorまたはbestScalesから得られるオブジェクト
bestScalesオブジェクトを使用する場合、使用するキーのセット（"best.key", "weights", "optimal.key", "optimal.weights")
crossValidationの未実装オプション
type="b "は線と点の両方を描画します。
xラベルの向き（3つで垂直にする）
x ラベルを省略する場合、最小何文字にするか。
NULLでない場合、適切な位置に凡例を描く
matPlot で使用するプロット文字
matPlot で使用する色
matPlot で使用する線の種類
matPlot の線にどのようなラベルを付けるか。  (デフォルトは変数の colnames)。
矩形行列またはデータフレーム (おそらく相関行列)
データ行列，データフレーム，またはベクトル．
データ行列，データフレーム，またはベクトル
因子分析（fa）または主成分分析（principal）から返されるオブジェクト。
桁丸め
lowerCorのminlengthに省略される
ペアワイズ削除を行うか、または他のオプションの1つをcorにするか
相関行列の対角上のNAをチェックすべきか
"pearson"、"kendall"、"spearman"
ループ変数の現在値
ループが達成する最大値
どの関数がループしているか
キー反転される因子または成分（因子番号による）
char2numericのflag=TRUEは、数値であった変数にフラグを立てます。
この項目で可能な限りの情報を入力してください。
log関数の基数は何か（default=2、eは基数=exp(1)を意味する）
アクティブにするパッケージ(またはパッケージのリスト)の名前を指定し、すべての例をテストさせます。
このパッケージの依存関係を調べます。
どのタイプの依存関係を調べるか?
依存関係を調べ、そのすべての例をテストする。
これらの依存関係をテストしない
データフレームまたは行列から選択する
select from column with name from から select from column with name to です。
select from 列 from 列 to 列 to
正当なオブジェクトの文字列
シミュレートするアクションの数
シミュレートする時間の長さ
キューの強さのベクトル
手がかりと行動傾向の関連行列
抑制行列
 消費行列
行動傾向の初期値
行動、傾向、両方、または状態図を表示
速い時間ごとに表示（スキップ
期待値の行列
傾向の開始値
傾向の開始値のベクトル
2×2のグラフで2つのプロットを比較できるようにする
システムが時間とともに学習（自己強化）できるようにする
ある行動をしたときの報酬の強さ
シミュレーションするアクションの数
シミュレーションする時間の長さ
キューの強さのベクトル
手がかりと行動傾向の関連マトリックス
抑制行列
 消費行列
行動傾向の初期値
行動、傾向、両方、または状態図を表示
速い時間ごとに表示（スキップ
期待値の行列
傾向の開始値
傾向の開始値のベクトル
2×2のグラフで2つのプロットを比較できるようにする
システムが時間とともに学習（自己強化）できるようにする
ある行動をしたときの報酬の強さ
データフレームまたは行列（数式モードで指定可能）
二項グループ変数（数式入力で指定可能（例参照）
group2で定義された各サブグループに対して cohen.dを適用（数式でも指定可能）
数式モードを使用し、特定の変数を指定する場合（例を参照）
効果量
d.robustで平均と標準偏差を求める際に使用されるトリミングの量
第1群と第2群の合計標本サイズ
1群の標本サイズ（1群のみの場合）
2群の標本サイズ
2つの分散をプールする
スチューデントのt統計量
1-αは信頼区間の幅
相関ではなく共分散行列を求める
効果量に変換される相関
グループ1の平均
第2群の平均
第1群の標準偏差
第2群の標準偏差
cohen.dの結果を並べ替えるべきか（並べ替えるとしたらどの方向に並べ替えるべきか）。方向は "減少 "か "増加 "か。
説明されている項目は何か？
cohen.dでマハラノビス距離を求める。
データフレームまたは行列（数式モードで指定可能）
何らかの二項グループ化変数（数式入力で指定可能（例参照）
group2で定義された各サブグループに対して cohen.dを適用（数式でも指定可能）
数式モードを使用し、特定の変数を指定する場合（例を参照）
効果量
d.robustで平均と標準偏差を求める際に使用されるトリミングの量
第1群と第2群の合計標本サイズ
1群の標本サイズ（1群のみの場合）
2群の標本サイズ
2つの分散をプールする
スチューデントのt統計量
1-αは信頼区間の幅
相関ではなく共分散行列を求める
効果量に変換される相関
グループ1の平均
第2群の平均
第1群の標準偏差
第2群の標準偏差
cohen.dの結果を並べ替えるべきか（並べ替えるとしたらどの方向に並べ替えるべきか）。方向は "減少 "か "増加 "か。
説明されている項目は何か？
cohen.dでマハラノビス距離を求める。
データフレームまたは行列（数式モードで指定可能）
何らかの二項グループ化変数（数式入力で指定可能（例参照）
group2で定義された各サブグループに対して cohen.dを適用（数式でも指定可能）
数式モードを使用し、特定の変数を指定する場合（例を参照）
効果量
d.robustで平均と標準偏差を求める際に使用されるトリミングの量
第1群と第2群の合計標本サイズ
1群の標本サイズ（1群のみの場合）
2群の標本サイズ
2つの分散をプールする
スチューデントのt統計量
1-αは信頼区間の幅
相関ではなく共分散行列を求める
効果量に変換される相関
グループ1の平均
第2群の平均
第1群の標準偏差
第2群の標準偏差
cohen.dの結果を並べ替えるべきか（並べ替えるとしたらどの方向に並べ替えるべきか）。方向は "減少 "か "増加 "か。
説明されている項目は何か？
cohen.dでマハラノビス距離を求める。
データフレームまたは行列（数式モードで指定可能）
何らかの二項グループ化変数（数式入力で指定可能（例参照）
group2で定義された各サブグループに対して cohen.dを適用（数式でも指定可能）
数式モードを使用し、特定の変数を指定する場合（例を参照）
効果量
d.robustで平均と標準偏差を求める際に使用されるトリミングの量
第1群と第2群の合計標本サイズ
1群の標本サイズ（1群のみの場合）
2群の標本サイズ
2つの分散をプールする
スチューデントのt統計量
1-αは信頼区間の幅
相関ではなく共分散行列を求める
効果量に変換される相関
グループ1の平均
第2群の平均
第1群の標準偏差
第2群の標準偏差
cohen.dの結果を並べ替えるべきか（並べ替えるとしたらどの方向に並べ替えるべきか）。方向は "減少 "か "増加 "か。
説明されている項目は何か？
cohen.dでマハラノビス距離を求める。
データフレームまたは行列（数式モードで指定可能）
何らかの二項グループ化変数（数式入力で指定可能（例参照）
group2で定義された各サブグループに対して cohen.dを適用（数式でも指定可能）
数式モードを使用し、特定の変数を指定する場合（例を参照）
効果量
d.robustで平均と標準偏差を求める際に使用されるトリミングの量
第1群と第2群の）合計標本サイズ
1群の標本サイズ（1群のみの場合）
2群の標本サイズ
2つの分散をプールする
スチューデントのt統計量
1-αは信頼区間の幅
相関ではなく共分散行列を求める
効果量に変換される相関
グループ1の平均
第2群の平均
第1群の標準偏差
第2群の標準偏差
cohen.dの結果を並べ替えるべきか（並べ替えるとしたらどの方向に並べ替えるべきか）。方向は "減少 "か "増加 "か。
説明されている項目は何か？
cohen.dでマハラノビス距離を求める。
データフレームまたは行列（数式モードで指定可能）
何らかの二項グループ化変数（数式入力で指定可能（例参照）
group2で定義された各サブグループに対して cohen.dを適用（数式でも指定可能）
数式モードを使用し、特定の変数を指定する場合（例を参照）
効果量
d.robustで平均と標準偏差を求める際に使用されるトリミングの量
第1群と第2群の合計標本サイズ
1群の標本サイズ（1群のみの場合）
2群の標本サイズ
2つの分散をプールする
スチューデントのt統計量
1-αは信頼区間の幅
相関ではなく共分散行列を求める
効果量に変換される相関
グループ1の平均
第2群の平均
第1群の標準偏差
第2群の標準偏差
cohen.dの結果を並べ替えるべきか（並べ替えるとしたらどの方向に並べ替えるべきか）。方向は "減少 "か "増加 "か。
説明されている項目は何か？
cohen.dでマハラノビス距離を求める。
データフレームまたは行列（数式モードで指定可能）
何らかの二項グループ化変数（数式入力で指定可能（例参照）
group2で定義された各サブグループに対して cohen.dを適用（数式でも指定可能）
数式モードを使用し、特定の変数を指定する場合（例を参照）
効果量
d.robustで平均と標準偏差を求める際に使用されるトリミングの量
第1群と第2群の）合計標本サイズ
1群の標本サイズ（1群のみの場合）
2群の標本サイズ
2つの分散をプールする
スチューデントのt統計量
1-αは信頼区間の幅
相関ではなく共分散行列を求める
効果量に変換される相関
グループ1の平均
第2群の平均
第1群の標準偏差
第2群の標準偏差
cohen.dの結果を並べ替えるべきか（並べ替えるとしたらどの方向に並べ替えるべきか）。方向は "減少 "か "増加 "か。
説明されている項目は何か？
cohen.dでマハラノビス距離を求める。
データフレームまたは行列（数式モードで指定可能）
何らかの二項グループ化変数（数式入力で指定可能（例参照）
group2で定義された各サブグループに対して cohen.dを適用（数式でも指定可能）
数式モードを使用し、特定の変数を指定する場合（例を参照）
効果量
d.robustで平均と標準偏差を求める際に使用されるトリミングの量
第1群と第2群の合計標本サイズ
1群の標本サイズ（1群のみの場合）
2群の標本サイズ
2つの分散をプールする
スチューデントのt統計量
1-αは信頼区間の幅
相関ではなく共分散行列を求める
効果量に変換される相関
グループ1の平均
第2群の平均
第1群の標準偏差
第2群の標準偏差
cohen.dの結果を並べ替えるべきか（並べ替えるとしたらどの方向に並べ替えるべきか）。方向は "減少 "か "増加 "か。
説明されている項目は何か？
cohen.dでマハラノビス距離を求める。
行列またはdata.frame（数式入力で表現可能）
表示する変数
グループ化変数
数式入力の場合はデータオブジェクトの名前
グループ化変数が指定されている場合、グループにはどのような名前を付けるべきか？デフォルトは1:ngrp
yラベル
xラベル
図のタイトル
TRUE の場合、ヴァイオリンを垂直にプロットし、そうでなければ水平にプロットする。
TRUE の場合、データ点にストリップチャートを追加します。
ストリップチャートの場合、点をこれだけジッターさせる。
TRUE の場合、ヴァイオリンにエラー・バーまたはキャッツ・アイを追加する。
TRUE かつ errors=TRUE なら、キャッツアイを描く。
透明度（0=透明 ... 1=透明でない）
高さのような変数をプロットするときに、密度ヒストグラムを平滑化できるようにする。
TRUE なら、度数 (n * 密度) をプロットします。
密度をデータの最大値と最小値に制限します。
指定されない場合、変数の数を0.5倍した値になります。
指定されない場合、データによって決定される
オーバープロット可能
色の指定が可能。  2つのグループのデフォルトは青と赤で、より多くのグループ・レベルの場合は虹。
平均のプロット文字は、デフォルトでは小さな塗りつぶしの円である。  平均を表示しない場合は pch=NA を使用する。
NULLの場合、幅をサンプルサイズの平方根でスケーリングし、そうでない場合は与えられた値でスケーリングする。
NULLでない場合は、c(topleft,topright,top,left,right)に凡例を描く。
その他のグラフィックパラメータ
 データフレームまたは行列
na.rm=FALSEの場合，欠損データは削除されます．
中央値は標準か補間か。
 歪度（skew）と尖度（kurtosis）を計算するか？
 範囲は計算すべきか？
trim=.1 - 上下のトリム分数を削除して平均をトリムする。
スキューと尖度のどの推定値を使うべきか？  (詳細参照）
数値以外の変数をチェックすべきか？  遅いが役に立つ。
TRUE の場合、n, mean, sds, min, max, ranges を行い、速度を向上させる。  NULLの場合、大きな(ncol * nrow > 10^7)問題に対して高速モードに切り替わる。
NULLでない場合、指定された分位を求めます (例えば、 quant=c(.25,.75) は25分位点と75分位点を求めます)。
TRUE の場合、四分位範囲を表示します。
数値以外の変数を数値に変換せず、省略する。
describeData の各変数の最初の 1:head のケースを表示する。
describeData の各変数について、最後のノッブ-テールのケースを表示する
特定のグループ化変数の数式入力が可能
data.frameまたはmatrix.statsBy の注釈を参照．
グループ化変数またはグループ化変数のリスト。  (数式モードで呼び出した場合は無視されるかもしれません)。
リストではなく行列を出力する
どのタイプの歪度、尖度を求めるか。
行列出力を与える場合、何桁の数値を報告すべきか？
数式入力を使用する場合に必要
data.frameまたは行列を記述するために渡されるパラメータ
data.frameまたは行列を記述するために渡される数式入力パラメータを使用する場合に必要。statsBy に関する注記を参照。
グループ化変数またはグループ化変数のリスト。  (数式モードを使用して呼び出す場合は無視される場合があります)。
リストではなく行列出力を提供する
どのタイプの歪度、尖度を求めるか。
行列出力を与える場合、何桁の数値を報告すべきか？
数式入力を使用する場合に必要
記述に渡すパラメータ
 データフレームまたは行列
na.rm=FALSEの場合、欠損データを削除する。
中央値は標準か補間か。
 歪度（skew）と尖度（kurtosis）を計算するか？
 範囲は計算すべきか？
trim=.1 - 上下のトリム分数を削除して平均をトリムする。
スキューと尖度のどの推定値を使うべきか？  (詳細参照）
数値以外の変数をチェックすべきか？  遅いが役に立つ。
TRUE の場合、n, mean, sds, min, max, ranges を行い、速度を向上させる。  NULLの場合、大きな(ncol * nrow > 10^7)問題に対して高速モードに切り替わる。
NULLでない場合、指定された分位を求めます (例えば、 quant=c(.25,.75) は25分位点と75分位点を求めます)。
TRUE の場合、四分位範囲を表示します。
数値以外の変数を数値に変換せず、省略する。
describeData の各変数の最初の 1:head のケースを表示する。
describeData の各変数について、最後のノッブ-テールのケースを表示する
特定のグループ化変数の数式入力が可能
 データフレームまたは行列
na.rm=FALSE の場合，欠損データは削除される．
中央値は標準か補間か
 歪度（skew）と尖度（kurtosis）は計算するか？
 範囲は計算すべきか？
trim=.1 - 上下のトリム分数を削除して平均をトリムする。
スキューと尖度のどの推定値を使うべきか？  (詳細参照）
数値以外の変数をチェックすべきか？  遅いが役に立つ。
TRUE の場合、n, mean, sds, min, max, ranges を行い、速度を向上させる。  NULLの場合、大きな(ncol * nrow > 10^7)問題に対して高速モードに切り替わる。
NULLでない場合、指定された分位を求めます (例えば、 quant=c(.25,.75) は25分位点と75分位点を求めます)。
TRUE の場合、四分位範囲を表示します。
数値以外の変数を数値に変換せず、省略する。
describeData の各変数の最初の 1:head のケースを表示する。
describeData の各変数について、最後のノッブ-テールのケースを表示する
特定のグループ化変数の数式入力が可能
lavaan パッケージを用いた因子分析 fa、成分分析 principal、ω信頼性分析 omega、クラスター分析 iclust、トップダウン（bassAckward） bassAckward、または確証的因子分析 cfa、または構造方程式モデル sem の結果。
矩形または楕円のx座標
矩形または楕円のy座標
楕円のサイズ（変数の数でスケーリングされる
矩形、楕円、矢印に挿入するテキスト
テキストサイズを調整
線の色（プロット図形の通常の意味）
線の種類
矢印のテキストサイズを調整、デフォルトはcex、デフォルトは1
ラベルが隙間に入るように矢印の隙間を調整する
矢印のどこにラベルを付けるか（値を4で割る）
矢印の両端に矢印の頭をつけるべきか？
は、長方形と楕円のサイズと曲線の曲率を変更します。  (曲率については、正の数は下と左に凹んでいる
矢印と曲線は
矢印と曲線は
長方形はどこにある？
どの形を描くか
デフォルトの範囲
デフォルトの範囲
テキストボックスを描く
ボックスのどの側にエラーを表示するか
ベクトルの角度（度
dia.cone内の辺に矢印を描く
TRUE の場合、前のプロットにプロット
TRUEの場合、dia.coneの矢印の間に曲線を描く
のテキストの位置。1、2、3、4またはNULLのテキスト位置に従う。
曲線の方向を動的に計算するか、"up "または "left "に設定するか。
ほとんどのグラフィックパラメータはここに渡すことができる
dia.selfから保存されたlist
dia.arrowから保存されたlst
dia.curved.arrowから保存されたリスト
dia.rectから保存されたリスト
lavaan パッケージを用いた因子分析 fa, 成分分析 principal, ω 信頼性分析 omega, クラスター分析 iclust, トップダウン (bassAckward) bassAckward または確証的因子分析 cfa, 構造方程式モデル sem の結果.
矩形または楕円のx座標
矩形または楕円のy座標
楕円のサイズ（変数の数でスケーリングされる
矩形、楕円、矢印に挿入するテキスト
テキストサイズを調整
線の色（プロット図形の通常の意味）
線の種類
矢印のテキストサイズを調整、デフォルトはcex、デフォルトは1
ラベルが隙間に入るように矢印の隙間を調整する
矢印のどこにラベルを付けるか（値を4で割る）
矢印の両端に矢印の頭をつけるべきか？
は、長方形と楕円のサイズと曲線の曲率を変更します。  (曲率については、正の数は下と左に凹んでいる
矢印と曲線は
矢印と曲線は
長方形はどこにある？
どの形を描くか
デフォルトの範囲
デフォルトの範囲
テキストボックスを描く
ボックスのどの側にエラーを表示するか
ベクトルの角度（度
dia.cone内の辺に矢印を描く
TRUE の場合、前のプロットにプロット
TRUEの場合、dia.coneの矢印の間に曲線を描く
のテキストの位置。1、2、3、4またはNULLのテキスト位置に従う。
曲線の方向を動的に計算するか、"up "または "left "に設定するか。
ほとんどのグラフィックパラメータはここに渡すことができる
dia.selfから保存されたlist
dia.arrowから保存されたlst
dia.curved.arrowから保存されたリスト
dia.rectから保存されたリスト
lavaan パッケージを用いた因子分析 fa, 成分分析 principal, ω 信頼性分析 omega, クラスター分析 iclust, トップダウン (bassAckward) bassAckward または確証的因子分析 cfa, 構造方程式モデル sem の結果.
矩形または楕円のx座標
矩形または楕円のy座標
楕円のサイズ（変数の数でスケーリングされる
矩形、楕円、矢印に挿入するテキスト
テキストサイズを調整
線の色（プロット図形の通常の意味）
線の種類
矢印のテキストサイズを調整、デフォルトはcex、デフォルトは1
ラベルが隙間に入るように矢印の隙間を調整する
矢印のどこにラベルを付けるか（値を4で割る）
矢印の両端に矢印の頭をつけるべきか？
は、長方形と楕円のサイズと曲線の曲率を変更します。  (曲率については、正の数は下と左に凹んでいる
矢印と曲線は
矢印と曲線は
長方形はどこにある？
どの形を描くか
デフォルトの範囲
デフォルトの範囲
テキストボックスを描く
ボックスのどの側にエラーを表示するか
ベクトルの角度（度
dia.cone内の辺に矢印を描く
TRUE の場合、前のプロットにプロット
TRUEの場合、dia.coneの矢印の間に曲線を描く
のテキストの位置。1、2、3、4またはNULLのテキスト位置に従う。
曲線の方向を動的に計算するか、"up "または "left "に設定するか。
ほとんどのグラフィックパラメータはここに渡すことができる
dia.selfから保存されたlist
dia.arrowから保存されたlst
dia.curved.arrowから保存されたリスト
dia.rectから保存されたリスト
lavaan パッケージを用いた因子分析 fa, 成分分析 principal, ω 信頼性分析 omega, クラスター分析 iclust, トップダウン (bassAckward) bassAckward または確証的因子分析 cfa, 構造方程式モデル sem の結果.
矩形または楕円のx座標
矩形または楕円のy座標
楕円のサイズ（変数の数でスケーリングされる
矩形、楕円、矢印に挿入するテキスト
テキストサイズを調整
線の色（プロット図形の通常の意味）
線の種類
矢印のテキストサイズを調整、デフォルトはcex、デフォルトは1
ラベルが隙間に入るように矢印の隙間を調整する
矢印のどこにラベルを付けるか（値を4で割る）
矢印の両端に矢印の頭をつけるべきか？
は、長方形と楕円のサイズと曲線の曲率を変更します。  (曲率については、正の数は下と左に凹んでいる
矢印と曲線は
矢印と曲線は
長方形はどこにある？
どの形を描くか
デフォルトの範囲
デフォルトの範囲
テキストボックスを描く
ボックスのどの側にエラーを表示するか
ベクトルの角度（度
dia.cone内の辺に矢印を描く
TRUE の場合、前のプロットにプロット
TRUEの場合、dia.coneの矢印の間に曲線を描く
のテキストの位置。1、2、3、4またはNULLのテキスト位置に従う。
曲線の方向を動的に計算するか、"up "または "left "に設定するか。
ほとんどのグラフィックパラメータはここに渡すことができる
dia.selfから保存されたlist
dia.arrowから保存されたlst
dia.curved.arrowから保存されたリスト
dia.rectから保存されたリスト
lavaan パッケージを用いた因子分析 fa, 成分分析 principal, ω 信頼性分析 omega, クラスター分析 iclust, トップダウン (bassAckward) bassAckward または確証的因子分析 cfa, 構造方程式モデル sem の結果.
矩形または楕円のx座標
矩形または楕円のy座標
楕円のサイズ（変数の数でスケーリングされる
矩形、楕円、矢印に挿入するテキスト
テキストサイズを調整
線の色（プロット図形の通常の意味）
線の種類
矢印のテキストサイズを調整、デフォルトはcex、デフォルトは1
ラベルが隙間に入るように矢印の隙間を調整する
矢印のどこにラベルを付けるか（値を4で割る）
矢印の両端に矢印の頭をつけるべきか？
は、長方形と楕円のサイズと曲線の曲率を変更します。  (曲率については、正の数は下と左に凹んでいる
矢印と曲線は
矢印と曲線は
長方形はどこにある？
どの形を描くか
デフォルトの範囲
デフォルトの範囲
テキストボックスを描く
ボックスのどの側にエラーを表示するか
ベクトルの角度（度
dia.cone内の辺に矢印を描く
TRUE の場合、前のプロットにプロット
TRUEの場合、dia.coneの矢印の間に曲線を描く
のテキストの位置。1、2、3、4またはNULLのテキスト位置に従う。
曲線の方向を動的に計算するか、"up "または "left "に設定するか。
ほとんどのグラフィックパラメータはここに渡すことができる
dia.selfから保存されたlist
dia.arrowから保存されたlst
dia.curved.arrowから保存されたリスト
dia.rectから保存されたリスト
lavaan パッケージを用いた因子分析 fa, 成分分析 principal, ω 信頼性分析 omega, クラスター分析 iclust, トップダウン (bassAckward) bassAckward または確証的因子分析 cfa, 構造方程式モデル sem の結果.
矩形または楕円のx座標
矩形または楕円のy座標
楕円のサイズ（変数の数でスケーリングされる
矩形、楕円、矢印に挿入するテキスト
テキストサイズを調整
線の色（プロット図形の通常の意味）
線の種類
矢印のテキストサイズを調整、デフォルトはcex、デフォルトは1
ラベルが隙間に入るように矢印の隙間を調整する
矢印のどこにラベルを付けるか（値を4で割る）
矢印の両端に矢印の頭をつけるべきか？
は、長方形と楕円のサイズと曲線の曲率を変更します。  (曲率については、正の数は下と左に凹んでいる
矢印と曲線は
矢印と曲線は
長方形はどこにある？
どの形を描くか
デフォルトの範囲
デフォルトの範囲
テキストボックスを描く
ボックスのどの側にエラーを表示するか
ベクトルの角度（度
dia.cone内の辺に矢印を描く
TRUE の場合、前のプロットにプロット
TRUEの場合、dia.coneの矢印の間に曲線を描く
のテキストの位置。1、2、3、4またはNULLのテキスト位置に従う。
曲線の方向を動的に計算するか、"up "または "left "に設定するか。
ほとんどのグラフィックパラメータはここに渡すことができる
dia.selfから保存されたlist
dia.arrowから保存されたlst
dia.curved.arrowから保存されたリスト
dia.rectから保存されたリスト
lavaan パッケージを用いた因子分析 fa, 成分分析 principal, ω 信頼性分析 omega, クラスター分析 iclust, トップダウン (bassAckward) bassAckward または確証的因子分析 cfa, 構造方程式モデル sem の結果.
矩形または楕円のx座標
矩形または楕円のy座標
楕円のサイズ（変数の数でスケーリングされる
矩形、楕円、矢印に挿入するテキスト
テキストサイズを調整
線の色（プロット図形の通常の意味）
線の種類
矢印のテキストサイズを調整、デフォルトはcex、デフォルトは1
ラベルが隙間に入るように矢印の隙間を調整する
矢印のどこにラベルを付けるか（値を4で割る）
矢印の両端に矢印の頭をつけるべきか？
は、長方形と楕円のサイズと曲線の曲率を変更します。  (曲率については、正の数は下と左に凹んでいる
矢印と曲線は
矢印と曲線は
長方形はどこにある？
どの形を描くか
デフォルトの範囲
デフォルトの範囲
テキストボックスを描く
ボックスのどの側にエラーを表示するか
ベクトルの角度（度
dia.cone内の辺に矢印を描く
TRUE の場合、前のプロットにプロット
TRUEの場合、dia.coneの矢印の間に曲線を描く
のテキストの位置。1、2、3、4またはNULLのテキスト位置に従う。
曲線の方向を動的に計算するか、"up "または "left "に設定するか。
ほとんどのグラフィックパラメータはここに渡すことができる
dia.selfから保存されたlist
dia.arrowから保存されたlst
dia.curved.arrowから保存されたリスト
dia.rectから保存されたリスト
lavaan パッケージを用いた因子分析 fa, 成分分析 principal, ω 信頼性分析 omega, クラスター分析 iclust, トップダウン (bassAckward) bassAckward または確証的因子分析 cfa, 構造方程式モデル sem の結果.
矩形または楕円のx座標
矩形または楕円のy座標
楕円のサイズ（変数の数でスケーリングされる
矩形、楕円、矢印に挿入するテキスト
テキストサイズを調整
線の色（プロット図形の通常の意味）
線の種類
矢印のテキストサイズを調整、デフォルトはcex、デフォルトは1
ラベルが隙間に入るように矢印の隙間を調整する
矢印のどこにラベルを付けるか（値を4で割る）
矢印の両端に矢印の頭をつけるべきか？
は、長方形と楕円のサイズと曲線の曲率を変更します。  (曲率については、正の数は下と左に凹んでいる
矢印と曲線は
矢印と曲線は
長方形はどこにある？
どの形を描くか
デフォルトの範囲
デフォルトの範囲
テキストボックスを描く
ボックスのどの側にエラーを表示するか
ベクトルの角度（度
dia.cone内の辺に矢印を描く
TRUE の場合、前のプロットにプロット
TRUEの場合、dia.coneの矢印の間に曲線を描く
のテキストの位置。1、2、3、4またはNULLのテキスト位置に従う。
曲線の方向を動的に計算するか、"up "または "left "に設定するか。
ほとんどのグラフィックパラメータはここに渡すことができる
dia.selfから保存されたlist
dia.arrowから保存されたlst
dia.curved.arrowから保存されたリスト
dia.rectから保存されたリスト
lavaan パッケージを用いた因子分析 fa, 成分分析 principal, ω 信頼性分析 omega, クラスター分析 iclust, トップダウン (bassAckward) bassAckward または確証的因子分析 cfa, 構造方程式モデル sem の結果.
矩形または楕円のx座標
矩形または楕円のy座標
楕円のサイズ（変数の数でスケーリングされる
矩形、楕円、矢印に挿入するテキスト
テキストサイズを調整
線の色（プロット図形の通常の意味）
線の種類
矢印のテキストサイズを調整、デフォルトはcex、デフォルトは1
ラベルが隙間に入るように矢印の隙間を調整する
矢印のどこにラベルを付けるか（値を4で割る）
矢印の両端に矢印の頭をつけるべきか？
は、長方形と楕円のサイズと曲線の曲率を変更します。  (曲率については、正の数は下と左に凹んでいる
矢印と曲線は
矢印と曲線は
長方形はどこにある？
どの形を描くか
デフォルトの範囲
デフォルトの範囲
テキストボックスを描く
ボックスのどの側にエラーを表示するか
ベクトルの角度（度
dia.cone内の辺に矢印を描く
TRUE の場合、前のプロットにプロット
TRUEの場合、dia.coneの矢印の間に曲線を描く
のテキストの位置。1、2、3、4またはNULLのテキスト位置に従う。
曲線の方向を動的に計算するか、"up "または "left "に設定するか。
ほとんどのグラフィックパラメータはここに渡すことができる
dia.selfから保存されたlist
dia.arrowから保存されたlst
dia.curved.arrowから保存されたリスト
dia.rectから保存されたリスト
lavaan パッケージを用いた因子分析 fa, 成分分析 principal, ω 信頼性分析 omega, クラスター分析 iclust, トップダウン (bassAckward) bassAckward または確証的因子分析 cfa, 構造方程式モデル sem の結果.
矩形または楕円のx座標
矩形または楕円のy座標
楕円のサイズ（変数の数でスケーリングされる
矩形、楕円、矢印に挿入するテキスト
テキストサイズを調整
線の色（プロット図形の通常の意味）
線の種類
矢印のテキストサイズを調整、デフォルトはcex、デフォルトは1
ラベルが隙間に入るように矢印の隙間を調整する
矢印のどこにラベルを付けるか（値を4で割る）
矢印の両端に矢印の頭をつけるべきか？
は、長方形と楕円のサイズと曲線の曲率を変更します。  (曲率については、正の数は下と左に凹んでいる
矢印と曲線は
矢印と曲線は
長方形はどこにある？
どの形を描くか
デフォルトの範囲
デフォルトの範囲
テキストボックスを描く
ボックスのどの側にエラーを表示するか
ベクトルの角度（度
dia.cone内の辺に矢印を描く
TRUE の場合、前のプロットにプロット
TRUEの場合、dia.coneの矢印の間に曲線を描く
のテキストの位置。1、2、3、4またはNULLのテキスト位置に従う。
曲線の方向を動的に計算するか、"up "または "left "に設定するか。
ほとんどのグラフィックパラメータはここに渡すことができる
dia.selfから保存されたlist
dia.arrowから保存されたlst
dia.curved.arrowから保存されたリスト
dia.rectから保存されたリスト
lavaan パッケージを用いた因子分析 fa, 成分分析 principal, ω 信頼性分析 omega, クラスター分析 iclust, トップダウン (bassAckward) bassAckward または確証的因子分析 cfa, 構造方程式モデル sem の結果.
矩形または楕円のx座標
矩形または楕円のy座標
楕円のサイズ（変数の数でスケーリングされる
矩形、楕円、矢印に挿入するテキスト
テキストサイズを調整
線の色（プロット図形の通常の意味）
線の種類
矢印のテキストサイズを調整、デフォルトはcex、デフォルトは1
ラベルが隙間に入るように矢印の隙間を調整する
矢印のどこにラベルを付けるか（値を4で割る）
矢印の両端に矢印の頭をつけるべきか？
は、長方形と楕円のサイズと曲線の曲率を変更します。  (曲率については、正の数は下と左に凹んでいる
矢印と曲線は
矢印と曲線は
長方形はどこにある？
どの形を描くか
デフォルトの範囲
デフォルトの範囲
テキストボックスを描く
ボックスのどの側にエラーを表示するか
ベクトルの角度（度
dia.cone内の辺に矢印を描く
TRUE の場合、前のプロットにプロット
TRUEの場合、dia.coneの矢印の間に曲線を描く
のテキストの位置。1、2、3、4またはNULLのテキスト位置に従う。
曲線の方向を動的に計算するか、"up "または "left "に設定するか。
ほとんどのグラフィックパラメータはここに渡すことができる
dia.selfから保存されたlist
dia.arrowから保存されたlst
dia.curved.arrowから保存されたリスト
dia.rectから保存されたリスト
相関行列，またはデータの data.frame/matrix，（Phiが指定された場合は）斜めの因子パターン行列
群因子と考えられる因子の数
ブートストラップ推定を行うためにomegaで行う複製数
因子法（デフォルトはminres） fm="pa "は主軸， fm="minres "は最小残差（OLS）解， fm="pc "は主成分（注参照）， fm="ml "は最尤法．
相関行列が多項式/四項式または正規ピアソン相関を用いて求められる場合
項目の得点方向を指定する+/- 1sのベクトル。  デフォルトではすべての項目が正に得点されると仮定されるが、いくつかの項目が逆に得点される場合は、key を指定する必要がある。
flip が TRUE の場合、項目は一般因子で正の相関を持つように自動的に反転されます。反転された項目は、-記号で表示されます。
両側会議境界の確率
指定された場合、出力を桁数に丸める
この分析のタイトル
この分析のメイン (directSl)
カットより大きい負荷がdirectSlで使用される。
結果をプロットする場合、Schmid Leiman解を表示するか、階層解を表示するか？(デフォルト sl=TRUE)
プロットする場合、変数にどのようなラベルを付けるか？指定がない場合、デフォルトは列名となります。
plot=TRUE (デフォルト)はomega.diagramを呼び出し、plot=FALSEは呼び出しません。  Rgraphvizが利用可能な場合、omega.graphは別に使用できます。
オブザベーション数 - 適合度統計量に使用されます。
どの回転を適用するか？デフォルトはobliminで、代わりにsimplimax、Promax、cluster、targetがあります。targetはオプションのキー行列に回転します（target.rot参照）。
指定された場合，パターン行列(m)と因子間相関行列(Phi)からωが求められる．
2因子の場合（推奨されない）、負荷量が等しいか、第1因子を強調するか、第2因子を強調するか。特に、2つのグループ因子がある場合の処理については、schmid のオプションパラメータを参照してください。
TRUE の場合、標準化されていない変数の計算を行い、共分散を使用します。
TRUE の場合、3因子が必要であるという警告を出しません。
FALSEの場合、omegaSemを計算するためにJohn Foxのsemパッケージを使用します。  TRUE の場合、Yves Rosseel の lavaan パッケージを使用します。
lavaanまたはsemのフィッティングオブジェクト。lavaanの場合、これには相関行列と変数名が含まれるため、mを指定する必要はない。
因子ルーチンに追加パラメータを渡すことができます。  
 因子負荷量の行列，または因子負荷量の行列のリスト．
 因子負荷量の2番目の行列（x がリストの場合，y は空でもよい）．
反映に使用される項目の中点．データから求められる場合は NULL.
一般化距離の指数．(r=1は街区、r=2はユークリッド、r=100以上は最大距離を強調)
基礎となるピアソン相関が楕円の形状を定義する。
Xはタウで切断
Yはタウで切断
図に影をつける（デフォルトはTRUE）
z軸の相対的な高さ
x-y平面を回転させる角度
グラフを表示する平面上の角度
グリッドの解像度
色の解像度
軸の描画
メインタイトル
グラフにカットを表示するかどうか（例：cuts=c(0,0)
テトラコリックの4つの部分をすべて表示する
相関楕円を描く
楕円の高さ
基礎となるピアソン相関が楕円の形を定義する。
Xはタウで切断
Yはタウでカット
図に影を付ける（デフォルトはTRUE）
z軸の相対的な高さ
x-y平面を回転させる角度
グラフを表示する平面上の角度
グリッドの解像度
色の解像度
軸の描画
メインタイトル
グラフにカットを表示するかどうか（例：cuts=c(0,0)
テトラコリックの4つの部分をすべて表示する
相関楕円を描く
楕円の高さ
ダミーコードに変換するベクトル
カテゴリを1、それ以外を0としてコード化するベクトル。
TRUEの場合、xにNAを含むすべてのコードに対してNAを返す。
指定された場合、一番上の値だけをダミーコード化し、残りをNAにする。
指定された場合、すべての値 >= min をダミーコード化する。
eigenからの出力、またはprincompから派生したクラスprincompのリスト
ベクトル，行列，またはdata.frame
オプションの2番目のベクトル
新しいプロットを作成するか、追加するか？
smooth = TRUE -> Loessフィットを描く。
lm=TRUE -> 線形適合を描く
data=TRUE -> データ点を描く
楕円を1つ描くべきか2つ描くべきか
ローレスフィットの平均化窓パラメータ
lowessの反復パラメータ
楕円の色（デフォルトは赤
x軸のラベル
y軸のラベル
sd単位での楕円の大きさ（デフォルトは1と2）
その他のプロット用パラメータ
r=1 は街区、r=2 はユークリッド円、r > 2 は正方形になる。
ミンコフスキー円を描くときに使うタイトル
x軸を伸ばす
y軸を伸ばす
荷重行列
荷重行列
荷重行列
どの回転を使用すべきか？
(Promaxの)バリマックス荷重を上げるべき乗
Promaxのさまざまな負荷量を上げるためのべき乗。
任意のターゲット行列，任意の重みで構成できるが，おそらく-1,0,1の重み．  もし見つからない場合，ターゲットは，すべての項目を最も負荷の高い因子に割り当てることによって決定される独立クラスター構造である．
行列が変換される値（主に0，1，NA）の行列．
初期回転行列
最適化ルーチン（GPArotationパッケージおよびPromaxのGPForth）に渡されるパラメータ。
最適化ルーチン（GPArotation パッケージの GPForth）に渡されるパラメータ。
最適化ルーチン（GPArotation パッケージの GPForth）に渡されるパラメータ
faRotate などに）渡すその他のパラメータには、以下のようなものがあります。 ターゲットリストまたはマトリックス
 生データのデータフレームまたは行列、または DV ~ IV の形式の数式。  数式入力が指定された場合， error.bars.by が呼び出される．
度数の表
指定された場合、プロットされるデータセットの平均、sd、n、おそらくはse。
数式入力を使用する場合は、データが存在するオブジェクトを指定します。
NULLでない場合は、error.bars.by構文を使用する。
yラベル
x ラベル
図のタイトル
指定された場合、プロットの限界値。
指定された場合はプロットのx限界値、そうでない場合はc(.5,nvar + .5)
キャッツアイ'プロットを描画するか
信頼区間のαレベル - デフォルトは95%信頼区間
TRUEの場合、アルファレベルの標準誤差の代わりに1標準偏差を描く
 X軸ラベル
テキストを配置する場所：下、左、上、右
 エラー・バーの上部の長さは?
エラーバーの色は？
 add=FALSEは新しいプロット、add=TRUEは点とエラーバーだけ。
bars=TRUEは棒グラフを描きます。
変数の誤差分散を1-SMCで補正すべきか？
catseyesの色。  デフォルトは青。
負の場合は無地、正の場合は何本の線を引くか。
パーセンテージは、行の合計（デフォルト）、列の合計、またはデータの総計に基づく 表
raw が FALSE の場合はグラフを確率で表示し、TRUE の場合はデータを生のカウントで表示する。
plot 関数に渡すその他のパラメータ、例えば、線を描くには typ="b"、破線を描くには lty="dashed"。
 データフレームまたは行列
グループ化変数
数式入力を使用する場合は、データ・ファイルを指定しなければならない。
各グループ（デフォルト）または各変数ごとに異なる線
グループ化変数がカテゴリ変数（TRUE）か連続変数（FALSE）か。
y ラベル
x ラベル
図のタイトル
指定された場合、プロットのy限界。
指定された場合、プロットのx限界値、そうでない場合はデータに基づく
キャッツアイを描くべきか
信頼区間のαレベル。  デフォルトは1- alpha =95%信頼区間。
sd=TRUEは、標準誤差の代わりに標準偏差をプロットする。
 X軸ラベル
棒グラフの凡例では、これらは変数のラベルで、折れ線グラフでは、グループ化変数のラベル。
2番目のグループ化変数がある場合は、その名前。
もし!NULLなら、v2.labelsを行の左/右に追加する (add.labels="right")
テキストを配置する場所：下、左、上、右
 エラーバーの上部の長さは？
min.size以上のグループにエラーバーを描く
 add=FALSE, 新しいプロット, add=TRUE, 点とエラーバーだけ
平均の単純なプロットではなく、エラーバー付きの棒グラフを描く
s.e.は、他の変数との相関によって補正されるべきか？
グループは異なる色でプロットされます（mod n.groups）。  それらを透明にする方法についてはノートを参照のこと。
変数ごとにプロットしない場合、線の種類を指定することができる。
デフォルトでは、異なるグループをプロットする場合、type = lty の線でグループを結びます。  lines が FALSE の場合は、グループを連結しない。
凡例をどこに描画するか：0 (描画しない), 1 = 右下, 2 = 下, 3 ... 8 は時計回りに続け、9は中心。
最初に使うプロット記号。  それ以降のグループはpch + group
猫の目を何本/インチで塗りつぶすか。  不足の場合、非透過色が使用される。  負の場合、透明な色が使われる。異なる値の場合はベクトルでもよい。
指定された場合、プロットされるデータセットの平均、sd、n、おそらくse。
plot 関数に渡すその他のパラメータ 例：破線を描くには lty="dashed"。
 生データのデータフレームまたは行列、または DV ~ IV の形の数式。  数式入力が指定された場合、error.bars.byが呼び出される。
度数の表
指定された場合、プロットされるデータセットの平均、sd、n、おそらくはse。
数式入力を使用する場合は、データが存在するオブジェクトを指定します。
NULLでない場合は、error.bars.by構文を使用する。
yラベル
x ラベル
図のタイトル
指定された場合、プロットの限界値。
指定された場合はプロットのx限界値、そうでない場合はc(.5,nvar + .5)
キャッツアイ'プロットを描画するか
信頼区間のαレベル - デフォルトは95%信頼区間
TRUEの場合、アルファレベルの標準誤差の代わりに1標準偏差を描く
 X軸ラベル
テキストを配置する場所：下、左、上、右
 エラー・バーの上部の長さは?
エラーバーの色は？
 add=FALSEは新しいプロット、add=TRUEは点とエラーバーだけ。
bars=TRUEは棒グラフを描きます。
変数の誤差分散を1-SMCで補正すべきか？
catseyesの色。  デフォルトは青。
負の場合は無地、正の場合は何本の線を引くか。
パーセンテージは、行の合計（デフォルト）、列の合計、またはデータの総計に基づく 表
raw が FALSE の場合はグラフを確率で表示し、TRUE の場合はデータを生のカウントで表示する。
plot 関数に渡すその他のパラメータ、例えば、線を描くには typ="b"、破線を描くには lty="dashed"。
 データまたは要約統計量のベクトル（Describeより）
 データまたは要約統計量の2番目のベクトル（これもDescribeから）。
各ペアの名前 - デフォルトは x の rownames です。
グラフのタイトル
xlim 値 - デフォルトは最小値と最大値 mean(x) +/- 2 se。
ylim 値（必要であれば） - デフォルトは最小および最大 mean(y) +/- 2 se。
x 軸のラベル - グループ化変数 1
y 軸のラベル - グループ化変数 2
ラベルは平均に対してどこに配置されるか？  
ラベルは、この位置からオフセットされる
 矢印の長さ
エラーバーのアルファ・レベル
もし sd が TRUE なら、平均 +/- 1 sd) を描画する。
がTRUEの場合、事前プロットで値をオーバーレイする
プロットキャラクタの色は？デフォルトは黒
矢印には何色を使うか - デフォルトは色
テキストに使用する色 - デフォルトは colors です。
 プロットのその他のパラメータ
生データのデータフレームまたは行列、あるいは describe, describeBy, statsBy, bestScales, cohen.d の結果のオブジェクト。
表示する変数（特に describeBy または StatsBy プロットを行う場合）。
標準誤差のソース
必要であれば、グループ化変数。1つの変数(var)に対してデータをグループ化する。
FALSEの場合、標準誤差の信頼区間を表示し、そうでない場合は1標準偏差を表示します。
データを効果量単位で指定されたグループ（平均を0に設定）と比較するか？
データから求める代わりに使用する平均とseの行列
報告する最大値の数
報告する最小値の数
グループ/変数の値による並べ替え
増加順か減少順か（上から下へ）
図のキャプション
信頼区間のp値
誤差限界のカテジーを描く
describeByまたはstatsByを使用する場合、描画する最小標本サイズはどうすべきか
ラベルの長さ（この値の後は切り捨てる）
ラベルを指定するか、行名から見つけるか
labels.widthの後に切り捨てる
すべての変数のプロットを拡大縮小するが、選択した変数だけを表示する
ignored: いずれ追加される
無視
グラフィックにおけるcexの標準的な意味
無視される
平均のプロット文字
無視される
背景色（平均を示すドットの色）
前景色（線分の色）
テキストラベルの色
無視される
グループが実装されるまで無視される
NULLの場合、変数名が使用される。
NULLの場合、グループ名が使用されます。
NULLの場合、良い値を表示するように計算される
TRUE の場合、前のプロットにプロットを追加する（例えば、ドットチャートから）。
sort=TRUEの場合、orderがNULLなら値でソートし、そうでなければ、前の図からorderが返されていれば、その順序を使用する。
その他、忘れてしまった図形パラメータ
プロットするx変数（名前または数値）。
プロットするy変数（名前または数値）。
xデータに使用する行列またはdata.frame
2つのdata.frameのデータをプロットする場合は、ydata frameのy変数が使用されます。
指定された場合、最初に statsBy が呼び出され、グループごとの統計量を求めます。
TRUE の場合、グループ化変数の2つの値に対して、すべての x 変数と y 変数をプロットします。
変数名
プロットのメインタイトル
xlim 値（必要であれば）- デフォルトは最小値と最大値 mean(x) +/- 2 se。
ylim 値（必要な場合） - デフォルトは、最小および最大 mean(y) +/- 2 se。
x 軸のラベル - グループ化変数 1
y 軸のラベル - グループ化変数2
TRUE の場合、事前プロットに追加
ラベルは平均に対してどこに配置されるか？  
ラベルは、この位置からオフセットされる
 矢印の長さ
エラーバーのアルファレベル
もし sd が TRUE なら、平均 +/- 1 sd) を描画する。
xとyの両方にエラーバーを描くべきか？
相対標本サイズを表す円を描くべきか？
色を使って点をプロットする - デフォルトは黒
テキストラベルの色をどうするか（デフォルトはcolors）
矢印と円の色は？  デフォルトは色
error.circleのスケーリングパラメータ。  デフォルトは1ですが、下方修正することで、より邪魔にならないようにすることができます。
 plotのその他のパラメータ
相関行列または因子分析に適した生データ行列
集合Xを定義する変数
集合 Y を定義する変数
X 変数について抽出する因子の数
Y 変数について抽出する因子の数
オブザベーションの数（eBIC およびカイ2乗に必要），無視できる．
使用する因子法，たとえば，"minres"，"mle "など（詳細は fa を参照）．
どの回転を使うか。(詳細はfaを参照)
TRUEの場合、esem.diagramを描画する。
相関にどのオプションを使うか（詳細はfaを参照）
ペアワイズ完全データの場合は "pairwise"、その他のオプションはcorを参照。
wt.covを求める際にケースに適用する重み
その他、faやesem.diagram関数に渡すパラメータ。
esemから返され、esem.diagramに渡されるオブジェクト
 変数ラベル
 abs(loading)>cutの負荷が表示される。
項目ごとに最大の負荷のみが表示される
誤差推定値（矢印）を含む
楕円の大きさ(変数の数で調整)
係数を桁数に丸める
負荷量は、重複の可能性を減らすために、因子番号 mod adj によって調整されます。
 グラフィックのタイトル、デフォルトは "探索的構造モデル"
グラフィックを左から右(TRUE)または上から下(FALSE)に描く
未実装
相関行列または因子分析に適した生データ行列
集合 X を定義する変数
集合 Y を定義する変数
X 変数について抽出する因子の数
Y 変数について抽出する因子の数
オブザベーションの数（eBIC およびカイ2乗に必要），無視できる．
使用する因子法，たとえば，"minres"，"mle "など（詳細は fa を参照）．
どの回転を使うか。(詳細はfaを参照)
TRUEの場合、esem.diagramを描画する。
相関にどのオプションを使うか（詳細はfaを参照）
ペアワイズ完全データの場合は "pairwise"、その他のオプションはcorを参照。
wt.covを求める際にケースに適用する重み
その他、faやesem.diagram関数に渡すパラメータ。
esemから返され、esem.diagramに渡されるオブジェクト
 変数ラベル
 abs(loading)>cutの負荷が表示される。
項目ごとに最大の負荷のみが表示される
誤差推定値（矢印）を含む
楕円の大きさ(変数の数で調整)
係数を桁数に丸める
負荷量は、重複の可能性を減らすために、因子番号 mod adj によって調整されます。
 グラフィックのタイトル、デフォルトは "探索的構造モデル"
グラフィックを左から右(TRUE)または上から下(FALSE)に描く
未実装
因子分析，主成分分析，ICLUST 分析の出力．  どこからの因子負荷行列でもよい．
通常は指定しないが（FA, pc, または ICLUST の解の中にある），入力が負荷量行列の場合は指定してもよい．
因子拡張分析の結果（もしあれば）
 存在する場合，グラフのドット表現がここに格納される (fa.graph)
 変数ラベル
 abs(loading) > cut の負荷量が表示されます。
abs(loading) > e.cutの拡張負荷量が表示されます。
項目ごとの最大の荷重のみが表示される
拡張項目ごとの最大の負荷のみが表示される
因子行列は、g（第1）因子を反映しているか？  もしそうなら，これを変数の左に，残りの因子を変数の右に描画する．  この場合、単純パラメータをオフにすると便利です。
クラスター分析の結果を描画する場合、潜在変数モデル(ic=FALSE)として扱うか、観測変数モデル(ic=TRUE)として扱うか。
het.diagram関数の相関行列
各レベルの要素のリスト
het.diagramで）矢印の頭を2重にするかどうか
グラフ・サイズ
ダイアグラムを表示する前に因子負荷量を並べ替える
誤差推定値を（矢印として）含める
楕円のサイズ
長方形のサイズ
誤差の矢印はどちら側に置くべきか？
フォントサイズの変更
矢印のフォントサイズを変更、デフォルトはcex
ラベルの矢印の隙間。  cexまたはl.cexのばらつきを補正するように調整できる。
余白を通常より広く設定します。
数値ラベルにいくつの異なる位置(1-3)を使用するか。互いに重なっている場合に便利。
fa.graphのノードにどのフォントを使うか。
fa.graphの辺に使用するフォントを指定します。
 Rgraphvizに渡すパラメータ-グラフの描画方法
 エッジとして表示する桁数
 グラフのタイトル、デフォルトは "因子分析 "または "因子分析と拡張"
出力にRgraphvizを使うべきか？
 その他のパラメータ
相関行列または共分散行列、または生データ行列。生データの場合、相関行列はペアワイズ削除を使って求められます。共分散が与えられた場合、covarオプションがTRUEでない限り、相関に変換されます。
 抽出する因子の数，デフォルトは 1
相関行列を使用する場合、相関行列を求めるのに使用されるオブザベーションの数。  適合度統計量を求めるために使用される。相関行列を使用し、信頼区間を求める場合は指定しなければならない。
オブザベーションのペア数．相関行列を使用し、最小解を求める場合に使用される。
"none", "varimax", "quartimax", "bentlerT", "equamax", "varimin", "geominT" および "bifactor" は，直交回転である．  "promax"、"promax"、"oblimin"、"simplimax"、"bentlerQ"、"geominQ"、"biquartimin "および "cluster "は、解の可能な斜め変換である。  デフォルトは oblimin 変換ですが、2009 年以前のバージョンでは varimax 変換がデフォルトでした。SPSS は Promax を行う前に Kaiser 正規化を行うようで、これは GPArotation で Promax を呼び出す前に正規化を行う "promax" の呼び出しによって行われます。
回転のランダムスタートの数。
faまたはfa.polyで行うブートストラップ交互作用の数。
残差行列を表示するか
default="regression" は，回帰を用いて因子スコアを求める．  因子スコアの推定には，単純回帰（"Thurstone"），相関保存（"tenBerge"），適切なアルゴリズム（factor.scores）を用いた "Anderson "や "Bartlett "などがある．scores="tenBerge "は、おそらくほとんどの解法に適していますが、いくつかの不適切な相関行列の問題を引き起こします。  
2乗重相関(SMC=TRUE)を使用するか、最初の共同性推定値として1を使用します。虚数の固有値が報告された場合は、1を使用してみてください。SMCが変数数の長さのベクトルである場合，fm='pa'の場合，これらの値が開始値として使用される．
covar が TRUE の場合，共分散行列を因子分解し，そうでなければ相関行列を因子分解する．
もし score が TRUE で、かつ missing=TRUE ならば、中央値か平均値を用いて欠損値を代入する。
「中央値 "または "平均値 "が欠損値の置き換えに使用される。
共同体性の変化がmin.errより小さくなるまで繰り返す
収束のための最大反復回数
symmetric=TRUEは、対角の下の値だけを見て対称性を強制する。
ハイパーより小さい（絶対）負荷の数を数える。
warnings=TRUE => 因子の数が多すぎる場合に警告する。
因数分解法fm="minres "は、fm="uls "と同様に最小残差を行う。  fm="ols "は "minres "と少し異なり、OLS法を用いて残差行列全体を最小化しますが、経験的一次導関数を用います。  fm="wls "は重み付き最小2乗法（WLS），fm="gls "は一般化重み付き最小2乗法（GLS），fm="pa "は主因子解，fm="ml "は最尤因子分析．"old.min "は、2017年4月以前に行われていた方法で最小残差を行います（下記の議論を参照）。 fm="alpha" は、Kaiser and Coffey (1965)に記述されているようにアルファ因子分析を行います。
RMSEAの信頼区間のためのアルファ・レベル
信頼区間を求めるために反復を行う場合、信頼区間はどのような確率値で求められるべきか
因子スコアが求められるとき、構造行列（デフォルト）とパターン行列（oblique.scores=TRUE）のどちらに基づくべきか。  現在は常にfalseです。  斜めの因子スコアが必要な場合は、tenBergeを使用してください。  
NULLでない場合、各オブザベーションの重みを含む長さn.obsのベクトル。NULLの場合は、すべてのケースが重み1であることと同じである。
欠損データの扱い方 use="pairwise" がデフォルト".  他のオプションはcorを参照．
相関の求め方："cor "はPearson、"cov "は共分散、"tet "はテトラコリック、"poly "はポリコリック、"mixed "はテトラコリック、ポリコリック、Pearsons、バイセリアル、ポリセリアルの混合でmixed corを使用、YulebはYulebonett、YuleqとYuleYは適当な明白なYule係数。
テトラコリコル、ポリコリコル、混合コルを行う場合、空のセルはどのように扱うべきか？  (テトラコリックのヘルプの議論を参照）。
サンプルサイズ間の安定性を示す場合、n.iter回サンプリングするデータの割合。
fa.pooledで解析するレプリケーションデータセットのリスト。すべて同じ変数数である必要がある。
ターゲット回転を使用する場合はkeyを，geominQを使用する場合はdeltaを，Varimaxを使用する場合は正規化するかどうかを渡す．
 因子負荷量の行列，または因子負荷量の行列のリスト．
 因子負荷量の2番目の行列（x がリストの場合，y は空でもよい）．
桁に丸める
NULL の場合，負荷行列に欠損値が含まれない．  use="complete" の場合，欠落した負荷量のある変数は（警告とともに）取り除かれる．
TRUE の場合，（利用可能であれば）構造行列に基づいて，そうでなければパターン行列に基づいて，因子一致を求める．
因子分析，主成分分析，ICLUST 分析の出力．  任意の場所からの因子負荷行列でもよい．
通常は指定しないが（FA, pc, または ICLUST の解の中にある），入力が負荷行列の場合は指定してもよい．
因子拡張分析の結果（もしあれば）
 存在する場合，グラフのドット表現がここに格納される (fa.graph)
 変数ラベル
 abs(loading) > cut の負荷量が表示されます。
abs(loading) > e.cutの拡張負荷量が表示されます。
項目ごとの最大の荷重のみが表示される
拡張項目ごとの最大の負荷のみが表示される
因子行列は、g（第1）因子を反映しているか？  もしそうなら，これを変数の左に，残りの因子を変数の右に描画する．  この場合、単純パラメータをオフにすると便利です。
クラスター分析の結果を描画する場合、潜在変数モデル(ic=FALSE)として扱うか、観測変数モデル(ic=TRUE)として扱うか。
het.diagram関数の相関行列
各レベルの要素のリスト
het.diagramで）矢印の頭を2重にするかどうか
グラフ・サイズ
ダイアグラムを表示する前に因子負荷量を並べ替える
誤差推定値を（矢印として）含める
楕円のサイズ
長方形のサイズ
誤差の矢印はどちら側に置くべきか？
フォントサイズの変更
矢印のフォントサイズを変更、デフォルトはcex
ラベルの矢印の隙間。  cexまたはl.cexのばらつきを補正するように調整できる。
余白を通常より広く設定します。
数値ラベルにいくつの異なる位置(1-3)を使うか。互いに重なっている場合に便利。
fa.graphのノードにどのフォントを使うか。
fa.graphの辺に使用するフォントを指定します。
 Rgraphvizに渡すパラメータ-グラフの描画方法
 エッジとして表示する桁数
 グラフのタイトル、デフォルトは "因子分析 "または "因子分析と拡張"
出力にRgraphvizを使うべきか？
 その他のパラメータ
元の変数と拡張変数の相関
元の変数に適用された fa または omega 関数の出力。
correct=TRUEはDwyerの解を、correct=FALSEはGorsuchの解を出力します。
fa.extendによって分析されるすべての変数の相関行列またはデータ行列。
因数分解する元の変数
拡張変数
 抽出する因子の数，デフォルトは 1
相関行列を使用する場合は，相関行列を求めるために使用されるオブザベーションの数．  適合度統計量を求めるために使用される。相関行列を使用し、信頼区間を求める場合は指定しなければならない。
オブザベーションのペア数．  fm="minchi" を使う場合は必須で、その他の場合は経験的適合度を推定するために推奨される。
"none", "varimax", "quartimax", "bentlerT", "geominT" および "bifactor" は，直交回転である．  "promax"、"oblimin"、"simplimax"、"bentlerQ"、"geominQ"、"biquartimin "および "cluster "は、解の可能な回転または変換である。  デフォルトではoblimin変換が行われるが、2009年以前のバージョンではvarimax変換がデフォルトであった。
2乗多重相関(SMC=TRUE)を使用するか、最初の共同体推定値として1を使用します。虚数の固有値が報告された場合は、1を使用してみてください。SMCが変数数の長さのベクトルである場合、これらの値はfm='pa'の場合の開始値として使用されます。
warnings=TRUE => 因子の数が多すぎる場合は警告する。
fm="minres" は最小残差(OLS)、 fm="wls" は重み付き最小2乗法(WLS)、 fm="gls" は一般化重み付き最小2乗法(GLS)、 fm="pa" は主因子解、 fm="ml" は最尤因子分析を行います。
RMSEAの信頼区間のアルファ・レベル
ωタイプの拡張分析を行う
faに相関の種類を渡す（デフォルトはPearson、混合も可能）
欠損データの扱い方に関するcor関数のオプション。
mixed、tet、polycorに渡す補正（デフォルトは0.5）
変数の重み付けを行うか？
追加パラメータ、具体的には、ターゲット回転を使用する場合はkey、geominQを使用する場合はdelta、Varimaxを使用する場合は正規化するかどうか。
元の変数と拡張変数の相関。
元の変数に適用された fa または omega 関数の出力。
correct=TRUE は Dwyer の解を、 correct=FALSE は Gorsuch の解を出力します。
fa.extendによって分析されるすべての変数の相関行列またはデータ行列。
因数分解する元の変数
拡張変数
 抽出する因子の数，デフォルトは 1
相関行列を使用する場合は，相関行列を求めるために使用されるオブザベーションの数．  適合度統計量を求めるために使用される。相関行列を使用し、信頼区間を求める場合は指定しなければならない。
オブザベーションのペア数．  fm="minchi" を使う場合は必須で、その他の場合は経験的適合度を推定するために推奨される。
"none", "varimax", "quartimax", "bentlerT", "geominT" および "bifactor" は，直交回転である．  "promax"、"oblimin"、"simplimax"、"bentlerQ"、"geominQ"、"biquartimin "および "cluster "は、解の可能な回転または変換である。  デフォルトではoblimin変換が行われるが、2009年以前のバージョンではvarimax変換がデフォルトであった。
2乗多重相関(SMC=TRUE)を使用するか、最初の共同体推定値として1を使用します。虚数の固有値が報告された場合は、1を使用してみてください。SMCが変数数の長さのベクトルである場合、これらの値はfm='pa'の場合の開始値として使用されます。
warnings=TRUE => 因子の数が多すぎる場合は警告する。
fm="minres" は最小残差(OLS)、 fm="wls" は重み付き最小2乗法(WLS)、 fm="gls" は一般化重み付き最小2乗法(GLS)、 fm="pa" は主因子解、 fm="ml" は最尤因子分析を行います。
RMSEAの信頼区間のアルファ・レベル
ωタイプの拡張分析を行う
faに相関の種類を渡す（デフォルトはPearson、混合も可能）
欠損データの扱い方に関するcor関数のオプション。
mixed、tet、polycorに渡す補正（デフォルトは0.5）
変数の重み付けを行うか？
追加パラメータ，具体的には，ターゲット回転を使用する場合はkeyを，geominQを使用する場合はdeltaを，Varimaxを使用する場合は正規化するかどうかを渡す．
因子分析，主成分分析，ICLUST 分析の出力．  また，任意の場所からの因子負荷行列であってもよい．
通常は指定されないが（FA, pc, または ICLUST の解の中にある），入力が負荷行列の場合は指定される．
因子拡張分析の結果（もしあれば）
 存在する場合，グラフのドット表現がここに格納される (fa.graph)
 変数ラベル
 abs(loading) > cut の負荷量が表示されます。
abs(loading) > e.cutの拡張負荷量が表示されます。
項目ごとの最大の荷重のみが表示される
拡張項目ごとの最大の負荷のみが表示される
因子行列は、g（第1）因子を反映しているか？  もしそうなら，これを変数の左に，残りの因子を変数の右に描画する．  この場合、単純パラメータをオフにすると便利です。
クラスター分析の結果を描画する場合、潜在変数モデル(ic=FALSE)として扱うか、観測変数モデル(ic=TRUE)として扱うか。
het.diagram関数の相関行列
各レベルの要素のリスト
het.diagramで）矢印の頭を2重にするかどうか
グラフ・サイズ
ダイアグラムを表示する前に因子負荷量を並べ替える
誤差推定値を（矢印として）含める
楕円のサイズ
長方形のサイズ
誤差の矢印はどちら側に置くべきか？
フォントサイズの変更
矢印のフォントサイズを変更、デフォルトはcex
ラベルの矢印の隙間。  cexまたはl.cexのばらつきを補正するように調整できる。
余白を通常より広く設定します。
数値ラベルにいくつの異なる位置(1-3)を使用するか。互いに重なっている場合に便利。
fa.graphのノードにどのフォントを使うか。
fa.graphの辺に使用するフォントを指定します。
 Rgraphvizに渡すパラメータ-グラフの描画方法
 エッジとして表示する桁数
 グラフのタイトル、デフォルトは "因子分析 "または "因子分析と拡張"
出力にRgraphvizを使うべきか？
 その他のパラメータ
データマトリックスまたはデータフレーム。
データマトリックス、データフレーム、またはベクトル
bestScalesとbestItemsの経験的ターゲットとなる変数（名前または場所）。  別のオブジェクトでもよい。
因子分析（fa）または主成分分析（principal）から返されるオブジェクト。
辞書から検索する単語。
make.keysで使用するのに適した得点キーのリスト
abs(x[,c1]) > cutのすべての値を返す。
因子ごとにベストなn個の項目を返す（その因子に対する負荷が最も高い限り）。
提供された場合（例えばscoreItemsから）、lookupFromKeysの出力に追加される
f$loadings 行列の rownames またはデータ行列または相関行列の colnames に対応する rownames と，項目内容のエントリ（複数列でもよい）を持つ data.frame．
検索する辞書の列名、デフォルトは "Item "または "Content"（辞書はこの列に対して異なるラベルを持つ）、search で指定された任意の列を検索できる。
項目のデータ・フレームとは
桁に丸める
因子は最初にソートされるべきか？
lookupFromKeysで、列ラベルを抑制すべきか？
確率 < p の setCor 回帰を表示する
相関行列または生データ行列
下位レベルの因子数
上位レベルの要因の希望数
相関行列を使用する場合，相関行列を見つけるために使用されるオブザベーションの数．  適合度統計量を求めるために使用される。相関行列を使用し、信頼区間を求める場合は、指定しなければならない。
オブザベーションのペア数．相関行列を使用し、最小解を求める場合に使用される。
"none", "varimax", "quartimax", "bentlerT", "equamax", "varimin", "geominT" および "bifactor" は，直交回転である．  promax", "oblimin", "simplimax", "bentlerQ", "geominQ", "biquartimin", "cluster "は，解の斜め変換である．  デフォルトでは，oblimin 変換が行われるが，2009年以前のバージョンでは，varimax 変換がデフォルトであった．
faまたはfa.polyで行うブートストラップ交互作用の数
残差行列を表示するか
default="regression" は，回帰を用いて因子スコアを求める．  因子スコアの推定には，単回帰（"Thurstone"），相関保存（"tenBerge"），適切なアルゴリズムを用いた "Anderson "や "Bartlett "などがある（factor.scores参照）．scores="tenBerge "は、おそらくほとんどの解法に適していますが、いくつかの不適切な相関行列の問題を引き起こします。  
2乗多重相関(SMC=TRUE)を使用するか、最初の共同性推定値として1を使用します。虚数の固有値が報告された場合は、1を使用してみてください。SMCが変数数の長さのベクトルである場合，fm='pa'の場合，これらの値が開始値として使用される．
covar が TRUE の場合，共分散行列を因子分解し，そうでなければ相関行列を因子分解する．
もし score が TRUE で、かつ missing=TRUE ならば、中央値か平均値を用いて欠損値を代入する。
「中央値 "または "平均値 "が欠損値の置き換えに使用される。
共同体性の変化がmin.errより小さくなるまで繰り返す
収束のための最大反復回数
symmetric=TRUE => 対角の下側の値だけを見て対称性を強制する。
warnings=TRUE => 因子の数が多すぎる場合に警告を出す。
fm="minres "は最小残差（OLS）、fm="wls "は重み付き最小2乗法（WLS）、fm="gls "は一般化重み付き最小2乗法（GLS）、fm="pa "は主因子解、fm="ml "は最尤因子分析。
RMSEAの信頼区間のアルファ・レベル
信頼区間を求めるために反復を行う場合、信頼区間はどのような確率値で求められるべきか
因子スコアが求められるとき，構造行列（デフォルト）とパターン行列（oblique.scores=TRUE）のどちらに基づくか．  
欠損データをどのように扱うか、 use="pairwise" がデフォルト。  その他のオプションはcorを参照。
相関の求め方："cor "はPearson"、"cov "は共分散、"tet "はテトラコリック、"poly "はポリコリック、"mixed "はテトラコリック、ポリコリック、Pearsons、バイセリアル、ポリセリアルの混合に対してmixed corを使用。
fa.multiの結果
 変数ラベル
因子のラベル（gを除く）
グラフィックウィンドウのサイズ
 ラベルの精度
フォントサイズのコントロール
正の場合は黒、負の場合は赤を使用
図の余白は，デフォルトで通常より広く設定されている
因子負荷量の位置が、因子 mod 4 + 1として変化するように調整する。
 メイン図のキャプション
追加パラメータ，具体的には，ターゲット回転を使用する場合はkeyを，geominQを使用する場合はdeltaを，Varimaxを使用する場合は正規化するかどうかを渡すことができる．  さらに、fa.multi.diagramでは、グラフィックスパッケージに渡すその他のオプションがあります。
要因の楕円を描くサイズ。これは変数の数でスケーリングされます。
描画する最小経路係数
描画する因子パスの最小値
1つの項目につき1つのパスだけを描く
図を描く前に解を並べ替える
誤差はどちら側に描くべきか？
推定誤差を示す
長方形の大きさ
相関行列または生データ行列
下位レベルの望ましい因子数
より高いレベルの因子の望ましい数
相関行列を使用する場合，相関行列を見つけるために使用されるオブザベーションの数．  適合度統計量を求めるために使用される。相関行列を使用し、信頼区間を求める場合は、指定しなければならない。
オブザベーションのペア数．相関行列を使用し、最小解を求める場合に使用される。
"none", "varimax", "quartimax", "bentlerT", "equamax", "varimin", "geominT" および "bifactor" は，直交回転である．  promax", "oblimin", "simplimax", "bentlerQ", "geominQ", "biquartimin", "cluster "は，解の斜め変換である．  デフォルトでは，oblimin 変換が行われるが，2009年以前のバージョンでは，varimax 変換がデフォルトであった．
faまたはfa.polyで行うブートストラップ交互作用の数
残差行列を表示するか
default="regression" は，回帰を用いて因子スコアを求める．  因子スコアの推定には，単回帰（"Thurstone"），相関保存（"tenBerge"），適切なアルゴリズムを用いた "Anderson "や "Bartlett "などがある（factor.scores参照）．scores="tenBerge "は、おそらくほとんどの解法に適していますが、いくつかの不適切な相関行列の問題を引き起こします。  
2乗多重相関(SMC=TRUE)を使用するか、最初の共同性推定値として1を使用します。虚数の固有値が報告された場合は、1を使用してみてください。SMCが変数数の長さのベクトルである場合，fm='pa'の場合，これらの値が開始値として使用される．
covar が TRUE の場合，共分散行列を因子分解し，そうでなければ相関行列を因子分解する．
もし score が TRUE で、かつ missing=TRUE ならば、中央値か平均値を用いて欠損値を代入する。
「中央値 "または "平均値 "が欠損値の置き換えに使用される。
共同体性の変化がmin.errより小さくなるまで繰り返す
収束のための最大反復回数
symmetric=TRUE => 対角の下側の値だけを見て対称性を強制する。
warnings=TRUE => 因子の数が多すぎる場合に警告を出す。
fm="minres "は最小残差（OLS）、fm="wls "は重み付き最小2乗法（WLS）、fm="gls "は一般化重み付き最小2乗法（GLS）、fm="pa "は主因子解、fm="ml "は最尤因子分析。
RMSEAの信頼区間のアルファ・レベル
信頼区間を求めるために反復を行う場合、信頼区間はどのような確率値で求められるべきか
因子スコアが求められるとき，構造行列（デフォルト）とパターン行列（oblique.scores=TRUE）のどちらに基づくか．  
欠損データをどのように扱うか、 use="pairwise" がデフォルト。  その他のオプションはcorを参照。
相関の求め方："cor "はPearson"、"cov "は共分散、"tet "はテトラコリック、"poly "はポリコリック、"mixed "はテトラコリック、ポリコリック、Pearsons、バイセリアル、ポリセリアルの混合に対してmixed corを使用。
fa.multiの結果
 変数ラベル
因子のラベル（gを除く）
グラフィックウィンドウのサイズ
 ラベルの精度
フォントサイズのコントロール
正の場合は黒、負の場合は赤を使用
図の余白は，デフォルトで通常より広く設定されている
因子負荷量の位置が、因子 mod 4 + 1として変化するように調整する。
 メイン図のキャプション
追加パラメータ，具体的には，ターゲット回転を使用する場合はkeyを，geominQを使用する場合はdeltaを，Varimaxを使用する場合は正規化するかどうかを渡すことができる．  さらに、fa.multi.diagramでは、グラフィックスパッケージに渡すその他のオプションがあります。
要因の楕円を描くサイズ。これは変数の数でスケーリングされます。
描画する最小経路係数
描画する一般的な因子パスの最小値
1つの項目につき1つのパスだけを描く
図を描く前に解を並べ替える
誤差はどちら側に描くべきか？
推定誤差を示す
長方形のサイズ
faまたはprincipalを用いた因子分析または主成分分析の出力。  単なる負荷量の行列でもよい．
最初の2つの因子の極座標でソート (FALSE)
因子を並べる順序
項目の順序
新しい因子名
因子がエシュロン形式（変数1 ... n が因子1、n+1 ... n=k が因子2、など）になるように整理する。
colMean が正になるように，因子負荷量を反転させる．
 スコアの data.frame またはデータ行列．  行列が正方形の場合，相関行列であると仮定される．  そうでない場合は、相関（対削除あり）が見つかる。
n.obs=0はデータ行列/data.frameを意味する。  そうでない場合は，相関を見つけるためにいくつのケースが使用されたかを示す．
どの因子法を使用するか。(minres、ml、uls、wls、gls、pa) 詳細はfaを参照。
主成分(fa="pc")、主軸因子分析(fa="fa")、主成分と主因子の両方(fa="both")の固有値を表示する。
固有値を推定する際に抽出する因子の数。デフォルトは 1 で、これは以前使用されていた値です。
 分析のタイトル
実行するシミュレーション分析の数
欠損データの扱い方， use="pairwise" がデフォルト．  他のオプションはcorを参照。
相関の求め方："cor "はPearson"、"cov "は共分散、"tet "はテトラコリック、"poly "はポリコリック、"mixed "はテトラコリック、ポリコリック、Pearsons、バイセリアル、ポリセリアルの混合でmixed corを使用、YulebはYulebonett、YuleqとYuleYは適切な明らかなYule係数。  これは
テトラコリック相関の場合、連続性の補正を適用すべきか。(tetrachoricを参照) 0に設定された場合、補正は適用されず、そうでない場合、デフォルトはセルに0.5のオブザベーションを追加する。
連続データの場合、デフォルトは再標本化とランダムな正規データの生成である。  sim=FALSEの場合は、再標本化された結果だけを表示します。この2つの結果は非常に似ています。相関行列の場合、リサンプリングは不可能です。多項式または四項式データの場合、実データのランダム化に加えて、ランダムなシミュレートデータと解を比較する必要があります。  これは処理時間を2倍にしますが、基本的には同じ結果を示します。
エラー・バーをプロットするか (default = FALSE)
エラーバーを標準誤差（se.bars=TRUE）にするか、1標準偏差（se.bars=FALSE、デフォルト）にするか。  多くの反復では、標準誤差は非常に小さく、より広い範囲を見ることを好む人もいます。  1.7.8では、デフォルトがse.bars=FALSEに変更され、より適切に範囲が表示されるようになりました。
SMC=TRUE は，SMCを用いて共分散度を推定した後に固有値を求めます． smc=FALSE は，第1因子で共分散度を推定した後に固有値を求めます．
y 軸のラベル - デフォルトは "因子と成分の固有値" で，多くのグラフを表示するために空にすることができる．
デフォルトは凡例。  複数のパネルのグラフでは、凡例を表示しない方がよい。
何も指定されない場合、経験的固有値は、再標本化またはシミュレートされた固有値の平均と比較されます。  値（例えば、quant=.95）が指定された場合、固有値はシミュレーション・データの一致する分位値と比較されます。  quantの値が大きいほど、識別される因子/成分が少なくなることは明らかです。
多項式分析(fa.parallel.poly)を行い、選択肢の数が項目間で異なる場合、グローバルオプションの
plot.poly.parallel の追加プロットパラメータ
デフォルトでは、fa.parallelは固有値プロットを描画します。  FALSEの場合、グラフィック出力を抑制します。
 得点のdata.frameまたはデータ行列。  行列が正方形の場合、相関行列とみなされる。  そうでない場合は、相関（ペアごとの削除あり）が検出されます。
n.obs=0はデータ行列/data.frameを意味する。  そうでない場合は，相関を見つけるためにいくつのケースが使用されたかを示す．
どの因子法を使用するか。(minres、ml、uls、wls、gls、pa) 詳細はfaを参照。
主成分(fa="pc")、主軸因子分析(fa="fa")、主成分と主因子の両方(fa="both")の固有値を表示する。
固有値を推定する際に抽出する因子の数。デフォルトは 1 で、これは以前使用されていた値です。
 分析のタイトル
実行するシミュレーション分析の数
欠損データの扱い方， use="pairwise" がデフォルト．  他のオプションはcorを参照。
相関の求め方："cor "はPearson"、"cov "は共分散、"tet "はテトラコリック、"poly "はポリコリック、"mixed "はテトラコリック、ポリコリック、Pearsons、バイセリアル、ポリセリアルの混合に対してmixed corを使用、YulebはYulebonett、YuleqとYuleYは適切な明らかなYule係数。  これは
テトラコリック相関の場合、連続性の補正を適用すべきか。(tetrachoricを参照) 0に設定された場合、補正は適用されず、そうでない場合、デフォルトはセルに0.5のオブザベーションを追加する。
連続データの場合、デフォルトは再標本化とランダムな正規データの生成である。  sim=FALSE の場合は、再標本化された結果だけを表示します。この2つの結果は非常に似ています。相関行列の場合、リサンプリングは不可能です。多項式または四項式データの場合、実データのランダム化に加えて、ランダムなシミュレートデータと解を比較する必要があります。  これは処理時間を2倍にしますが、基本的には同じ結果を示します。
エラー・バーをプロットするか (default = FALSE)
エラーバーを標準誤差（se.bars=TRUE）にするか、1標準偏差（se.bars=FALSE、デフォルト）にするか。  多くの反復では、標準誤差は非常に小さく、より広い範囲を見ることを好む人もいます。  1.7.8では、デフォルトがse.bars=FALSEに変更され、より適切に範囲が表示されるようになりました。
SMC=TRUE は，SMCを用いて共分散度を推定した後に固有値を求めます． smc=FALSE は，第1因子で共分散度を推定した後に固有値を求めます．
y 軸のラベル - デフォルトは "因子と成分の固有値" で，多くのグラフを表示するために空にすることができる．
デフォルトは凡例。  複数のパネルのグラフでは、凡例を表示しない方がよい。
何も指定されない場合、経験的固有値は、再標本化またはシミュレートされた固有値の平均と比較されます。  値（例えば、quant=.95）が指定された場合、固有値はシミュレーション・データの一致する分位値と比較されます。  quantの値が大きいほど、識別される因子/成分が少なくなることは明らかです。
多項式分析(fa.parallel.poly)を行い、選択肢の数が項目間で異なる場合、グローバルオプションの
plot.poly.parallelの追加プロットパラメータ
デフォルトでは、fa.parallelは固有値プロットを描画します。  FALSEの場合、グラフィック出力を抑制します。
負荷量を含む因子分析またはクラスター分析の出力、または項目とクラスターの相関の行列。またはkmeansクラスタ分析の出力。
 クラスタ・メンバーシップのベクトル
 絶対負荷量が > cut の場合、項目をクラスタに割り当てます。
row.namesが存在する場合はプロットに追加され、存在しない場合はラベルを指定できます。  labels =NULL で行名がない場合、変数は行番号でラベル付けされる)。
 任意のタイトル
ほとんど同じ因子負荷量をプロットする場合，ポイントをジッタリングして "ジグル "させると便利なことがある．デフォルトは、ジグルしない。
jiggle=TRUE の場合、ポイントはどれくらいジッタリングされるべきか？
因子とクラスターは、pch+1から始まる異なるpch値で表示されます。
2次元プロットのラベルのテキストの位置。1=下, 2=左, 3=上, 4=右
点にラベルを追加する場合，点だけでなくラベルも表示すべきか．  多くの点の場合は、点を表示せず、ラベルだけを表示する方がよい。
プロットする因子/クラスターを指定する
任意のタイトル - タイトルと冗長
