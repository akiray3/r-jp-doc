x
numeric or complex vectors or objects which can becoerced to such, or other objects for which methods have been written.
date objects
date objects or character vectors.  (Charactervectors are converted by <code>as.Date</code>.)
a numeric vector (in days) <em>or</em> an object of class<code>"difftime"</code>, rounded to the nearest whole day.
One of <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>or <code>&gt;=</code>.
an object to be printed or summarized from one of thedate-time classes.
for timezone formatting, passed to <code>format.POSIXct</code>.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
number of significant digits for the computations:should be high enough to represent the least important time unitexactly.
further arguments to be passed from or to other methods.
date-time objects
date-time objects or character vectors.  (Charactervectors are converted by <code>as.POSIXct</code>.)
a numeric vector (in seconds)
one of <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>or <code>&gt;=</code>.
starting value of sequence.
(maximal) end value of the sequence.
<code>factor</code>s of the same length.
package name: symbol or literal character string.
variable name: symbol or literal character string.
package name: symbol or literal character string.
variable name: symbol or literal character string.
<code>raw</code>, <code>logical</code> or ‘number-like’ vectors (i.e., oftypes <code>double</code> (class <code>numeric</code>),<code>integer</code> and <code>complex</code>), or objects forwhich methods have been written.
An object, for the methods inheriting from class <code>"hexmode"</code>.
<code>NULL</code> or a positive integer specifying the minimumfield width to be used, with padding by leading zeroes.
a logical indicating whether to use upper-caseletters or lower-case letters (default).
further arguments passed to or from other methods.
An object, for the methods inheriting from class <code>"octmode"</code>.
<code>NULL</code> or a positive integer specifying the minimumfield width to be used, with padding by leading zeroes.
further arguments passed to or from other methods.
atomic vectors, symbols, calls, or other objects for whichmethods have been written.
object from which to extract element(s) or in which to replace element(s).
indices specifying elements to extract or replace.  Indices are<code>numeric</code> or <code>character</code> vectors or empty (missing) or<code>NULL</code>.  Numeric values are coerced to integer as by<code>as.integer</code> (and hence truncated towards zero).Character vectors will be matched to the <code>names</code> of theobject (or for matrices/arrays, the <code>dimnames</code>):see ‘Character indices’ below for further details.

For <code>[</code>-indexing only: <code>i</code>, <code>j</code>, <code>...</code> can belogical vectors, indicating elements/slices to select.  Such vectorsare recycled if necessary to match the corresponding extent.<code>i</code>, <code>j</code>, <code>...</code> can also be negative integers,indicating elements/slices to leave out of the selection.

When indexing arrays by <code>[</code> a single argument <code>i</code> can be amatrix with as many columns as there are dimensions of <code>x</code>; theresult is then a vector with elements corresponding to the sets ofindices in each row of <code>i</code>.

An index value of <code>NULL</code> is treated as if it were <code>integer(0)</code>.
A literal character string or a name (possibly backtickquoted).  For extraction, this is normally (see under‘Environments’) partially matched to the <code>names</code>of the object.
For matrices and arrays.  If <code>TRUE</code> the result iscoerced to the lowest possible dimension (see the examples).  Thisonly works for extracting elements, not for the replacement.  See<code>drop</code> for further details.
Controls possible partial matching of <code>[[</code> whenextracting by a character vector (for most objects, but see under‘Environments’).  The default is no partial matching.  Value<code>NA</code> allows partial matching but issues a warning when itoccurs.  Value <code>FALSE</code> allows partial matching without anywarning.
typically an array-like <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object of a similar class as<code>x</code>.
an object
data frame.
elements to extract or replace.  For <code>[</code> and<code>[[</code>, these are <code>numeric</code> or <code>character</code> or, for<code>[</code> only, empty or <code>logical</code>.  Numeric values are coerced to integer as ifby <code>as.integer</code>.  For replacement by <code>[</code>, a logicalmatrix is allowed.
A literal character string or a name (possibly backtickquoted).
logical.  If <code>TRUE</code> the result is coerced to thelowest possible dimension.  The default is to drop if only onecolumn is left, but <b>not</b> to drop if only one row is left.
A suitable replacement value: it will be repeated a wholenumber of times if necessary and it may be coerced: see theCoercion section.  If <code>NULL</code>, deletes the column if a singlecolumn is selected.
logical: see <code>[</code>, and applies to column names.
a <code>Date</code> object to be summarized or printed.
number of significant digits for the computations.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
further arguments to be passed from or to other methods.
date-time or date objects.
an optional time zone specification to be used for theconversion, mainly for <code>"POSIXlt"</code> objects.
character string.  Units in which the results aredesired.  Can be abbreviated.
character string.  Like <code>units</code>, except thatabbreviations are not allowed.
character string or numeric value specifying a time interval.
character specifying the format of <code>tim</code>: see<code>strptime</code>.  The default is a locale-specific time format.
an object inheriting from class <code>"difftime"</code>.
arguments to be passed to or from other methods.
object from which to extract element(s) or in which to replace element(s).
indices specifying elements to extract or replace.  Indices are<code>numeric</code> or <code>character</code> vectors or empty (missing) or<code>NULL</code>.  Numeric values are coerced to integer as by<code>as.integer</code> (and hence truncated towards zero).Character vectors will be matched to the <code>names</code> of theobject (or for matrices/arrays, the <code>dimnames</code>):see ‘Character indices’ below for further details.

For <code>[</code>-indexing only: <code>i</code>, <code>j</code>, <code>...</code> can belogical vectors, indicating elements/slices to select.  Such vectorsare recycled if necessary to match the corresponding extent.<code>i</code>, <code>j</code>, <code>...</code> can also be negative integers,indicating elements/slices to leave out of the selection.

When indexing arrays by <code>[</code> a single argument <code>i</code> can be amatrix with as many columns as there are dimensions of <code>x</code>; theresult is then a vector with elements corresponding to the sets ofindices in each row of <code>i</code>.

An index value of <code>NULL</code> is treated as if it were <code>integer(0)</code>.
A literal character string or a name (possibly backtickquoted).  For extraction, this is normally (see under‘Environments’) partially matched to the <code>names</code>of the object.
For matrices and arrays.  If <code>TRUE</code> the result iscoerced to the lowest possible dimension (see the examples).  Thisonly works for extracting elements, not for the replacement.  See<code>drop</code> for further details.
Controls possible partial matching of <code>[[</code> whenextracting by a character vector (for most objects, but see under‘Environments’).  The default is no partial matching.  Value<code>NA</code> allows partial matching but issues a warning when itoccurs.  Value <code>FALSE</code> allows partial matching without anywarning.
typically an array-like <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object of a similar class as<code>x</code>.
a factor
a specification of indices – see <code>Extract</code>.
logical.  If true, unused levels are dropped.
character: a set of levels.  Factor values are coerced tocharacter.
An object, for the methods inheriting from class <code>"hexmode"</code>.
<code>NULL</code> or a positive integer specifying the minimumfield width to be used, with padding by leading zeroes.
a logical indicating whether to use upper-caseletters or lower-case letters (default).
further arguments passed to or from other methods.
object from which to extract element(s) or in which to replace element(s).
indices specifying elements to extract or replace.  Indices are<code>numeric</code> or <code>character</code> vectors or empty (missing) or<code>NULL</code>.  Numeric values are coerced to integer as by<code>as.integer</code> (and hence truncated towards zero).Character vectors will be matched to the <code>names</code> of theobject (or for matrices/arrays, the <code>dimnames</code>):see ‘Character indices’ below for further details.

For <code>[</code>-indexing only: <code>i</code>, <code>j</code>, <code>...</code> can belogical vectors, indicating elements/slices to select.  Such vectorsare recycled if necessary to match the corresponding extent.<code>i</code>, <code>j</code>, <code>...</code> can also be negative integers,indicating elements/slices to leave out of the selection.

When indexing arrays by <code>[</code> a single argument <code>i</code> can be amatrix with as many columns as there are dimensions of <code>x</code>; theresult is then a vector with elements corresponding to the sets ofindices in each row of <code>i</code>.

An index value of <code>NULL</code> is treated as if it were <code>integer(0)</code>.
A literal character string or a name (possibly backtickquoted).  For extraction, this is normally (see under‘Environments’) partially matched to the <code>names</code>of the object.
For matrices and arrays.  If <code>TRUE</code> the result iscoerced to the lowest possible dimension (see the examples).  Thisonly works for extracting elements, not for the replacement.  See<code>drop</code> for further details.
Controls possible partial matching of <code>[[</code> whenextracting by a character vector (for most objects, but see under‘Environments’).  The default is no partial matching.  Value<code>NA</code> allows partial matching but issues a warning when itoccurs.  Value <code>FALSE</code> allows partial matching without anywarning.
typically an array-like <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object of a similar class as<code>x</code>.
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, typically a vector of<code>character</code> strings.
optional <code>logical</code> eventually to be passed to<code>print()</code>, used by <code>print.default()</code>, indicatingwhether or not strings should be right aligned.
an object of class <code>"noquote"</code>.
further options passed to next methods, such as <code>print</code>.
for compatibility with the generic <code>c</code> function.
a character vector with suitable numeric version strings (see‘Details’); for <code>package_version</code>, alternatively an Rversion object as obtained by <code>R.version</code>.
a logical indicating whether invalid numeric versionsshould results in an error (default) or not.
An object, for the methods inheriting from class <code>"octmode"</code>.
<code>NULL</code> or a positive integer specifying the minimumfield width to be used, with padding by leading zeroes.
further arguments passed to or from other methods.
an object to be printed or summarized from one of thedate-time classes.
for timezone formatting, passed to <code>format.POSIXct</code>.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
number of significant digits for the computations:should be high enough to represent the least important time unitexactly.
further arguments to be passed from or to other methods.
date-time objects
date-time objects or character vectors.  (Charactervectors are converted by <code>as.POSIXct</code>.)
a numeric vector (in seconds)
one of <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>or <code>&gt;=</code>.
an object to be printed or summarized from one of thedate-time classes.
for timezone formatting, passed to <code>format.POSIXct</code>.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
number of significant digits for the computations:should be high enough to represent the least important time unitexactly.
further arguments to be passed from or to other methods.
date-time objects
date-time objects or character vectors.  (Charactervectors are converted by <code>as.POSIXct</code>.)
a numeric vector (in seconds)
one of <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>or <code>&gt;=</code>.
object from which to extract element(s) or in which to replace element(s).
indices specifying elements to extract or replace.  Indices are<code>numeric</code> or <code>character</code> vectors or empty (missing) or<code>NULL</code>.  Numeric values are coerced to integer as by<code>as.integer</code> (and hence truncated towards zero).Character vectors will be matched to the <code>names</code> of theobject (or for matrices/arrays, the <code>dimnames</code>):see ‘Character indices’ below for further details.

For <code>[</code>-indexing only: <code>i</code>, <code>j</code>, <code>...</code> can belogical vectors, indicating elements/slices to select.  Such vectorsare recycled if necessary to match the corresponding extent.<code>i</code>, <code>j</code>, <code>...</code> can also be negative integers,indicating elements/slices to leave out of the selection.

When indexing arrays by <code>[</code> a single argument <code>i</code> can be amatrix with as many columns as there are dimensions of <code>x</code>; theresult is then a vector with elements corresponding to the sets ofindices in each row of <code>i</code>.

An index value of <code>NULL</code> is treated as if it were <code>integer(0)</code>.
A literal character string or a name (possibly backtickquoted).  For extraction, this is normally (see under‘Environments’) partially matched to the <code>names</code>of the object.
For matrices and arrays.  If <code>TRUE</code> the result iscoerced to the lowest possible dimension (see the examples).  Thisonly works for extracting elements, not for the replacement.  See<code>drop</code> for further details.
Controls possible partial matching of <code>[[</code> whenextracting by a character vector (for most objects, but see under‘Environments’).  The default is no partial matching.  Value<code>NA</code> allows partial matching but issues a warning when itoccurs.  Value <code>FALSE</code> allows partial matching without anywarning.
typically an array-like <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object of a similar class as<code>x</code>.
one or more objects which can be interpreted as factors(including character strings), or a list (or data frame) whosecomponents can be so interpreted.  (For <code>as.table</code>, argumentspassed to specific methods; for <code>as.data.frame</code>, unused.)
levels to remove for all factors in <code>...</code>.  Ifit does not contain <code>NA</code> and <code>useNA</code> is notspecified, it implies <code>useNA = "ifany"</code>.  See‘Details’ for its interpretation for non-factor arguments.
whether to include <code>NA</code> values in the table.See ‘Details’.  Can be abbreviated.
the names to be given to the dimensions in the result (the<em>dimnames names</em>).
controls how the default <code>dnn</code> isconstructed.  See ‘Details’.
an arbitrary <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, or an object inheriting from class<code>"table"</code> for the <code>as.data.frame</code> method. Note that<code>as.data.frame.table(x, *)</code> may be called explicitly fornon-table <code>x</code> for “reshaping” <code>array</code>s.
a character vector giving the row names for the dataframe.
The name to be used for the column of tableentries, usually counts.
logical: should the classifying factors bereturned as factors (the default) or character vectors?
passed to <code>provideDimnames</code>.
arguments to be passed to <code>cat</code> (for<code>warnings()</code>).
a <code>"warnings"</code> object as returned by<code>warnings()</code>.
a <code>"warnings"</code> or <code>"summary.warnings"</code> object.
if not <code>missing</code>, a <code>character</code>vector of the same <code>length</code> as <code>x</code>, to “label”the messages.  Defaults to <code>paste0(seq_len(n), ": ")</code> for<i>n &gt;= 2</i> where <code>n &lt;- length(x)</code>.
a character string <code>cat()</code>ed before themessages are printed.
object from which to extract element(s) or in which to replace element(s).
indices specifying elements to extract or replace.  Indices are<code>numeric</code> or <code>character</code> vectors or empty (missing) or<code>NULL</code>.  Numeric values are coerced to integer as by<code>as.integer</code> (and hence truncated towards zero).Character vectors will be matched to the <code>names</code> of theobject (or for matrices/arrays, the <code>dimnames</code>):see ‘Character indices’ below for further details.

For <code>[</code>-indexing only: <code>i</code>, <code>j</code>, <code>...</code> can belogical vectors, indicating elements/slices to select.  Such vectorsare recycled if necessary to match the corresponding extent.<code>i</code>, <code>j</code>, <code>...</code> can also be negative integers,indicating elements/slices to leave out of the selection.

When indexing arrays by <code>[</code> a single argument <code>i</code> can be amatrix with as many columns as there are dimensions of <code>x</code>; theresult is then a vector with elements corresponding to the sets ofindices in each row of <code>i</code>.

An index value of <code>NULL</code> is treated as if it were <code>integer(0)</code>.
A literal character string or a name (possibly backtickquoted).  For extraction, this is normally (see under‘Environments’) partially matched to the <code>names</code>of the object.
For matrices and arrays.  If <code>TRUE</code> the result iscoerced to the lowest possible dimension (see the examples).  Thisonly works for extracting elements, not for the replacement.  See<code>drop</code> for further details.
Controls possible partial matching of <code>[[</code> whenextracting by a character vector (for most objects, but see under‘Environments’).  The default is no partial matching.  Value<code>NA</code> allows partial matching but issues a warning when itoccurs.  Value <code>FALSE</code> allows partial matching without anywarning.
typically an array-like <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object of a similar class as<code>x</code>.
data frame.
elements to extract or replace.  For <code>[</code> and<code>[[</code>, these are <code>numeric</code> or <code>character</code> or, for<code>[</code> only, empty or <code>logical</code>.  Numeric values are coerced to integer as ifby <code>as.integer</code>.  For replacement by <code>[</code>, a logicalmatrix is allowed.
A literal character string or a name (possibly backtickquoted).
logical.  If <code>TRUE</code> the result is coerced to thelowest possible dimension.  The default is to drop if only onecolumn is left, but <b>not</b> to drop if only one row is left.
A suitable replacement value: it will be repeated a wholenumber of times if necessary and it may be coerced: see theCoercion section.  If <code>NULL</code>, deletes the column if a singlecolumn is selected.
logical: see <code>[</code>, and applies to column names.
a <code>Date</code> object to be summarized or printed.
number of significant digits for the computations.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
further arguments to be passed from or to other methods.
a factor
a specification of indices – see <code>Extract</code>.
logical.  If true, unused levels are dropped.
character: a set of levels.  Factor values are coerced tocharacter.
a character vector with suitable numeric version strings (see‘Details’); for <code>package_version</code>, alternatively an Rversion object as obtained by <code>R.version</code>.
a logical indicating whether invalid numeric versionsshould results in an error (default) or not.
an object to be printed or summarized from one of thedate-time classes.
for timezone formatting, passed to <code>format.POSIXct</code>.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
number of significant digits for the computations:should be high enough to represent the least important time unitexactly.
further arguments to be passed from or to other methods.
date-time objects
date-time objects or character vectors.  (Charactervectors are converted by <code>as.POSIXct</code>.)
a numeric vector (in seconds)
one of <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>or <code>&gt;=</code>.
an object to be printed or summarized from one of thedate-time classes.
for timezone formatting, passed to <code>format.POSIXct</code>.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
number of significant digits for the computations:should be high enough to represent the least important time unitexactly.
further arguments to be passed from or to other methods.
date-time objects
date-time objects or character vectors.  (Charactervectors are converted by <code>as.POSIXct</code>.)
a numeric vector (in seconds)
one of <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>or <code>&gt;=</code>.
object from which to extract element(s) or in which to replace element(s).
indices specifying elements to extract or replace.  Indices are<code>numeric</code> or <code>character</code> vectors or empty (missing) or<code>NULL</code>.  Numeric values are coerced to integer as by<code>as.integer</code> (and hence truncated towards zero).Character vectors will be matched to the <code>names</code> of theobject (or for matrices/arrays, the <code>dimnames</code>):see ‘Character indices’ below for further details.

For <code>[</code>-indexing only: <code>i</code>, <code>j</code>, <code>...</code> can belogical vectors, indicating elements/slices to select.  Such vectorsare recycled if necessary to match the corresponding extent.<code>i</code>, <code>j</code>, <code>...</code> can also be negative integers,indicating elements/slices to leave out of the selection.

When indexing arrays by <code>[</code> a single argument <code>i</code> can be amatrix with as many columns as there are dimensions of <code>x</code>; theresult is then a vector with elements corresponding to the sets ofindices in each row of <code>i</code>.

An index value of <code>NULL</code> is treated as if it were <code>integer(0)</code>.
A literal character string or a name (possibly backtickquoted).  For extraction, this is normally (see under‘Environments’) partially matched to the <code>names</code>of the object.
For matrices and arrays.  If <code>TRUE</code> the result iscoerced to the lowest possible dimension (see the examples).  Thisonly works for extracting elements, not for the replacement.  See<code>drop</code> for further details.
Controls possible partial matching of <code>[[</code> whenextracting by a character vector (for most objects, but see under‘Environments’).  The default is no partial matching.  Value<code>NA</code> allows partial matching but issues a warning when itoccurs.  Value <code>FALSE</code> allows partial matching without anywarning.
typically an array-like <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object of a similar class as<code>x</code>.
data frame.
elements to extract or replace.  For <code>[</code> and<code>[[</code>, these are <code>numeric</code> or <code>character</code> or, for<code>[</code> only, empty or <code>logical</code>.  Numeric values are coerced to integer as ifby <code>as.integer</code>.  For replacement by <code>[</code>, a logicalmatrix is allowed.
A literal character string or a name (possibly backtickquoted).
logical.  If <code>TRUE</code> the result is coerced to thelowest possible dimension.  The default is to drop if only onecolumn is left, but <b>not</b> to drop if only one row is left.
A suitable replacement value: it will be repeated a wholenumber of times if necessary and it may be coerced: see theCoercion section.  If <code>NULL</code>, deletes the column if a singlecolumn is selected.
logical: see <code>[</code>, and applies to column names.
a factor
a specification of indices – see <code>Extract</code>.
logical.  If true, unused levels are dropped.
character: a set of levels.  Factor values are coerced tocharacter.
a character vector with suitable numeric version strings (see‘Details’); for <code>package_version</code>, alternatively an Rversion object as obtained by <code>R.version</code>.
a logical indicating whether invalid numeric versionsshould results in an error (default) or not.
an object to be printed or summarized from one of thedate-time classes.
for timezone formatting, passed to <code>format.POSIXct</code>.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
number of significant digits for the computations:should be high enough to represent the least important time unitexactly.
further arguments to be passed from or to other methods.
date-time objects
date-time objects or character vectors.  (Charactervectors are converted by <code>as.POSIXct</code>.)
a numeric vector (in seconds)
one of <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>or <code>&gt;=</code>.
object from which to extract element(s) or in which to replace element(s).
indices specifying elements to extract or replace.  Indices are<code>numeric</code> or <code>character</code> vectors or empty (missing) or<code>NULL</code>.  Numeric values are coerced to integer as by<code>as.integer</code> (and hence truncated towards zero).Character vectors will be matched to the <code>names</code> of theobject (or for matrices/arrays, the <code>dimnames</code>):see ‘Character indices’ below for further details.

For <code>[</code>-indexing only: <code>i</code>, <code>j</code>, <code>...</code> can belogical vectors, indicating elements/slices to select.  Such vectorsare recycled if necessary to match the corresponding extent.<code>i</code>, <code>j</code>, <code>...</code> can also be negative integers,indicating elements/slices to leave out of the selection.

When indexing arrays by <code>[</code> a single argument <code>i</code> can be amatrix with as many columns as there are dimensions of <code>x</code>; theresult is then a vector with elements corresponding to the sets ofindices in each row of <code>i</code>.

An index value of <code>NULL</code> is treated as if it were <code>integer(0)</code>.
A literal character string or a name (possibly backtickquoted).  For extraction, this is normally (see under‘Environments’) partially matched to the <code>names</code>of the object.
For matrices and arrays.  If <code>TRUE</code> the result iscoerced to the lowest possible dimension (see the examples).  Thisonly works for extracting elements, not for the replacement.  See<code>drop</code> for further details.
Controls possible partial matching of <code>[[</code> whenextracting by a character vector (for most objects, but see under‘Environments’).  The default is no partial matching.  Value<code>NA</code> allows partial matching but issues a warning when itoccurs.  Value <code>FALSE</code> allows partial matching without anywarning.
typically an array-like <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object of a similar class as<code>x</code>.
data frame.
elements to extract or replace.  For <code>[</code> and<code>[[</code>, these are <code>numeric</code> or <code>character</code> or, for<code>[</code> only, empty or <code>logical</code>.  Numeric values are coerced to integer as ifby <code>as.integer</code>.  For replacement by <code>[</code>, a logicalmatrix is allowed.
A literal character string or a name (possibly backtickquoted).
logical.  If <code>TRUE</code> the result is coerced to thelowest possible dimension.  The default is to drop if only onecolumn is left, but <b>not</b> to drop if only one row is left.
A suitable replacement value: it will be repeated a wholenumber of times if necessary and it may be coerced: see theCoercion section.  If <code>NULL</code>, deletes the column if a singlecolumn is selected.
logical: see <code>[</code>, and applies to column names.
a <code>Date</code> object to be summarized or printed.
number of significant digits for the computations.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
further arguments to be passed from or to other methods.
date-time or date objects.
an optional time zone specification to be used for theconversion, mainly for <code>"POSIXlt"</code> objects.
character string.  Units in which the results aredesired.  Can be abbreviated.
character string.  Like <code>units</code>, except thatabbreviations are not allowed.
character string or numeric value specifying a time interval.
character specifying the format of <code>tim</code>: see<code>strptime</code>.  The default is a locale-specific time format.
an object inheriting from class <code>"difftime"</code>.
arguments to be passed to or from other methods.
a factor
a specification of indices – see <code>Extract</code>.
logical.  If true, unused levels are dropped.
character: a set of levels.  Factor values are coerced tocharacter.
a character vector with suitable numeric version strings (see‘Details’); for <code>package_version</code>, alternatively an Rversion object as obtained by <code>R.version</code>.
a logical indicating whether invalid numeric versionsshould results in an error (default) or not.
an object to be printed or summarized from one of thedate-time classes.
for timezone formatting, passed to <code>format.POSIXct</code>.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
number of significant digits for the computations:should be high enough to represent the least important time unitexactly.
further arguments to be passed from or to other methods.
date-time objects
date-time objects or character vectors.  (Charactervectors are converted by <code>as.POSIXct</code>.)
a numeric vector (in seconds)
one of <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>or <code>&gt;=</code>.
an object to be printed or summarized from one of thedate-time classes.
for timezone formatting, passed to <code>format.POSIXct</code>.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
number of significant digits for the computations:should be high enough to represent the least important time unitexactly.
further arguments to be passed from or to other methods.
date-time objects
date-time objects or character vectors.  (Charactervectors are converted by <code>as.POSIXct</code>.)
a numeric vector (in seconds)
one of <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>or <code>&gt;=</code>.
An object from a formally defined (S4) class.
The character-string name of the slot, quoted ornot.  Must be the name of a slot in the definition of the classof <code>object</code>.
A replacement value for the slot, which must be from aclass compatible with the class defined for this slot in thedefinition of the class of  <code>object</code>.
An object from a formally defined (S4) class.
The character-string name of the slot, quoted ornot.  Must be the name of a slot in the definition of the classof <code>object</code>.
A replacement value for the slot, which must be from aclass compatible with the class defined for this slot in thedefinition of the class of  <code>object</code>.
numeric or complex vectors or objects which can becoerced to such, or other objects for which methods have been written.
date-time or date objects.
an optional time zone specification to be used for theconversion, mainly for <code>"POSIXlt"</code> objects.
character string.  Units in which the results aredesired.  Can be abbreviated.
character string.  Like <code>units</code>, except thatabbreviations are not allowed.
character string or numeric value specifying a time interval.
character specifying the format of <code>tim</code>: see<code>strptime</code>.  The default is a locale-specific time format.
an object inheriting from class <code>"difftime"</code>.
arguments to be passed to or from other methods.
numeric or complex vectors or objects which can becoerced to such, or other objects for which methods have been written.
date-time or date objects.
an optional time zone specification to be used for theconversion, mainly for <code>"POSIXlt"</code> objects.
character string.  Units in which the results aredesired.  Can be abbreviated.
character string.  Like <code>units</code>, except thatabbreviations are not allowed.
character string or numeric value specifying a time interval.
character specifying the format of <code>tim</code>: see<code>strptime</code>.  The default is a locale-specific time format.
an object inheriting from class <code>"difftime"</code>.
arguments to be passed to or from other methods.
<code>raw</code>, <code>logical</code> or ‘number-like’ vectors (i.e., oftypes <code>double</code> (class <code>numeric</code>),<code>integer</code> and <code>complex</code>), or objects forwhich methods have been written.
An object, for the methods inheriting from class <code>"hexmode"</code>.
<code>NULL</code> or a positive integer specifying the minimumfield width to be used, with padding by leading zeroes.
a logical indicating whether to use upper-caseletters or lower-case letters (default).
further arguments passed to or from other methods.
An object, for the methods inheriting from class <code>"octmode"</code>.
<code>NULL</code> or a positive integer specifying the minimumfield width to be used, with padding by leading zeroes.
further arguments passed to or from other methods.
<code>raw</code>, <code>logical</code> or ‘number-like’ vectors (i.e., oftypes <code>double</code> (class <code>numeric</code>),<code>integer</code> and <code>complex</code>), or objects forwhich methods have been written.
numeric or complex matrices or vectors.
numeric or complex vectors or objects which can becoerced to such, or other objects for which methods have been written.
numeric or complex vectors or objects which can becoerced to such, or other objects for which methods have been written.
vector or <code>NULL</code>: the values to be matched.Long vectors are supported.
vector or <code>NULL</code>: the values to be matched against.Long vectors are not supported.
the value to be returned in the case when no match isfound.  Note that it is coerced to <code>integer</code>.
a vector of values that cannot be matched.  Anyvalue in <code>x</code> matching a value in this vector is assigned the<code>nomatch</code> value.  For historical reasons, <code>FALSE</code> isequivalent to <code>NULL</code>.
First and second arguments for function <code>FUN</code>.Typically a vector or array.
a function to use on the outer products, found <em>via</em><code>match.fun</code> (except for the special case <code>"*"</code>).
optional arguments to be passed to <code>FUN</code>.
A vector or array.
A vector or array.
a function; it may be a quoted string.
Provide dimnames that are the product of thedimnames of <code>X</code> and <code>Y</code>.
optional arguments to be passed to <code>FUN</code>.
numeric or complex vectors or objects which can becoerced to such, or other objects for which methods have been written.
numeric or complex vectors or objects which can becoerced to such, or other objects for which methods have been written.
date objects
date objects or character vectors.  (Charactervectors are converted by <code>as.Date</code>.)
a numeric vector (in days) <em>or</em> an object of class<code>"difftime"</code>, rounded to the nearest whole day.
One of <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>or <code>&gt;=</code>.
an object to be printed or summarized from one of thedate-time classes.
for timezone formatting, passed to <code>format.POSIXct</code>.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
number of significant digits for the computations:should be high enough to represent the least important time unitexactly.
further arguments to be passed from or to other methods.
date-time objects
date-time objects or character vectors.  (Charactervectors are converted by <code>as.POSIXct</code>.)
a numeric vector (in seconds)
one of <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>or <code>&gt;=</code>.
atomic vectors, symbols, calls, or other objects for whichmethods have been written.
a variable name (possibly quoted).
a value to be assigned to <code>x</code>.
a variable name (possibly quoted).
a value to be assigned to <code>x</code>.
atomic vectors, symbols, calls, or other objects for whichmethods have been written.
a variable name (possibly quoted).
a value to be assigned to <code>x</code>.
atomic vectors, symbols, calls, or other objects for whichmethods have been written.
atomic vectors, symbols, calls, or other objects for whichmethods have been written.
atomic vectors, symbols, calls, or other objects for whichmethods have been written.
<code>raw</code>, <code>logical</code> or ‘number-like’ vectors (i.e., oftypes <code>double</code> (class <code>numeric</code>),<code>integer</code> and <code>complex</code>), or objects forwhich methods have been written.
An object, for the methods inheriting from class <code>"hexmode"</code>.
<code>NULL</code> or a positive integer specifying the minimumfield width to be used, with padding by leading zeroes.
a logical indicating whether to use upper-caseletters or lower-case letters (default).
further arguments passed to or from other methods.
An object, for the methods inheriting from class <code>"octmode"</code>.
<code>NULL</code> or a positive integer specifying the minimumfield width to be used, with padding by leading zeroes.
further arguments passed to or from other methods.
<code>raw</code>, <code>logical</code> or ‘number-like’ vectors (i.e., oftypes <code>double</code> (class <code>numeric</code>),<code>integer</code> and <code>complex</code>), or objects forwhich methods have been written.
symbolic expressions.
object from which to extract element(s) or in which to replace element(s).
indices specifying elements to extract or replace.  Indices are<code>numeric</code> or <code>character</code> vectors or empty (missing) or<code>NULL</code>.  Numeric values are coerced to integer as by<code>as.integer</code> (and hence truncated towards zero).Character vectors will be matched to the <code>names</code> of theobject (or for matrices/arrays, the <code>dimnames</code>):see ‘Character indices’ below for further details.

For <code>[</code>-indexing only: <code>i</code>, <code>j</code>, <code>...</code> can belogical vectors, indicating elements/slices to select.  Such vectorsare recycled if necessary to match the corresponding extent.<code>i</code>, <code>j</code>, <code>...</code> can also be negative integers,indicating elements/slices to leave out of the selection.

When indexing arrays by <code>[</code> a single argument <code>i</code> can be amatrix with as many columns as there are dimensions of <code>x</code>; theresult is then a vector with elements corresponding to the sets ofindices in each row of <code>i</code>.

An index value of <code>NULL</code> is treated as if it were <code>integer(0)</code>.
A literal character string or a name (possibly backtickquoted).  For extraction, this is normally (see under‘Environments’) partially matched to the <code>names</code>of the object.
For matrices and arrays.  If <code>TRUE</code> the result iscoerced to the lowest possible dimension (see the examples).  Thisonly works for extracting elements, not for the replacement.  See<code>drop</code> for further details.
Controls possible partial matching of <code>[[</code> whenextracting by a character vector (for most objects, but see under‘Environments’).  The default is no partial matching.  Value<code>NA</code> allows partial matching but issues a warning when itoccurs.  Value <code>FALSE</code> allows partial matching without anywarning.
typically an array-like <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object of a similar class as<code>x</code>.
a character vector with suitable numeric version strings (see‘Details’); for <code>package_version</code>, alternatively an Rversion object as obtained by <code>R.version</code>.
a logical indicating whether invalid numeric versionsshould results in an error (default) or not.
object from which to extract element(s) or in which to replace element(s).
indices specifying elements to extract or replace.  Indices are<code>numeric</code> or <code>character</code> vectors or empty (missing) or<code>NULL</code>.  Numeric values are coerced to integer as by<code>as.integer</code> (and hence truncated towards zero).Character vectors will be matched to the <code>names</code> of theobject (or for matrices/arrays, the <code>dimnames</code>):see ‘Character indices’ below for further details.

For <code>[</code>-indexing only: <code>i</code>, <code>j</code>, <code>...</code> can belogical vectors, indicating elements/slices to select.  Such vectorsare recycled if necessary to match the corresponding extent.<code>i</code>, <code>j</code>, <code>...</code> can also be negative integers,indicating elements/slices to leave out of the selection.

When indexing arrays by <code>[</code> a single argument <code>i</code> can be amatrix with as many columns as there are dimensions of <code>x</code>; theresult is then a vector with elements corresponding to the sets ofindices in each row of <code>i</code>.

An index value of <code>NULL</code> is treated as if it were <code>integer(0)</code>.
A literal character string or a name (possibly backtickquoted).  For extraction, this is normally (see under‘Environments’) partially matched to the <code>names</code>of the object.
For matrices and arrays.  If <code>TRUE</code> the result iscoerced to the lowest possible dimension (see the examples).  Thisonly works for extracting elements, not for the replacement.  See<code>drop</code> for further details.
Controls possible partial matching of <code>[[</code> whenextracting by a character vector (for most objects, but see under‘Environments’).  The default is no partial matching.  Value<code>NA</code> allows partial matching but issues a warning when itoccurs.  Value <code>FALSE</code> allows partial matching without anywarning.
typically an array-like <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object of a similar class as<code>x</code>.
data frame.
elements to extract or replace.  For <code>[</code> and<code>[[</code>, these are <code>numeric</code> or <code>character</code> or, for<code>[</code> only, empty or <code>logical</code>.  Numeric values are coerced to integer as ifby <code>as.integer</code>.  For replacement by <code>[</code>, a logicalmatrix is allowed.
A literal character string or a name (possibly backtickquoted).
logical.  If <code>TRUE</code> the result is coerced to thelowest possible dimension.  The default is to drop if only onecolumn is left, but <b>not</b> to drop if only one row is left.
A suitable replacement value: it will be repeated a wholenumber of times if necessary and it may be coerced: see theCoercion section.  If <code>NULL</code>, deletes the column if a singlecolumn is selected.
logical: see <code>[</code>, and applies to column names.
a character vector of names to be abbreviated, or anobject to be coerced to a character vector by <code>as.character</code>.
the minimum length of the abbreviations.
logical: should lowercase characters be removed first?
logical: should a dot (<code>"."</code>) be appended?
logical: should <code>minlength</code> be observed strictly?Note that setting <code>strict = TRUE</code> may return <em>non</em>-uniquestrings.
a character string specifying the method used with default<code>"left.kept"</code>, see ‘Details’ below.  Partial matchesallowed.
logical: should <code>names</code> (with original vector) be returned.
a numeric or <code>complex</code> vector or array.
numeric or complex vectors.
a numeric or complex vector
an environment.
logical specifying whether bindings should be locked.
a name object or character string.
a function taking zero or one arguments.
a vector of data, usually taking a small number of distinctvalues.
an optional vector of the unique values (as character strings)that <code>x</code> might have taken.  The default is the unique set ofvalues taken by <code>as.character(x)</code>, sorted intoincreasing order <em>of <code>x</code></em>.  Note that this set can bespecified as smaller than <code>sort(unique(x))</code>.
<em>either</em> an optional character vector oflabels for the levels (in the same order as <code>levels</code> afterremoving those in <code>exclude</code>), <em>or</em> a character string oflength 1.  Duplicated values in <code>labels</code> can be used to mapdifferent values of <code>x</code> to the same factor level.
a vector of values to be excluded when forming theset of levels.  This may be factor with the same level set as <code>x</code>or should be a <code>character</code>.
logical flag to determine if the levels should be regardedas ordered (in the order given).
an upper bound on the number of levels; see ‘Details’.
(in <code>ordered(.)</code>): any of the above, apart from<code>ordered</code> itself.
only add an <code>NA</code> level if it is used, i.e.if <code>any(is.na(x))</code>.
the function that is to be invoked each time a top-level taskis successfully completed.  This is called with 5 or 4 argumentsdepending on whether <code>data</code> is specified or not, respectively.The return value should be a logical value indicating whether tokeep the callback in the list of active callbacks or discard it.
if specified, this is the 5-th argument in the call to thecallback function <code>f</code>.
a string or an integer identifying the element in theinternal callback list to be removed.Integer indices are 1-based, i.e the first element is 1.The names of currently registered handlers is availableusing <code>getTaskCallbackNames</code>and is also returned in a call to <code>addTaskCallback</code>.
character: names to be used.
a non-empty character string to be matched.  For<code>fixed = FALSE</code> this should contain an extendedregular expression. Coerced by <code>as.character</code> to a string if possible.
character vector where matches are sought.Coerced by <code>as.character</code> to a character vector ifpossible.
Maximum distance allowed for a match.  Expressedeither as integer, or as a fraction of the <em>pattern</em> lengthtimes the maximal transformation cost (will be replaced by thesmallest integer not less than the corresponding fraction), or alist with possible components

maximum number/fraction of match cost(generalized Levenshtein distance)
maximal number/fraction of <em>all</em>transformations (insertions, deletions and substitutions)
maximum number/fraction of insertions
maximum number/fraction of deletions
maximum number/fraction ofsubstitutions
If <code>cost</code> is not given, <code>all</code> defaults to 10%, and theother transformation number bounds default to <code>all</code>.The component names can be abbreviated.
a numeric vector or list with names partially matching<span class="samp">insertions</span>, <span class="samp">deletions</span> and <span class="samp">substitutions</span> givingthe respective costs for computing the generalized Levenshteindistance, or <code>NULL</code> (default) indicating using unit cost forall three possible transformations.Coerced to integer via <code>as.integer</code> if possible.
if <code>FALSE</code>, the pattern matching is <em>casesensitive</em> and if <code>TRUE</code>, case is ignored during matching.
if <code>FALSE</code>, a vector containing the (integer)indices of the matches determined is returned and if <code>TRUE</code>, avector containing the matching elements themselves is returned.
logical.  If <code>TRUE</code> (default), the pattern ismatched literally (as is).  Otherwise, it is matched as a regularexpression.
logical. in a multibyte locale, should the comparisonbe character-by-character (the default) or byte-by-byte.
a non-empty character string to be matched.  For<code>fixed = FALSE</code> this should contain an extendedregular expression. Coerced by <code>as.character</code> to a string if possible.
character vector where matches are sought.Coerced by <code>as.character</code> to a character vector ifpossible.
Maximum distance allowed for a match.  Expressedeither as integer, or as a fraction of the <em>pattern</em> lengthtimes the maximal transformation cost (will be replaced by thesmallest integer not less than the corresponding fraction), or alist with possible components

maximum number/fraction of match cost(generalized Levenshtein distance)
maximal number/fraction of <em>all</em>transformations (insertions, deletions and substitutions)
maximum number/fraction of insertions
maximum number/fraction of deletions
maximum number/fraction ofsubstitutions
If <code>cost</code> is not given, <code>all</code> defaults to 10%, and theother transformation number bounds default to <code>all</code>.The component names can be abbreviated.
a numeric vector or list with names partially matching<span class="samp">insertions</span>, <span class="samp">deletions</span> and <span class="samp">substitutions</span> givingthe respective costs for computing the generalized Levenshteindistance, or <code>NULL</code> (default) indicating using unit cost forall three possible transformations.Coerced to integer via <code>as.integer</code> if possible.
if <code>FALSE</code>, the pattern matching is <em>casesensitive</em> and if <code>TRUE</code>, case is ignored during matching.
if <code>FALSE</code>, a vector containing the (integer)indices of the matches determined is returned and if <code>TRUE</code>, avector containing the matching elements themselves is returned.
logical.  If <code>TRUE</code> (default), the pattern ismatched literally (as is).  Otherwise, it is matched as a regularexpression.
logical. in a multibyte locale, should the comparisonbe character-by-character (the default) or byte-by-byte.
objects, possibly named.
object to be coerced or tested.
a logical indicating whether to copy all values or(default) only those whose names do not begin with a dot.
a logical indicating whether the <code>names</code> ofthe resulting list should be sorted (increasingly).  Note that thisis somewhat costly, but may be useful for comparison of environments.
zero or more logical vectors.  Other objects of zerolength are ignored, and the rest are coerced to logical ignoringany class.
logical.  If true <code>NA</code> values are removed beforethe result is computed.
<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
other <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, to be compared with <code>target</code>.
further arguments for different methods, notably thefollowing two, for numerical comparison:
numeric <i>≥</i> 0.  Differences smaller than<code>tolerance</code> are not reported.  The default value is close to<code>1.5e-8</code>.
<code>NULL</code> or numeric &gt; 0, typically of length 1 or<code>length(target)</code>.  See ‘Details’.
logical indicating if the <code>target == current</code>cases should be counted when computing the mean (absolute orrelative) differences.  The default, <code>FALSE</code> may seemmisleading in cases where <code>target</code> and <code>current</code> onlydiffer in a few places; see the extensive example.
a <code>function</code> of two arguments,<code>err</code>, the relative, absolute or scaled error, and<code>what</code>, a character string indicating the <em>kind</em> of error;may be used, e.g., to format relative and absolute errors differently.
logical indicating if the<code>attributes</code> of <code>target</code> and <code>current</code>(other than the names) should be compared.
logical indicating if <code>list</code> comparisonshould report differing components by name (if matching) instead ofinteger index.  Note that this comes after <code>...</code> and so mustbe specified by its full name.
logical passed to <code>ls</code> indicating if“hidden” objects should also be considered in the environments.
for the <code>environment</code> method: <code>logical</code> indicating if“promises should be forced”, i.e., typically formal function argumentsbe evaluated for comparison.  If false, only the <code>names</code> ofthe objects in the two environments are checked for equality.
logical requiring that the<code>environment()</code>s of functions should be compared, too.You may need to set <code>check.environment=FALSE</code> in unexpectedcases, such as when comparing two <code>nls()</code> fits.
logical indicating if the <code>"tzone"</code> attributesof <code>target</code> and <code>current</code> should be compared.
logical indicating if the <code>names(.)</code>of <code>target</code> and <code>current</code> should be compared.
<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
other <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, to be compared with <code>target</code>.
further arguments for different methods, notably thefollowing two, for numerical comparison:
numeric <i>≥</i> 0.  Differences smaller than<code>tolerance</code> are not reported.  The default value is close to<code>1.5e-8</code>.
<code>NULL</code> or numeric &gt; 0, typically of length 1 or<code>length(target)</code>.  See ‘Details’.
logical indicating if the <code>target == current</code>cases should be counted when computing the mean (absolute orrelative) differences.  The default, <code>FALSE</code> may seemmisleading in cases where <code>target</code> and <code>current</code> onlydiffer in a few places; see the extensive example.
a <code>function</code> of two arguments,<code>err</code>, the relative, absolute or scaled error, and<code>what</code>, a character string indicating the <em>kind</em> of error;may be used, e.g., to format relative and absolute errors differently.
logical indicating if the<code>attributes</code> of <code>target</code> and <code>current</code>(other than the names) should be compared.
logical indicating if <code>list</code> comparisonshould report differing components by name (if matching) instead ofinteger index.  Note that this comes after <code>...</code> and so mustbe specified by its full name.
logical passed to <code>ls</code> indicating if“hidden” objects should also be considered in the environments.
for the <code>environment</code> method: <code>logical</code> indicating if“promises should be forced”, i.e., typically formal function argumentsbe evaluated for comparison.  If false, only the <code>names</code> ofthe objects in the two environments are checked for equality.
logical requiring that the<code>environment()</code>s of functions should be compared, too.You may need to set <code>check.environment=FALSE</code> in unexpectedcases, such as when comparing two <code>nls()</code> fits.
logical indicating if the <code>"tzone"</code> attributesof <code>target</code> and <code>current</code> should be compared.
logical indicating if the <code>names(.)</code>of <code>target</code> and <code>current</code> should be compared.
<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
other <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, to be compared with <code>target</code>.
further arguments for different methods, notably thefollowing two, for numerical comparison:
numeric <i>≥</i> 0.  Differences smaller than<code>tolerance</code> are not reported.  The default value is close to<code>1.5e-8</code>.
<code>NULL</code> or numeric &gt; 0, typically of length 1 or<code>length(target)</code>.  See ‘Details’.
logical indicating if the <code>target == current</code>cases should be counted when computing the mean (absolute orrelative) differences.  The default, <code>FALSE</code> may seemmisleading in cases where <code>target</code> and <code>current</code> onlydiffer in a few places; see the extensive example.
a <code>function</code> of two arguments,<code>err</code>, the relative, absolute or scaled error, and<code>what</code>, a character string indicating the <em>kind</em> of error;may be used, e.g., to format relative and absolute errors differently.
logical indicating if the<code>attributes</code> of <code>target</code> and <code>current</code>(other than the names) should be compared.
logical indicating if <code>list</code> comparisonshould report differing components by name (if matching) instead ofinteger index.  Note that this comes after <code>...</code> and so mustbe specified by its full name.
logical passed to <code>ls</code> indicating if“hidden” objects should also be considered in the environments.
for the <code>environment</code> method: <code>logical</code> indicating if“promises should be forced”, i.e., typically formal function argumentsbe evaluated for comparison.  If false, only the <code>names</code> ofthe objects in the two environments are checked for equality.
logical requiring that the<code>environment()</code>s of functions should be compared, too.You may need to set <code>check.environment=FALSE</code> in unexpectedcases, such as when comparing two <code>nls()</code> fits.
logical indicating if the <code>"tzone"</code> attributesof <code>target</code> and <code>current</code> should be compared.
logical indicating if the <code>names(.)</code>of <code>target</code> and <code>current</code> should be compared.
<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
other <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, to be compared with <code>target</code>.
further arguments for different methods, notably thefollowing two, for numerical comparison:
numeric <i>≥</i> 0.  Differences smaller than<code>tolerance</code> are not reported.  The default value is close to<code>1.5e-8</code>.
<code>NULL</code> or numeric &gt; 0, typically of length 1 or<code>length(target)</code>.  See ‘Details’.
logical indicating if the <code>target == current</code>cases should be counted when computing the mean (absolute orrelative) differences.  The default, <code>FALSE</code> may seemmisleading in cases where <code>target</code> and <code>current</code> onlydiffer in a few places; see the extensive example.
a <code>function</code> of two arguments,<code>err</code>, the relative, absolute or scaled error, and<code>what</code>, a character string indicating the <em>kind</em> of error;may be used, e.g., to format relative and absolute errors differently.
logical indicating if the<code>attributes</code> of <code>target</code> and <code>current</code>(other than the names) should be compared.
logical indicating if <code>list</code> comparisonshould report differing components by name (if matching) instead ofinteger index.  Note that this comes after <code>...</code> and so mustbe specified by its full name.
logical passed to <code>ls</code> indicating if“hidden” objects should also be considered in the environments.
for the <code>environment</code> method: <code>logical</code> indicating if“promises should be forced”, i.e., typically formal function argumentsbe evaluated for comparison.  If false, only the <code>names</code> ofthe objects in the two environments are checked for equality.
logical requiring that the<code>environment()</code>s of functions should be compared, too.You may need to set <code>check.environment=FALSE</code> in unexpectedcases, such as when comparing two <code>nls()</code> fits.
logical indicating if the <code>"tzone"</code> attributesof <code>target</code> and <code>current</code> should be compared.
logical indicating if the <code>names(.)</code>of <code>target</code> and <code>current</code> should be compared.
<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
other <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, to be compared with <code>target</code>.
further arguments for different methods, notably thefollowing two, for numerical comparison:
numeric <i>≥</i> 0.  Differences smaller than<code>tolerance</code> are not reported.  The default value is close to<code>1.5e-8</code>.
<code>NULL</code> or numeric &gt; 0, typically of length 1 or<code>length(target)</code>.  See ‘Details’.
logical indicating if the <code>target == current</code>cases should be counted when computing the mean (absolute orrelative) differences.  The default, <code>FALSE</code> may seemmisleading in cases where <code>target</code> and <code>current</code> onlydiffer in a few places; see the extensive example.
a <code>function</code> of two arguments,<code>err</code>, the relative, absolute or scaled error, and<code>what</code>, a character string indicating the <em>kind</em> of error;may be used, e.g., to format relative and absolute errors differently.
logical indicating if the<code>attributes</code> of <code>target</code> and <code>current</code>(other than the names) should be compared.
logical indicating if <code>list</code> comparisonshould report differing components by name (if matching) instead ofinteger index.  Note that this comes after <code>...</code> and so mustbe specified by its full name.
logical passed to <code>ls</code> indicating if“hidden” objects should also be considered in the environments.
for the <code>environment</code> method: <code>logical</code> indicating if“promises should be forced”, i.e., typically formal function argumentsbe evaluated for comparison.  If false, only the <code>names</code> ofthe objects in the two environments are checked for equality.
logical requiring that the<code>environment()</code>s of functions should be compared, too.You may need to set <code>check.environment=FALSE</code> in unexpectedcases, such as when comparing two <code>nls()</code> fits.
logical indicating if the <code>"tzone"</code> attributesof <code>target</code> and <code>current</code> should be compared.
logical indicating if the <code>names(.)</code>of <code>target</code> and <code>current</code> should be compared.
<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
other <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, to be compared with <code>target</code>.
further arguments for different methods, notably thefollowing two, for numerical comparison:
numeric <i>≥</i> 0.  Differences smaller than<code>tolerance</code> are not reported.  The default value is close to<code>1.5e-8</code>.
<code>NULL</code> or numeric &gt; 0, typically of length 1 or<code>length(target)</code>.  See ‘Details’.
logical indicating if the <code>target == current</code>cases should be counted when computing the mean (absolute orrelative) differences.  The default, <code>FALSE</code> may seemmisleading in cases where <code>target</code> and <code>current</code> onlydiffer in a few places; see the extensive example.
a <code>function</code> of two arguments,<code>err</code>, the relative, absolute or scaled error, and<code>what</code>, a character string indicating the <em>kind</em> of error;may be used, e.g., to format relative and absolute errors differently.
logical indicating if the<code>attributes</code> of <code>target</code> and <code>current</code>(other than the names) should be compared.
logical indicating if <code>list</code> comparisonshould report differing components by name (if matching) instead ofinteger index.  Note that this comes after <code>...</code> and so mustbe specified by its full name.
logical passed to <code>ls</code> indicating if“hidden” objects should also be considered in the environments.
for the <code>environment</code> method: <code>logical</code> indicating if“promises should be forced”, i.e., typically formal function argumentsbe evaluated for comparison.  If false, only the <code>names</code> ofthe objects in the two environments are checked for equality.
logical requiring that the<code>environment()</code>s of functions should be compared, too.You may need to set <code>check.environment=FALSE</code> in unexpectedcases, such as when comparing two <code>nls()</code> fits.
logical indicating if the <code>"tzone"</code> attributesof <code>target</code> and <code>current</code> should be compared.
logical indicating if the <code>names(.)</code>of <code>target</code> and <code>current</code> should be compared.
<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
other <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, to be compared with <code>target</code>.
further arguments for different methods, notably thefollowing two, for numerical comparison:
numeric <i>≥</i> 0.  Differences smaller than<code>tolerance</code> are not reported.  The default value is close to<code>1.5e-8</code>.
<code>NULL</code> or numeric &gt; 0, typically of length 1 or<code>length(target)</code>.  See ‘Details’.
logical indicating if the <code>target == current</code>cases should be counted when computing the mean (absolute orrelative) differences.  The default, <code>FALSE</code> may seemmisleading in cases where <code>target</code> and <code>current</code> onlydiffer in a few places; see the extensive example.
a <code>function</code> of two arguments,<code>err</code>, the relative, absolute or scaled error, and<code>what</code>, a character string indicating the <em>kind</em> of error;may be used, e.g., to format relative and absolute errors differently.
logical indicating if the<code>attributes</code> of <code>target</code> and <code>current</code>(other than the names) should be compared.
logical indicating if <code>list</code> comparisonshould report differing components by name (if matching) instead ofinteger index.  Note that this comes after <code>...</code> and so mustbe specified by its full name.
logical passed to <code>ls</code> indicating if“hidden” objects should also be considered in the environments.
for the <code>environment</code> method: <code>logical</code> indicating if“promises should be forced”, i.e., typically formal function argumentsbe evaluated for comparison.  If false, only the <code>names</code> ofthe objects in the two environments are checked for equality.
logical requiring that the<code>environment()</code>s of functions should be compared, too.You may need to set <code>check.environment=FALSE</code> in unexpectedcases, such as when comparing two <code>nls()</code> fits.
logical indicating if the <code>"tzone"</code> attributesof <code>target</code> and <code>current</code> should be compared.
logical indicating if the <code>names(.)</code>of <code>target</code> and <code>current</code> should be compared.
<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
other <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, to be compared with <code>target</code>.
further arguments for different methods, notably thefollowing two, for numerical comparison:
numeric <i>≥</i> 0.  Differences smaller than<code>tolerance</code> are not reported.  The default value is close to<code>1.5e-8</code>.
<code>NULL</code> or numeric &gt; 0, typically of length 1 or<code>length(target)</code>.  See ‘Details’.
logical indicating if the <code>target == current</code>cases should be counted when computing the mean (absolute orrelative) differences.  The default, <code>FALSE</code> may seemmisleading in cases where <code>target</code> and <code>current</code> onlydiffer in a few places; see the extensive example.
a <code>function</code> of two arguments,<code>err</code>, the relative, absolute or scaled error, and<code>what</code>, a character string indicating the <em>kind</em> of error;may be used, e.g., to format relative and absolute errors differently.
logical indicating if the<code>attributes</code> of <code>target</code> and <code>current</code>(other than the names) should be compared.
logical indicating if <code>list</code> comparisonshould report differing components by name (if matching) instead ofinteger index.  Note that this comes after <code>...</code> and so mustbe specified by its full name.
logical passed to <code>ls</code> indicating if“hidden” objects should also be considered in the environments.
for the <code>environment</code> method: <code>logical</code> indicating if“promises should be forced”, i.e., typically formal function argumentsbe evaluated for comparison.  If false, only the <code>names</code> ofthe objects in the two environments are checked for equality.
logical requiring that the<code>environment()</code>s of functions should be compared, too.You may need to set <code>check.environment=FALSE</code> in unexpectedcases, such as when comparing two <code>nls()</code> fits.
logical indicating if the <code>"tzone"</code> attributesof <code>target</code> and <code>current</code> should be compared.
logical indicating if the <code>names(.)</code>of <code>target</code> and <code>current</code> should be compared.
<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
other <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, to be compared with <code>target</code>.
further arguments for different methods, notably thefollowing two, for numerical comparison:
numeric <i>≥</i> 0.  Differences smaller than<code>tolerance</code> are not reported.  The default value is close to<code>1.5e-8</code>.
<code>NULL</code> or numeric &gt; 0, typically of length 1 or<code>length(target)</code>.  See ‘Details’.
logical indicating if the <code>target == current</code>cases should be counted when computing the mean (absolute orrelative) differences.  The default, <code>FALSE</code> may seemmisleading in cases where <code>target</code> and <code>current</code> onlydiffer in a few places; see the extensive example.
a <code>function</code> of two arguments,<code>err</code>, the relative, absolute or scaled error, and<code>what</code>, a character string indicating the <em>kind</em> of error;may be used, e.g., to format relative and absolute errors differently.
logical indicating if the<code>attributes</code> of <code>target</code> and <code>current</code>(other than the names) should be compared.
logical indicating if <code>list</code> comparisonshould report differing components by name (if matching) instead ofinteger index.  Note that this comes after <code>...</code> and so mustbe specified by its full name.
logical passed to <code>ls</code> indicating if“hidden” objects should also be considered in the environments.
for the <code>environment</code> method: <code>logical</code> indicating if“promises should be forced”, i.e., typically formal function argumentsbe evaluated for comparison.  If false, only the <code>names</code> ofthe objects in the two environments are checked for equality.
logical requiring that the<code>environment()</code>s of functions should be compared, too.You may need to set <code>check.environment=FALSE</code> in unexpectedcases, such as when comparing two <code>nls()</code> fits.
logical indicating if the <code>"tzone"</code> attributesof <code>target</code> and <code>current</code> should be compared.
logical indicating if the <code>names(.)</code>of <code>target</code> and <code>current</code> should be compared.
<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
other <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, to be compared with <code>target</code>.
further arguments for different methods, notably thefollowing two, for numerical comparison:
numeric <i>≥</i> 0.  Differences smaller than<code>tolerance</code> are not reported.  The default value is close to<code>1.5e-8</code>.
<code>NULL</code> or numeric &gt; 0, typically of length 1 or<code>length(target)</code>.  See ‘Details’.
logical indicating if the <code>target == current</code>cases should be counted when computing the mean (absolute orrelative) differences.  The default, <code>FALSE</code> may seemmisleading in cases where <code>target</code> and <code>current</code> onlydiffer in a few places; see the extensive example.
a <code>function</code> of two arguments,<code>err</code>, the relative, absolute or scaled error, and<code>what</code>, a character string indicating the <em>kind</em> of error;may be used, e.g., to format relative and absolute errors differently.
logical indicating if the<code>attributes</code> of <code>target</code> and <code>current</code>(other than the names) should be compared.
logical indicating if <code>list</code> comparisonshould report differing components by name (if matching) instead ofinteger index.  Note that this comes after <code>...</code> and so mustbe specified by its full name.
logical passed to <code>ls</code> indicating if“hidden” objects should also be considered in the environments.
for the <code>environment</code> method: <code>logical</code> indicating if“promises should be forced”, i.e., typically formal function argumentsbe evaluated for comparison.  If false, only the <code>names</code> ofthe objects in the two environments are checked for equality.
logical requiring that the<code>environment()</code>s of functions should be compared, too.You may need to set <code>check.environment=FALSE</code> in unexpectedcases, such as when comparing two <code>nls()</code> fits.
logical indicating if the <code>"tzone"</code> attributesof <code>target</code> and <code>current</code> should be compared.
logical indicating if the <code>names(.)</code>of <code>target</code> and <code>current</code> should be compared.
<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
other <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, to be compared with <code>target</code>.
further arguments for different methods, notably thefollowing two, for numerical comparison:
numeric <i>≥</i> 0.  Differences smaller than<code>tolerance</code> are not reported.  The default value is close to<code>1.5e-8</code>.
<code>NULL</code> or numeric &gt; 0, typically of length 1 or<code>length(target)</code>.  See ‘Details’.
logical indicating if the <code>target == current</code>cases should be counted when computing the mean (absolute orrelative) differences.  The default, <code>FALSE</code> may seemmisleading in cases where <code>target</code> and <code>current</code> onlydiffer in a few places; see the extensive example.
a <code>function</code> of two arguments,<code>err</code>, the relative, absolute or scaled error, and<code>what</code>, a character string indicating the <em>kind</em> of error;may be used, e.g., to format relative and absolute errors differently.
logical indicating if the<code>attributes</code> of <code>target</code> and <code>current</code>(other than the names) should be compared.
logical indicating if <code>list</code> comparisonshould report differing components by name (if matching) instead ofinteger index.  Note that this comes after <code>...</code> and so mustbe specified by its full name.
logical passed to <code>ls</code> indicating if“hidden” objects should also be considered in the environments.
for the <code>environment</code> method: <code>logical</code> indicating if“promises should be forced”, i.e., typically formal function argumentsbe evaluated for comparison.  If false, only the <code>names</code> ofthe objects in the two environments are checked for equality.
logical requiring that the<code>environment()</code>s of functions should be compared, too.You may need to set <code>check.environment=FALSE</code> in unexpectedcases, such as when comparing two <code>nls()</code> fits.
logical indicating if the <code>"tzone"</code> attributesof <code>target</code> and <code>current</code> should be compared.
logical indicating if the <code>names(.)</code>of <code>target</code> and <code>current</code> should be compared.
<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
other <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, to be compared with <code>target</code>.
further arguments for different methods, notably thefollowing two, for numerical comparison:
numeric <i>≥</i> 0.  Differences smaller than<code>tolerance</code> are not reported.  The default value is close to<code>1.5e-8</code>.
<code>NULL</code> or numeric &gt; 0, typically of length 1 or<code>length(target)</code>.  See ‘Details’.
logical indicating if the <code>target == current</code>cases should be counted when computing the mean (absolute orrelative) differences.  The default, <code>FALSE</code> may seemmisleading in cases where <code>target</code> and <code>current</code> onlydiffer in a few places; see the extensive example.
a <code>function</code> of two arguments,<code>err</code>, the relative, absolute or scaled error, and<code>what</code>, a character string indicating the <em>kind</em> of error;may be used, e.g., to format relative and absolute errors differently.
logical indicating if the<code>attributes</code> of <code>target</code> and <code>current</code>(other than the names) should be compared.
logical indicating if <code>list</code> comparisonshould report differing components by name (if matching) instead ofinteger index.  Note that this comes after <code>...</code> and so mustbe specified by its full name.
logical passed to <code>ls</code> indicating if“hidden” objects should also be considered in the environments.
for the <code>environment</code> method: <code>logical</code> indicating if“promises should be forced”, i.e., typically formal function argumentsbe evaluated for comparison.  If false, only the <code>names</code> ofthe objects in the two environments are checked for equality.
logical requiring that the<code>environment()</code>s of functions should be compared, too.You may need to set <code>check.environment=FALSE</code> in unexpectedcases, such as when comparing two <code>nls()</code> fits.
logical indicating if the <code>"tzone"</code> attributesof <code>target</code> and <code>current</code> should be compared.
logical indicating if the <code>names(.)</code>of <code>target</code> and <code>current</code> should be compared.
<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
other <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, to be compared with <code>target</code>.
further arguments for different methods, notably thefollowing two, for numerical comparison:
numeric <i>≥</i> 0.  Differences smaller than<code>tolerance</code> are not reported.  The default value is close to<code>1.5e-8</code>.
<code>NULL</code> or numeric &gt; 0, typically of length 1 or<code>length(target)</code>.  See ‘Details’.
logical indicating if the <code>target == current</code>cases should be counted when computing the mean (absolute orrelative) differences.  The default, <code>FALSE</code> may seemmisleading in cases where <code>target</code> and <code>current</code> onlydiffer in a few places; see the extensive example.
a <code>function</code> of two arguments,<code>err</code>, the relative, absolute or scaled error, and<code>what</code>, a character string indicating the <em>kind</em> of error;may be used, e.g., to format relative and absolute errors differently.
logical indicating if the<code>attributes</code> of <code>target</code> and <code>current</code>(other than the names) should be compared.
logical indicating if <code>list</code> comparisonshould report differing components by name (if matching) instead ofinteger index.  Note that this comes after <code>...</code> and so mustbe specified by its full name.
logical passed to <code>ls</code> indicating if“hidden” objects should also be considered in the environments.
for the <code>environment</code> method: <code>logical</code> indicating if“promises should be forced”, i.e., typically formal function argumentsbe evaluated for comparison.  If false, only the <code>names</code> ofthe objects in the two environments are checked for equality.
logical requiring that the<code>environment()</code>s of functions should be compared, too.You may need to set <code>check.environment=FALSE</code> in unexpectedcases, such as when comparing two <code>nls()</code> fits.
logical indicating if the <code>"tzone"</code> attributesof <code>target</code> and <code>current</code> should be compared.
logical indicating if the <code>names(.)</code>of <code>target</code> and <code>current</code> should be compared.
an expression or call from which the namesare to be extracted.
a logical value indicating whether function namesshould be included in the result.
the maximum number of names to be returned.  <code>-1</code>indicates no limit (other than vector size limits).
a logical value which indicates whether duplicate namesshould be removed from the value.
an expression or call from which the namesare to be extracted.
a logical value indicating whether function namesshould be included in the result.
the maximum number of names to be returned.  <code>-1</code>indicates no limit (other than vector size limits).
a logical value which indicates whether duplicate namesshould be removed from the value.
a condition object.
call expression.
a condition object.
expression to be evaluated.
expression to be evaluated before returning or exiting.
function.
character string.
character string.
character string naming a restart.
restart object.
object.
character string naming a condition class.
additional arguments; see details below.
zero or more logical vectors.  Other objects of zerolength are ignored, and the rest are coerced to logical ignoringany class.
logical.  If true <code>NA</code> values are removed beforethe result is computed.
a vector or a data frame or an array or <code>NULL</code>.
a vector of values that cannot be compared.<code>FALSE</code> is a special value, meaning that all values can becompared, and may be the only value accepted for methods other thanthe default.  It will be coerced internally to the same type as<code>x</code>.
logical indicating if duplication should be consideredfrom the reverse side, i.e., the last (or rightmost) of identicalelements would correspond to <code>duplicated = FALSE</code>.
the maximum number of unique items expected (greater than one).
arguments for particular methods.
the array margin to be held fixed: see<code>apply</code>, and note that <code>MARGIN = 0</code> may be useful.
a vector or a data frame or an array or <code>NULL</code>.
a vector of values that cannot be compared.<code>FALSE</code> is a special value, meaning that all values can becompared, and may be the only value accepted for methods other thanthe default.  It will be coerced internally to the same type as<code>x</code>.
logical indicating if duplication should be consideredfrom the reverse side, i.e., the last (or rightmost) of identicalelements would correspond to <code>duplicated = FALSE</code>.
the maximum number of unique items expected (greater than one).
arguments for particular methods.
the array margin to be held fixed: see<code>apply</code>, and note that <code>MARGIN = 0</code> may be useful.
a vector or a data frame or an array or <code>NULL</code>.
a vector of values that cannot be compared.<code>FALSE</code> is a special value, meaning that all values can becompared, and may be the only value accepted for methods other thanthe default.  It will be coerced internally to the same type as<code>x</code>.
logical indicating if duplication should be consideredfrom the reverse side, i.e., the last (or rightmost) of identicalelements would correspond to <code>duplicated = FALSE</code>.
the maximum number of unique items expected (greater than one).
arguments for particular methods.
the array margin to be held fixed: see<code>apply</code>, and note that <code>MARGIN = 0</code> may be useful.
a vector or a data frame or an array or <code>NULL</code>.
a vector of values that cannot be compared.<code>FALSE</code> is a special value, meaning that all values can becompared, and may be the only value accepted for methods other thanthe default.  It will be coerced internally to the same type as<code>x</code>.
logical indicating if duplication should be consideredfrom the reverse side, i.e., the last (or rightmost) of identicalelements would correspond to <code>duplicated = FALSE</code>.
the maximum number of unique items expected (greater than one).
arguments for particular methods.
the array margin to be held fixed: see<code>apply</code>, and note that <code>MARGIN = 0</code> may be useful.
a vector or a data frame or an array or <code>NULL</code>.
a vector of values that cannot be compared.<code>FALSE</code> is a special value, meaning that all values can becompared, and may be the only value accepted for methods other thanthe default.  It will be coerced internally to the same type as<code>x</code>.
logical indicating if duplication should be consideredfrom the reverse side, i.e., the last (or rightmost) of identicalelements would correspond to <code>duplicated = FALSE</code>.
the maximum number of unique items expected (greater than one).
arguments for particular methods.
the array margin to be held fixed: see<code>apply</code>, and note that <code>MARGIN = 0</code> may be useful.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object to be tested: the default method for<code>is.na</code> and <code>anyNA</code> handle atomic vectors, lists,pairlists, and <code>NULL</code>.
logical: should <code>anyNA</code> be applied recursivelyto lists and pairlists?
a suitable index vector for use with <code>x</code>.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object to be tested: the default method for<code>is.na</code> and <code>anyNA</code> handle atomic vectors, lists,pairlists, and <code>NULL</code>.
logical: should <code>anyNA</code> be applied recursivelyto lists and pairlists?
a suitable index vector for use with <code>x</code>.
a character vector with suitable numeric version strings (see‘Details’); for <code>package_version</code>, alternatively an Rversion object as obtained by <code>R.version</code>.
a logical indicating whether invalid numeric versionsshould results in an error (default) or not.
an object to be printed or summarized from one of thedate-time classes.
for timezone formatting, passed to <code>format.POSIXct</code>.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
number of significant digits for the computations:should be high enough to represent the least important time unitexactly.
further arguments to be passed from or to other methods.
date-time objects
date-time objects or character vectors.  (Charactervectors are converted by <code>as.POSIXct</code>.)
a numeric vector (in seconds)
one of <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>or <code>&gt;=</code>.
the array to be transposed.
the subscript permutation vector, usually a permutation ofthe integers <code>1:n</code>, where <code>n</code> is the number of dimensionsof <code>a</code>.  When <code>a</code> has named dimnames, it can be acharacter vector of length <code>n</code> giving a permutation of thosenames. The default (used whenever <code>perm</code> has zero length) is toreverse the order of the dimensions.
a flag indicating whether the vector should beresized as well as having its elements reordered (default <code>TRUE</code>).
logical indicating if the result should be of thesame class as <code>a</code>.
potential further arguments of methods.
the array to be transposed.
the subscript permutation vector, usually a permutation ofthe integers <code>1:n</code>, where <code>n</code> is the number of dimensionsof <code>a</code>.  When <code>a</code> has named dimnames, it can be acharacter vector of length <code>n</code> giving a permutation of thosenames. The default (used whenever <code>perm</code> has zero length) is toreverse the order of the dimensions.
a flag indicating whether the vector should beresized as well as having its elements reordered (default <code>TRUE</code>).
logical indicating if the result should be of thesame class as <code>a</code>.
potential further arguments of methods.
the array to be transposed.
the subscript permutation vector, usually a permutation ofthe integers <code>1:n</code>, where <code>n</code> is the number of dimensionsof <code>a</code>.  When <code>a</code> has named dimnames, it can be acharacter vector of length <code>n</code> giving a permutation of thosenames. The default (used whenever <code>perm</code> has zero length) is toreverse the order of the dimensions.
a flag indicating whether the vector should beresized as well as having its elements reordered (default <code>TRUE</code>).
logical indicating if the result should be of thesame class as <code>a</code>.
potential further arguments of methods.
the vector the values are to be appended to.
to be included in the modified vector.
a subscript, after which the values are to be appended.
an array, including a matrix.
a vector giving the subscripts which the function willbe applied over.  E.g., for a matrix <code>1</code> indicates rows,<code>2</code> indicates columns, <code>c(1, 2)</code> indicates rows andcolumns. Where <code>X</code> has named dimnames, it can be a charactervector selecting dimension names.
the function to be applied: see ‘Details’.In the case of functions like <code>+</code>, <code>%*%</code>, etc., thefunction name must be backquoted or quoted.
optional arguments to <code>FUN</code>.
a logical indicating whether results should besimplified if possible.
numeric.  Desired length of the output vector,inputs being recycled as needed.
numeric vector.
numeric vector.
numeric vector.
numeric vector.
an object, probably of mode <code>complex</code>.
an object of mode <code>complex</code>, or one of a class for whicha methods has been defined.
further arguments passed to or from other methods.
a function (a closure or a primitive).If <code>name</code> is a character string then the function with thatname is found and used.
a vector (including a list or <code>expression</code>vector) giving data to fill the array.  Non-atomic classed objectsare coerced by <code>as.vector</code>.
the dim attribute for the array to be created, that is aninteger vector of length one or more giving the maximal indices ineach dimension.
either <code>NULL</code> or the names for the dimensions.This must a list (or it will be ignored) with one component for eachdimension, either <code>NULL</code> or a character vector of the lengthgiven by <code>dim</code> for that dimension.  The list can be named, andthe list names will be used as names for the dimensions.  If thelist is shorter than the number of dimensions, it is extended by<code>NULL</code>s to the length required.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
additional arguments to be passed to or from methods.
a <code>logical</code> vector or array.  <code>NA</code>sare allowed and omitted (treated as if <code>FALSE</code>).
logical; should <b>arr</b>ay <b>ind</b>ices be returnedwhen <code>x</code> is an array?
integer-valued index vector, as resulting from<code>which(x)</code>.
<code>dim(.)</code> integer vector
optional list of character <code>dimnames(.)</code>.If <code>useNames</code> is true, to be used for constructing dimnames for<code>arrayInd()</code> (and hence, <code>which(*, arr.ind=TRUE)</code>).If <code>names(.dimnames)</code> is not empty, these are used ascolumn names.  <code>.dimnames[[1]]</code> is used as row names.
logical indicating if the value of <code>arrayInd()</code>should have (non-null) dimnames at all.
a vector (including a list or <code>expression</code>vector) giving data to fill the array.  Non-atomic classed objectsare coerced by <code>as.vector</code>.
the dim attribute for the array to be created, that is aninteger vector of length one or more giving the maximal indices ineach dimension.
either <code>NULL</code> or the names for the dimensions.This must a list (or it will be ignored) with one component for eachdimension, either <code>NULL</code> or a character vector of the lengthgiven by <code>dim</code> for that dimension.  The list can be named, andthe list names will be used as names for the dimensions.  If thelist is shorter than the number of dimensions, it is extended by<code>NULL</code>s to the length required.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
additional arguments to be passed to or from methods.
a vector (including a list or <code>expression</code>vector) giving data to fill the array.  Non-atomic classed objectsare coerced by <code>as.vector</code>.
the dim attribute for the array to be created, that is aninteger vector of length one or more giving the maximal indices ineach dimension.
either <code>NULL</code> or the names for the dimensions.This must a list (or it will be ignored) with one component for eachdimension, either <code>NULL</code> or a character vector of the lengthgiven by <code>dim</code> for that dimension.  The list can be named, andthe list names will be used as names for the dimensions.  If thelist is shorter than the number of dimensions, it is extended by<code>NULL</code>s to the length required.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
additional arguments to be passed to or from methods.
a non-empty character string naming the function to be called.
arguments to be part of the call.
an arbitrary <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
A non-negative integer specifying the desired length.Double values will be coerced to integer:supplying an argument of length other than one is an error.
object to be coerced or tested.
further arguments passed to or from other methods.
a condition object.
call expression.
a condition object.
expression to be evaluated.
expression to be evaluated before returning or exiting.
function.
character string.
character string.
character string naming a restart.
restart object.
object.
character string naming a condition class.
additional arguments; see details below.
an object to be converted.
<code>character</code> string.  If not specified, it will try<code>tryFormats</code> one by one on the first non-<code>NA</code> element, andgive an error if none works.  Otherwise, the processing is via<code>strptime()</code> whose help page describes availableconversion specifications.
<code>character</code> vector of <code>format</code>strings to try if <code>format</code> is not specified.
<code>logical</code> indicating to return <code>NA</code>(instead of signalling an error) if the format guessing does not succeed.
a <code>Date</code> object, or something which can be coerced by<code>as.Date(origin, ...)</code> to such an object.
a time zone name.
further arguments to be passed from or to other methods,including <code>format</code> for <code>as.character</code> and <code>as.Date</code>methods.
A non-negative integer specifying the desired length.Double values will be coerced to integer:supplying an argument of length other than one is an error.
object to be coerced or tested.
further arguments passed to or from other methods.
a condition object.
call expression.
a condition object.
expression to be evaluated.
expression to be evaluated before returning or exiting.
function.
character string.
character string.
character string naming a restart.
restart object.
object.
character string naming a condition class.
additional arguments; see details below.
A non-negative integer specifying the desired length.Double values will be coerced to integer:supplying an argument of length other than one is an error.
object to be coerced or tested.
further arguments passed to or from other methods.
An object, for the methods inheriting from class <code>"hexmode"</code>.
<code>NULL</code> or a positive integer specifying the minimumfield width to be used, with padding by leading zeroes.
a logical indicating whether to use upper-caseletters or lower-case letters (default).
further arguments passed to or from other methods.
a character vector with suitable numeric version strings (see‘Details’); for <code>package_version</code>, alternatively an Rversion object as obtained by <code>R.version</code>.
a logical indicating whether invalid numeric versionsshould results in an error (default) or not.
An object, for the methods inheriting from class <code>"octmode"</code>.
<code>NULL</code> or a positive integer specifying the minimumfield width to be used, with padding by leading zeroes.
further arguments passed to or from other methods.
An object to be converted: a character vector for<code>strptime</code>, an object which can be converted to<code>"POSIXlt"</code> for <code>strftime</code>.
A character string specifying the time zone to be used forthe conversion.  System-specific (see <code>as.POSIXlt</code>), but<code>""</code> is the current time zone, and <code>"GMT"</code> is UTC.Invalid values are most commonly treated as UTC, on some platforms witha warning.
A character string.  The default for the <code>format</code>methods is<code>"%Y-%m-%d %H:%M:%S"</code> if any element has a timecomponent which is not midnight, and <code>"%Y-%m-%d"</code>otherwise.  If <code>options("digits.secs")</code> is set, up tothe specified number of digits will be printed for seconds.
Further arguments to be passed from or to other methods.
logical.  Should the time zone abbreviation be appendedto the output?  This is used in printing times, and more reliablethan using <code>"%Z"</code>.
 The name of a file. 
 The character encoding to assume for the file. 
 The encoding with which to make strings: see the<code>encoding</code> argument of <code>parse</code>.
 A character vector of source lines.  Other <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> objectswill be coerced to character. 
 The timestamp to use on a copy of a file. 
 Is this <code>srcfilecopy</code> known to come from a file system file? 
 A <code>srcfile</code> object. 
 Line numbers. 
 A vector of four, six or eight values giving a source location; see‘Details’.
 An object of the appropriate class. 
 Whether to read the <code>srcfile</code> to obtain thetext of a <code>srcref</code>. 
 An optional second <code>srcref</code> object to mark the endof the character range. 
 Additional arguments to the methods; these will be ignored. 
numeric.  Desired length of the output vector,inputs being recycled as needed.
numeric vector.
numeric vector.
numeric vector.
numeric vector.
an object, probably of mode <code>complex</code>.
an object of mode <code>complex</code>, or one of a class for whicha methods has been defined.
further arguments passed to or from other methods.
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
<code>NULL</code> or a character vector giving the rownames for the data frame.  Missing values are not allowed.
logical. If <code>TRUE</code>, setting row names andconverting column names (to syntactic names: see<code>make.names</code>) is optional.  Note that all of <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>'s<span class="pkg">base</span> package <code>as.data.frame()</code> methods use<code>optional</code> only for column names treatment, basically with themeaning of <code>data.frame(*, check.names = !optional)</code>.See also the <code>make.names</code> argument of the <code>matrix</code> method.
additional arguments to be passed to or from methods.
logical: should the character vector be convertedto a factor?
logical or integer; indicating if column names withmore than 256 (or <code>cut.names</code> if that is numeric) charactersshould be shortened (and the last 6 characters replaced by <code>" ..."</code>).
(optional) character vector of column names.
logical indicating if empty column names, i.e.,<code>""</code> should be fixed up (in <code>data.frame</code>) or not.
logical; passed to the <code>data.frame()</code> call.
a <code>logical</code>, i.e., one of <code>FALSE, NA, TRUE</code>,indicating what should happen if the row names (of the matrix<code>x</code>) are invalid.  If they are invalid, the default,<code>TRUE</code>, calls <code>make.names(*, unique=TRUE)</code>;<code>make.names=NA</code> will use “automatic” row names and a<code>FALSE</code> value will signal an error for invalid row names.
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
<code>NULL</code> or a character vector giving the rownames for the data frame.  Missing values are not allowed.
logical. If <code>TRUE</code>, setting row names andconverting column names (to syntactic names: see<code>make.names</code>) is optional.  Note that all of <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>'s<span class="pkg">base</span> package <code>as.data.frame()</code> methods use<code>optional</code> only for column names treatment, basically with themeaning of <code>data.frame(*, check.names = !optional)</code>.See also the <code>make.names</code> argument of the <code>matrix</code> method.
additional arguments to be passed to or from methods.
logical: should the character vector be convertedto a factor?
logical or integer; indicating if column names withmore than 256 (or <code>cut.names</code> if that is numeric) charactersshould be shortened (and the last 6 characters replaced by <code>" ..."</code>).
(optional) character vector of column names.
logical indicating if empty column names, i.e.,<code>""</code> should be fixed up (in <code>data.frame</code>) or not.
logical; passed to the <code>data.frame()</code> call.
a <code>logical</code>, i.e., one of <code>FALSE, NA, TRUE</code>,indicating what should happen if the row names (of the matrix<code>x</code>) are invalid.  If they are invalid, the default,<code>TRUE</code>, calls <code>make.names(*, unique=TRUE)</code>;<code>make.names=NA</code> will use “automatic” row names and a<code>FALSE</code> value will signal an error for invalid row names.
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
<code>NULL</code> or a character vector giving the rownames for the data frame.  Missing values are not allowed.
logical. If <code>TRUE</code>, setting row names andconverting column names (to syntactic names: see<code>make.names</code>) is optional.  Note that all of <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>'s<span class="pkg">base</span> package <code>as.data.frame()</code> methods use<code>optional</code> only for column names treatment, basically with themeaning of <code>data.frame(*, check.names = !optional)</code>.See also the <code>make.names</code> argument of the <code>matrix</code> method.
additional arguments to be passed to or from methods.
logical: should the character vector be convertedto a factor?
logical or integer; indicating if column names withmore than 256 (or <code>cut.names</code> if that is numeric) charactersshould be shortened (and the last 6 characters replaced by <code>" ..."</code>).
(optional) character vector of column names.
logical indicating if empty column names, i.e.,<code>""</code> should be fixed up (in <code>data.frame</code>) or not.
logical; passed to the <code>data.frame()</code> call.
a <code>logical</code>, i.e., one of <code>FALSE, NA, TRUE</code>,indicating what should happen if the row names (of the matrix<code>x</code>) are invalid.  If they are invalid, the default,<code>TRUE</code>, calls <code>make.names(*, unique=TRUE)</code>;<code>make.names=NA</code> will use “automatic” row names and a<code>FALSE</code> value will signal an error for invalid row names.
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
<code>NULL</code> or a character vector giving the rownames for the data frame.  Missing values are not allowed.
logical. If <code>TRUE</code>, setting row names andconverting column names (to syntactic names: see<code>make.names</code>) is optional.  Note that all of <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>'s<span class="pkg">base</span> package <code>as.data.frame()</code> methods use<code>optional</code> only for column names treatment, basically with themeaning of <code>data.frame(*, check.names = !optional)</code>.See also the <code>make.names</code> argument of the <code>matrix</code> method.
additional arguments to be passed to or from methods.
logical: should the character vector be convertedto a factor?
logical or integer; indicating if column names withmore than 256 (or <code>cut.names</code> if that is numeric) charactersshould be shortened (and the last 6 characters replaced by <code>" ..."</code>).
(optional) character vector of column names.
logical indicating if empty column names, i.e.,<code>""</code> should be fixed up (in <code>data.frame</code>) or not.
logical; passed to the <code>data.frame()</code> call.
a <code>logical</code>, i.e., one of <code>FALSE, NA, TRUE</code>,indicating what should happen if the row names (of the matrix<code>x</code>) are invalid.  If they are invalid, the default,<code>TRUE</code>, calls <code>make.names(*, unique=TRUE)</code>;<code>make.names=NA</code> will use “automatic” row names and a<code>FALSE</code> value will signal an error for invalid row names.
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
<code>NULL</code> or a character vector giving the rownames for the data frame.  Missing values are not allowed.
logical. If <code>TRUE</code>, setting row names andconverting column names (to syntactic names: see<code>make.names</code>) is optional.  Note that all of <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>'s<span class="pkg">base</span> package <code>as.data.frame()</code> methods use<code>optional</code> only for column names treatment, basically with themeaning of <code>data.frame(*, check.names = !optional)</code>.See also the <code>make.names</code> argument of the <code>matrix</code> method.
additional arguments to be passed to or from methods.
logical: should the character vector be convertedto a factor?
logical or integer; indicating if column names withmore than 256 (or <code>cut.names</code> if that is numeric) charactersshould be shortened (and the last 6 characters replaced by <code>" ..."</code>).
(optional) character vector of column names.
logical indicating if empty column names, i.e.,<code>""</code> should be fixed up (in <code>data.frame</code>) or not.
logical; passed to the <code>data.frame()</code> call.
a <code>logical</code>, i.e., one of <code>FALSE, NA, TRUE</code>,indicating what should happen if the row names (of the matrix<code>x</code>) are invalid.  If they are invalid, the default,<code>TRUE</code>, calls <code>make.names(*, unique=TRUE)</code>;<code>make.names=NA</code> will use “automatic” row names and a<code>FALSE</code> value will signal an error for invalid row names.
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
<code>NULL</code> or a character vector giving the rownames for the data frame.  Missing values are not allowed.
logical. If <code>TRUE</code>, setting row names andconverting column names (to syntactic names: see<code>make.names</code>) is optional.  Note that all of <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>'s<span class="pkg">base</span> package <code>as.data.frame()</code> methods use<code>optional</code> only for column names treatment, basically with themeaning of <code>data.frame(*, check.names = !optional)</code>.See also the <code>make.names</code> argument of the <code>matrix</code> method.
additional arguments to be passed to or from methods.
logical: should the character vector be convertedto a factor?
logical or integer; indicating if column names withmore than 256 (or <code>cut.names</code> if that is numeric) charactersshould be shortened (and the last 6 characters replaced by <code>" ..."</code>).
(optional) character vector of column names.
logical indicating if empty column names, i.e.,<code>""</code> should be fixed up (in <code>data.frame</code>) or not.
logical; passed to the <code>data.frame()</code> call.
a <code>logical</code>, i.e., one of <code>FALSE, NA, TRUE</code>,indicating what should happen if the row names (of the matrix<code>x</code>) are invalid.  If they are invalid, the default,<code>TRUE</code>, calls <code>make.names(*, unique=TRUE)</code>;<code>make.names=NA</code> will use “automatic” row names and a<code>FALSE</code> value will signal an error for invalid row names.
a <code>Date</code> object to be summarized or printed.
number of significant digits for the computations.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
further arguments to be passed from or to other methods.
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
<code>NULL</code> or a character vector giving the rownames for the data frame.  Missing values are not allowed.
logical. If <code>TRUE</code>, setting row names andconverting column names (to syntactic names: see<code>make.names</code>) is optional.  Note that all of <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>'s<span class="pkg">base</span> package <code>as.data.frame()</code> methods use<code>optional</code> only for column names treatment, basically with themeaning of <code>data.frame(*, check.names = !optional)</code>.See also the <code>make.names</code> argument of the <code>matrix</code> method.
additional arguments to be passed to or from methods.
logical: should the character vector be convertedto a factor?
logical or integer; indicating if column names withmore than 256 (or <code>cut.names</code> if that is numeric) charactersshould be shortened (and the last 6 characters replaced by <code>" ..."</code>).
(optional) character vector of column names.
logical indicating if empty column names, i.e.,<code>""</code> should be fixed up (in <code>data.frame</code>) or not.
logical; passed to the <code>data.frame()</code> call.
a <code>logical</code>, i.e., one of <code>FALSE, NA, TRUE</code>,indicating what should happen if the row names (of the matrix<code>x</code>) are invalid.  If they are invalid, the default,<code>TRUE</code>, calls <code>make.names(*, unique=TRUE)</code>;<code>make.names=NA</code> will use “automatic” row names and a<code>FALSE</code> value will signal an error for invalid row names.
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
<code>NULL</code> or a character vector giving the rownames for the data frame.  Missing values are not allowed.
logical. If <code>TRUE</code>, setting row names andconverting column names (to syntactic names: see<code>make.names</code>) is optional.  Note that all of <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>'s<span class="pkg">base</span> package <code>as.data.frame()</code> methods use<code>optional</code> only for column names treatment, basically with themeaning of <code>data.frame(*, check.names = !optional)</code>.See also the <code>make.names</code> argument of the <code>matrix</code> method.
additional arguments to be passed to or from methods.
logical: should the character vector be convertedto a factor?
logical or integer; indicating if column names withmore than 256 (or <code>cut.names</code> if that is numeric) charactersshould be shortened (and the last 6 characters replaced by <code>" ..."</code>).
(optional) character vector of column names.
logical indicating if empty column names, i.e.,<code>""</code> should be fixed up (in <code>data.frame</code>) or not.
logical; passed to the <code>data.frame()</code> call.
a <code>logical</code>, i.e., one of <code>FALSE, NA, TRUE</code>,indicating what should happen if the row names (of the matrix<code>x</code>) are invalid.  If they are invalid, the default,<code>TRUE</code>, calls <code>make.names(*, unique=TRUE)</code>;<code>make.names=NA</code> will use “automatic” row names and a<code>FALSE</code> value will signal an error for invalid row names.
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
<code>NULL</code> or a character vector giving the rownames for the data frame.  Missing values are not allowed.
logical. If <code>TRUE</code>, setting row names andconverting column names (to syntactic names: see<code>make.names</code>) is optional.  Note that all of <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>'s<span class="pkg">base</span> package <code>as.data.frame()</code> methods use<code>optional</code> only for column names treatment, basically with themeaning of <code>data.frame(*, check.names = !optional)</code>.See also the <code>make.names</code> argument of the <code>matrix</code> method.
additional arguments to be passed to or from methods.
logical: should the character vector be convertedto a factor?
logical or integer; indicating if column names withmore than 256 (or <code>cut.names</code> if that is numeric) charactersshould be shortened (and the last 6 characters replaced by <code>" ..."</code>).
(optional) character vector of column names.
logical indicating if empty column names, i.e.,<code>""</code> should be fixed up (in <code>data.frame</code>) or not.
logical; passed to the <code>data.frame()</code> call.
a <code>logical</code>, i.e., one of <code>FALSE, NA, TRUE</code>,indicating what should happen if the row names (of the matrix<code>x</code>) are invalid.  If they are invalid, the default,<code>TRUE</code>, calls <code>make.names(*, unique=TRUE)</code>;<code>make.names=NA</code> will use “automatic” row names and a<code>FALSE</code> value will signal an error for invalid row names.
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
<code>NULL</code> or a character vector giving the rownames for the data frame.  Missing values are not allowed.
logical. If <code>TRUE</code>, setting row names andconverting column names (to syntactic names: see<code>make.names</code>) is optional.  Note that all of <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>'s<span class="pkg">base</span> package <code>as.data.frame()</code> methods use<code>optional</code> only for column names treatment, basically with themeaning of <code>data.frame(*, check.names = !optional)</code>.See also the <code>make.names</code> argument of the <code>matrix</code> method.
additional arguments to be passed to or from methods.
logical: should the character vector be convertedto a factor?
logical or integer; indicating if column names withmore than 256 (or <code>cut.names</code> if that is numeric) charactersshould be shortened (and the last 6 characters replaced by <code>" ..."</code>).
(optional) character vector of column names.
logical indicating if empty column names, i.e.,<code>""</code> should be fixed up (in <code>data.frame</code>) or not.
logical; passed to the <code>data.frame()</code> call.
a <code>logical</code>, i.e., one of <code>FALSE, NA, TRUE</code>,indicating what should happen if the row names (of the matrix<code>x</code>) are invalid.  If they are invalid, the default,<code>TRUE</code>, calls <code>make.names(*, unique=TRUE)</code>;<code>make.names=NA</code> will use “automatic” row names and a<code>FALSE</code> value will signal an error for invalid row names.
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
<code>NULL</code> or a character vector giving the rownames for the data frame.  Missing values are not allowed.
logical. If <code>TRUE</code>, setting row names andconverting column names (to syntactic names: see<code>make.names</code>) is optional.  Note that all of <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>'s<span class="pkg">base</span> package <code>as.data.frame()</code> methods use<code>optional</code> only for column names treatment, basically with themeaning of <code>data.frame(*, check.names = !optional)</code>.See also the <code>make.names</code> argument of the <code>matrix</code> method.
additional arguments to be passed to or from methods.
logical: should the character vector be convertedto a factor?
logical or integer; indicating if column names withmore than 256 (or <code>cut.names</code> if that is numeric) charactersshould be shortened (and the last 6 characters replaced by <code>" ..."</code>).
(optional) character vector of column names.
logical indicating if empty column names, i.e.,<code>""</code> should be fixed up (in <code>data.frame</code>) or not.
logical; passed to the <code>data.frame()</code> call.
a <code>logical</code>, i.e., one of <code>FALSE, NA, TRUE</code>,indicating what should happen if the row names (of the matrix<code>x</code>) are invalid.  If they are invalid, the default,<code>TRUE</code>, calls <code>make.names(*, unique=TRUE)</code>;<code>make.names=NA</code> will use “automatic” row names and a<code>FALSE</code> value will signal an error for invalid row names.
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
<code>NULL</code> or a character vector giving the rownames for the data frame.  Missing values are not allowed.
logical. If <code>TRUE</code>, setting row names andconverting column names (to syntactic names: see<code>make.names</code>) is optional.  Note that all of <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>'s<span class="pkg">base</span> package <code>as.data.frame()</code> methods use<code>optional</code> only for column names treatment, basically with themeaning of <code>data.frame(*, check.names = !optional)</code>.See also the <code>make.names</code> argument of the <code>matrix</code> method.
additional arguments to be passed to or from methods.
logical: should the character vector be convertedto a factor?
logical or integer; indicating if column names withmore than 256 (or <code>cut.names</code> if that is numeric) charactersshould be shortened (and the last 6 characters replaced by <code>" ..."</code>).
(optional) character vector of column names.
logical indicating if empty column names, i.e.,<code>""</code> should be fixed up (in <code>data.frame</code>) or not.
logical; passed to the <code>data.frame()</code> call.
a <code>logical</code>, i.e., one of <code>FALSE, NA, TRUE</code>,indicating what should happen if the row names (of the matrix<code>x</code>) are invalid.  If they are invalid, the default,<code>TRUE</code>, calls <code>make.names(*, unique=TRUE)</code>;<code>make.names=NA</code> will use “automatic” row names and a<code>FALSE</code> value will signal an error for invalid row names.
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
<code>NULL</code> or a character vector giving the rownames for the data frame.  Missing values are not allowed.
logical. If <code>TRUE</code>, setting row names andconverting column names (to syntactic names: see<code>make.names</code>) is optional.  Note that all of <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>'s<span class="pkg">base</span> package <code>as.data.frame()</code> methods use<code>optional</code> only for column names treatment, basically with themeaning of <code>data.frame(*, check.names = !optional)</code>.See also the <code>make.names</code> argument of the <code>matrix</code> method.
additional arguments to be passed to or from methods.
logical: should the character vector be convertedto a factor?
logical or integer; indicating if column names withmore than 256 (or <code>cut.names</code> if that is numeric) charactersshould be shortened (and the last 6 characters replaced by <code>" ..."</code>).
(optional) character vector of column names.
logical indicating if empty column names, i.e.,<code>""</code> should be fixed up (in <code>data.frame</code>) or not.
logical; passed to the <code>data.frame()</code> call.
a <code>logical</code>, i.e., one of <code>FALSE, NA, TRUE</code>,indicating what should happen if the row names (of the matrix<code>x</code>) are invalid.  If they are invalid, the default,<code>TRUE</code>, calls <code>make.names(*, unique=TRUE)</code>;<code>make.names=NA</code> will use “automatic” row names and a<code>FALSE</code> value will signal an error for invalid row names.
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
<code>NULL</code> or a character vector giving the rownames for the data frame.  Missing values are not allowed.
logical. If <code>TRUE</code>, setting row names andconverting column names (to syntactic names: see<code>make.names</code>) is optional.  Note that all of <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>'s<span class="pkg">base</span> package <code>as.data.frame()</code> methods use<code>optional</code> only for column names treatment, basically with themeaning of <code>data.frame(*, check.names = !optional)</code>.See also the <code>make.names</code> argument of the <code>matrix</code> method.
additional arguments to be passed to or from methods.
logical: should the character vector be convertedto a factor?
logical or integer; indicating if column names withmore than 256 (or <code>cut.names</code> if that is numeric) charactersshould be shortened (and the last 6 characters replaced by <code>" ..."</code>).
(optional) character vector of column names.
logical indicating if empty column names, i.e.,<code>""</code> should be fixed up (in <code>data.frame</code>) or not.
logical; passed to the <code>data.frame()</code> call.
a <code>logical</code>, i.e., one of <code>FALSE, NA, TRUE</code>,indicating what should happen if the row names (of the matrix<code>x</code>) are invalid.  If they are invalid, the default,<code>TRUE</code>, calls <code>make.names(*, unique=TRUE)</code>;<code>make.names=NA</code> will use “automatic” row names and a<code>FALSE</code> value will signal an error for invalid row names.
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
<code>NULL</code> or a character vector giving the rownames for the data frame.  Missing values are not allowed.
logical. If <code>TRUE</code>, setting row names andconverting column names (to syntactic names: see<code>make.names</code>) is optional.  Note that all of <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>'s<span class="pkg">base</span> package <code>as.data.frame()</code> methods use<code>optional</code> only for column names treatment, basically with themeaning of <code>data.frame(*, check.names = !optional)</code>.See also the <code>make.names</code> argument of the <code>matrix</code> method.
additional arguments to be passed to or from methods.
logical: should the character vector be convertedto a factor?
logical or integer; indicating if column names withmore than 256 (or <code>cut.names</code> if that is numeric) charactersshould be shortened (and the last 6 characters replaced by <code>" ..."</code>).
(optional) character vector of column names.
logical indicating if empty column names, i.e.,<code>""</code> should be fixed up (in <code>data.frame</code>) or not.
logical; passed to the <code>data.frame()</code> call.
a <code>logical</code>, i.e., one of <code>FALSE, NA, TRUE</code>,indicating what should happen if the row names (of the matrix<code>x</code>) are invalid.  If they are invalid, the default,<code>TRUE</code>, calls <code>make.names(*, unique=TRUE)</code>;<code>make.names=NA</code> will use “automatic” row names and a<code>FALSE</code> value will signal an error for invalid row names.
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
<code>NULL</code> or a character vector giving the rownames for the data frame.  Missing values are not allowed.
logical. If <code>TRUE</code>, setting row names andconverting column names (to syntactic names: see<code>make.names</code>) is optional.  Note that all of <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>'s<span class="pkg">base</span> package <code>as.data.frame()</code> methods use<code>optional</code> only for column names treatment, basically with themeaning of <code>data.frame(*, check.names = !optional)</code>.See also the <code>make.names</code> argument of the <code>matrix</code> method.
additional arguments to be passed to or from methods.
logical: should the character vector be convertedto a factor?
logical or integer; indicating if column names withmore than 256 (or <code>cut.names</code> if that is numeric) charactersshould be shortened (and the last 6 characters replaced by <code>" ..."</code>).
(optional) character vector of column names.
logical indicating if empty column names, i.e.,<code>""</code> should be fixed up (in <code>data.frame</code>) or not.
logical; passed to the <code>data.frame()</code> call.
a <code>logical</code>, i.e., one of <code>FALSE, NA, TRUE</code>,indicating what should happen if the row names (of the matrix<code>x</code>) are invalid.  If they are invalid, the default,<code>TRUE</code>, calls <code>make.names(*, unique=TRUE)</code>;<code>make.names=NA</code> will use “automatic” row names and a<code>FALSE</code> value will signal an error for invalid row names.
a character vector with suitable numeric version strings (see‘Details’); for <code>package_version</code>, alternatively an Rversion object as obtained by <code>R.version</code>.
a logical indicating whether invalid numeric versionsshould results in an error (default) or not.
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
<code>NULL</code> or a character vector giving the rownames for the data frame.  Missing values are not allowed.
logical. If <code>TRUE</code>, setting row names andconverting column names (to syntactic names: see<code>make.names</code>) is optional.  Note that all of <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>'s<span class="pkg">base</span> package <code>as.data.frame()</code> methods use<code>optional</code> only for column names treatment, basically with themeaning of <code>data.frame(*, check.names = !optional)</code>.See also the <code>make.names</code> argument of the <code>matrix</code> method.
additional arguments to be passed to or from methods.
logical: should the character vector be convertedto a factor?
logical or integer; indicating if column names withmore than 256 (or <code>cut.names</code> if that is numeric) charactersshould be shortened (and the last 6 characters replaced by <code>" ..."</code>).
(optional) character vector of column names.
logical indicating if empty column names, i.e.,<code>""</code> should be fixed up (in <code>data.frame</code>) or not.
logical; passed to the <code>data.frame()</code> call.
a <code>logical</code>, i.e., one of <code>FALSE, NA, TRUE</code>,indicating what should happen if the row names (of the matrix<code>x</code>) are invalid.  If they are invalid, the default,<code>TRUE</code>, calls <code>make.names(*, unique=TRUE)</code>;<code>make.names=NA</code> will use “automatic” row names and a<code>FALSE</code> value will signal an error for invalid row names.
an object to be printed or summarized from one of thedate-time classes.
for timezone formatting, passed to <code>format.POSIXct</code>.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
number of significant digits for the computations:should be high enough to represent the least important time unitexactly.
further arguments to be passed from or to other methods.
date-time objects
date-time objects or character vectors.  (Charactervectors are converted by <code>as.POSIXct</code>.)
a numeric vector (in seconds)
one of <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>or <code>&gt;=</code>.
an object to be printed or summarized from one of thedate-time classes.
for timezone formatting, passed to <code>format.POSIXct</code>.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
number of significant digits for the computations:should be high enough to represent the least important time unitexactly.
further arguments to be passed from or to other methods.
date-time objects
date-time objects or character vectors.  (Charactervectors are converted by <code>as.POSIXct</code>.)
a numeric vector (in seconds)
one of <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>or <code>&gt;=</code>.
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
<code>NULL</code> or a character vector giving the rownames for the data frame.  Missing values are not allowed.
logical. If <code>TRUE</code>, setting row names andconverting column names (to syntactic names: see<code>make.names</code>) is optional.  Note that all of <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>'s<span class="pkg">base</span> package <code>as.data.frame()</code> methods use<code>optional</code> only for column names treatment, basically with themeaning of <code>data.frame(*, check.names = !optional)</code>.See also the <code>make.names</code> argument of the <code>matrix</code> method.
additional arguments to be passed to or from methods.
logical: should the character vector be convertedto a factor?
logical or integer; indicating if column names withmore than 256 (or <code>cut.names</code> if that is numeric) charactersshould be shortened (and the last 6 characters replaced by <code>" ..."</code>).
(optional) character vector of column names.
logical indicating if empty column names, i.e.,<code>""</code> should be fixed up (in <code>data.frame</code>) or not.
logical; passed to the <code>data.frame()</code> call.
a <code>logical</code>, i.e., one of <code>FALSE, NA, TRUE</code>,indicating what should happen if the row names (of the matrix<code>x</code>) are invalid.  If they are invalid, the default,<code>TRUE</code>, calls <code>make.names(*, unique=TRUE)</code>;<code>make.names=NA</code> will use “automatic” row names and a<code>FALSE</code> value will signal an error for invalid row names.
one or more objects which can be interpreted as factors(including character strings), or a list (or data frame) whosecomponents can be so interpreted.  (For <code>as.table</code>, argumentspassed to specific methods; for <code>as.data.frame</code>, unused.)
levels to remove for all factors in <code>...</code>.  Ifit does not contain <code>NA</code> and <code>useNA</code> is notspecified, it implies <code>useNA = "ifany"</code>.  See‘Details’ for its interpretation for non-factor arguments.
whether to include <code>NA</code> values in the table.See ‘Details’.  Can be abbreviated.
the names to be given to the dimensions in the result (the<em>dimnames names</em>).
controls how the default <code>dnn</code> isconstructed.  See ‘Details’.
an arbitrary <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, or an object inheriting from class<code>"table"</code> for the <code>as.data.frame</code> method. Note that<code>as.data.frame.table(x, *)</code> may be called explicitly fornon-table <code>x</code> for “reshaping” <code>array</code>s.
a character vector giving the row names for the dataframe.
The name to be used for the column of tableentries, usually counts.
logical: should the classifying factors bereturned as factors (the default) or character vectors?
passed to <code>provideDimnames</code>.
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
<code>NULL</code> or a character vector giving the rownames for the data frame.  Missing values are not allowed.
logical. If <code>TRUE</code>, setting row names andconverting column names (to syntactic names: see<code>make.names</code>) is optional.  Note that all of <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>'s<span class="pkg">base</span> package <code>as.data.frame()</code> methods use<code>optional</code> only for column names treatment, basically with themeaning of <code>data.frame(*, check.names = !optional)</code>.See also the <code>make.names</code> argument of the <code>matrix</code> method.
additional arguments to be passed to or from methods.
logical: should the character vector be convertedto a factor?
logical or integer; indicating if column names withmore than 256 (or <code>cut.names</code> if that is numeric) charactersshould be shortened (and the last 6 characters replaced by <code>" ..."</code>).
(optional) character vector of column names.
logical indicating if empty column names, i.e.,<code>""</code> should be fixed up (in <code>data.frame</code>) or not.
logical; passed to the <code>data.frame()</code> call.
a <code>logical</code>, i.e., one of <code>FALSE, NA, TRUE</code>,indicating what should happen if the row names (of the matrix<code>x</code>) are invalid.  If they are invalid, the default,<code>TRUE</code>, calls <code>make.names(*, unique=TRUE)</code>;<code>make.names=NA</code> will use “automatic” row names and a<code>FALSE</code> value will signal an error for invalid row names.
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
<code>NULL</code> or a character vector giving the rownames for the data frame.  Missing values are not allowed.
logical. If <code>TRUE</code>, setting row names andconverting column names (to syntactic names: see<code>make.names</code>) is optional.  Note that all of <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>'s<span class="pkg">base</span> package <code>as.data.frame()</code> methods use<code>optional</code> only for column names treatment, basically with themeaning of <code>data.frame(*, check.names = !optional)</code>.See also the <code>make.names</code> argument of the <code>matrix</code> method.
additional arguments to be passed to or from methods.
logical: should the character vector be convertedto a factor?
logical or integer; indicating if column names withmore than 256 (or <code>cut.names</code> if that is numeric) charactersshould be shortened (and the last 6 characters replaced by <code>" ..."</code>).
(optional) character vector of column names.
logical indicating if empty column names, i.e.,<code>""</code> should be fixed up (in <code>data.frame</code>) or not.
logical; passed to the <code>data.frame()</code> call.
a <code>logical</code>, i.e., one of <code>FALSE, NA, TRUE</code>,indicating what should happen if the row names (of the matrix<code>x</code>) are invalid.  If they are invalid, the default,<code>TRUE</code>, calls <code>make.names(*, unique=TRUE)</code>;<code>make.names=NA</code> will use “automatic” row names and a<code>FALSE</code> value will signal an error for invalid row names.
an object to be converted.
<code>character</code> string.  If not specified, it will try<code>tryFormats</code> one by one on the first non-<code>NA</code> element, andgive an error if none works.  Otherwise, the processing is via<code>strptime()</code> whose help page describes availableconversion specifications.
<code>character</code> vector of <code>format</code>strings to try if <code>format</code> is not specified.
<code>logical</code> indicating to return <code>NA</code>(instead of signalling an error) if the format guessing does not succeed.
a <code>Date</code> object, or something which can be coerced by<code>as.Date(origin, ...)</code> to such an object.
a time zone name.
further arguments to be passed from or to other methods,including <code>format</code> for <code>as.character</code> and <code>as.Date</code>methods.
an object to be converted.
<code>character</code> string.  If not specified, it will try<code>tryFormats</code> one by one on the first non-<code>NA</code> element, andgive an error if none works.  Otherwise, the processing is via<code>strptime()</code> whose help page describes availableconversion specifications.
<code>character</code> vector of <code>format</code>strings to try if <code>format</code> is not specified.
<code>logical</code> indicating to return <code>NA</code>(instead of signalling an error) if the format guessing does not succeed.
a <code>Date</code> object, or something which can be coerced by<code>as.Date(origin, ...)</code> to such an object.
a time zone name.
further arguments to be passed from or to other methods,including <code>format</code> for <code>as.character</code> and <code>as.Date</code>methods.
an object to be converted.
<code>character</code> string.  If not specified, it will try<code>tryFormats</code> one by one on the first non-<code>NA</code> element, andgive an error if none works.  Otherwise, the processing is via<code>strptime()</code> whose help page describes availableconversion specifications.
<code>character</code> vector of <code>format</code>strings to try if <code>format</code> is not specified.
<code>logical</code> indicating to return <code>NA</code>(instead of signalling an error) if the format guessing does not succeed.
a <code>Date</code> object, or something which can be coerced by<code>as.Date(origin, ...)</code> to such an object.
a time zone name.
further arguments to be passed from or to other methods,including <code>format</code> for <code>as.character</code> and <code>as.Date</code>methods.
an object to be converted.
<code>character</code> string.  If not specified, it will try<code>tryFormats</code> one by one on the first non-<code>NA</code> element, andgive an error if none works.  Otherwise, the processing is via<code>strptime()</code> whose help page describes availableconversion specifications.
<code>character</code> vector of <code>format</code>strings to try if <code>format</code> is not specified.
<code>logical</code> indicating to return <code>NA</code>(instead of signalling an error) if the format guessing does not succeed.
a <code>Date</code> object, or something which can be coerced by<code>as.Date(origin, ...)</code> to such an object.
a time zone name.
further arguments to be passed from or to other methods,including <code>format</code> for <code>as.character</code> and <code>as.Date</code>methods.
an object to be converted.
<code>character</code> string.  If not specified, it will try<code>tryFormats</code> one by one on the first non-<code>NA</code> element, andgive an error if none works.  Otherwise, the processing is via<code>strptime()</code> whose help page describes availableconversion specifications.
<code>character</code> vector of <code>format</code>strings to try if <code>format</code> is not specified.
<code>logical</code> indicating to return <code>NA</code>(instead of signalling an error) if the format guessing does not succeed.
a <code>Date</code> object, or something which can be coerced by<code>as.Date(origin, ...)</code> to such an object.
a time zone name.
further arguments to be passed from or to other methods,including <code>format</code> for <code>as.character</code> and <code>as.Date</code>methods.
an object to be converted.
<code>character</code> string.  If not specified, it will try<code>tryFormats</code> one by one on the first non-<code>NA</code> element, andgive an error if none works.  Otherwise, the processing is via<code>strptime()</code> whose help page describes availableconversion specifications.
<code>character</code> vector of <code>format</code>strings to try if <code>format</code> is not specified.
<code>logical</code> indicating to return <code>NA</code>(instead of signalling an error) if the format guessing does not succeed.
a <code>Date</code> object, or something which can be coerced by<code>as.Date(origin, ...)</code> to such an object.
a time zone name.
further arguments to be passed from or to other methods,including <code>format</code> for <code>as.character</code> and <code>as.Date</code>methods.
an object to be converted.
<code>character</code> string.  If not specified, it will try<code>tryFormats</code> one by one on the first non-<code>NA</code> element, andgive an error if none works.  Otherwise, the processing is via<code>strptime()</code> whose help page describes availableconversion specifications.
<code>character</code> vector of <code>format</code>strings to try if <code>format</code> is not specified.
<code>logical</code> indicating to return <code>NA</code>(instead of signalling an error) if the format guessing does not succeed.
a <code>Date</code> object, or something which can be coerced by<code>as.Date(origin, ...)</code> to such an object.
a time zone name.
further arguments to be passed from or to other methods,including <code>format</code> for <code>as.character</code> and <code>as.Date</code>methods.
date-time or date objects.
an optional time zone specification to be used for theconversion, mainly for <code>"POSIXlt"</code> objects.
character string.  Units in which the results aredesired.  Can be abbreviated.
character string.  Like <code>units</code>, except thatabbreviations are not allowed.
character string or numeric value specifying a time interval.
character specifying the format of <code>tim</code>: see<code>strptime</code>.  The default is a locale-specific time format.
an object inheriting from class <code>"difftime"</code>.
arguments to be passed to or from other methods.
A non-negative integer specifying the desired length.Double values will be coerced to integer:supplying an argument of length other than one is an error.
object to be coerced or tested.
further arguments passed to or from other methods.
date-time or date objects.
an optional time zone specification to be used for theconversion, mainly for <code>"POSIXlt"</code> objects.
character string.  Units in which the results aredesired.  Can be abbreviated.
character string.  Like <code>units</code>, except thatabbreviations are not allowed.
character string or numeric value specifying a time interval.
character specifying the format of <code>tim</code>: see<code>strptime</code>.  The default is a locale-specific time format.
an object inheriting from class <code>"difftime"</code>.
arguments to be passed to or from other methods.
<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>  object to be converted.
time zone specification to be used for the conversion,<em>if one is required</em>.  System-specific (see time zones),but <code>""</code> is the current time zone, and <code>"GMT"</code> is UTC(Universal Time, Coordinated).  Invalid values are most commonlytreated as UTC, on some platforms with a warning.
further arguments to be passed to or from other methods.
character string giving a date-time format as usedby <code>strptime</code>.
<code>character</code> vector of <code>format</code>strings to try if <code>format</code> is not specified.
<code>logical</code> indicating to return <code>NA</code>(instead of signalling an error) if the format guessing does not succeed.
a date-time object, or something which can be coerced by<code>as.POSIXct(tz = "GMT")</code> to such an object.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object to convert.  If it is already anenvironment, just return it.  If it is a positive number, return theenvironment corresponding to that position on the search list. If itis <code>-1</code>, the environment it is called from.  Ifit is a character string, match the string to the names on thesearch list.

If it is a list, the equivalent of <code>list2env(x,      parent = emptyenv())</code> is returned.

If <code>is.object(x)</code> is true and it has a <code>class</code>for which an <code>as.environment</code> method is found, that is used.
<code>expression</code>: <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> objects, typically calls, symbolsor constants.<br><code>as.expression</code>: arguments to be passed to methods.
an arbitrary <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
<code>expression</code>: <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> objects, typically calls, symbolsor constants.<br><code>as.expression</code>: arguments to be passed to methods.
an arbitrary <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
a vector of data, usually taking a small number of distinctvalues.
an optional vector of the unique values (as character strings)that <code>x</code> might have taken.  The default is the unique set ofvalues taken by <code>as.character(x)</code>, sorted intoincreasing order <em>of <code>x</code></em>.  Note that this set can bespecified as smaller than <code>sort(unique(x))</code>.
<em>either</em> an optional character vector oflabels for the levels (in the same order as <code>levels</code> afterremoving those in <code>exclude</code>), <em>or</em> a character string oflength 1.  Duplicated values in <code>labels</code> can be used to mapdifferent values of <code>x</code> to the same factor level.
a vector of values to be excluded when forming theset of levels.  This may be factor with the same level set as <code>x</code>or should be a <code>character</code>.
logical flag to determine if the levels should be regardedas ordered (in the order given).
an upper bound on the number of levels; see ‘Details’.
(in <code>ordered(.)</code>): any of the above, apart from<code>ordered</code> itself.
only add an <code>NA</code> level if it is used, i.e.if <code>any(is.na(x))</code>.
object to convert, a list for the default method.
additional arguments, depending on object
environment in which the function should be defined
object to convert, a list for the default method.
additional arguments, depending on object
environment in which the function should be defined
An object, for the methods inheriting from class <code>"hexmode"</code>.
<code>NULL</code> or a positive integer specifying the minimumfield width to be used, with padding by leading zeroes.
a logical indicating whether to use upper-caseletters or lower-case letters (default).
further arguments passed to or from other methods.
A non-negative integer specifying the desired length.Double values will be coerced to integer:supplying an argument of length other than one is an error.
object to be coerced or tested.
further arguments passed to or from other methods.
objects, possibly named.
object to be coerced or tested.
a logical indicating whether to copy all values or(default) only those whose names do not begin with a dot.
a logical indicating whether the <code>names</code> ofthe resulting list should be sorted (increasingly).  Note that thisis somewhat costly, but may be useful for comparison of environments.
objects, possibly named.
object to be coerced or tested.
a logical indicating whether to copy all values or(default) only those whose names do not begin with a dot.
a logical indicating whether the <code>names</code> ofthe resulting list should be sorted (increasingly).  Note that thisis somewhat costly, but may be useful for comparison of environments.
a <code>Date</code> object to be summarized or printed.
number of significant digits for the computations.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
further arguments to be passed from or to other methods.
objects, possibly named.
object to be coerced or tested.
a logical indicating whether to copy all values or(default) only those whose names do not begin with a dot.
a logical indicating whether the <code>names</code> ofthe resulting list should be sorted (increasingly).  Note that thisis somewhat costly, but may be useful for comparison of environments.
date-time or date objects.
an optional time zone specification to be used for theconversion, mainly for <code>"POSIXlt"</code> objects.
character string.  Units in which the results aredesired.  Can be abbreviated.
character string.  Like <code>units</code>, except thatabbreviations are not allowed.
character string or numeric value specifying a time interval.
character specifying the format of <code>tim</code>: see<code>strptime</code>.  The default is a locale-specific time format.
an object inheriting from class <code>"difftime"</code>.
arguments to be passed to or from other methods.
objects, possibly named.
object to be coerced or tested.
a logical indicating whether to copy all values or(default) only those whose names do not begin with a dot.
a logical indicating whether the <code>names</code> ofthe resulting list should be sorted (increasingly).  Note that thisis somewhat costly, but may be useful for comparison of environments.
objects, possibly named.
object to be coerced or tested.
a logical indicating whether to copy all values or(default) only those whose names do not begin with a dot.
a logical indicating whether the <code>names</code> ofthe resulting list should be sorted (increasingly).  Note that thisis somewhat costly, but may be useful for comparison of environments.
objects, possibly named.
object to be coerced or tested.
a logical indicating whether to copy all values or(default) only those whose names do not begin with a dot.
a logical indicating whether the <code>names</code> ofthe resulting list should be sorted (increasingly).  Note that thisis somewhat costly, but may be useful for comparison of environments.
a character vector with suitable numeric version strings (see‘Details’); for <code>package_version</code>, alternatively an Rversion object as obtained by <code>R.version</code>.
a logical indicating whether invalid numeric versionsshould results in an error (default) or not.
an object to be printed or summarized from one of thedate-time classes.
for timezone formatting, passed to <code>format.POSIXct</code>.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
number of significant digits for the computations:should be high enough to represent the least important time unitexactly.
further arguments to be passed from or to other methods.
date-time objects
date-time objects or character vectors.  (Charactervectors are converted by <code>as.POSIXct</code>.)
a numeric vector (in seconds)
one of <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>or <code>&gt;=</code>.
an object to be printed or summarized from one of thedate-time classes.
for timezone formatting, passed to <code>format.POSIXct</code>.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
number of significant digits for the computations:should be high enough to represent the least important time unitexactly.
further arguments to be passed from or to other methods.
date-time objects
date-time objects or character vectors.  (Charactervectors are converted by <code>as.POSIXct</code>.)
a numeric vector (in seconds)
one of <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>or <code>&gt;=</code>.
A non-negative integer specifying the desired length.Double values will be coerced to integer:supplying an argument of length other than one is an error.
object to be coerced or tested.
further arguments passed to or from other methods.
A non-negative integer specifying the desired length.Double values will be coerced to integer:supplying an argument of length other than one is an error.
object to be coerced or tested.
further arguments passed to or from other methods.
an optional data vector (including a list or<code>expression</code> vector).  Non-atomic classed <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> objects arecoerced by <code>as.vector</code> and all attributes discarded.
the desired number of rows.
the desired number of columns.
logical. If <code>FALSE</code> (the default) the matrix isfilled by columns, otherwise the matrix is filled by rows.
A <code>dimnames</code> attribute for the matrix:<code>NULL</code> or a <code>list</code> of length 2 giving the row and columnnames respectively.  An empty list is treated as <code>NULL</code>, and alist of length one as row names.  The list can be named, and thelist names will be used as names for the dimensions.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
additional arguments to be passed to or from methods.
logical indicating if the resulting matrixshould have character (rather than <code>NULL</code>)<code>rownames</code>.  The default, <code>NA</code>, uses <code>NULL</code>rownames if the data frame has ‘automatic’ row.names or for azero-row data frame.
an optional data vector (including a list or<code>expression</code> vector).  Non-atomic classed <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> objects arecoerced by <code>as.vector</code> and all attributes discarded.
the desired number of rows.
the desired number of columns.
logical. If <code>FALSE</code> (the default) the matrix isfilled by columns, otherwise the matrix is filled by rows.
A <code>dimnames</code> attribute for the matrix:<code>NULL</code> or a <code>list</code> of length 2 giving the row and columnnames respectively.  An empty list is treated as <code>NULL</code>, and alist of length one as row names.  The list can be named, and thelist names will be used as names for the dimensions.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
additional arguments to be passed to or from methods.
logical indicating if the resulting matrixshould have character (rather than <code>NULL</code>)<code>rownames</code>.  The default, <code>NA</code>, uses <code>NULL</code>rownames if the data frame has ‘automatic’ row.names or for azero-row data frame.
an optional data vector (including a list or<code>expression</code> vector).  Non-atomic classed <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> objects arecoerced by <code>as.vector</code> and all attributes discarded.
the desired number of rows.
the desired number of columns.
logical. If <code>FALSE</code> (the default) the matrix isfilled by columns, otherwise the matrix is filled by rows.
A <code>dimnames</code> attribute for the matrix:<code>NULL</code> or a <code>list</code> of length 2 giving the row and columnnames respectively.  An empty list is treated as <code>NULL</code>, and alist of length one as row names.  The list can be named, and thelist names will be used as names for the dimensions.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
additional arguments to be passed to or from methods.
logical indicating if the resulting matrixshould have character (rather than <code>NULL</code>)<code>rownames</code>.  The default, <code>NA</code>, uses <code>NULL</code>rownames if the data frame has ‘automatic’ row.names or for azero-row data frame.
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, typically a vector of<code>character</code> strings.
optional <code>logical</code> eventually to be passed to<code>print()</code>, used by <code>print.default()</code>, indicatingwhether or not strings should be right aligned.
an object of class <code>"noquote"</code>.
further options passed to next methods, such as <code>print</code>.
for compatibility with the generic <code>c</code> function.
an object to be printed or summarized from one of thedate-time classes.
for timezone formatting, passed to <code>format.POSIXct</code>.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
number of significant digits for the computations:should be high enough to represent the least important time unitexactly.
further arguments to be passed from or to other methods.
date-time objects
date-time objects or character vectors.  (Charactervectors are converted by <code>as.POSIXct</code>.)
a numeric vector (in seconds)
one of <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>or <code>&gt;=</code>.
object to be coerced or tested.
an object to be tested or coerced.
ignored.
an object to be tested or coerced.
ignored.
A non-negative integer specifying the desired length.Double values will be coerced to integer:supplying an argument of length other than one is an error.
object to be coerced or tested.
further arguments passed to or from other methods.
a character vector with suitable numeric version strings (see‘Details’); for <code>package_version</code>, alternatively an Rversion object as obtained by <code>R.version</code>.
a logical indicating whether invalid numeric versionsshould results in an error (default) or not.
An object, for the methods inheriting from class <code>"octmode"</code>.
<code>NULL</code> or a positive integer specifying the minimumfield width to be used, with padding by leading zeroes.
further arguments passed to or from other methods.
a vector of data, usually taking a small number of distinctvalues.
an optional vector of the unique values (as character strings)that <code>x</code> might have taken.  The default is the unique set ofvalues taken by <code>as.character(x)</code>, sorted intoincreasing order <em>of <code>x</code></em>.  Note that this set can bespecified as smaller than <code>sort(unique(x))</code>.
<em>either</em> an optional character vector oflabels for the levels (in the same order as <code>levels</code> afterremoving those in <code>exclude</code>), <em>or</em> a character string oflength 1.  Duplicated values in <code>labels</code> can be used to mapdifferent values of <code>x</code> to the same factor level.
a vector of values to be excluded when forming theset of levels.  This may be factor with the same level set as <code>x</code>or should be a <code>character</code>.
logical flag to determine if the levels should be regardedas ordered (in the order given).
an upper bound on the number of levels; see ‘Details’.
(in <code>ordered(.)</code>): any of the above, apart from<code>ordered</code> itself.
only add an <code>NA</code> level if it is used, i.e.if <code>any(is.na(x))</code>.
a character vector with suitable numeric version strings (see‘Details’); for <code>package_version</code>, alternatively an Rversion object as obtained by <code>R.version</code>.
a logical indicating whether invalid numeric versionsshould results in an error (default) or not.
objects, possibly named.
object to be coerced or tested.
a logical indicating whether to copy all values or(default) only those whose names do not begin with a dot.
a logical indicating whether the <code>names</code> ofthe resulting list should be sorted (increasingly).  Note that thisis somewhat costly, but may be useful for comparison of environments.
<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>  object to be converted.
time zone specification to be used for the conversion,<em>if one is required</em>.  System-specific (see time zones),but <code>""</code> is the current time zone, and <code>"GMT"</code> is UTC(Universal Time, Coordinated).  Invalid values are most commonlytreated as UTC, on some platforms with a warning.
further arguments to be passed to or from other methods.
character string giving a date-time format as usedby <code>strptime</code>.
<code>character</code> vector of <code>format</code>strings to try if <code>format</code> is not specified.
<code>logical</code> indicating to return <code>NA</code>(instead of signalling an error) if the format guessing does not succeed.
a date-time object, or something which can be coerced by<code>as.POSIXct(tz = "GMT")</code> to such an object.
<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>  object to be converted.
time zone specification to be used for the conversion,<em>if one is required</em>.  System-specific (see time zones),but <code>""</code> is the current time zone, and <code>"GMT"</code> is UTC(Universal Time, Coordinated).  Invalid values are most commonlytreated as UTC, on some platforms with a warning.
further arguments to be passed to or from other methods.
character string giving a date-time format as usedby <code>strptime</code>.
<code>character</code> vector of <code>format</code>strings to try if <code>format</code> is not specified.
<code>logical</code> indicating to return <code>NA</code>(instead of signalling an error) if the format guessing does not succeed.
a date-time object, or something which can be coerced by<code>as.POSIXct(tz = "GMT")</code> to such an object.
<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>  object to be converted.
time zone specification to be used for the conversion,<em>if one is required</em>.  System-specific (see time zones),but <code>""</code> is the current time zone, and <code>"GMT"</code> is UTC(Universal Time, Coordinated).  Invalid values are most commonlytreated as UTC, on some platforms with a warning.
further arguments to be passed to or from other methods.
character string giving a date-time format as usedby <code>strptime</code>.
<code>character</code> vector of <code>format</code>strings to try if <code>format</code> is not specified.
<code>logical</code> indicating to return <code>NA</code>(instead of signalling an error) if the format guessing does not succeed.
a date-time object, or something which can be coerced by<code>as.POSIXct(tz = "GMT")</code> to such an object.
<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>  object to be converted.
time zone specification to be used for the conversion,<em>if one is required</em>.  System-specific (see time zones),but <code>""</code> is the current time zone, and <code>"GMT"</code> is UTC(Universal Time, Coordinated).  Invalid values are most commonlytreated as UTC, on some platforms with a warning.
further arguments to be passed to or from other methods.
character string giving a date-time format as usedby <code>strptime</code>.
<code>character</code> vector of <code>format</code>strings to try if <code>format</code> is not specified.
<code>logical</code> indicating to return <code>NA</code>(instead of signalling an error) if the format guessing does not succeed.
a date-time object, or something which can be coerced by<code>as.POSIXct(tz = "GMT")</code> to such an object.
<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>  object to be converted.
time zone specification to be used for the conversion,<em>if one is required</em>.  System-specific (see time zones),but <code>""</code> is the current time zone, and <code>"GMT"</code> is UTC(Universal Time, Coordinated).  Invalid values are most commonlytreated as UTC, on some platforms with a warning.
further arguments to be passed to or from other methods.
character string giving a date-time format as usedby <code>strptime</code>.
<code>character</code> vector of <code>format</code>strings to try if <code>format</code> is not specified.
<code>logical</code> indicating to return <code>NA</code>(instead of signalling an error) if the format guessing does not succeed.
a date-time object, or something which can be coerced by<code>as.POSIXct(tz = "GMT")</code> to such an object.
<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>  object to be converted.
time zone specification to be used for the conversion,<em>if one is required</em>.  System-specific (see time zones),but <code>""</code> is the current time zone, and <code>"GMT"</code> is UTC(Universal Time, Coordinated).  Invalid values are most commonlytreated as UTC, on some platforms with a warning.
further arguments to be passed to or from other methods.
character string giving a date-time format as usedby <code>strptime</code>.
<code>character</code> vector of <code>format</code>strings to try if <code>format</code> is not specified.
<code>logical</code> indicating to return <code>NA</code>(instead of signalling an error) if the format guessing does not succeed.
a date-time object, or something which can be coerced by<code>as.POSIXct(tz = "GMT")</code> to such an object.
<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>  object to be converted.
time zone specification to be used for the conversion,<em>if one is required</em>.  System-specific (see time zones),but <code>""</code> is the current time zone, and <code>"GMT"</code> is UTC(Universal Time, Coordinated).  Invalid values are most commonlytreated as UTC, on some platforms with a warning.
further arguments to be passed to or from other methods.
character string giving a date-time format as usedby <code>strptime</code>.
<code>character</code> vector of <code>format</code>strings to try if <code>format</code> is not specified.
<code>logical</code> indicating to return <code>NA</code>(instead of signalling an error) if the format guessing does not succeed.
a date-time object, or something which can be coerced by<code>as.POSIXct(tz = "GMT")</code> to such an object.
<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>  object to be converted.
time zone specification to be used for the conversion,<em>if one is required</em>.  System-specific (see time zones),but <code>""</code> is the current time zone, and <code>"GMT"</code> is UTC(Universal Time, Coordinated).  Invalid values are most commonlytreated as UTC, on some platforms with a warning.
further arguments to be passed to or from other methods.
character string giving a date-time format as usedby <code>strptime</code>.
<code>character</code> vector of <code>format</code>strings to try if <code>format</code> is not specified.
<code>logical</code> indicating to return <code>NA</code>(instead of signalling an error) if the format guessing does not succeed.
a date-time object, or something which can be coerced by<code>as.POSIXct(tz = "GMT")</code> to such an object.
<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>  object to be converted.
time zone specification to be used for the conversion,<em>if one is required</em>.  System-specific (see time zones),but <code>""</code> is the current time zone, and <code>"GMT"</code> is UTC(Universal Time, Coordinated).  Invalid values are most commonlytreated as UTC, on some platforms with a warning.
further arguments to be passed to or from other methods.
character string giving a date-time format as usedby <code>strptime</code>.
<code>character</code> vector of <code>format</code>strings to try if <code>format</code> is not specified.
<code>logical</code> indicating to return <code>NA</code>(instead of signalling an error) if the format guessing does not succeed.
a date-time object, or something which can be coerced by<code>as.POSIXct(tz = "GMT")</code> to such an object.
<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>  object to be converted.
time zone specification to be used for the conversion,<em>if one is required</em>.  System-specific (see time zones),but <code>""</code> is the current time zone, and <code>"GMT"</code> is UTC(Universal Time, Coordinated).  Invalid values are most commonlytreated as UTC, on some platforms with a warning.
further arguments to be passed to or from other methods.
character string giving a date-time format as usedby <code>strptime</code>.
<code>character</code> vector of <code>format</code>strings to try if <code>format</code> is not specified.
<code>logical</code> indicating to return <code>NA</code>(instead of signalling an error) if the format guessing does not succeed.
a date-time object, or something which can be coerced by<code>as.POSIXct(tz = "GMT")</code> to such an object.
<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>  object to be converted.
time zone specification to be used for the conversion,<em>if one is required</em>.  System-specific (see time zones),but <code>""</code> is the current time zone, and <code>"GMT"</code> is UTC(Universal Time, Coordinated).  Invalid values are most commonlytreated as UTC, on some platforms with a warning.
further arguments to be passed to or from other methods.
character string giving a date-time format as usedby <code>strptime</code>.
<code>character</code> vector of <code>format</code>strings to try if <code>format</code> is not specified.
<code>logical</code> indicating to return <code>NA</code>(instead of signalling an error) if the format guessing does not succeed.
a date-time object, or something which can be coerced by<code>as.POSIXct(tz = "GMT")</code> to such an object.
<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>  object to be converted.
time zone specification to be used for the conversion,<em>if one is required</em>.  System-specific (see time zones),but <code>""</code> is the current time zone, and <code>"GMT"</code> is UTC(Universal Time, Coordinated).  Invalid values are most commonlytreated as UTC, on some platforms with a warning.
further arguments to be passed to or from other methods.
character string giving a date-time format as usedby <code>strptime</code>.
<code>character</code> vector of <code>format</code>strings to try if <code>format</code> is not specified.
<code>logical</code> indicating to return <code>NA</code>(instead of signalling an error) if the format guessing does not succeed.
a date-time object, or something which can be coerced by<code>as.POSIXct(tz = "GMT")</code> to such an object.
a numeric or complex matrix whose QR decomposition is to becomputed.  Logical matrices are coerced to numeric.
the tolerance for detecting linear dependencies in thecolumns of <code>x</code>. Only used if <code>LAPACK</code> is false and<code>x</code> is real.
a QR decomposition of the type computed by <code>qr</code>.
a vector or matrix of right-hand sides of equations.
a QR decomposition or (<code>qr.solve</code> only) a rectangular matrix.
effective rank.
logical.  For real <code>x</code>, if true use LAPACKotherwise use LINPACK (the default).
further arguments passed to or from other methods
desired length.
object to be coerced.
A non-negative integer specifying the desired length.Double values will be coerced to integer:supplying an argument of length other than one is an error.
object to be coerced or tested.
further arguments passed to or from other methods.
A non-negative integer specifying the desired length.Double values will be coerced to integer:supplying an argument of length other than one is an error.
object to be coerced or tested.
further arguments passed to or from other methods.
object to be coerced or tested.
one or more objects which can be interpreted as factors(including character strings), or a list (or data frame) whosecomponents can be so interpreted.  (For <code>as.table</code>, argumentspassed to specific methods; for <code>as.data.frame</code>, unused.)
levels to remove for all factors in <code>...</code>.  Ifit does not contain <code>NA</code> and <code>useNA</code> is notspecified, it implies <code>useNA = "ifany"</code>.  See‘Details’ for its interpretation for non-factor arguments.
whether to include <code>NA</code> values in the table.See ‘Details’.  Can be abbreviated.
the names to be given to the dimensions in the result (the<em>dimnames names</em>).
controls how the default <code>dnn</code> isconstructed.  See ‘Details’.
an arbitrary <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, or an object inheriting from class<code>"table"</code> for the <code>as.data.frame</code> method. Note that<code>as.data.frame.table(x, *)</code> may be called explicitly fornon-table <code>x</code> for “reshaping” <code>array</code>s.
a character vector giving the row names for the dataframe.
The name to be used for the column of tableentries, usually counts.
logical: should the classifying factors bereturned as factors (the default) or character vectors?
passed to <code>provideDimnames</code>.
one or more objects which can be interpreted as factors(including character strings), or a list (or data frame) whosecomponents can be so interpreted.  (For <code>as.table</code>, argumentspassed to specific methods; for <code>as.data.frame</code>, unused.)
levels to remove for all factors in <code>...</code>.  Ifit does not contain <code>NA</code> and <code>useNA</code> is notspecified, it implies <code>useNA = "ifany"</code>.  See‘Details’ for its interpretation for non-factor arguments.
whether to include <code>NA</code> values in the table.See ‘Details’.  Can be abbreviated.
the names to be given to the dimensions in the result (the<em>dimnames names</em>).
controls how the default <code>dnn</code> isconstructed.  See ‘Details’.
an arbitrary <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, or an object inheriting from class<code>"table"</code> for the <code>as.data.frame</code> method. Note that<code>as.data.frame.table(x, *)</code> may be called explicitly fornon-table <code>x</code> for “reshaping” <code>array</code>s.
a character vector giving the row names for the dataframe.
The name to be used for the column of tableentries, usually counts.
logical: should the classifying factors bereturned as factors (the default) or character vectors?
passed to <code>provideDimnames</code>.
character string naming an atomic mode or<code>"list"</code> or <code>"expression"</code> or (except for <code>vector</code>)<code>"any"</code>.  Currently, <code>is.vector()</code> allows any type (see<code>typeof</code>) for <code>mode</code>, and when mode is not<code>"any"</code>, <code>is.vector(x, mode)</code> is almost the same as<code>typeof(x) == mode</code>.
a non-negative integer specifying the desired length.  Fora long vector, i.e., <code>length &gt; .Machine$integer.max</code>, ithas to be of type <code>"double"</code>.  Supplying an argument of lengthother than one is an error.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
character string naming an atomic mode or<code>"list"</code> or <code>"expression"</code> or (except for <code>vector</code>)<code>"any"</code>.  Currently, <code>is.vector()</code> allows any type (see<code>typeof</code>) for <code>mode</code>, and when mode is not<code>"any"</code>, <code>is.vector(x, mode)</code> is almost the same as<code>typeof(x) == mode</code>.
a non-negative integer specifying the desired length.  Fora long vector, i.e., <code>length &gt; .Machine$integer.max</code>, ithas to be of type <code>"double"</code>.  Supplying an argument of lengthother than one is an error.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
numeric or complex vectors.
a numeric or complex vector
string or namespace environment.
logical.
environment.
namespace environment.
character vector.
optional character vector.
namespace environment.
string naming the package/namespace to load.
vector of package names parallel to <code>generics</code>.
character vector specifying library.
logical.
character.
character.
environment.
a 3-column character matrix.
character.
any object.
character arguments.
the methods table name.
symbol: name of namespace
character vector naming symbols to exclude from theimport, particularly useful when <code>vars</code> is missing.
an array, including a matrix.
a vector giving the margins to split by.E.g., for a matrix <code>1</code> indicates rows, <code>2</code> indicatescolumns, <code>c(1, 2)</code> indicates rows and columns.Where <code>x</code> has named dimnames, it can be a character vectorselecting dimension names.
Any R object.
Optional, logical: indicate direction of conversion.
Optional, logical: whether conversion to S3 iscompleted.  Not usually needed, but see the details section.
Any R object.
Optional, logical: indicate direction of conversion.
Optional, logical: whether conversion to S3 iscompleted.  Not usually needed, but see the details section.
a variable name, given as a character string.  No coercion isdone, and the first element of a character vector of length greaterthan one will be used, with a warning.
a value to be assigned to <code>x</code>.
where to do the assignment.  By default, assigns into thecurrent environment.  See ‘Details’ for other possibilities.
the <code>environment</code> to use.  See ‘Details’.
should the enclosing frames of the environment beinspected?
an ignored compatibility feature.
numeric or complex vectors.
numeric or complex vectors.
a numeric or complex vector
‘database’.  This can be a<code>data.frame</code> or a <code>list</code> or a <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> data file created with<code>save</code> or <code>NULL</code> or an environment.  See also‘Details’.
integer specifying position in <code>search()</code> whereto attach.
name to use for the attached database. Names starting with<code>package:</code> are reserved for <code>library</code>.
logical.  If <code>TRUE</code>, warnings areprinted about <code>conflicts</code> from attaching the database,unless that database contains an object <code>.conflicts.OK</code>.  Aconflict is a function masking a function, or a non-function maskinga non-function.
string or name space object.
integer specifying position to attach.
<code>NULL</code> or a character vector of dependencies to berecorded in object <code>.Depends</code> in the package.
string naming the package/name space to load.
character vector specifying library search path.
Now ignored except during package installation.
Ignored except during package installation.
logical; if true, stop just after loading code.
<code>NULL</code> or a version specification (a listwith components <code>op</code> and <code>version</code>).
logical: should progress and error messages be suppressed?
string or ‘name’, see <code>as.symbol</code>,of a package, e.g., <code>"stats"</code>.
character vectors; see <code>library</code>.
further arguments to be passed to <code>loadNamespace</code>.
an object whose attributes are to be accessed.
a non-empty character string specifying which attributeis to be accessed.
logical: should <code>which</code> be matched exactly?
an object, the new value of the attribute, or <code>NULL</code>to remove the attribute.
<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
other <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, to be compared with <code>target</code>.
further arguments for different methods, notably thefollowing two, for numerical comparison:
numeric <i>≥</i> 0.  Differences smaller than<code>tolerance</code> are not reported.  The default value is close to<code>1.5e-8</code>.
<code>NULL</code> or numeric &gt; 0, typically of length 1 or<code>length(target)</code>.  See ‘Details’.
logical indicating if the <code>target == current</code>cases should be counted when computing the mean (absolute orrelative) differences.  The default, <code>FALSE</code> may seemmisleading in cases where <code>target</code> and <code>current</code> onlydiffer in a few places; see the extensive example.
a <code>function</code> of two arguments,<code>err</code>, the relative, absolute or scaled error, and<code>what</code>, a character string indicating the <em>kind</em> of error;may be used, e.g., to format relative and absolute errors differently.
logical indicating if the<code>attributes</code> of <code>target</code> and <code>current</code>(other than the names) should be compared.
logical indicating if <code>list</code> comparisonshould report differing components by name (if matching) instead ofinteger index.  Note that this comes after <code>...</code> and so mustbe specified by its full name.
logical passed to <code>ls</code> indicating if“hidden” objects should also be considered in the environments.
for the <code>environment</code> method: <code>logical</code> indicating if“promises should be forced”, i.e., typically formal function argumentsbe evaluated for comparison.  If false, only the <code>names</code> ofthe objects in the two environments are checked for equality.
logical requiring that the<code>environment()</code>s of functions should be compared, too.You may need to set <code>check.environment=FALSE</code> in unexpectedcases, such as when comparing two <code>nls()</code> fits.
logical indicating if the <code>"tzone"</code> attributesof <code>target</code> and <code>current</code> should be compared.
logical indicating if the <code>names(.)</code>of <code>target</code> and <code>current</code> should be compared.
an object whose attributes are to be accessed.
a non-empty character string specifying which attributeis to be accessed.
logical: should <code>which</code> be matched exactly?
an object, the new value of the attribute, or <code>NULL</code>to remove the attribute.
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object
an appropriate named <code>list</code> of attributes, or<code>NULL</code>.
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object
an appropriate named <code>list</code> of attributes, or<code>NULL</code>.
string giving the name of an object.
string giving the name of a package containing the object.
logical: for internal use by <code>autoloader</code>.
other arguments to <code>library</code>.
string giving the name of an object.
string giving the name of a package containing the object.
logical: for internal use by <code>autoloader</code>.
other arguments to <code>library</code>.
an upper (or lower) triangular matrix giving thecoefficients for the system to be solved.  Values below (above)the diagonal are ignored.
a matrix whose columns give the right-hand sides forthe equations.
The number of columns of <code>r</code> and rows of <code>x</code> to use.
logical; if <code>TRUE</code> (default), the <em>upper</em><em>tri</em>angular part of <code>r</code> is used.  Otherwise, the lower one.
logical; if <code>TRUE</code>, solve <i>r' * y = x</i> for<i>y</i>, i.e., <code>t(r) %*% y == x</code>.
a <code>function</code>, a <code>formula</code>, or<code>NULL</code>, which is the default.
an environment to associate with the function
an arbitrary <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
a logical, if <code>TRUE</code> the environment will use a hash table.
an environment to be used as the enclosure of theenvironment created.
an environment
an integer specifying the initial size for a hashedenvironment.  An internal default value will be used if<code>size</code> is <code>NA</code> or zero.  This argument is ignored if<code>hash</code> is <code>FALSE</code>.
character vector, containing path names.
numeric, <i>≥ 0</i>.
numeric; The <em>order</em> (maybe fractional and negative) ofthe corresponding Bessel function.
logical; if <code>TRUE</code>, the results areexponentially scaled in order to avoid overflow(<i>I(nu)</i>) or underflow (<i>K(nu)</i>),respectively.
numeric, <i>≥ 0</i>.
numeric; The <em>order</em> (maybe fractional and negative) ofthe corresponding Bessel function.
logical; if <code>TRUE</code>, the results areexponentially scaled in order to avoid overflow(<i>I(nu)</i>) or underflow (<i>K(nu)</i>),respectively.
numeric, <i>≥ 0</i>.
numeric; The <em>order</em> (maybe fractional and negative) ofthe corresponding Bessel function.
logical; if <code>TRUE</code>, the results areexponentially scaled in order to avoid overflow(<i>I(nu)</i>) or underflow (<i>K(nu)</i>),respectively.
numeric, <i>≥ 0</i>.
numeric; The <em>order</em> (maybe fractional and negative) ofthe corresponding Bessel function.
logical; if <code>TRUE</code>, the results areexponentially scaled in order to avoid overflow(<i>I(nu)</i>) or underflow (<i>K(nu)</i>),respectively.
non-negative numeric vectors.
numeric vectors.
integer vectors.
an environment.
logical specifying whether bindings should be locked.
a name object or character string.
a function taking zero or one arguments.
an environment.
logical specifying whether bindings should be locked.
a name object or character string.
a function taking zero or one arguments.
One or more character vectors.
The ‘domain’ for the translation.
a non-negative integer.
the message to be used in English for <code>n = 1</code>.
the message to be used in English for <code>n = 0, 2, 3, ...</code>.
The directory in which to find translated messagecatalogs for the domain.
integer vectors; numeric vectors are coerced to integer vectors.
non-negative integer vector of values up to 31.
integer vectors; numeric vectors are coerced to integer vectors.
non-negative integer vector of values up to 31.
integer vectors; numeric vectors are coerced to integer vectors.
non-negative integer vector of values up to 31.
integer vectors; numeric vectors are coerced to integer vectors.
non-negative integer vector of values up to 31.
integer vectors; numeric vectors are coerced to integer vectors.
non-negative integer vector of values up to 31.
integer vectors; numeric vectors are coerced to integer vectors.
non-negative integer vector of values up to 31.
a function object, or see ‘Details’.
environment in which the function should be defined.
an object, usually a language object: see section‘Value’.
a function object, or see ‘Details’.
environment in which the function should be defined.
an object, usually a language object: see section‘Value’.
A language object.
An environment.
Logical; if <code>TRUE</code> splicing is enabled.
A length-one logical vector that is not <code>NA</code>.Conditions of length greater than one are currently accepted with awarning, but only the first element is used.  An error is signalledinstead when the environment variable <span class="env">_R_CHECK_LENGTH_1_CONDITION_</span>is set to true.  Other types are coerced to logicalif possible, ignoring any class.
A syntactical name for a variable.
An expression evaluating to a vector (including a list andan expression) or to a pairlist or <code>NULL</code>.  Afactor value will be coerced to a character vector.  As from <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>4.0.0 this can be a long vector.
An <em>expression</em> in a formal sense.  This is either asimple expression or a so-called <em>compound expression</em>, usuallyof the form <code>{ expr1 ; expr2 }</code>.
a text string that can be retrieved once the browser is invoked.
a condition that can be retrieved once the browser isinvoked.
a “condition”.  By default, and whenever not falseafter being coerced to <code>logical</code>, thedebugger will be invoked, otherwise control is returned directly.
how many previous calls to skip when reporting thecalling context.
The number of contexts to skip over, it must be non-negative.
The number of contexts to skip over, it must be non-negative.
The number of contexts to skip over, it must be non-negative.
a logical indicating whether only ‘internal’functions (which can be called via <code>.Internal</code>) shouldbe returned.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, normally a data frame, possibly a matrix.
a factor or a list of factors, each of length<code>nrow(data)</code>.
a function to be applied to (usually data-frame) subsets of<code>data</code>.
further arguments to <code>FUN</code>.
logical: see <code>tapply</code>.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, normally a data frame, possibly a matrix.
a factor or a list of factors, each of length<code>nrow(data)</code>.
a function to be applied to (usually data-frame) subsets of<code>data</code>.
further arguments to <code>FUN</code>.
logical: see <code>tapply</code>.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, normally a data frame, possibly a matrix.
a factor or a list of factors, each of length<code>nrow(data)</code>.
a function to be applied to (usually data-frame) subsets of<code>data</code>.
further arguments to <code>FUN</code>.
logical: see <code>tapply</code>.
character string.  A description of the connection:see ‘Details’.
character string.  A description of how to open the connection(if it should be opened initially).  See section ‘Modes’ forpossible values.
logical.  See the ‘Blocking’ section.
The name of the encoding to be assumed.  See the‘Encoding’ section.
logical.  If true, a ‘raw’ interface is used whichwill be more suitable for arguments which are not regular files,e.g. character devices.  This suppresses the check for a compressedfile when opening for text-mode reading, and asserts that the‘file’ may not be seekable.
character string, partially matched to<code>c("default", "internal", "wininet", "libcurl")</code>:see ‘Details’.
named character vector of HTTP headers to use in HTTPrequests.  It is ignored for non-HTTP URLs.  The <code>User-Agent</code>header, coming from the <code>HTTPUserAgent</code> option (see<code>options</code>) is used as the first header, automatically.
integer in 0–9.  The amount of compression to beapplied when writing, from none to maximal available.  For<code>xzfile</code> can also be negative: see the ‘Compression’section.
numeric: the timeout (in seconds) to be used for thisconnection.  Beware that some OSes may treat very large values aszero: however the POSIX standard requires values up to 31 days to besupported.
optional character vector with options. Currently only<code>"no-delay"</code> is supported on TCP sockets.
a filename within a zip file.
character string.  Host name for the port.
integer.  The TCP port number.
logical.  Should the socket be a client or a server?
a server socket listening for connections.
a connection.
character string.  Currently ignored.
character string.  Empty or <code>"read"</code> or <code>"write"</code>,partial matches allowed.
arguments passed to or from other methods.
objects to be concatenated.  All <code>NULL</code> entriesare dropped before method dispatch unless at the very beginning of theargument list.
logical.  If <code>recursive = TRUE</code>, the functionrecursively descends through lists (and pairlists) combining alltheir elements into a vector.
logical indicating if <code>names</code> should bepreserved.
a <code>Date</code> object to be summarized or printed.
number of significant digits for the computations.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
further arguments to be passed from or to other methods.
date-time or date objects.
an optional time zone specification to be used for theconversion, mainly for <code>"POSIXlt"</code> objects.
character string.  Units in which the results aredesired.  Can be abbreviated.
character string.  Like <code>units</code>, except thatabbreviations are not allowed.
character string or numeric value specifying a time interval.
character specifying the format of <code>tim</code>: see<code>strptime</code>.  The default is a locale-specific time format.
an object inheriting from class <code>"difftime"</code>.
arguments to be passed to or from other methods.
a vector of data, usually taking a small number of distinctvalues.
an optional vector of the unique values (as character strings)that <code>x</code> might have taken.  The default is the unique set ofvalues taken by <code>as.character(x)</code>, sorted intoincreasing order <em>of <code>x</code></em>.  Note that this set can bespecified as smaller than <code>sort(unique(x))</code>.
<em>either</em> an optional character vector oflabels for the levels (in the same order as <code>levels</code> afterremoving those in <code>exclude</code>), <em>or</em> a character string oflength 1.  Duplicated values in <code>labels</code> can be used to mapdifferent values of <code>x</code> to the same factor level.
a vector of values to be excluded when forming theset of levels.  This may be factor with the same level set as <code>x</code>or should be a <code>character</code>.
logical flag to determine if the levels should be regardedas ordered (in the order given).
an upper bound on the number of levels; see ‘Details’.
(in <code>ordered(.)</code>): any of the above, apart from<code>ordered</code> itself.
only add an <code>NA</code> level if it is used, i.e.if <code>any(is.na(x))</code>.
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, typically a vector of<code>character</code> strings.
optional <code>logical</code> eventually to be passed to<code>print()</code>, used by <code>print.default()</code>, indicatingwhether or not strings should be right aligned.
an object of class <code>"noquote"</code>.
further options passed to next methods, such as <code>print</code>.
for compatibility with the generic <code>c</code> function.
a character vector with suitable numeric version strings (see‘Details’); for <code>package_version</code>, alternatively an Rversion object as obtained by <code>R.version</code>.
a logical indicating whether invalid numeric versionsshould results in an error (default) or not.
an object to be printed or summarized from one of thedate-time classes.
for timezone formatting, passed to <code>format.POSIXct</code>.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
number of significant digits for the computations:should be high enough to represent the least important time unitexactly.
further arguments to be passed from or to other methods.
date-time objects
date-time objects or character vectors.  (Charactervectors are converted by <code>as.POSIXct</code>.)
a numeric vector (in seconds)
one of <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>or <code>&gt;=</code>.
an object to be printed or summarized from one of thedate-time classes.
for timezone formatting, passed to <code>format.POSIXct</code>.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
number of significant digits for the computations:should be high enough to represent the least important time unitexactly.
further arguments to be passed from or to other methods.
date-time objects
date-time objects or character vectors.  (Charactervectors are converted by <code>as.POSIXct</code>.)
a numeric vector (in seconds)
one of <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>or <code>&gt;=</code>.
arguments to be passed to <code>cat</code> (for<code>warnings()</code>).
a <code>"warnings"</code> object as returned by<code>warnings()</code>.
a <code>"warnings"</code> or <code>"summary.warnings"</code> object.
if not <code>missing</code>, a <code>character</code>vector of the same <code>length</code> as <code>x</code>, to “label”the messages.  Defaults to <code>paste0(seq_len(n), ": ")</code> for<i>n &gt;= 2</i> where <code>n &lt;- length(x)</code>.
a character string <code>cat()</code>ed before themessages are printed.
a non-empty character string naming the function to be called.
arguments to be part of the call.
an arbitrary <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
function of one argument, the exit procedure.
character vector or <code>NULL</code>, specifyingrequired components.  <code>NULL</code> implies that all are required.
<code>logical</code> with a smart default, indicating ifX11-related capabilities should be fully checked, notably on macOS.If set to false, may avoid a warning “No protocol specified”and e.g., the "X11" capability may be returned as <code>NA</code>.
a character vector, or an object that can be coerced tocharacter by <code>as.character</code>.
a character string specifying the characters to betranslated.  If a character vector of length 2 or more is supplied,the first element is used with a warning.
a character string specifying the translations. If acharacter vector of length 2 or more is supplied, the first elementis used with a warning.
logical: translate to upper or lower case?.
<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> objects (see ‘Details’ for the types of objectsallowed).
A connection, or a character string naming the fileto print to.  If <code>""</code> (the default), <code>cat</code> prints to thestandard output connection, the console unless redirected by<code>sink</code>.If it is <code>"|cmd"</code>, the output is piped to the command givenby ‘<span class="file">cmd</span>’, by opening a pipe connection.
a character vector of strings to append after each element.
a logical or (positive) numeric controlling how the output isbroken into successive lines.  If <code>FALSE</code> (default), only newlinescreated explicitly by <span class="samp">"\n"</span> are printed.  Otherwise, theoutput is broken into lines with print width equal to the option<code>width</code> if <code>fill</code> is <code>TRUE</code>, or the value of<code>fill</code> if this is numeric.  Linefeeds are only inserted<em>between</em> elements, strings wider than <code>fill</code> are notwrapped.  Non-positive <code>fill</code> values areignored, with a warning.
character vector of labels for the lines printed.Ignored if <code>fill</code> is <code>FALSE</code>.
logical. Only used if the argument <code>file</code> is thename of file (and not a connection or <code>"|cmd"</code>).If <code>TRUE</code> output will be appended to<code>file</code>; otherwise, it will overwrite the contents of<code>file</code>.
(generalized) vectors or matrices.  These can be given as namedarguments.  Other <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> objects may be coerced as appropriate, or S4methods may be used: see sections ‘Details’ and‘Value’.  (For the <code>"data.frame"</code> method of <code>cbind</code>these can be further arguments to <code>data.frame</code> such as<code>stringsAsFactors</code>.)
integer controlling the construction of labels inthe case of non-matrix-like arguments (for the default method):<br><code>deparse.level = 0</code> constructs no labels; the default,<br><code>deparse.level = 1 or 2</code> constructs labels from the argumentnames, see the ‘Value’ section below.
(only for data frame method:) logicalindicating if unique and valid <code>row.names</code> should beconstructed from the arguments.
logical, passed to <code>as.data.frame</code>;only has an effect when the <code>...</code> arguments contain a(non-<code>data.frame</code>) <code>character</code>.
if the data frames contain factors, the default<code>TRUE</code> ensures that <code>NA</code> levels of factors are kept, see<a href="https://bugs.R-project.org/show_bug.cgi?id=17562">PR#17562</a> and the ‘Data frame methods’.  In <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> versions upto 3.6.x, <code>factor.exclude = NA</code> has been implicitly hardcoded(<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> &lt;= 3.6.0) or the default (<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> = 3.6.x, x &gt;= 1).
(generalized) vectors or matrices.  These can be given as namedarguments.  Other <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> objects may be coerced as appropriate, or S4methods may be used: see sections ‘Details’ and‘Value’.  (For the <code>"data.frame"</code> method of <code>cbind</code>these can be further arguments to <code>data.frame</code> such as<code>stringsAsFactors</code>.)
integer controlling the construction of labels inthe case of non-matrix-like arguments (for the default method):<br><code>deparse.level = 0</code> constructs no labels; the default,<br><code>deparse.level = 1 or 2</code> constructs labels from the argumentnames, see the ‘Value’ section below.
(only for data frame method:) logicalindicating if unique and valid <code>row.names</code> should beconstructed from the arguments.
logical, passed to <code>as.data.frame</code>;only has an effect when the <code>...</code> arguments contain a(non-<code>data.frame</code>) <code>character</code>.
if the data frames contain factors, the default<code>TRUE</code> ensures that <code>NA</code> levels of factors are kept, see<a href="https://bugs.R-project.org/show_bug.cgi?id=17562">PR#17562</a> and the ‘Data frame methods’.  In <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> versions upto 3.6.x, <code>factor.exclude = NA</code> has been implicitly hardcoded(<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> &lt;= 3.6.0) or the default (<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> = 3.6.x, x &gt;= 1).
a numeric vector.  Or, for <code>round</code> and <code>signif</code>, acomplex vector.
integer indicating the number of decimal places(<code>round</code>) or significant digits (<code>signif</code>) to be used.Negative values are allowed (see ‘Details’).
arguments to be passed to methods.
a character string to be expanded.
a character vector with the values to be matchedagainst.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> expression to be evaluated in case expansion wasnot possible.
A non-negative integer specifying the desired length.Double values will be coerced to integer:supplying an argument of length other than one is an error.
object to be coerced or tested.
further arguments passed to or from other methods.
the values to be matched: converted to a character vector by<code>as.character</code>.  Long vectors are supported.
the values to be matched against: converted to a charactervector.  Long vectors are not supported.
the (integer) value to be returned at non-matchingpositions.
object to be converted or shifted.
logical: should the conversion be to a singlecharacter string or multiple individual characters?
the number of bits to shift.  Positive numbers shift rightand negative numbers shift left: allowed values are <code>-8 ... 8</code>.
the result type, partially matched.
a character vector, or an object that can be coerced tocharacter by <code>as.character</code>.
a character string specifying the characters to betranslated.  If a character vector of length 2 or more is supplied,the first element is used with a warning.
a character string specifying the translations. If acharacter vector of length 2 or more is supplied, the first elementis used with a warning.
logical: translate to upper or lower case?.
an object to be printed or summarized from one of thedate-time classes.
for timezone formatting, passed to <code>format.POSIXct</code>.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
number of significant digits for the computations:should be high enough to represent the least important time unitexactly.
further arguments to be passed from or to other methods.
date-time objects
date-time objects or character vectors.  (Charactervectors are converted by <code>as.POSIXct</code>.)
a numeric vector (in seconds)
one of <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>or <code>&gt;=</code>.
“the dots”, as passed from the caller.
passed to <code>sys.call()</code>.  A caller mayuse -2 if the message should mention <em>its</em> caller.
not yet implemented: character vector of <em>named</em>elements in <code>...</code> which are “allowed” and hence notwarned about.
an object for which a method exists.  The default methodapplies to numeric (or logical) symmetric, positive-definite matrices.
arguments to be based to or from methods.
Should pivoting be used?
logical.  Should LINPACK be used (now an error)?
A numeric tolerance for use with <code>pivot = TRUE</code>.
an object for which a method exists.  The default methodapplies to numeric (or logical) symmetric, positive-definite matrices.
arguments to be based to or from methods.
Should pivoting be used?
logical.  Should LINPACK be used (now an error)?
A numeric tolerance for use with <code>pivot = TRUE</code>.
a matrix.  The first <code>size</code> columns of the upper trianglecontain the Choleski decomposition of the matrix to be inverted.
the number of columns of <code>x</code> containing theCholeski decomposition.
logical.  Defunct and gives an error.
non-negative numeric vectors.
numeric vectors.
integer vectors.
a <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object
a character vector naming classes.  <code>value</code>can also be <code>NULL</code>.
logical affecting return value: see ‘Details’.
a <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object
a character vector naming classes.  <code>value</code>can also be <code>NULL</code>.
logical affecting return value: see ‘Details’.
a character vector.
A connection.
logical.  If true, a newline is appended to each stringpushed back.
character string, partially matched.  See details.
character string.  A description of the connection:see ‘Details’.
character string.  A description of how to open the connection(if it should be opened initially).  See section ‘Modes’ forpossible values.
logical.  See the ‘Blocking’ section.
The name of the encoding to be assumed.  See the‘Encoding’ section.
logical.  If true, a ‘raw’ interface is used whichwill be more suitable for arguments which are not regular files,e.g. character devices.  This suppresses the check for a compressedfile when opening for text-mode reading, and asserts that the‘file’ may not be seekable.
character string, partially matched to<code>c("default", "internal", "wininet", "libcurl")</code>:see ‘Details’.
named character vector of HTTP headers to use in HTTPrequests.  It is ignored for non-HTTP URLs.  The <code>User-Agent</code>header, coming from the <code>HTTPUserAgent</code> option (see<code>options</code>) is used as the first header, automatically.
integer in 0–9.  The amount of compression to beapplied when writing, from none to maximal available.  For<code>xzfile</code> can also be negative: see the ‘Compression’section.
numeric: the timeout (in seconds) to be used for thisconnection.  Beware that some OSes may treat very large values aszero: however the POSIX standard requires values up to 31 days to besupported.
optional character vector with options. Currently only<code>"no-delay"</code> is supported on TCP sockets.
a filename within a zip file.
character string.  Host name for the port.
integer.  The TCP port number.
logical.  Should the socket be a client or a server?
a server socket listening for connections.
a connection.
character string.  Currently ignored.
character string.  Empty or <code>"read"</code> or <code>"write"</code>,partial matches allowed.
arguments passed to or from other methods.
character string.  A description of the connection:see ‘Details’.
character string.  A description of how to open the connection(if it should be opened initially).  See section ‘Modes’ forpossible values.
logical.  See the ‘Blocking’ section.
The name of the encoding to be assumed.  See the‘Encoding’ section.
logical.  If true, a ‘raw’ interface is used whichwill be more suitable for arguments which are not regular files,e.g. character devices.  This suppresses the check for a compressedfile when opening for text-mode reading, and asserts that the‘file’ may not be seekable.
character string, partially matched to<code>c("default", "internal", "wininet", "libcurl")</code>:see ‘Details’.
named character vector of HTTP headers to use in HTTPrequests.  It is ignored for non-HTTP URLs.  The <code>User-Agent</code>header, coming from the <code>HTTPUserAgent</code> option (see<code>options</code>) is used as the first header, automatically.
integer in 0–9.  The amount of compression to beapplied when writing, from none to maximal available.  For<code>xzfile</code> can also be negative: see the ‘Compression’section.
numeric: the timeout (in seconds) to be used for thisconnection.  Beware that some OSes may treat very large values aszero: however the POSIX standard requires values up to 31 days to besupported.
optional character vector with options. Currently only<code>"no-delay"</code> is supported on TCP sockets.
a filename within a zip file.
character string.  Host name for the port.
integer.  The TCP port number.
logical.  Should the socket be a client or a server?
a server socket listening for connections.
a connection.
character string.  Currently ignored.
character string.  Empty or <code>"read"</code> or <code>"write"</code>,partial matches allowed.
arguments passed to or from other methods.
 The name of a file. 
 The character encoding to assume for the file. 
 The encoding with which to make strings: see the<code>encoding</code> argument of <code>parse</code>.
 A character vector of source lines.  Other <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> objectswill be coerced to character. 
 The timestamp to use on a copy of a file. 
 Is this <code>srcfilecopy</code> known to come from a file system file? 
 A <code>srcfile</code> object. 
 Line numbers. 
 A vector of four, six or eight values giving a source location; see‘Details’.
 An object of the appropriate class. 
 Whether to read the <code>srcfile</code> to obtain thetext of a <code>srcref</code>. 
 An optional second <code>srcref</code> object to mark the endof the character range. 
 Additional arguments to the methods; these will be ignored. 
 The name of a file. 
 The character encoding to assume for the file. 
 The encoding with which to make strings: see the<code>encoding</code> argument of <code>parse</code>.
 A character vector of source lines.  Other <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> objectswill be coerced to character. 
 The timestamp to use on a copy of a file. 
 Is this <code>srcfilecopy</code> known to come from a file system file? 
 A <code>srcfile</code> object. 
 Line numbers. 
 A vector of four, six or eight values giving a source location; see‘Details’.
 An object of the appropriate class. 
 Whether to read the <code>srcfile</code> to obtain thetext of a <code>srcref</code>. 
 An optional second <code>srcref</code> object to mark the endof the character range. 
 Additional arguments to the methods; these will be ignored. 
logical: if true all connections, including closed onesand the standard ones are displayed.  If false only open user-createdconnections are included.
integer: a row number of the table given by<code>showConnections</code>.
a connection.
a matrix-like object, that is one with a two-dimensional<code>dim</code>.
a matrix dimension, i.e., an integer valued numeric vector oflength two (with non-negative entries).
a logical value indicating whether the value shouldbe returned as a factor of column labels (created if necessary)rather than as numbers.
an array of two or more dimensions, containing numeric,complex, integer or logical values, or a numeric data frame.  For<code>.colSums()</code> etc, a numeric, integer or logical matrix (orvector of length <code>m * n</code>).
logical.  Should missing values (including <code>NaN</code>)be omitted from the calculations?
integer: Which dimensions are regarded as ‘rows’ or‘columns’ to sum over.  For <code>row*</code>, the sum or mean isover dimensions <code>dims+1, ...</code>; for <code>col*</code> it is overdimensions <code>1:dims</code>.
the dimensions of the matrix <code>x</code> for<code>.colSums()</code> etc.
a matrix-like <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, with at least two dimensions for<code>colnames</code>.
logical. If <code>FALSE</code> and names are <code>NULL</code>, names are created.
for created names.
a valid value for that component of<code>dimnames(x)</code>.  For a matrix or array this is either<code>NULL</code> or a character vector of non-zero length equal to theappropriate dimension.
a matrix-like <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, with at least two dimensions for<code>colnames</code>.
logical. If <code>FALSE</code> and names are <code>NULL</code>, names are created.
for created names.
a valid value for that component of<code>dimnames(x)</code>.  For a matrix or array this is either<code>NULL</code> or a character vector of non-zero length equal to theappropriate dimension.
an array of two or more dimensions, containing numeric,complex, integer or logical values, or a numeric data frame.  For<code>.colSums()</code> etc, a numeric, integer or logical matrix (orvector of length <code>m * n</code>).
logical.  Should missing values (including <code>NaN</code>)be omitted from the calculations?
integer: Which dimensions are regarded as ‘rows’ or‘columns’ to sum over.  For <code>row*</code>, the sum or mean isover dimensions <code>dims+1, ...</code>; for <code>col*</code> it is overdimensions <code>1:dims</code>.
the dimensions of the matrix <code>x</code> for<code>.colSums()</code> etc.
logical.  Should only arguments after<span class="option">--args</span> be returned?
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object
a <code>character</code> vector, or <code>NULL</code>.
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object
a <code>character</code> vector, or <code>NULL</code>.
numeric.  Desired length of the output vector,inputs being recycled as needed.
numeric vector.
numeric vector.
numeric vector.
numeric vector.
an object, probably of mode <code>complex</code>.
an object of mode <code>complex</code>, or one of a class for whicha methods has been defined.
further arguments passed to or from other methods.
a condition object.
call expression.
a condition object.
expression to be evaluated.
expression to be evaluated before returning or exiting.
function.
character string.
character string.
character string naming a restart.
restart object.
object.
character string naming a condition class.
additional arguments; see details below.
a condition object.
call expression.
a condition object.
expression to be evaluated.
expression to be evaluated before returning or exiting.
function.
character string.
character string.
character string naming a restart.
restart object.
object.
character string naming a condition class.
additional arguments; see details below.
a condition object.
call expression.
a condition object.
expression to be evaluated.
expression to be evaluated before returning or exiting.
function.
character string.
character string.
character string naming a restart.
restart object.
object.
character string naming a condition class.
additional arguments; see details below.
a condition object.
call expression.
a condition object.
expression to be evaluated.
expression to be evaluated before returning or exiting.
function.
character string.
character string.
character string naming a restart.
restart object.
object.
character string naming a condition class.
additional arguments; see details below.
a condition object.
call expression.
a condition object.
expression to be evaluated.
expression to be evaluated before returning or exiting.
function.
character string.
character string.
character string naming a restart.
restart object.
object.
character string naming a condition class.
additional arguments; see details below.
the name of a package, given as a name orliteral character string, or a character string, depending onwhether <code>character.only</code> is <code>FALSE</code> (default) or<code>TRUE</code>.
the position on the search list at which to attach theloaded namespace.  Can also be the name of a position on the currentsearch list as given by <code>search()</code>.
a character vector describing the location of <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>library trees to search through, or <code>NULL</code>.  The default valueof <code>NULL</code> corresponds to all libraries currently known to<code>.libPaths()</code>.Non-existent library trees are silently ignored.
a logical indicating whether <code>package</code> or<code>help</code> can be assumed to be character strings.
logical.  If it is <code>TRUE</code>,  <code>FALSE</code> or<code>TRUE</code> is returned to indicate success.
logical.  If <code>TRUE</code>, warnings areprinted about <code>conflicts</code> from attaching the newpackage.  A conflict is a function masking a function,or a non-function masking a non-function. The default is <code>TRUE</code>unless specified as <code>FALSE</code> in the <code>conflicts.policy</code> option.
a logical.  If <code>TRUE</code>, additional diagnostics areprinted.
a logical.  If <code>TRUE</code>, no message confirmingpackage attaching is printed, and most often, no errors/warnings areprinted if package attaching fails.
character string naming a package.
character vector of names of objects that can maskobjects on the search path without signaling an error when strictconflict checking is enabled
character vector of names of objects toexclude or include in the attached frame. Only one of these argumentsmay be used in a call to <code>library</code> or <code>require</code>.
logical specifying whether required packageslisted in the <code>Depends</code> clause of the <code>DESCRIPTION</code> fileshould be attached automatically.
A subset of the search path, by default the whole search path.
If <code>TRUE</code>, give the masked or masking functions forall members of the search path.
numeric.  Desired length of the output vector,inputs being recycled as needed.
numeric vector.
numeric vector.
numeric vector.
numeric vector.
an object, probably of mode <code>complex</code>.
an object of mode <code>complex</code>, or one of a class for whicha methods has been defined.
further arguments passed to or from other methods.
numeric or complex vectors.
a numeric or complex vector
numeric or complex vectors.
numeric or complex matrices (or vectors): <code>y = NULL</code>is taken to be the same matrix as <code>x</code>.  Vectors are promoted tosingle-column or single-row matrices, depending on the context.
a numeric or complex (not <code>cummin</code> or <code>cummax</code>)object, or an object that can be coerced to one of these.
a numeric or complex (not <code>cummin</code> or <code>cummax</code>)object, or an object that can be coerced to one of these.
a numeric or complex (not <code>cummin</code> or <code>cummax</code>)object, or an object that can be coerced to one of these.
a numeric or complex (not <code>cummin</code> or <code>cummax</code>)object, or an object that can be coerced to one of these.
character string specifying the URL.
logical: should redirections be followed?
logical: should certificates be verified as validand applying to that host?
integer: the maximum time in seconds the request isallowed to take.  Non-positive and invalid values are ignored(including the default).  (Added in <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> 4.1.0.)
character: the minimum version of the TLS protocol to be usedfor <code>https://</code> URLs: the default (<code>""</code>) is no restrictionbeyond that of the underlying <code>libcurl</code> (usually 1.0).  Othervalid values are <code>"1.1"</code>, <code>"1.2"</code> (both for <code>libcurl</code>7.34.0 and later)  and <code>"1.3"</code> (7.52.0 and later), if supportedby the underlying version of <code>libcurl</code> and the SSL library it uses.
a numeric vector which is to be converted to a factor by cutting.
either a numeric vector of two or more unique cut points or asingle number (greater than or equal to 2) giving the number ofintervals into which <code>x</code> is to be cut.
labels for the levels of the resulting category.  By default,labels are constructed using <code>"(a,b]"</code> interval notation.  If<code>labels = FALSE</code>, simple integer codes are returned instead ofa factor.
logical, indicating if an ‘x[i]’ equal tothe lowest (or highest, for <code>right = FALSE</code>) ‘breaks’value should be included.
logical, indicating if the intervals should be closed onthe right (and open on the left) or vice versa.
integer which is used when labels are not given.  Itdetermines the number of digits used in formatting the break numbers.
logical: should the result be an ordered factor?
further arguments passed to or from other methods.
an object inheriting from class <code>"POSIXt"</code> or <code>"Date"</code>.
a vector of cut points <em>or</em> number giving the number ofintervals which <code>x</code> is to be cut into <em>or</em> aninterval specification, one of <code>"sec"</code>, <code>"min"</code>,<code>"hour"</code>, <code>"day"</code>, <code>"DSTday"</code>, <code>"week"</code>,<code>"month"</code>, <code>"quarter"</code> or <code>"year"</code>, optionallypreceded by an integer and a space, or followed by <code>"s"</code>.(For <code>"Date"</code> objects only interval specifications using<code>"day"</code>, <code>"week"</code>, <code>"month"</code>, <code>"quarter"</code> and<code>"year"</code> are allowed.)
labels for the levels of the resulting category.  By default,labels are constructed from the left-hand end of the intervals(which are included for the default value of <code>right</code>).  If<code>labels = FALSE</code>, simple integer codes are returned insteadof a factor.
logical.  If <code>breaks = "weeks"</code>, should theweek start on Mondays or Sundays?
arguments to be passed to or from other methods.
a numeric vector which is to be converted to a factor by cutting.
either a numeric vector of two or more unique cut points or asingle number (greater than or equal to 2) giving the number ofintervals into which <code>x</code> is to be cut.
labels for the levels of the resulting category.  By default,labels are constructed using <code>"(a,b]"</code> interval notation.  If<code>labels = FALSE</code>, simple integer codes are returned instead ofa factor.
logical, indicating if an ‘x[i]’ equal tothe lowest (or highest, for <code>right = FALSE</code>) ‘breaks’value should be included.
logical, indicating if the intervals should be closed onthe right (and open on the left) or vice versa.
integer which is used when labels are not given.  Itdetermines the number of digits used in formatting the break numbers.
logical: should the result be an ordered factor?
further arguments passed to or from other methods.
an object inheriting from class <code>"POSIXt"</code> or <code>"Date"</code>.
a vector of cut points <em>or</em> number giving the number ofintervals which <code>x</code> is to be cut into <em>or</em> aninterval specification, one of <code>"sec"</code>, <code>"min"</code>,<code>"hour"</code>, <code>"day"</code>, <code>"DSTday"</code>, <code>"week"</code>,<code>"month"</code>, <code>"quarter"</code> or <code>"year"</code>, optionallypreceded by an integer and a space, or followed by <code>"s"</code>.(For <code>"Date"</code> objects only interval specifications using<code>"day"</code>, <code>"week"</code>, <code>"month"</code>, <code>"quarter"</code> and<code>"year"</code> are allowed.)
labels for the levels of the resulting category.  By default,labels are constructed from the left-hand end of the intervals(which are included for the default value of <code>right</code>).  If<code>labels = FALSE</code>, simple integer codes are returned insteadof a factor.
logical.  If <code>breaks = "weeks"</code>, should theweek start on Mondays or Sundays?
arguments to be passed to or from other methods.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
these arguments are of either the form <code>value</code> or<code>tag = value</code>.  Component names are created based on the tag (ifpresent) or the deparsed argument itself.
<code>NULL</code> or a single integer or character stringspecifying a column to be used as row names, or a character orinteger vector giving the row names for the data frame.
if <code>TRUE</code> then the rows are checked forconsistency of length and names.
logical.  If <code>TRUE</code> then the names of thevariables in the data frame are checked to ensure that they aresyntactically valid variable names and are not duplicated.If necessary they are adjusted (by <code>make.names</code>)so that they are.
logical indicating if arguments which are“unnamed” (in the sense of not being formally called as<code>someName = arg</code>) get an automatically constructed name orrather name <code>""</code>.  Needs to be set to <code>FALSE</code> even when<code>check.names</code> is false if <code>""</code> names should be kept.
logical: should character vectors be convertedto factors?  The ‘factory-fresh’ default has been <code>TRUE</code>previously but has been changed to <code>FALSE</code> for <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> 4.0.0.
a data frame whose components are logical vectors,factors or numeric or character vectors.
logical indicating if the resulting matrixshould have character (rather than <code>NULL</code>)<code>rownames</code>.  The default, <code>NA</code>, uses <code>NULL</code>rownames if the data frame has ‘automatic’ row.names or for azero-row data frame.
any interpreted <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> function.
a text string that can be retrieved when the browser is entered.
a condition that can be retrieved when the browser isentered.
an optional method signature. If specified, themethod is debugged, rather than its generic.
logical; a call to the support function<code>debuggingState</code> returns <code>TRUE</code> if debugging is globallyturned on, <code>FALSE</code> otherwise.  An argument of one or the otherof those values sets the state.  If the debugging state is<code>FALSE</code>, none of the debugging actions will occur (but explicit<code>browser</code> calls in functions will continue to work).
any interpreted <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> function.
a text string that can be retrieved when the browser is entered.
a condition that can be retrieved when the browser isentered.
an optional method signature. If specified, themethod is debugged, rather than its generic.
logical; a call to the support function<code>debuggingState</code> returns <code>TRUE</code> if debugging is globallyturned on, <code>FALSE</code> otherwise.  An argument of one or the otherof those values sets the state.  If the debugging state is<code>FALSE</code>, none of the debugging actions will occur (but explicit<code>browser</code> calls in functions will continue to work).
any interpreted <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> function.
a text string that can be retrieved when the browser is entered.
a condition that can be retrieved when the browser isentered.
an optional method signature. If specified, themethod is debugged, rather than its generic.
logical; a call to the support function<code>debuggingState</code> returns <code>TRUE</code> if debugging is globallyturned on, <code>FALSE</code> otherwise.  An argument of one or the otherof those values sets the state.  If the debugging state is<code>FALSE</code>, none of the debugging actions will occur (but explicit<code>browser</code> calls in functions will continue to work).
these arguments are of either the form <code>value</code> or<code>tag = value</code>.  Component names are created based on the tag (ifpresent) or the deparsed argument itself.
<code>NULL</code> or a single integer or character stringspecifying a column to be used as row names, or a character orinteger vector giving the row names for the data frame.
if <code>TRUE</code> then the rows are checked forconsistency of length and names.
logical.  If <code>TRUE</code> then the names of thevariables in the data frame are checked to ensure that they aresyntactically valid variable names and are not duplicated.If necessary they are adjusted (by <code>make.names</code>)so that they are.
logical indicating if arguments which are“unnamed” (in the sense of not being formally called as<code>someName = arg</code>) get an automatically constructed name orrather name <code>""</code>.  Needs to be set to <code>FALSE</code> even when<code>check.names</code> is false if <code>""</code> names should be kept.
logical: should character vectors be convertedto factors?  The ‘factory-fresh’ default has been <code>TRUE</code>previously but has been changed to <code>FALSE</code> for <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> 4.0.0.
a variable name (given as a quoted string in the function call)
an expression to be assigned to <code>x</code>
an environment in which to evaluate <code>value</code>
an environment in which to assign <code>x</code>
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> expression.
integer in <i>[20, 500]</i> determining the cutoff(in bytes) at which line-breaking is tried.
logical indicating whether symbolic names should beenclosed in backticks if they do not follow the standard syntax.
character vector (or <code>NULL</code>) of deparsing options.See <code>.deparseOpts</code>.
integer: the maximum number of lines to produce.Negative values indicate no limit.
a string, passed to <code>paste()</code>.
further arguments passed to <code>deparse()</code>.
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> expression.
integer in <i>[20, 500]</i> determining the cutoff(in bytes) at which line-breaking is tried.
logical indicating whether symbolic names should beenclosed in backticks if they do not follow the standard syntax.
character vector (or <code>NULL</code>) of deparsing options.See <code>.deparseOpts</code>.
integer: the maximum number of lines to produce.Negative values indicate no limit.
a string, passed to <code>paste()</code>.
further arguments passed to <code>deparse()</code>.
numeric matrix: logical matrices are coerced to numeric.
logical; if <code>TRUE</code> (default) return thelogarithm of the modulus of the determinant.
Optional arguments.  At present none are used.  Previousversions of <code>det</code> allowed an optional <code>method</code> argument.This argument will be ignored but will not produce an error.
The object to detach.  Defaults to <code>search()[pos]</code>.This can be an unquoted name or a character string but <em>not</em> acharacter vector.  If a number is supplied this is taken as <code>pos</code>.
Index position in <code>search()</code> of the database todetach.  When <code>name</code> is a number, <code>pos = name</code>is used.
A logical value indicating whether or not to attempt tounload the namespace when a package is being detached.  If thepackage has a namespace and <code>unload</code> is <code>TRUE</code>, then<code>detach</code> will attempt to unload the namespace <em>via</em><code>unloadNamespace</code>: if the namespace is imported byanother namespace or <code>unload</code> is <code>FALSE</code>, no unloadingwill occur.
a logical indicating whether <code>name</code>can be assumed to be a character string.
logical: should a package be detached even though otherattached packages depend on it?
numeric matrix: logical matrices are coerced to numeric.
logical; if <code>TRUE</code> (default) return thelogarithm of the modulus of the determinant.
Optional arguments.  At present none are used.  Previousversions of <code>det</code> allowed an optional <code>method</code> argument.This argument will be ignored but will not produce an error.
numeric matrix: logical matrices are coerced to numeric.
logical; if <code>TRUE</code> (default) return thelogarithm of the modulus of the determinant.
Optional arguments.  At present none are used.  Previousversions of <code>det</code> allowed an optional <code>method</code> argument.This argument will be ignored but will not produce an error.
an object.
either a character string naming a file or aconnection. <code>""</code> indicates output to the console.
character vector indicating deparsing options.See <code>.deparseOpts</code> for their description.
logical: should the source formatting be retained whenparsing functions, if possible?
a matrix, vector or 1D <code>array</code>, or missing.
optional dimensions for the result when <code>x</code> isnot a matrix.
(when <code>x</code> is a matrix) logical indicating if theresulting vector, the diagonal of <code>x</code>, should inherit<code>names</code> from <code>dimnames(x)</code> if available.
either a single value or a vector of length equal to thatof the current diagonal.  Should be of a mode which can be coercedto that of <code>x</code>.
a matrix, vector or 1D <code>array</code>, or missing.
optional dimensions for the result when <code>x</code> isnot a matrix.
(when <code>x</code> is a matrix) logical indicating if theresulting vector, the diagonal of <code>x</code>, should inherit<code>names</code> from <code>dimnames(x)</code> if available.
either a single value or a vector of length equal to thatof the current diagonal.  Should be of a mode which can be coercedto that of <code>x</code>.
a numeric vector or matrix containing the values to bedifferenced.
an integer indicating which lag to use.
an integer indicating the order of the difference.
further arguments to be passed to or from methods.
a numeric vector or matrix containing the values to bedifferenced.
an integer indicating which lag to use.
an integer indicating the order of the difference.
further arguments to be passed to or from methods.
a numeric vector or matrix containing the values to bedifferenced.
an integer indicating which lag to use.
an integer indicating the order of the difference.
further arguments to be passed to or from methods.
date-time or date objects.
an optional time zone specification to be used for theconversion, mainly for <code>"POSIXlt"</code> objects.
character string.  Units in which the results aredesired.  Can be abbreviated.
character string.  Like <code>units</code>, except thatabbreviations are not allowed.
character string or numeric value specifying a time interval.
character specifying the format of <code>tim</code>: see<code>strptime</code>.  The default is a locale-specific time format.
an object inheriting from class <code>"difftime"</code>.
arguments to be passed to or from other methods.
a numeric vector or matrix containing the values to bedifferenced.
an integer indicating which lag to use.
an integer indicating the order of the difference.
further arguments to be passed to or from methods.
date-time or date objects.
an optional time zone specification to be used for theconversion, mainly for <code>"POSIXlt"</code> objects.
character string.  Units in which the results aredesired.  Can be abbreviated.
character string.  Like <code>units</code>, except thatabbreviations are not allowed.
character string or numeric value specifying a time interval.
character specifying the format of <code>tim</code>: see<code>strptime</code>.  The default is a locale-specific time format.
an object inheriting from class <code>"difftime"</code>.
arguments to be passed to or from other methods.
non-negative numeric vectors.
numeric vectors.
integer vectors.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, for example a matrix, array or data frame.
For the default method, either <code>NULL</code> ora numeric vector, which is coerced to integer (by truncation).
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, for example a matrix, array or data frame.
For the default method, either <code>NULL</code> ora numeric vector, which is coerced to integer (by truncation).
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, for example a matrix, array or data frame.
For the default method, either <code>NULL</code> ora numeric vector, which is coerced to integer (by truncation).
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, for example a matrix, array or data frame.
a possible value for <code>dimnames(x)</code>: see the‘Value’ section.
a character string, used to separate <code>base</code>symbols and digits in the constructed dimnames.
a non-empty <code>list</code> of character vectors.  Thelist components are used in turn (and recycled when needed) toconstruct replacements for empty dimnames components.  See also theexamples.
logical indicating that the dimnames constructed areunique within each dimension in the sense of <code>make.unique</code>.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, for example a matrix, array or data frame.
a possible value for <code>dimnames(x)</code>: see the‘Value’ section.
a character string, used to separate <code>base</code>symbols and digits in the constructed dimnames.
a non-empty <code>list</code> of character vectors.  Thelist components are used in turn (and recycled when needed) toconstruct replacements for empty dimnames components.  See also theexamples.
logical indicating that the dimnames constructed areunique within each dimension in the sense of <code>make.unique</code>.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, for example a matrix, array or data frame.
a possible value for <code>dimnames(x)</code>: see the‘Value’ section.
a character string, used to separate <code>base</code>symbols and digits in the constructed dimnames.
a non-empty <code>list</code> of character vectors.  Thelist components are used in turn (and recycled when needed) toconstruct replacements for empty dimnames components.  See also theexamples.
logical indicating that the dimnames constructed areunique within each dimension in the sense of <code>make.unique</code>.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, for example a matrix, array or data frame.
a possible value for <code>dimnames(x)</code>: see the‘Value’ section.
a character string, used to separate <code>base</code>symbols and digits in the constructed dimnames.
a non-empty <code>list</code> of character vectors.  Thelist components are used in turn (and recycled when needed) toconstruct replacements for empty dimnames components.  See also theexamples.
logical indicating that the dimnames constructed areunique within each dimension in the sense of <code>make.unique</code>.
a character vector of full path names; the defaultcorresponds to the working directory, <code>getwd()</code>.  Tildeexpansion (see <code>path.expand</code>) is performed.  Missingvalues will be ignored.  Elements with a marked encoding willbe converted to the native encoding (and if that fails, considerednon-existent).
an optional regular expression.  Only file nameswhich match the regular expression will be returned.
a logical value.  If <code>FALSE</code>, only thenames of visible files are returned (following Unix-style visibility,that is files whose name does not start with a dot).  If <code>TRUE</code>,all file names will be returned.
a logical value.  If <code>TRUE</code>, the directorypath is prepended to the file names to give a relative file path.If <code>FALSE</code>, the file names (rather than paths) are returned.
logical.  Should the listing recurse into directories?
logical.  Should pattern-matching be case-insensitive?
logical.  Should subdirectory names be included inrecursive listings?  (They always are in non-recursive ones).
logical.  Should both <code>"."</code> and <code>".."</code> be excludedalso from non-recursive listings?
a character vector containing a single path name.  Tildeexpansion (see <code>path.expand</code>) is done.
character vectors containing file or directory paths.  Tildeexpansion (see <code>path.expand</code>) is done.
logical; should the warnings on failure be shown?
logical. Should elements of the path other than thelast be created?  If true, like the Unix command <code>mkdir -p</code>.
the mode to be used on Unix-alikes: it will becoerced by <code>as.octmode</code>.  For <code>Sys.chmod</code> it isrecycled along <code>paths</code>.
logical: should the mode be restricted by the<code>umask</code> setting?
a character vector containing a single path name.  Tildeexpansion (see <code>path.expand</code>) is done.
character vectors containing file or directory paths.  Tildeexpansion (see <code>path.expand</code>) is done.
logical; should the warnings on failure be shown?
logical. Should elements of the path other than thelast be created?  If true, like the Unix command <code>mkdir -p</code>.
the mode to be used on Unix-alikes: it will becoerced by <code>as.octmode</code>.  For <code>Sys.chmod</code> it isrecycled along <code>paths</code>.
logical: should the mode be restricted by the<code>umask</code> setting?
character vector, containing path names.
either a function or a non-empty character string naming thefunction to be called.
a <em>list</em> of arguments to the function call.  The<code>names</code> attribute of <code>args</code> gives the argument names.
a logical value indicating whether to quote thearguments.
an environment within which to evaluate the call.  Thiswill be most useful if <code>what</code> is a character string andthe arguments are symbols or quoted expressions.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
A non-negative integer specifying the desired length.Double values will be coerced to integer:supplying an argument of length other than one is an error.
object to be coerced or tested.
further arguments passed to or from other methods.
an object.
either a character string naming a file or aconnection. <code>""</code> indicates output to the console.
character vector indicating deparsing options.See <code>.deparseOpts</code> for their description.
logical: should the source formatting be retained whenparsing functions, if possible?
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, to be coerced to a character vector.
the kind of quotes to be used, see ‘Details’.
an array (including a matrix).
an object from which to drop unused factor levels.
passed to <code>factor()</code>; factor levels whichshould be excluded from the result even if present.  Note that thiswas <em>implicitly</em> <code>NA</code> in <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> &lt;= 3.3.1 which did drop<code>NA</code> levels even when present in <code>x</code>, contrary to thedocumentation.  The current default is compatible with <code>x[ , drop=TRUE]</code>.
further arguments passed to methods
indices of columns from which <em>not</em> to drop levels
an object from which to drop unused factor levels.
passed to <code>factor()</code>; factor levels whichshould be excluded from the result even if present.  Note that thiswas <em>implicitly</em> <code>NA</code> in <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> &lt;= 3.3.1 which did drop<code>NA</code> levels even when present in <code>x</code>, contrary to thedocumentation.  The current default is compatible with <code>x[ , drop=TRUE]</code>.
further arguments passed to methods
indices of columns from which <em>not</em> to drop levels
an object from which to drop unused factor levels.
passed to <code>factor()</code>; factor levels whichshould be excluded from the result even if present.  Note that thiswas <em>implicitly</em> <code>NA</code> in <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> &lt;= 3.3.1 which did drop<code>NA</code> levels even when present in <code>x</code>, contrary to thedocumentation.  The current default is compatible with <code>x[ , drop=TRUE]</code>.
further arguments passed to methods
indices of columns from which <em>not</em> to drop levels
character vector.  The names of one or more <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> objects to be dumped.
either a character string naming a file or aconnection.  <code>""</code> indicates output to the console.
if <code>TRUE</code> and <code>file</code> is a character string,output will be appended to <code>file</code>; otherwise, it will overwritethe contents of <code>file</code>.
character vector indicating deparsing options.See <code>.deparseOpts</code> for their description.
the environment to search for objects.
logical.  Should promises be evaluated?
a vector or a data frame or an array or <code>NULL</code>.
a vector of values that cannot be compared.<code>FALSE</code> is a special value, meaning that all values can becompared, and may be the only value accepted for methods other thanthe default.  It will be coerced internally to the same type as<code>x</code>.
logical indicating if duplication should be consideredfrom the reverse side, i.e., the last (or rightmost) of identicalelements would correspond to <code>duplicated = FALSE</code>.
the maximum number of unique items expected (greater than one).
arguments for particular methods.
the array margin to be held fixed: see<code>apply</code>, and note that <code>MARGIN = 0</code> may be useful.
a vector or a data frame or an array or <code>NULL</code>.
a vector of values that cannot be compared.<code>FALSE</code> is a special value, meaning that all values can becompared, and may be the only value accepted for methods other thanthe default.  It will be coerced internally to the same type as<code>x</code>.
logical indicating if duplication should be consideredfrom the reverse side, i.e., the last (or rightmost) of identicalelements would correspond to <code>duplicated = FALSE</code>.
the maximum number of unique items expected (greater than one).
arguments for particular methods.
the array margin to be held fixed: see<code>apply</code>, and note that <code>MARGIN = 0</code> may be useful.
a vector or a data frame or an array or <code>NULL</code>.
a vector of values that cannot be compared.<code>FALSE</code> is a special value, meaning that all values can becompared, and may be the only value accepted for methods other thanthe default.  It will be coerced internally to the same type as<code>x</code>.
logical indicating if duplication should be consideredfrom the reverse side, i.e., the last (or rightmost) of identicalelements would correspond to <code>duplicated = FALSE</code>.
the maximum number of unique items expected (greater than one).
arguments for particular methods.
the array margin to be held fixed: see<code>apply</code>, and note that <code>MARGIN = 0</code> may be useful.
a vector or a data frame or an array or <code>NULL</code>.
a vector of values that cannot be compared.<code>FALSE</code> is a special value, meaning that all values can becompared, and may be the only value accepted for methods other thanthe default.  It will be coerced internally to the same type as<code>x</code>.
logical indicating if duplication should be consideredfrom the reverse side, i.e., the last (or rightmost) of identicalelements would correspond to <code>duplicated = FALSE</code>.
the maximum number of unique items expected (greater than one).
arguments for particular methods.
the array margin to be held fixed: see<code>apply</code>, and note that <code>MARGIN = 0</code> may be useful.
a vector or a data frame or an array or <code>NULL</code>.
a vector of values that cannot be compared.<code>FALSE</code> is a special value, meaning that all values can becompared, and may be the only value accepted for methods other thanthe default.  It will be coerced internally to the same type as<code>x</code>.
logical indicating if duplication should be consideredfrom the reverse side, i.e., the last (or rightmost) of identicalelements would correspond to <code>duplicated = FALSE</code>.
the maximum number of unique items expected (greater than one).
arguments for particular methods.
the array margin to be held fixed: see<code>apply</code>, and note that <code>MARGIN = 0</code> may be useful.
a character vector with suitable numeric version strings (see‘Details’); for <code>package_version</code>, alternatively an Rversion object as obtained by <code>R.version</code>.
a logical indicating whether invalid numeric versionsshould results in an error (default) or not.
an object to be printed or summarized from one of thedate-time classes.
for timezone formatting, passed to <code>format.POSIXct</code>.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
number of significant digits for the computations:should be high enough to represent the least important time unitexactly.
further arguments to be passed from or to other methods.
date-time objects
date-time objects or character vectors.  (Charactervectors are converted by <code>as.POSIXct</code>.)
a numeric vector (in seconds)
one of <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>or <code>&gt;=</code>.
arguments to be passed to <code>cat</code> (for<code>warnings()</code>).
a <code>"warnings"</code> object as returned by<code>warnings()</code>.
a <code>"warnings"</code> or <code>"summary.warnings"</code> object.
if not <code>missing</code>, a <code>character</code>vector of the same <code>length</code> as <code>x</code>, to “label”the messages.  Defaults to <code>paste0(seq_len(n), ": ")</code> for<i>n &gt;= 2</i> where <code>n &lt;- length(x)</code>.
a character string <code>cat()</code>ed before themessages are printed.
a character string giving the pathname to a DLL, also knownas a dynamic shared object.  (See ‘Details’ for what theseterms mean.)
a logical value controlling whether the symbols in theDLL are stored in their own local table and not sharedacross DLLs, or added to the global symbol table.  Whether this hasany effect is system-dependent.
a logical controlling whether all symbols are resolved (andrelocated) immediately the library is loaded or deferred until theyare used.  This control is useful for developers testing whether alibrary is complete and has all the necessary symbols, and for usersto ignore missing symbols.  Whether this has any effect is system-dependent.
other arguments for future expansion.
a character string giving a symbol name.
if supplied, confine the search for the <code>name</code> tothe DLL given by this argument (plus the conventional extension,‘<span class="file">.so</span>’, ‘<span class="file">.sl</span>’, ‘<span class="file">.dll</span>’, ...).  This is intended toadd safety for packages, which can ensure by using this argumentthat no other package can override their external symbols.  This isused in the same way as in <code>.C</code>, <code>.Call</code>,<code>.Fortran</code> and <code>.External</code> functions.
The type of symbol to look for: can be any (<code>""</code>, thedefault), <code>"Fortran"</code>, <code>"Call"</code> or <code>"External"</code>.
a character string giving the pathname to a DLL, also knownas a dynamic shared object.  (See ‘Details’ for what theseterms mean.)
a logical value controlling whether the symbols in theDLL are stored in their own local table and not sharedacross DLLs, or added to the global symbol table.  Whether this hasany effect is system-dependent.
a logical controlling whether all symbols are resolved (andrelocated) immediately the library is loaded or deferred until theyare used.  This control is useful for developers testing whether alibrary is complete and has all the necessary symbols, and for usersto ignore missing symbols.  Whether this has any effect is system-dependent.
other arguments for future expansion.
a character string giving a symbol name.
if supplied, confine the search for the <code>name</code> tothe DLL given by this argument (plus the conventional extension,‘<span class="file">.so</span>’, ‘<span class="file">.sl</span>’, ‘<span class="file">.dll</span>’, ...).  This is intended toadd safety for packages, which can ensure by using this argumentthat no other package can override their external symbols.  This isused in the same way as in <code>.C</code>, <code>.Call</code>,<code>.Fortran</code> and <code>.External</code> functions.
The type of symbol to look for: can be any (<code>""</code>, thedefault), <code>"Fortran"</code>, <code>"Call"</code> or <code>"External"</code>.
For <code>get</code>, an object name (given as a characterstring or a symbol).<br>For <code>mget</code>, a character vector of object names.
where to look for the object (see ‘Details’); ifomitted search as if the name of the object appeared unquoted in anexpression.
the mode or type of object sought: see the‘Details’ section.
should the enclosing frames of the environment besearched?
For <code>mget</code>, a <code>list</code> of values tobe used if the item is not found: it will be coerced to a list ifnecessary.<br>For <code>dynGet</code> any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, e.g., a call to<code>stop()</code>.
integer specifying the minimal frame number to lookinto.
environment to be used.
the function to be applied, found <em>via</em><code>match.fun</code>.In the case of functions like <code>+</code>, <code>%*%</code>, etc., thefunction name must be backquoted or quoted.
optional arguments to <code>FUN</code>.
a logical indicating whether to apply the function toall values.
logical indicating whether the resulting list shouldhave <code>names</code>.
a numeric or complex matrix whose spectral decomposition is tobe computed.  Logical matrices are coerced to numeric.
if <code>TRUE</code>, the matrix is assumed to be symmetric(or Hermitian if complex) and only its lower triangle (diagonalincluded) is used.  If <code>symmetric</code> is not specified,<code>isSymmetric(x)</code> is used.
if <code>TRUE</code>, only the eigenvalues are computedand returned, otherwise both eigenvalues and eigenvectors arereturned.
logical. Defunct and ignored.
a <code>function</code>, a <code>formula</code>, or<code>NULL</code>, which is the default.
an environment to associate with the function
an arbitrary <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
a logical, if <code>TRUE</code> the environment will use a hash table.
an environment to be used as the enclosure of theenvironment created.
an environment
an integer specifying the initial size for a hashedenvironment.  An internal default value will be used if<code>size</code> is <code>NA</code> or zero.  This argument is ignored if<code>hash</code> is <code>FALSE</code>.
A character vector.
A character vector of positive length.
A character vector.
A character vector of positive length.
A character vector, or an object that can be coerced to oneby <code>as.character</code>.
integer: the minimum field width.  If <code>NULL</code> or<code>NA</code>, this is taken to be the largest field width needed forany element of <code>x</code>.
character: quoting character, if any.
logical: should <code>NA</code> strings be encoded?
character: partial matches are allowed.  If padding tothe minimum field width is needed, how should spaces be inserted?<code>justify == "none"</code> is equivalent to <code>width = 0</code>, forconsistency with <code>format.default</code>.
A character vector.
A character vector of positive length.
A character vector.
A character vector of positive length.
vector of <code>character</code> string whose “starts”are considered.
<code>character</code> vector (often of length one).
any syntactically valid <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> expression
a <code>call</code>, i.e., an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object of<code>class</code> (and <code>mode</code>) <code>"call"</code>.
an environment or a list object.  Defaults to thecurrent evaluation environment.
a <code>function</code>, a <code>formula</code>, or<code>NULL</code>, which is the default.
an environment to associate with the function
an arbitrary <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
a logical, if <code>TRUE</code> the environment will use a hash table.
an environment to be used as the enclosure of theenvironment created.
an environment
an integer specifying the initial size for a hashedenvironment.  An internal default value will be used if<code>size</code> is <code>NA</code> or zero.  This argument is ignored if<code>hash</code> is <code>FALSE</code>.
a <code>function</code>, a <code>formula</code>, or<code>NULL</code>, which is the default.
an environment to associate with the function
an arbitrary <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
a logical, if <code>TRUE</code> the environment will use a hash table.
an environment to be used as the enclosure of theenvironment created.
an environment
an integer specifying the initial size for a hashedenvironment.  An internal default value will be used if<code>size</code> is <code>NA</code> or zero.  This argument is ignored if<code>hash</code> is <code>FALSE</code>.
a <code>function</code>, a <code>formula</code>, or<code>NULL</code>, which is the default.
an environment to associate with the function
an arbitrary <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
a logical, if <code>TRUE</code> the environment will use a hash table.
an environment to be used as the enclosure of theenvironment created.
an environment
an integer specifying the initial size for a hashedenvironment.  An internal default value will be used if<code>size</code> is <code>NA</code> or zero.  This argument is ignored if<code>hash</code> is <code>FALSE</code>.
an environment.
logical specifying whether bindings should be locked.
a name object or character string.
a function taking zero or one arguments.
a <code>function</code>, a <code>formula</code>, or<code>NULL</code>, which is the default.
an environment to associate with the function
an arbitrary <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
a logical, if <code>TRUE</code> the environment will use a hash table.
an environment to be used as the enclosure of theenvironment created.
an environment
an integer specifying the initial size for a hashedenvironment.  An internal default value will be used if<code>size</code> is <code>NA</code> or zero.  This argument is ignored if<code>hash</code> is <code>FALSE</code>.
a condition object.
call expression.
a condition object.
expression to be evaluated.
expression to be evaluated before returning or exiting.
function.
character string.
character string.
character string naming a restart.
restart object.
object.
character string naming a condition class.
additional arguments; see details below.
an object to be evaluated.  See ‘Details’.
the <code>environment</code> in which <code>expr</code> is tobe evaluated.  May also be <code>NULL</code>, a list, a data frame,a pairlist or an integer as specified to <code>sys.call</code>.
Relevant when <code>envir</code> is a (pair)list or a data frame.Specifies the enclosure, i.e., where <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> looks for objects not foundin <code>envir</code>.  This can be <code>NULL</code> (interpreted as the basepackage environment, <code>baseenv()</code>) or an environment.
number of parent generations to go back
an object to be evaluated.  See ‘Details’.
the <code>environment</code> in which <code>expr</code> is tobe evaluated.  May also be <code>NULL</code>, a list, a data frame,a pairlist or an integer as specified to <code>sys.call</code>.
Relevant when <code>envir</code> is a (pair)list or a data frame.Specifies the enclosure, i.e., where <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> looks for objects not foundin <code>envir</code>.  This can be <code>NULL</code> (interpreted as the basepackage environment, <code>baseenv()</code>) or an environment.
number of parent generations to go back
an object to be evaluated.  See ‘Details’.
the <code>environment</code> in which <code>expr</code> is tobe evaluated.  May also be <code>NULL</code>, a list, a data frame,a pairlist or an integer as specified to <code>sys.call</code>.
Relevant when <code>envir</code> is a (pair)list or a data frame.Specifies the enclosure, i.e., where <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> looks for objects not foundin <code>envir</code>.  This can be <code>NULL</code> (interpreted as the basepackage environment, <code>baseenv()</code>) or an environment.
number of parent generations to go back
a variable name (given as a character string or a symbol).
where to look for the object (see the details section); ifomitted, the function will search as if the name of the objectappeared unquoted in an expression.
an alternative way to specify an environment to look in,but it is usually simpler to just use the <code>where</code> argument.
a frame in the calling list.  Equivalent to giving<code>where</code> as <code>sys.frame(frame)</code>.
the mode or type of object sought: see the‘Details’ section.
should the enclosing frames of the environment besearched?
the return value of <code>get0(x, *)</code> when<code>x</code> does not exist.
a numeric or complex vector.
a positive or complex number: the base with respect to whichlogarithms are computed.  Defaults to <i>e</i>=<code>exp(1)</code>.
vectors, factors or a list containing these.
a logical indicating the <code>"out.attrs"</code>attribute (see below) should be computed and returned.
logical specifying if character vectors areconverted to factors.
a numeric or complex vector.
a positive or complex number: the base with respect to whichlogarithms are computed.  Defaults to <i>e</i>=<code>exp(1)</code>.
<code>expression</code>: <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> objects, typically calls, symbolsor constants.<br><code>as.expression</code>: arguments to be passed to methods.
an arbitrary <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
A non-negative integer specifying the desired length.Double values will be coerced to integer:supplying an argument of length other than one is an error.
object to be coerced or tested.
further arguments passed to or from other methods.
a vector of data, usually taking a small number of distinctvalues.
an optional vector of the unique values (as character strings)that <code>x</code> might have taken.  The default is the unique set ofvalues taken by <code>as.character(x)</code>, sorted intoincreasing order <em>of <code>x</code></em>.  Note that this set can bespecified as smaller than <code>sort(unique(x))</code>.
<em>either</em> an optional character vector oflabels for the levels (in the same order as <code>levels</code> afterremoving those in <code>exclude</code>), <em>or</em> a character string oflength 1.  Duplicated values in <code>labels</code> can be used to mapdifferent values of <code>x</code> to the same factor level.
a vector of values to be excluded when forming theset of levels.  This may be factor with the same level set as <code>x</code>or should be a <code>character</code>.
logical flag to determine if the levels should be regardedas ordered (in the order given).
an upper bound on the number of levels; see ‘Details’.
(in <code>ordered(.)</code>): any of the above, apart from<code>ordered</code> itself.
only add an <code>NA</code> level if it is used, i.e.if <code>any(is.na(x))</code>.
non-negative numeric vectors.
numeric vectors.
integer vectors.
character string.  A description of the connection:see ‘Details’.
character string.  A description of how to open the connection(if it should be opened initially).  See section ‘Modes’ forpossible values.
logical.  See the ‘Blocking’ section.
The name of the encoding to be assumed.  See the‘Encoding’ section.
logical.  If true, a ‘raw’ interface is used whichwill be more suitable for arguments which are not regular files,e.g. character devices.  This suppresses the check for a compressedfile when opening for text-mode reading, and asserts that the‘file’ may not be seekable.
character string, partially matched to<code>c("default", "internal", "wininet", "libcurl")</code>:see ‘Details’.
named character vector of HTTP headers to use in HTTPrequests.  It is ignored for non-HTTP URLs.  The <code>User-Agent</code>header, coming from the <code>HTTPUserAgent</code> option (see<code>options</code>) is used as the first header, automatically.
integer in 0–9.  The amount of compression to beapplied when writing, from none to maximal available.  For<code>xzfile</code> can also be negative: see the ‘Compression’section.
numeric: the timeout (in seconds) to be used for thisconnection.  Beware that some OSes may treat very large values aszero: however the POSIX standard requires values up to 31 days to besupported.
optional character vector with options. Currently only<code>"no-delay"</code> is supported on TCP sockets.
a filename within a zip file.
character string.  Host name for the port.
integer.  The TCP port number.
logical.  Should the socket be a client or a server?
a server socket listening for connections.
a connection.
character string.  Currently ignored.
character string.  Empty or <code>"read"</code> or <code>"write"</code>,partial matches allowed.
arguments passed to or from other methods.
character string.  A description of the connection:see ‘Details’.
character string.  A description of how to open the connection(if it should be opened initially).  See section ‘Modes’ forpossible values.
logical.  See the ‘Blocking’ section.
The name of the encoding to be assumed.  See the‘Encoding’ section.
logical.  If true, a ‘raw’ interface is used whichwill be more suitable for arguments which are not regular files,e.g. character devices.  This suppresses the check for a compressedfile when opening for text-mode reading, and asserts that the‘file’ may not be seekable.
character string, partially matched to<code>c("default", "internal", "wininet", "libcurl")</code>:see ‘Details’.
named character vector of HTTP headers to use in HTTPrequests.  It is ignored for non-HTTP URLs.  The <code>User-Agent</code>header, coming from the <code>HTTPUserAgent</code> option (see<code>options</code>) is used as the first header, automatically.
integer in 0–9.  The amount of compression to beapplied when writing, from none to maximal available.  For<code>xzfile</code> can also be negative: see the ‘Compression’section.
numeric: the timeout (in seconds) to be used for thisconnection.  Beware that some OSes may treat very large values aszero: however the POSIX standard requires values up to 31 days to besupported.
optional character vector with options. Currently only<code>"no-delay"</code> is supported on TCP sockets.
a filename within a zip file.
character string.  Host name for the port.
integer.  The TCP port number.
logical.  Should the socket be a client or a server?
a server socket listening for connections.
a connection.
character string.  Currently ignored.
character string.  Empty or <code>"read"</code> or <code>"write"</code>,partial matches allowed.
arguments passed to or from other methods.
character vector containing file names.Tilde-expansion will be done: see <code>path.expand</code>.
integer specifying access mode required: see ‘Details’.
character vectors, containing file names or paths.
character vectors, containing file names or paths.For <code>file.copy</code> and <code>file.symlink</code><code>to</code> can alternatively be the path to a single existing directory.
logical; should existing destination files be overwritten?
logical; should the warnings on failure be shown?
logical.  If <code>to</code> is a directory, shoulddirectories in <code>from</code> be copied (and their contents)?  (Like<code>cp -R</code> on POSIX OSes.)
logical:  should file permission bits be copied wherepossible?
logical:  should file dates be preserved wherepossible? See <code>Sys.setFileTime</code>.
Logical: choose the style of dialog boxpresented to the user: at present only new = FALSE is used.
character vectors, containing file names or paths.
character vectors, containing file names or paths.For <code>file.copy</code> and <code>file.symlink</code><code>to</code> can alternatively be the path to a single existing directory.
logical; should existing destination files be overwritten?
logical; should the warnings on failure be shown?
logical.  If <code>to</code> is a directory, shoulddirectories in <code>from</code> be copied (and their contents)?  (Like<code>cp -R</code> on POSIX OSes.)
logical:  should file permission bits be copied wherepossible?
logical:  should file dates be preserved wherepossible? See <code>Sys.setFileTime</code>.
character vectors, containing file names or paths.
character vectors, containing file names or paths.For <code>file.copy</code> and <code>file.symlink</code><code>to</code> can alternatively be the path to a single existing directory.
logical; should existing destination files be overwritten?
logical; should the warnings on failure be shown?
logical.  If <code>to</code> is a directory, shoulddirectories in <code>from</code> be copied (and their contents)?  (Like<code>cp -R</code> on POSIX OSes.)
logical:  should file permission bits be copied wherepossible?
logical:  should file dates be preserved wherepossible? See <code>Sys.setFileTime</code>.
character vectors, containing file names or paths.
character vectors, containing file names or paths.For <code>file.copy</code> and <code>file.symlink</code><code>to</code> can alternatively be the path to a single existing directory.
logical; should existing destination files be overwritten?
logical; should the warnings on failure be shown?
logical.  If <code>to</code> is a directory, shoulddirectories in <code>from</code> be copied (and their contents)?  (Like<code>cp -R</code> on POSIX OSes.)
logical:  should file permission bits be copied wherepossible?
logical:  should file dates be preserved wherepossible? See <code>Sys.setFileTime</code>.
character vectors containing file paths.  Tilde-expansionis done: see <code>path.expand</code>.
Logical: return all cols rather than just thefirst six.
character vectors, containing file names or paths.
character vectors, containing file names or paths.For <code>file.copy</code> and <code>file.symlink</code><code>to</code> can alternatively be the path to a single existing directory.
logical; should existing destination files be overwritten?
logical; should the warnings on failure be shown?
logical.  If <code>to</code> is a directory, shoulddirectories in <code>from</code> be copied (and their contents)?  (Like<code>cp -R</code> on POSIX OSes.)
logical:  should file permission bits be copied wherepossible?
logical:  should file dates be preserved wherepossible? See <code>Sys.setFileTime</code>.
character vectors containing file paths.  Tilde-expansionis done: see <code>path.expand</code>.
Logical: return all cols rather than just thefirst six.
character vectors containing file paths.  Tilde-expansionis done: see <code>path.expand</code>.
Logical: return all cols rather than just thefirst six.
character vectors.  Long vectors are not supported.
the path separator to use (assumed to be ASCII).
character vectors, containing file names or paths.
character vectors, containing file names or paths.For <code>file.copy</code> and <code>file.symlink</code><code>to</code> can alternatively be the path to a single existing directory.
logical; should existing destination files be overwritten?
logical; should the warnings on failure be shown?
logical.  If <code>to</code> is a directory, shoulddirectories in <code>from</code> be copied (and their contents)?  (Like<code>cp -R</code> on POSIX OSes.)
logical:  should file permission bits be copied wherepossible?
logical:  should file dates be preserved wherepossible? See <code>Sys.setFileTime</code>.
character vectors, containing file names or paths.
character vectors, containing file names or paths.For <code>file.copy</code> and <code>file.symlink</code><code>to</code> can alternatively be the path to a single existing directory.
logical; should existing destination files be overwritten?
logical; should the warnings on failure be shown?
logical.  If <code>to</code> is a directory, shoulddirectories in <code>from</code> be copied (and their contents)?  (Like<code>cp -R</code> on POSIX OSes.)
logical:  should file permission bits be copied wherepossible?
logical:  should file dates be preserved wherepossible? See <code>Sys.setFileTime</code>.
one or more character vectors containing the names of thefiles to be displayed.  Paths with have tilde expansion.
character vector (of the same length as the number of filesspecified in <code>...</code>) giving a header for each file beingdisplayed.  Defaults to empty strings.
an overall title for the display.  If a single separatewindow is used for the display, <code>title</code> will be used as the windowtitle.  If multiple windows are used, their titles should combine the titleand the file-specific header.
should the files be deleted after display?  Usedfor temporary files.
the pager to be used: not used on all platforms
character string giving the encoding to be assumed forthe file(s).
character vectors containing file paths.  Tilde-expansionis done: see <code>path.expand</code>.
Logical: return all cols rather than just thefirst six.
character vectors, containing file names or paths.
character vectors, containing file names or paths.For <code>file.copy</code> and <code>file.symlink</code><code>to</code> can alternatively be the path to a single existing directory.
logical; should existing destination files be overwritten?
logical; should the warnings on failure be shown?
logical.  If <code>to</code> is a directory, shoulddirectories in <code>from</code> be copied (and their contents)?  (Like<code>cp -R</code> on POSIX OSes.)
logical:  should file permission bits be copied wherepossible?
logical:  should file dates be preserved wherepossible? See <code>Sys.setFileTime</code>.
a function of the appropriate arity (binary for<code>Reduce</code>, unary for <code>Filter</code>, <code>Find</code> and<code>Position</code>, <i>k</i>-ary for <code>Map</code> if this is called with<i>k</i> arguments).  An arbitrary predicate function for<code>Negate</code>.
a vector.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object of the same kind as the elements of<code>x</code>.
a logical indicating whether to proceed from left toright (default) or from right to left.
a logical indicating whether the successive reducecombinations should be accumulated.  By default, only the finalcombination is used.
the value to be returned in the case when“no match” (no element satisfying the predicate) is found.
vectors.
a function of the appropriate arity (binary for<code>Reduce</code>, unary for <code>Filter</code>, <code>Find</code> and<code>Position</code>, <i>k</i>-ary for <code>Map</code> if this is called with<i>k</i> arguments).  An arbitrary predicate function for<code>Negate</code>.
a vector.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object of the same kind as the elements of<code>x</code>.
a logical indicating whether to proceed from left toright (default) or from right to left.
a logical indicating whether the successive reducecombinations should be accumulated.  By default, only the finalcombination is used.
the value to be returned in the case when“no match” (no element satisfying the predicate) is found.
vectors.
character vector: the names of packages.
a character vector describing the location of <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>library trees to search through, or <code>NULL</code>.  The default valueof <code>NULL</code> corresponds to checking the loaded namespace, thenall libraries currently known in <code>.libPaths()</code>.
logical.  Should this not give warnings or an errorif the package is not found?
a logical.  If <code>TRUE</code>, additional diagnostics areprinted, notably when a package is found more than once.
call expression.
numeric.
numeric, sorted (weakly) increasingly, of length <code>N</code>,say.
logical; if true, the rightmost interval,<code>vec[N-1] .. vec[N]</code> is treated as <em>closed</em>, see below.
logical; if true, the returned indices are coercedinto <code>1,...,N-1</code>, i.e., <code>0</code> is mapped to <code>1</code>and <code>N</code> to <code>N-1</code>.
logical; if true all the intervals are open at leftand closed at right; in the formulas below, <i>≤</i> should beswapped with <i>&lt;</i> (and <i>&gt;</i> with <i>≥</i>), and<code>rightmost.closed</code> means ‘leftmost is closed’.  This maybe useful, e.g., in survival analysis computations.
an object

from which to extract elements.
with a <code>"row.names"</code> attribute, typically adata frame.
typically S3- or S4-classed.
The full path to the‘<span class="file">DESCRIPTION</span>’ file of a package.
the filepath to a lazyload database.
a character vector describing the location of <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>library trees to search through, or <code>NULL</code>.  The default valueof <code>NULL</code> corresponds to all libraries currently known to<code>.libPaths()</code>.
logical.  Should this not give warnings or an errorif the package(s) are not found?
logical.  Should  the <code>Imports</code> field be processed?
logical: should message(s) be printed.
A processed ‘<span class="file">DESCRIPTION</span>’ file of class<code>"packageDescription2"</code>.
platform strings of the form <code>"cpu-vendor-os"</code>.
name of image file to save or load.
integer.  Currently <code>type = 0</code> returns the internal<code>"row.names"</code> attribute (possibly <code>NULL</code>), <code>type = 2</code>the number of rows implied by the attribute, and <code>type = 1</code> thelatter with a negative sign for ‘automatic’ row names.
integer.  The number of rows.
character string such as <code>"package:MASS"</code>.
the object name in a lazyload database.
logical: are the values in the database compressed?
a load hook: see <code>unserialize</code>.
a length-one integer vector.
indices.
logical.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
a classless object to be placed into the class.
an optional time zone.
an optional character vector of classes <em>containing</em>the default classes.
see <code>difftime</code>.
Arguments passed to non-dot name versions.
an integer.
character vector of <em>same</em> objects, masking others.
character string naming the package which is masked from or by.
logical indicating if the masking happens <em>by</em><code>pkg</code>, or (<code>by = FALSE</code>) from <code>pkg</code>.
a condition object.
call expression.
a condition object.
expression to be evaluated.
expression to be evaluated before returning or exiting.
function.
character string.
character string.
character string naming a restart.
restart object.
object.
character string naming a condition class.
additional arguments; see details below.
a numeric vector.  Or, for <code>round</code> and <code>signif</code>, acomplex vector.
integer indicating the number of decimal places(<code>round</code>) or significant digits (<code>signif</code>) to be used.Negative values are allowed (see ‘Details’).
arguments to be passed to methods.
character string.  A description of the connection:see ‘Details’.
character string.  A description of how to open the connection(if it should be opened initially).  See section ‘Modes’ forpossible values.
logical.  See the ‘Blocking’ section.
The name of the encoding to be assumed.  See the‘Encoding’ section.
logical.  If true, a ‘raw’ interface is used whichwill be more suitable for arguments which are not regular files,e.g. character devices.  This suppresses the check for a compressedfile when opening for text-mode reading, and asserts that the‘file’ may not be seekable.
character string, partially matched to<code>c("default", "internal", "wininet", "libcurl")</code>:see ‘Details’.
named character vector of HTTP headers to use in HTTPrequests.  It is ignored for non-HTTP URLs.  The <code>User-Agent</code>header, coming from the <code>HTTPUserAgent</code> option (see<code>options</code>) is used as the first header, automatically.
integer in 0–9.  The amount of compression to beapplied when writing, from none to maximal available.  For<code>xzfile</code> can also be negative: see the ‘Compression’section.
numeric: the timeout (in seconds) to be used for thisconnection.  Beware that some OSes may treat very large values aszero: however the POSIX standard requires values up to 31 days to besupported.
optional character vector with options. Currently only<code>"no-delay"</code> is supported on TCP sockets.
a filename within a zip file.
character string.  Host name for the port.
integer.  The TCP port number.
logical.  Should the socket be a client or a server?
a server socket listening for connections.
a connection.
character string.  Currently ignored.
character string.  Empty or <code>"read"</code> or <code>"write"</code>,partial matches allowed.
arguments passed to or from other methods.
character string.  A description of the connection:see ‘Details’.
character string.  A description of how to open the connection(if it should be opened initially).  See section ‘Modes’ forpossible values.
logical.  See the ‘Blocking’ section.
The name of the encoding to be assumed.  See the‘Encoding’ section.
logical.  If true, a ‘raw’ interface is used whichwill be more suitable for arguments which are not regular files,e.g. character devices.  This suppresses the check for a compressedfile when opening for text-mode reading, and asserts that the‘file’ may not be seekable.
character string, partially matched to<code>c("default", "internal", "wininet", "libcurl")</code>:see ‘Details’.
named character vector of HTTP headers to use in HTTPrequests.  It is ignored for non-HTTP URLs.  The <code>User-Agent</code>header, coming from the <code>HTTPUserAgent</code> option (see<code>options</code>) is used as the first header, automatically.
integer in 0–9.  The amount of compression to beapplied when writing, from none to maximal available.  For<code>xzfile</code> can also be negative: see the ‘Compression’section.
numeric: the timeout (in seconds) to be used for thisconnection.  Beware that some OSes may treat very large values aszero: however the POSIX standard requires values up to 31 days to besupported.
optional character vector with options. Currently only<code>"no-delay"</code> is supported on TCP sockets.
a filename within a zip file.
character string.  Host name for the port.
integer.  The TCP port number.
logical.  Should the socket be a client or a server?
a server socket listening for connections.
a connection.
character string.  Currently ignored.
character string.  Empty or <code>"read"</code> or <code>"write"</code>,partial matches allowed.
arguments passed to or from other methods.
A length-one logical vector that is not <code>NA</code>.Conditions of length greater than one are currently accepted with awarning, but only the first element is used.  An error is signalledinstead when the environment variable <span class="env">_R_CHECK_LENGTH_1_CONDITION_</span>is set to true.  Other types are coerced to logicalif possible, ignoring any class.
A syntactical name for a variable.
An expression evaluating to a vector (including a list andan expression) or to a pairlist or <code>NULL</code>.  Afactor value will be coerced to a character vector.  As from <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>4.0.0 this can be a long vector.
An <em>expression</em> in a formal sense.  This is either asimple expression or a so-called <em>compound expression</em>, usuallyof the form <code>{ expr1 ; expr2 }</code>.
a formal argument of the enclosing function.
number of leading arguments to force.
function to call.
arguments to <code>FUN</code>.
a <code>function</code>, or see ‘Details’.
<code>environment</code> in which the function should bedefined (or found via <code>get()</code> in the first case and when<code>fun</code> a character string).
a <code>list</code> (or <code>pairlist</code>) of <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> expressions.
a <code>function</code>, or see ‘Details’.
<code>environment</code> in which the function should bedefined (or found via <code>get()</code> in the first case and when<code>fun</code> a character string).
a <code>list</code> (or <code>pairlist</code>) of <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> expressions.
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object (conceptually); typically numeric.
logical; if <code>FALSE</code>, logical, numeric and complexvalues are right-justified to a common width: if <code>TRUE</code> theleading blanks for justification are suppressed.
how many significant digits are to be used fornumeric and complex <code>x</code>.  The default, <code>NULL</code>, uses<code>getOption("digits")</code>.  This is a suggestion: enough decimalplaces will be used so that the smallest (in magnitude) number hasthis many significant digits, and also to satisfy <code>nsmall</code>.(For the interpretation for complex numbers see <code>signif</code>.)
the minimum number of digits to the right of the decimalpoint in formatting real/complex numbers in non-scientific formats.Allowed values are <code>0 &lt;= nsmall &lt;= 20</code>.
should a <em>character</em> vector be left-justified (thedefault), right-justified, centred or left alone.  Can be abbreviated.
<code>default</code> method: the <em>minimum</em> field width or<code>NULL</code> or <code>0</code> for no restriction.

<code>AsIs</code> method: the <em>maximum</em> field width for non-characterobjects.  <code>NULL</code> corresponds to the default <code>12</code>.
logical: should <code>NA</code> strings be encoded?  Notethis only applies to elements of character vectors, not to numerical,complex nor logical <code>NA</code>s, which are always encoded as <code>"NA"</code>.
Either a logical specifying whetherelements of a real or complex vector should be encoded in scientificformat, or an integer penalty (see <code>options("scipen")</code>).Missing values correspond to the current default penalty.
further arguments passed to or from other methods.
used for prettying (longish) numerical and complex sequences.Passed to <code>prettyNum</code>: that help page explains the details.
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object (conceptually); typically numeric.
logical; if <code>FALSE</code>, logical, numeric and complexvalues are right-justified to a common width: if <code>TRUE</code> theleading blanks for justification are suppressed.
how many significant digits are to be used fornumeric and complex <code>x</code>.  The default, <code>NULL</code>, uses<code>getOption("digits")</code>.  This is a suggestion: enough decimalplaces will be used so that the smallest (in magnitude) number hasthis many significant digits, and also to satisfy <code>nsmall</code>.(For the interpretation for complex numbers see <code>signif</code>.)
the minimum number of digits to the right of the decimalpoint in formatting real/complex numbers in non-scientific formats.Allowed values are <code>0 &lt;= nsmall &lt;= 20</code>.
should a <em>character</em> vector be left-justified (thedefault), right-justified, centred or left alone.  Can be abbreviated.
<code>default</code> method: the <em>minimum</em> field width or<code>NULL</code> or <code>0</code> for no restriction.

<code>AsIs</code> method: the <em>maximum</em> field width for non-characterobjects.  <code>NULL</code> corresponds to the default <code>12</code>.
logical: should <code>NA</code> strings be encoded?  Notethis only applies to elements of character vectors, not to numerical,complex nor logical <code>NA</code>s, which are always encoded as <code>"NA"</code>.
Either a logical specifying whetherelements of a real or complex vector should be encoded in scientificformat, or an integer penalty (see <code>options("scipen")</code>).Missing values correspond to the current default penalty.
further arguments passed to or from other methods.
used for prettying (longish) numerical and complex sequences.Passed to <code>prettyNum</code>: that help page explains the details.
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object (conceptually); typically numeric.
logical; if <code>FALSE</code>, logical, numeric and complexvalues are right-justified to a common width: if <code>TRUE</code> theleading blanks for justification are suppressed.
how many significant digits are to be used fornumeric and complex <code>x</code>.  The default, <code>NULL</code>, uses<code>getOption("digits")</code>.  This is a suggestion: enough decimalplaces will be used so that the smallest (in magnitude) number hasthis many significant digits, and also to satisfy <code>nsmall</code>.(For the interpretation for complex numbers see <code>signif</code>.)
the minimum number of digits to the right of the decimalpoint in formatting real/complex numbers in non-scientific formats.Allowed values are <code>0 &lt;= nsmall &lt;= 20</code>.
should a <em>character</em> vector be left-justified (thedefault), right-justified, centred or left alone.  Can be abbreviated.
<code>default</code> method: the <em>minimum</em> field width or<code>NULL</code> or <code>0</code> for no restriction.

<code>AsIs</code> method: the <em>maximum</em> field width for non-characterobjects.  <code>NULL</code> corresponds to the default <code>12</code>.
logical: should <code>NA</code> strings be encoded?  Notethis only applies to elements of character vectors, not to numerical,complex nor logical <code>NA</code>s, which are always encoded as <code>"NA"</code>.
Either a logical specifying whetherelements of a real or complex vector should be encoded in scientificformat, or an integer penalty (see <code>options("scipen")</code>).Missing values correspond to the current default penalty.
further arguments passed to or from other methods.
used for prettying (longish) numerical and complex sequences.Passed to <code>prettyNum</code>: that help page explains the details.
an object to be converted.
<code>character</code> string.  If not specified, it will try<code>tryFormats</code> one by one on the first non-<code>NA</code> element, andgive an error if none works.  Otherwise, the processing is via<code>strptime()</code> whose help page describes availableconversion specifications.
<code>character</code> vector of <code>format</code>strings to try if <code>format</code> is not specified.
<code>logical</code> indicating to return <code>NA</code>(instead of signalling an error) if the format guessing does not succeed.
a <code>Date</code> object, or something which can be coerced by<code>as.Date(origin, ...)</code> to such an object.
a time zone name.
further arguments to be passed from or to other methods,including <code>format</code> for <code>as.character</code> and <code>as.Date</code>methods.
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object (conceptually); typically numeric.
logical; if <code>FALSE</code>, logical, numeric and complexvalues are right-justified to a common width: if <code>TRUE</code> theleading blanks for justification are suppressed.
how many significant digits are to be used fornumeric and complex <code>x</code>.  The default, <code>NULL</code>, uses<code>getOption("digits")</code>.  This is a suggestion: enough decimalplaces will be used so that the smallest (in magnitude) number hasthis many significant digits, and also to satisfy <code>nsmall</code>.(For the interpretation for complex numbers see <code>signif</code>.)
the minimum number of digits to the right of the decimalpoint in formatting real/complex numbers in non-scientific formats.Allowed values are <code>0 &lt;= nsmall &lt;= 20</code>.
should a <em>character</em> vector be left-justified (thedefault), right-justified, centred or left alone.  Can be abbreviated.
<code>default</code> method: the <em>minimum</em> field width or<code>NULL</code> or <code>0</code> for no restriction.

<code>AsIs</code> method: the <em>maximum</em> field width for non-characterobjects.  <code>NULL</code> corresponds to the default <code>12</code>.
logical: should <code>NA</code> strings be encoded?  Notethis only applies to elements of character vectors, not to numerical,complex nor logical <code>NA</code>s, which are always encoded as <code>"NA"</code>.
Either a logical specifying whetherelements of a real or complex vector should be encoded in scientificformat, or an integer penalty (see <code>options("scipen")</code>).Missing values correspond to the current default penalty.
further arguments passed to or from other methods.
used for prettying (longish) numerical and complex sequences.Passed to <code>prettyNum</code>: that help page explains the details.
date-time or date objects.
an optional time zone specification to be used for theconversion, mainly for <code>"POSIXlt"</code> objects.
character string.  Units in which the results aredesired.  Can be abbreviated.
character string.  Like <code>units</code>, except thatabbreviations are not allowed.
character string or numeric value specifying a time interval.
character specifying the format of <code>tim</code>: see<code>strptime</code>.  The default is a locale-specific time format.
an object inheriting from class <code>"difftime"</code>.
arguments to be passed to or from other methods.
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object (conceptually); typically numeric.
logical; if <code>FALSE</code>, logical, numeric and complexvalues are right-justified to a common width: if <code>TRUE</code> theleading blanks for justification are suppressed.
how many significant digits are to be used fornumeric and complex <code>x</code>.  The default, <code>NULL</code>, uses<code>getOption("digits")</code>.  This is a suggestion: enough decimalplaces will be used so that the smallest (in magnitude) number hasthis many significant digits, and also to satisfy <code>nsmall</code>.(For the interpretation for complex numbers see <code>signif</code>.)
the minimum number of digits to the right of the decimalpoint in formatting real/complex numbers in non-scientific formats.Allowed values are <code>0 &lt;= nsmall &lt;= 20</code>.
should a <em>character</em> vector be left-justified (thedefault), right-justified, centred or left alone.  Can be abbreviated.
<code>default</code> method: the <em>minimum</em> field width or<code>NULL</code> or <code>0</code> for no restriction.

<code>AsIs</code> method: the <em>maximum</em> field width for non-characterobjects.  <code>NULL</code> corresponds to the default <code>12</code>.
logical: should <code>NA</code> strings be encoded?  Notethis only applies to elements of character vectors, not to numerical,complex nor logical <code>NA</code>s, which are always encoded as <code>"NA"</code>.
Either a logical specifying whetherelements of a real or complex vector should be encoded in scientificformat, or an integer penalty (see <code>options("scipen")</code>).Missing values correspond to the current default penalty.
further arguments passed to or from other methods.
used for prettying (longish) numerical and complex sequences.Passed to <code>prettyNum</code>: that help page explains the details.
An object, for the methods inheriting from class <code>"hexmode"</code>.
<code>NULL</code> or a positive integer specifying the minimumfield width to be used, with padding by leading zeroes.
a logical indicating whether to use upper-caseletters or lower-case letters (default).
further arguments passed to or from other methods.
an atomic vector; a potential argument of<code>format(x, ...)</code>.
how many significant digits are to be used fornumeric and complex <code>x</code>.  The default, <code>NULL</code>, uses<code>getOption("digits")</code>.
 (see <code>format(..., nsmall)</code>).
the name of a package, given as a name orliteral character string, or a character string, depending onwhether <code>character.only</code> is <code>FALSE</code> (default) or<code>TRUE</code>.
the position on the search list at which to attach theloaded namespace.  Can also be the name of a position on the currentsearch list as given by <code>search()</code>.
a character vector describing the location of <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>library trees to search through, or <code>NULL</code>.  The default valueof <code>NULL</code> corresponds to all libraries currently known to<code>.libPaths()</code>.Non-existent library trees are silently ignored.
a logical indicating whether <code>package</code> or<code>help</code> can be assumed to be character strings.
logical.  If it is <code>TRUE</code>,  <code>FALSE</code> or<code>TRUE</code> is returned to indicate success.
logical.  If <code>TRUE</code>, warnings areprinted about <code>conflicts</code> from attaching the newpackage.  A conflict is a function masking a function,or a non-function masking a non-function. The default is <code>TRUE</code>unless specified as <code>FALSE</code> in the <code>conflicts.policy</code> option.
a logical.  If <code>TRUE</code>, additional diagnostics areprinted.
a logical.  If <code>TRUE</code>, no message confirmingpackage attaching is printed, and most often, no errors/warnings areprinted if package attaching fails.
character string naming a package.
character vector of names of objects that can maskobjects on the search path without signaling an error when strictconflict checking is enabled
character vector of names of objects toexclude or include in the attached frame. Only one of these argumentsmay be used in a call to <code>library</code> or <code>require</code>.
logical specifying whether required packageslisted in the <code>Depends</code> clause of the <code>DESCRIPTION</code> fileshould be attached automatically.
a character vector with suitable numeric version strings (see‘Details’); for <code>package_version</code>, alternatively an Rversion object as obtained by <code>R.version</code>.
a logical indicating whether invalid numeric versionsshould results in an error (default) or not.
An object, for the methods inheriting from class <code>"octmode"</code>.
<code>NULL</code> or a positive integer specifying the minimumfield width to be used, with padding by leading zeroes.
further arguments passed to or from other methods.
the name of a package, given as a name orliteral character string, or a character string, depending onwhether <code>character.only</code> is <code>FALSE</code> (default) or<code>TRUE</code>.
the position on the search list at which to attach theloaded namespace.  Can also be the name of a position on the currentsearch list as given by <code>search()</code>.
a character vector describing the location of <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>library trees to search through, or <code>NULL</code>.  The default valueof <code>NULL</code> corresponds to all libraries currently known to<code>.libPaths()</code>.Non-existent library trees are silently ignored.
a logical indicating whether <code>package</code> or<code>help</code> can be assumed to be character strings.
logical.  If it is <code>TRUE</code>,  <code>FALSE</code> or<code>TRUE</code> is returned to indicate success.
logical.  If <code>TRUE</code>, warnings areprinted about <code>conflicts</code> from attaching the newpackage.  A conflict is a function masking a function,or a non-function masking a non-function. The default is <code>TRUE</code>unless specified as <code>FALSE</code> in the <code>conflicts.policy</code> option.
a logical.  If <code>TRUE</code>, additional diagnostics areprinted.
a logical.  If <code>TRUE</code>, no message confirmingpackage attaching is printed, and most often, no errors/warnings areprinted if package attaching fails.
character string naming a package.
character vector of names of objects that can maskobjects on the search path without signaling an error when strictconflict checking is enabled
character vector of names of objects toexclude or include in the attached frame. Only one of these argumentsmay be used in a call to <code>library</code> or <code>require</code>.
logical specifying whether required packageslisted in the <code>Depends</code> clause of the <code>DESCRIPTION</code> fileshould be attached automatically.
An object to be converted: a character vector for<code>strptime</code>, an object which can be converted to<code>"POSIXlt"</code> for <code>strftime</code>.
A character string specifying the time zone to be used forthe conversion.  System-specific (see <code>as.POSIXlt</code>), but<code>""</code> is the current time zone, and <code>"GMT"</code> is UTC.Invalid values are most commonly treated as UTC, on some platforms witha warning.
A character string.  The default for the <code>format</code>methods is<code>"%Y-%m-%d %H:%M:%S"</code> if any element has a timecomponent which is not midnight, and <code>"%Y-%m-%d"</code>otherwise.  If <code>options("digits.secs")</code> is set, up tothe specified number of digits will be printed for seconds.
Further arguments to be passed from or to other methods.
logical.  Should the time zone abbreviation be appendedto the output?  This is used in printing times, and more reliablethan using <code>"%Z"</code>.
An object to be converted: a character vector for<code>strptime</code>, an object which can be converted to<code>"POSIXlt"</code> for <code>strftime</code>.
A character string specifying the time zone to be used forthe conversion.  System-specific (see <code>as.POSIXlt</code>), but<code>""</code> is the current time zone, and <code>"GMT"</code> is UTC.Invalid values are most commonly treated as UTC, on some platforms witha warning.
A character string.  The default for the <code>format</code>methods is<code>"%Y-%m-%d %H:%M:%S"</code> if any element has a timecomponent which is not midnight, and <code>"%Y-%m-%d"</code>otherwise.  If <code>options("digits.secs")</code> is set, up tothe specified number of digits will be printed for seconds.
Further arguments to be passed from or to other methods.
logical.  Should the time zone abbreviation be appendedto the output?  This is used in printing times, and more reliablethan using <code>"%Z"</code>.
a numeric vector.
how many significant digits are to be used.
a numerical tolerance: see ‘Details’.
character representation of <code>NA</code>s.
further arguments to be passed to <code>format</code>such as <code>nsmall</code>.
an object for which a summary is desired.
a result of the <em>default</em> method of <code>summary()</code>.
integer, indicating how many levels should be shown for<code>factor</code>s.
integer, used for number formatting with<code>signif()</code> (for <code>summary.default</code>) or<code>format()</code> (for <code>summary.data.frame</code>).  In<code>summary.default</code>, if not specified (i.e.,<code>missing(.)</code>), <code>signif()</code> will <em>not</em> be calledanymore (since <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> &gt;= 3.4.0, where the default has been changed toonly round in the <code>print</code> and <code>format</code> methods).
integer code used in <code>quantile(*, type=quantile.type)</code>for the default method.
additional arguments affecting the summary produced.
an atomic numerical or character object, possibly<code>complex</code> only for <code>prettyNum()</code>, typically avector of real numbers.  Any class is discarded, with a warning.
the desired number of digits after the decimalpoint (<code>format = "f"</code>) or <em>significant</em> digits(<code>format = "g"</code>, <code>= "e"</code> or <code>= "fg"</code>).

Default: 2 for integer, 4 for real numbers.  If less than 0,the C default of 6 digits is used.  If specified as more than 50, 50will be used with a warning unless <code>format = "f"</code> where it islimited to typically 324. (Not more than 15–21 digits need beaccurate, depending on the OS and compiler used.  This limit isjust a precaution against segfaults in the underlying C runtime.)
the total field width; if both <code>digits</code> and<code>width</code> are unspecified, <code>width</code> defaults to 1,otherwise to <code>digits + 1</code>.  <code>width = 0</code> will use<code>width = digits</code>, <code>width &lt; 0</code> means leftjustify the number in this field (equivalent to <code>flag = "-"</code>).If necessary, the result will have more characters than<code>width</code>.  For character data this is interpreted in characters(not bytes nor display width).
equal to <code>"d"</code>  (for integers), <code>"f"</code>,<code>"e"</code>, <code>"E"</code>, <code>"g"</code>, <code>"G"</code>, <code>"fg"</code> (forreals), or <code>"s"</code> (for strings).  Default is <code>"d"</code> forintegers, <code>"g"</code> for reals.

<code>"f"</code> gives numbers in the usual<code>xxx.xxx</code> format;  <code>"e"</code> and <code>"E"</code> give <code>n.ddde+nn</code> or<code>n.dddE+nn</code> (scientific format); <code>"g"</code> and <code>"G"</code> put<code>x[i]</code> into scientific format only if it saves space to do so<em>and</em> drop trailing zeros and decimal point - unless <code>flag</code>contains <code>"#"</code> which keeps trailing zeros for the <code>"g", "G"</code>formats.

<code>"fg"</code> (our own hybrid format) uses fixed format as <code>"f"</code>,but <code>digits</code> as the minimum number of <em>significant</em> digits.This can lead to quite long result strings, see examples below.  Notethat unlike <code>signif</code> this prints large numbers withmore significant digits than <code>digits</code>.  Trailing zeros are<em>dropped</em> in this format, unless <code>flag</code> contains<code>"#"</code>.
for <code>formatC</code>, a character string giving aformat modifier as in Kernighan and Ritchie (1988, page 243) or theC+99 standard.

pads leading zeros;
does left adjustment,
ensures a sign in all cases, i.e., <code>"+"</code> forpositive numbers ,
if the first character is not a sign, the spacecharacter <code>" "</code> will be used instead.
specifies “an alternative output form”,specifically depending on <code>format</code>.
on some platform–locale combination, activates“thousands' grouping” for decimal conversion,
in some versions of ‘<span class="file">glibc</span>’ allow for integerconversion to use the locale's alternative output digits, if any.
There can be more than one of these flags, in any order.  Other charactersused to have no effect for <code>character</code> formatting, but signalan error since <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> 3.4.0.
<code>"double"</code> (or <code>"real"</code>), <code>"integer"</code> or<code>"character"</code>.Default: Determined from the storage mode of <code>x</code>.
character; if not empty used as mark between every<code>big.interval</code> decimals <em>before</em> (hence <code>big</code>) thedecimal point.
see <code>big.mark</code> above; defaults to 3.
character; if not empty used as mark between every<code>small.interval</code> decimals <em>after</em> (hence <code>small</code>) thedecimal point.
see <code>small.mark</code> above; defaults to 5.
the character to be used to indicate the numericdecimal point.
if <code>x</code> is <code>character</code>, thecharacter known to have been used as the numeric decimal point in<code>x</code>.
string specifying if the string widths shouldbe preserved where possible in those cases where marks(<code>big.mark</code> or <code>small.mark</code>) are added.  <code>"common"</code>,the default, corresponds to <code>format</code>-like behaviorwhereas <code>"individual"</code> is the default in<code>formatC()</code>. Value can be abbreviated.
logical, character string or <code>NULL</code> specifyingif and how <em>zeros</em> should be formatted specially.  Useful forpretty printing ‘sparse’ objects.
logical; if <code>zero.print</code> is acharacter string, indicates if the exact zero entries in <code>x</code>should be simply replaced by <code>zero.print</code>.  Otherwise,depending on the widths of the respective strings, the (formatted)zeroes are <em>partly</em> replaced by <code>zero.print</code> and thenpadded with <code>" "</code> to the right were applicable.  In that case(false <code>replace[.zero]</code>), if the <code>zero.print</code> string doesnot fit, a warning is produced (if <code>warn.non.fitting</code> is true).

This works via <code>prettyNum()</code>, which calls <code>.format.zeros(*,    replace=replace.zero)</code> three times in this case, see the ‘Details’.
logical; if it is true, <code>replace[.zero]</code> isfalse and the <code>zero.print</code> string does not fit, a<code>warning</code> is signalled.
logical, indicating if trailing zeros,i.e., <code>"0"</code> <em>after</em> the decimal mark, should be removed;also drops <code>"e+00"</code> in exponential formats.  This is simply passedto <code>prettyNum()</code>, see the ‘Details’.
optional logical, to be used when <code>x</code> is<code>"character"</code> to indicate if it stems from<code>complex</code> vector or not.  By default (<code>NA</code>),<code>x</code> is checked to ‘look like’ complex.
arguments passed to <code>format</code>.
numeric vector of the same length as <code>x</code>, typically thenumbers of which the character vector <code>x</code> is the pre-format.
a vector giving the items to be described, or a list oflength 2 or a matrix with 2 columns giving both items anddescriptions.
a vector of the same length as <code>x</code> with thecorresponding descriptions.  Only used if <code>x</code> does not alreadygive the descriptions.
a character string specifying the rendering style of thedescription information.  Can be abbreviated.If <code>"table"</code>, a two-column table withitems and descriptions as columns is produced (similar to Texinfo's<code style="white-space: pre;">@table</code> environment).  If <code>"list"</code>, a LaTeX-style taggeddescription list is obtained.
a positive integer giving the target column for wrappinglines in the output.
a positive integer specifying the indentation of thesecond column in table style, and the indentation of continuationlines in list style.  Must not be greater than <code>width/2</code>, anddefaults to <code>width/3</code> for table style and <code>width/9</code> forlist style.
an upper (or lower) triangular matrix giving thecoefficients for the system to be solved.  Values below (above)the diagonal are ignored.
a matrix whose columns give the right-hand sides forthe equations.
The number of columns of <code>r</code> and rows of <code>x</code> to use.
logical; if <code>TRUE</code> (default), the <em>upper</em><em>tri</em>angular part of <code>r</code> is used.  Otherwise, the lower one.
logical; if <code>TRUE</code>, solve <i>r' * y = x</i> for<i>y</i>, i.e., <code>t(r) %*% y == x</code>.
Empty or one or more name or name=expression terms.
An expression.
An expression.
non-negative numeric vectors.
numeric vectors.
integer vectors.
logical; if <code>TRUE</code>, the garbage collection printsstatistics about cons cells and the space allocated for vectors.
logical; if <code>TRUE</code> the values for maximum space usedare reset to the current values.
logical; if <code>TRUE</code> a full collection is performed;otherwise only more recently allocated objects may be collected.
logical; if <code>TRUE</code>, GC timing is enabled.
logical; if <code>TRUE</code>, the garbage collection printsstatistics about cons cells and the space allocated for vectors.
logical; if <code>TRUE</code> the values for maximum space usedare reset to the current values.
logical; if <code>TRUE</code> a full collection is performed;otherwise only more recently allocated objects may be collected.
logical; turning it on/off.
integer; run GC every <code>step</code> allocations; <code>step      = 0</code> turns the GC torture off.
integer; number of allocations to wait before startingGC torture.
logical; do not release free objects forre-use: use with caution.
logical; turning it on/off.
integer; run GC every <code>step</code> allocations; <code>step      = 0</code> turns the GC torture off.
integer; number of allocations to wait before startingGC torture.
logical; do not release free objects forre-use: use with caution.
For <code>get</code>, an object name (given as a characterstring or a symbol).<br>For <code>mget</code>, a character vector of object names.
where to look for the object (see ‘Details’); ifomitted search as if the name of the object appeared unquoted in anexpression.
the mode or type of object sought: see the‘Details’ section.
should the enclosing frames of the environment besearched?
For <code>mget</code>, a <code>list</code> of values tobe used if the item is not found: it will be coerced to a list ifnecessary.<br>For <code>dynGet</code> any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, e.g., a call to<code>stop()</code>.
integer specifying the minimal frame number to lookinto.
a variable name (given as a character string or a symbol).
where to look for the object (see the details section); ifomitted, the function will search as if the name of the objectappeared unquoted in an expression.
an alternative way to specify an environment to look in,but it is usually simpler to just use the <code>where</code> argument.
a frame in the calling list.  Equivalent to giving<code>where</code> as <code>sys.frame(frame)</code>.
the mode or type of object sought: see the‘Details’ section.
should the enclosing frames of the environment besearched?
the return value of <code>get0(x, *)</code> when<code>x</code> does not exist.
logical: if true all connections, including closed onesand the standard ones are displayed.  If false only open user-createdconnections are included.
integer: a row number of the table given by<code>showConnections</code>.
a connection.
the function whose namespace and DLL are to be found.By default, this is the current function being called whichis the one in which the native routine is being invoked.
a logical value indicating whether failure to finda namespace and/or DLL is an error (<code>TRUE</code>) or not(<code>FALSE</code>).  The default is <code>FALSE</code> so that when this iscalled because there is no <code>PACKAGE</code> argument in a<code>.C</code>, <code>.Call</code>, <code>.Fortran</code>,<code>.External</code> call,  no error occurs and the regular lookupis performed by searching all DLLs in order.
an environment.
the function whose namespace and DLL are to be found.By default, this is the current function being called whichis the one in which the native routine is being invoked.
a logical value indicating whether failure to finda namespace and/or DLL is an error (<code>TRUE</code>) or not(<code>FALSE</code>).  The default is <code>FALSE</code> so that when this iscalled because there is no <code>PACKAGE</code> argument in a<code>.C</code>, <code>.Call</code>, <code>.Fortran</code>,<code>.External</code> call,  no error occurs and the regular lookupis performed by searching all DLLs in order.
an environment.
logical: if true all connections, including closed onesand the standard ones are displayed.  If false only open user-createdconnections are included.
integer: a row number of the table given by<code>showConnections</code>.
a connection.
a character string or <code>DLLInfo</code> object.The character string specifies the file name of the DLLof interest, and is given without the file name extension (e.g., the‘<span class="file">.dll</span>’ or ‘<span class="file">.so</span>’) and with no directory/path information.So a file ‘<span class="file">MyPackage/libs/MyPackage.so</span>’ would be specified as<span class="samp">MyPackage</span>.

The <code>DLLInfo</code> objects can be obtained directlyin calls to <code>dyn.load</code> and  <code>library.dynam</code>,or can be found after the DLL has been loaded using<code>getLoadedDLLs</code>, which returns a list of<code>DLLInfo</code> objects (index-able by DLL file name).

The <code>DLLInfo</code> approach avoids any ambiguities related to twoDLLs having the same name but corresponding to files in differentdirectories.
a logical value.  If this is <code>TRUE</code>, the elementsof the returned lists are named using the names of the routines (asseen by R via registration or raw name).  If <code>FALSE</code>,these names are not computed and assigned to the lists.  As aresult, the call should be quicker.  The name information is alsoavailable in the <code>NativeSymbolInfo</code> objects in the lists.
a character string or <code>DLLInfo</code> object.The character string specifies the file name of the DLLof interest, and is given without the file name extension (e.g., the‘<span class="file">.dll</span>’ or ‘<span class="file">.so</span>’) and with no directory/path information.So a file ‘<span class="file">MyPackage/libs/MyPackage.so</span>’ would be specified as<span class="samp">MyPackage</span>.

The <code>DLLInfo</code> objects can be obtained directlyin calls to <code>dyn.load</code> and  <code>library.dynam</code>,or can be found after the DLL has been loaded using<code>getLoadedDLLs</code>, which returns a list of<code>DLLInfo</code> objects (index-able by DLL file name).

The <code>DLLInfo</code> approach avoids any ambiguities related to twoDLLs having the same name but corresponding to files in differentdirectories.
a logical value.  If this is <code>TRUE</code>, the elementsof the returned lists are named using the names of the routines (asseen by R via registration or raw name).  If <code>FALSE</code>,these names are not computed and assigned to the lists.  As aresult, the call should be quicker.  The name information is alsoavailable in the <code>NativeSymbolInfo</code> objects in the lists.
a character string or <code>DLLInfo</code> object.The character string specifies the file name of the DLLof interest, and is given without the file name extension (e.g., the‘<span class="file">.dll</span>’ or ‘<span class="file">.so</span>’) and with no directory/path information.So a file ‘<span class="file">MyPackage/libs/MyPackage.so</span>’ would be specified as<span class="samp">MyPackage</span>.

The <code>DLLInfo</code> objects can be obtained directlyin calls to <code>dyn.load</code> and  <code>library.dynam</code>,or can be found after the DLL has been loaded using<code>getLoadedDLLs</code>, which returns a list of<code>DLLInfo</code> objects (index-able by DLL file name).

The <code>DLLInfo</code> approach avoids any ambiguities related to twoDLLs having the same name but corresponding to files in differentdirectories.
a logical value.  If this is <code>TRUE</code>, the elementsof the returned lists are named using the names of the routines (asseen by R via registration or raw name).  If <code>FALSE</code>,these names are not computed and assigned to the lists.  As aresult, the call should be quicker.  The name information is alsoavailable in the <code>NativeSymbolInfo</code> objects in the lists.
object from which to extract element(s) or in which to replace element(s).
indices specifying elements to extract or replace.  Indices are<code>numeric</code> or <code>character</code> vectors or empty (missing) or<code>NULL</code>.  Numeric values are coerced to integer as by<code>as.integer</code> (and hence truncated towards zero).Character vectors will be matched to the <code>names</code> of theobject (or for matrices/arrays, the <code>dimnames</code>):see ‘Character indices’ below for further details.

For <code>[</code>-indexing only: <code>i</code>, <code>j</code>, <code>...</code> can belogical vectors, indicating elements/slices to select.  Such vectorsare recycled if necessary to match the corresponding extent.<code>i</code>, <code>j</code>, <code>...</code> can also be negative integers,indicating elements/slices to leave out of the selection.

When indexing arrays by <code>[</code> a single argument <code>i</code> can be amatrix with as many columns as there are dimensions of <code>x</code>; theresult is then a vector with elements corresponding to the sets ofindices in each row of <code>i</code>.

An index value of <code>NULL</code> is treated as if it were <code>integer(0)</code>.
A literal character string or a name (possibly backtickquoted).  For extraction, this is normally (see under‘Environments’) partially matched to the <code>names</code>of the object.
For matrices and arrays.  If <code>TRUE</code> the result iscoerced to the lowest possible dimension (see the examples).  Thisonly works for extracting elements, not for the replacement.  See<code>drop</code> for further details.
Controls possible partial matching of <code>[[</code> whenextracting by a character vector (for most objects, but see under‘Environments’).  The default is no partial matching.  Value<code>NA</code> allows partial matching but issues a warning when itoccurs.  Value <code>FALSE</code> allows partial matching without anywarning.
typically an array-like <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object of a similar class as<code>x</code>.
zero or more objects which can be coerced to character(and which are pasted together with no separator) or a singlecondition object.
logical, indicating if the call should become part of theerror message.
see <code>gettext</code>.  If <code>NA</code>, messages willnot be translated.
string or namespace object.
string or name.
character string: the hook name
character string: the package/namespace name
character string: an event for the package.  Can be abbreviated.
A function or a list of functions, or for <code>action = "replace"</code>, <code>NULL</code> 
The action to be taken.  Can be abbreviated.
string or namespace object.
string or name.
string or namespace object.
string or name.
string or namespace object.
string or name.
string or namespace environment.
logical.
environment.
namespace environment.
character vector.
optional character vector.
namespace environment.
string naming the package/namespace to load.
vector of package names parallel to <code>generics</code>.
character vector specifying library.
logical.
character.
character.
environment.
a 3-column character matrix.
character.
any object.
character arguments.
the methods table name.
symbol: name of namespace
character vector naming symbols to exclude from theimport, particularly useful when <code>vars</code> is missing.
string or namespace object.
string or name.
string or namespace object.
string or name.
string or namespace object.
string or name.
the name(s) of the native symbol(s).
an optional argument that specifies to whichDLL to restrict the search for this symbol.  If this is<code>"base"</code>, we search in the <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> executable itself.
a logical value which controls how the result isreturned if the function is called with the name of a single symbol.If <code>unlist</code> is <code>TRUE</code> and the number of symbol names in<code>name</code> is one, then the <code>NativeSymbolInfo</code> objectis returned.  If it is <code>FALSE</code>, then a listof <code>NativeSymbolInfo</code> objects is returned.This is ignored if the number of symbols passed in <code>name</code> ismore than one.To be compatible with earlier versions of this function, thisdefaults to <code>TRUE</code>.
a logical value indicating whether, if<code>TRUE</code>, to return information that was registered with <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> aboutthe symbol and its parameter types if such information is available,or if <code>FALSE</code> to return just the address of the symbol.
any options can be defined, using <code>name = value</code>.However, only the ones below are used in base <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>.

Options can also be passed by giving a single unnamed argument whichis a named list.
a character string holding an option name.
if the specified option is not set in the options list,this value is returned.  This facilitates retrieving an option andchecking whether it is set and setting it separately if not.
a character vector with suitable numeric version strings (see‘Details’); for <code>package_version</code>, alternatively an Rversion object as obtained by <code>R.version</code>.
a logical indicating whether invalid numeric versionsshould results in an error (default) or not.
 The name of a file. 
 The character encoding to assume for the file. 
 The encoding with which to make strings: see the<code>encoding</code> argument of <code>parse</code>.
 A character vector of source lines.  Other <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> objectswill be coerced to character. 
 The timestamp to use on a copy of a file. 
 Is this <code>srcfilecopy</code> known to come from a file system file? 
 A <code>srcfile</code> object. 
 Line numbers. 
 A vector of four, six or eight values giving a source location; see‘Details’.
 An object of the appropriate class. 
 Whether to read the <code>srcfile</code> to obtain thetext of a <code>srcref</code>. 
 An optional second <code>srcref</code> object to mark the endof the character range. 
 Additional arguments to the methods; these will be ignored. 
One or more character vectors.
The ‘domain’ for the translation.
a non-negative integer.
the message to be used in English for <code>n = 1</code>.
the message to be used in English for <code>n = 0, 2, 3, ...</code>.
The directory in which to find translated messagecatalogs for the domain.
a character vector of format strings, each of up to 8192 bytes.
values to be passed into <code>fmt</code>.  Only logical,integer, real and character vectors are supported, but some coercionwill be done: see the ‘Details’ section. Up to 100.
see <code>gettext</code>.
A character string: tilde expansion will be done.
an integer giving the number of levels.
an integer giving the number of replications.
an integer giving the length of the result.
an optional vector of labels for the resulting factorlevels.
a logical indicating whether the result should beordered or not.
a condition object.
call expression.
a condition object.
expression to be evaluated.
expression to be evaluated before returning or exiting.
function.
character string.
character string.
character string naming a restart.
restart object.
object.
character string naming a condition class.
additional arguments; see details below.
a <code>function</code>, a <code>formula</code>, or<code>NULL</code>, which is the default.
an environment to associate with the function
an arbitrary <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
a logical, if <code>TRUE</code> the environment will use a hash table.
an environment to be used as the enclosure of theenvironment created.
an environment
an integer specifying the initial size for a hashedenvironment.  An internal default value will be used if<code>size</code> is <code>NA</code> or zero.  This argument is ignored if<code>hash</code> is <code>FALSE</code>.
character string containing a regular expression(or character string for <code>fixed = TRUE</code>) to be matchedin the given character vector.  Coerced by<code>as.character</code> to a character string if possible.  If acharacter vector of length 2 or more is supplied, the first elementis used with a warning.  Missing values are allowed except for<code>regexpr</code>, <code>gregexpr</code> and <code>regexec</code>.
a character vector where matches are sought, or anobject which can be coerced by <code>as.character</code> to a charactervector.  Long vectors are supported.
if <code>FALSE</code>, the pattern matching is <em>casesensitive</em> and if <code>TRUE</code>, case is ignored during matching.
logical.  Should Perl-compatible regexps be used?
if <code>FALSE</code>, a vector containing the (<code>integer</code>)indices of the matches determined by <code>grep</code> is returned, and if<code>TRUE</code>, a vector containing the matching elements themselves isreturned.
logical.  If <code>TRUE</code>, <code>pattern</code> is a string to bematched as is.  Overrides all conflicting arguments.
logical.  If <code>TRUE</code> the matching is donebyte-by-byte rather than character-by-character.  See‘Details’.
logical.  If <code>TRUE</code> return indices or values forelements that do <em>not</em> match.
a replacement for matched pattern in <code>sub</code> and<code>gsub</code>.  Coerced to character if possible.  For<code>fixed = FALSE</code> this can include backreferences <code>"\1"</code> to<code>"\9"</code> to parenthesized subexpressions of <code>pattern</code>.  For<code>perl = TRUE</code> only, it can also contain <code>"\U"</code> or<code>"\L"</code> to convert the rest of the replacement to upper orlower case and <code>"\E"</code> to end case conversion.  If acharacter vector of length 2 or more is supplied, the first elementis used with a warning.  If <code>NA</code>, all elements in the resultcorresponding to matches will be set to <code>NA</code>.
character string containing a regular expression(or character string for <code>fixed = TRUE</code>) to be matchedin the given character vector.  Coerced by<code>as.character</code> to a character string if possible.  If acharacter vector of length 2 or more is supplied, the first elementis used with a warning.  Missing values are allowed except for<code>regexpr</code>, <code>gregexpr</code> and <code>regexec</code>.
a character vector where matches are sought, or anobject which can be coerced by <code>as.character</code> to a charactervector.  Long vectors are supported.
if <code>FALSE</code>, the pattern matching is <em>casesensitive</em> and if <code>TRUE</code>, case is ignored during matching.
logical.  Should Perl-compatible regexps be used?
if <code>FALSE</code>, a vector containing the (<code>integer</code>)indices of the matches determined by <code>grep</code> is returned, and if<code>TRUE</code>, a vector containing the matching elements themselves isreturned.
logical.  If <code>TRUE</code>, <code>pattern</code> is a string to bematched as is.  Overrides all conflicting arguments.
logical.  If <code>TRUE</code> the matching is donebyte-by-byte rather than character-by-character.  See‘Details’.
logical.  If <code>TRUE</code> return indices or values forelements that do <em>not</em> match.
a replacement for matched pattern in <code>sub</code> and<code>gsub</code>.  Coerced to character if possible.  For<code>fixed = FALSE</code> this can include backreferences <code>"\1"</code> to<code>"\9"</code> to parenthesized subexpressions of <code>pattern</code>.  For<code>perl = TRUE</code> only, it can also contain <code>"\U"</code> or<code>"\L"</code> to convert the rest of the replacement to upper orlower case and <code>"\E"</code> to end case conversion.  If acharacter vector of length 2 or more is supplied, the first elementis used with a warning.  If <code>NA</code>, all elements in the resultcorresponding to matches will be set to <code>NA</code>.
character string containing a regular expression(or character string for <code>fixed = TRUE</code>) to be matchedin the given character vector.  Coerced by<code>as.character</code> to a character string if possible.  If acharacter vector of length 2 or more is supplied, the first elementis used with a warning.  Missing values are allowed except for<code>regexpr</code>, <code>gregexpr</code> and <code>regexec</code>.
a character vector where matches are sought, or anobject which can be coerced by <code>as.character</code> to a charactervector.  Long vectors are supported.
if <code>FALSE</code>, the pattern matching is <em>casesensitive</em> and if <code>TRUE</code>, case is ignored during matching.
logical.  Should Perl-compatible regexps be used?
if <code>FALSE</code>, a vector containing the (<code>integer</code>)indices of the matches determined by <code>grep</code> is returned, and if<code>TRUE</code>, a vector containing the matching elements themselves isreturned.
logical.  If <code>TRUE</code>, <code>pattern</code> is a string to bematched as is.  Overrides all conflicting arguments.
logical.  If <code>TRUE</code> the matching is donebyte-by-byte rather than character-by-character.  See‘Details’.
logical.  If <code>TRUE</code> return indices or values forelements that do <em>not</em> match.
a replacement for matched pattern in <code>sub</code> and<code>gsub</code>.  Coerced to character if possible.  For<code>fixed = FALSE</code> this can include backreferences <code>"\1"</code> to<code>"\9"</code> to parenthesized subexpressions of <code>pattern</code>.  For<code>perl = TRUE</code> only, it can also contain <code>"\U"</code> or<code>"\L"</code> to convert the rest of the replacement to upper orlower case and <code>"\E"</code> to end case conversion.  If acharacter vector of length 2 or more is supplied, the first elementis used with a warning.  If <code>NA</code>, all elements in the resultcorresponding to matches will be set to <code>NA</code>.
character string containing a regular expression(or character string for <code>fixed = TRUE</code>) to be matchedin the given character vector.  Coerced by<code>as.character</code> to a character string if possible.  If acharacter vector of length 2 or more is supplied, the first elementis used with a warning.  Missing values are allowed except for<code>regexpr</code>, <code>gregexpr</code> and <code>regexec</code>.
a character vector where matches are sought, or anobject which can be coerced by <code>as.character</code> to a charactervector.  Long vectors are supported.
if <code>FALSE</code>, the pattern matching is <em>casesensitive</em> and if <code>TRUE</code>, case is ignored during matching.
logical.  Should Perl-compatible regexps be used?
if <code>FALSE</code>, a vector containing the (<code>integer</code>)indices of the matches determined by <code>grep</code> is returned, and if<code>TRUE</code>, a vector containing the matching elements themselves isreturned.
logical.  If <code>TRUE</code>, <code>pattern</code> is a string to bematched as is.  Overrides all conflicting arguments.
logical.  If <code>TRUE</code> the matching is donebyte-by-byte rather than character-by-character.  See‘Details’.
logical.  If <code>TRUE</code> return indices or values forelements that do <em>not</em> match.
a replacement for matched pattern in <code>sub</code> and<code>gsub</code>.  Coerced to character if possible.  For<code>fixed = FALSE</code> this can include backreferences <code>"\1"</code> to<code>"\9"</code> to parenthesized subexpressions of <code>pattern</code>.  For<code>perl = TRUE</code> only, it can also contain <code>"\U"</code> or<code>"\L"</code> to convert the rest of the replacement to upper orlower case and <code>"\E"</code> to end case conversion.  If acharacter vector of length 2 or more is supplied, the first elementis used with a warning.  If <code>NA</code>, all elements in the resultcorresponding to matches will be set to <code>NA</code>.
raw vector containing a regular expression(or fixed pattern for <code>fixed = TRUE</code>) to be matched in thegiven raw vector.  Coerced by <code>charToRaw</code> to a characterstring if possible.
a raw vector where matches are sought, or an object which canbe coerced by <code>charToRaw</code> to a raw vector.  Long vectorsare not supported.
if <code>FALSE</code>, the pattern matching is <em>casesensitive</em> and if <code>TRUE</code>, case is ignored during matching.
An integer specifying the offset fromwhich the search should start.  Must be positive.  The beginning ofline is defined to be at that offset so <code>"^"</code> will match there.
logical.  Determines the return value: see ‘Value’.
logical.  If <code>TRUE</code>, <code>pattern</code> is a pattern to bematched as is.
logical.  If <code>TRUE</code> all matches are returned,otherwise just the first one.
logical.  If <code>TRUE</code> return indices or values forelements that do <em>not</em> match.  Ignored (with a warning) unless<code>value = TRUE</code>.
a sequence of numeric, character or logicalvectors, all of the same length, or a classed <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
character string containing a regular expression(or character string for <code>fixed = TRUE</code>) to be matchedin the given character vector.  Coerced by<code>as.character</code> to a character string if possible.  If acharacter vector of length 2 or more is supplied, the first elementis used with a warning.  Missing values are allowed except for<code>regexpr</code>, <code>gregexpr</code> and <code>regexec</code>.
a character vector where matches are sought, or anobject which can be coerced by <code>as.character</code> to a charactervector.  Long vectors are supported.
if <code>FALSE</code>, the pattern matching is <em>casesensitive</em> and if <code>TRUE</code>, case is ignored during matching.
logical.  Should Perl-compatible regexps be used?
if <code>FALSE</code>, a vector containing the (<code>integer</code>)indices of the matches determined by <code>grep</code> is returned, and if<code>TRUE</code>, a vector containing the matching elements themselves isreturned.
logical.  If <code>TRUE</code>, <code>pattern</code> is a string to bematched as is.  Overrides all conflicting arguments.
logical.  If <code>TRUE</code> the matching is donebyte-by-byte rather than character-by-character.  See‘Details’.
logical.  If <code>TRUE</code> return indices or values forelements that do <em>not</em> match.
a replacement for matched pattern in <code>sub</code> and<code>gsub</code>.  Coerced to character if possible.  For<code>fixed = FALSE</code> this can include backreferences <code>"\1"</code> to<code>"\9"</code> to parenthesized subexpressions of <code>pattern</code>.  For<code>perl = TRUE</code> only, it can also contain <code>"\U"</code> or<code>"\L"</code> to convert the rest of the replacement to upper orlower case and <code>"\E"</code> to end case conversion.  If acharacter vector of length 2 or more is supplied, the first elementis used with a warning.  If <code>NA</code>, all elements in the resultcorresponding to matches will be set to <code>NA</code>.
a connection.
integer between 0 and 9, the compression level when writing.
logical.  When reading, shouldnon-compressed input be allowed?
logical. Should the connection be text-oriented? This isdistinct from the mode of the connection (must always be binary).If <code>TRUE</code>, <code>pushBack</code> works on the connection,otherwise <code>readBin</code> and friends apply.
character string.  A description of the connection:see ‘Details’.
character string.  A description of how to open the connection(if it should be opened initially).  See section ‘Modes’ forpossible values.
logical.  See the ‘Blocking’ section.
The name of the encoding to be assumed.  See the‘Encoding’ section.
logical.  If true, a ‘raw’ interface is used whichwill be more suitable for arguments which are not regular files,e.g. character devices.  This suppresses the check for a compressedfile when opening for text-mode reading, and asserts that the‘file’ may not be seekable.
character string, partially matched to<code>c("default", "internal", "wininet", "libcurl")</code>:see ‘Details’.
named character vector of HTTP headers to use in HTTPrequests.  It is ignored for non-HTTP URLs.  The <code>User-Agent</code>header, coming from the <code>HTTPUserAgent</code> option (see<code>options</code>) is used as the first header, automatically.
integer in 0–9.  The amount of compression to beapplied when writing, from none to maximal available.  For<code>xzfile</code> can also be negative: see the ‘Compression’section.
numeric: the timeout (in seconds) to be used for thisconnection.  Beware that some OSes may treat very large values aszero: however the POSIX standard requires values up to 31 days to besupported.
optional character vector with options. Currently only<code>"no-delay"</code> is supported on TCP sockets.
a filename within a zip file.
character string.  Host name for the port.
integer.  The TCP port number.
logical.  Should the socket be a client or a server?
a server socket listening for connections.
a connection.
character string.  Currently ignored.
character string.  Empty or <code>"read"</code> or <code>"write"</code>,partial matches allowed.
arguments passed to or from other methods.
an object
A character vector, or an object to be converted to a charactervector by <code>as.character</code>, or a list with <code>NULL</code> and<code>raw</code> elements as returned by <code>iconv(toRaw = TRUE)</code>.
A character string describing the current encoding.
A character string describing the target encoding.
character string.  If not <code>NA</code> it is used to replaceany non-convertible bytes in the input.  (This would normally be asingle character, but can be more.)  If <code>"byte"</code>, the indication is<code>"&lt;xx&gt;"</code> with the hex code of the byte.  If <code>"Unicode"</code>and converting from UTF-8, the Unicode point in the form <code>"&lt;U+xxxx&gt;"</code>.
logical, for expert use.  Should encodings be marked?
logical.  Should a list of raw vectors be returned ratherthan a character vector?
A character vector, or an object to be converted to a charactervector by <code>as.character</code>, or a list with <code>NULL</code> and<code>raw</code> elements as returned by <code>iconv(toRaw = TRUE)</code>.
A character string describing the current encoding.
A character string describing the target encoding.
character string.  If not <code>NA</code> it is used to replaceany non-convertible bytes in the input.  (This would normally be asingle character, but can be more.)  If <code>"byte"</code>, the indication is<code>"&lt;xx&gt;"</code> with the hex code of the byte.  If <code>"Unicode"</code>and converting from UTF-8, the Unicode point in the form <code>"&lt;U+xxxx&gt;"</code>.
logical, for expert use.  Should encodings be marked?
logical.  Should a list of raw vectors be returned ratherthan a character vector?
Named arguments, see ‘Details’.
character string: can be abbreviated.  Either the actual localein use for collation or the most specific locale which would be valid.
Named arguments, see ‘Details’.
character string: can be abbreviated.  Either the actual localein use for collation or the most specific locale which would be valid.
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> objects.
logical indicating if (<code>double</code> and<code>complex</code> non-<code>NA</code>) numbers should becompared using <code>==</code> (‘equal’), or by bitwisecomparison.  The latter (non-default) differentiates between<code>-0</code> and <code>+0</code>.
logical indicating if there is conceptually just one numeric<code>NA</code> and one <code>NaN</code>;  <code>single.NA = FALSE</code>differentiates bit patterns.
logical indicating if <code>attributes</code> of<code>x</code> and <code>y</code> should be treated as <em>unordered</em> taggedpairlists (“sets”); this currently also applies to<code>slot</code>s of S4 objects.  It may well be too strict to set<code>attrib.as.set = FALSE</code>.
logical indicating if byte code should beignored when comparing closures.
logical indicating if their environmentsshould be ignored when comparing closures.
logical indicating if their <code>"srcref"</code>attributes should be ignored when comparing closures.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
A length-one logical vector that is not <code>NA</code>.Conditions of length greater than one are currently accepted with awarning, but only the first element is used.  An error is signalledinstead when the environment variable <span class="env">_R_CHECK_LENGTH_1_CONDITION_</span>is set to true.  Other types are coerced to logicalif possible, ignoring any class.
A syntactical name for a variable.
An expression evaluating to a vector (including a list andan expression) or to a pairlist or <code>NULL</code>.  Afactor value will be coerced to a character vector.  As from <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>4.0.0 this can be a long vector.
An <em>expression</em> in a formal sense.  This is either asimple expression or a so-called <em>compound expression</em>, usuallyof the form <code>{ expr1 ; expr2 }</code>.
an object which can be coerced to logical mode.
return values for true elements of <code>test</code>.
return values for false elements of <code>test</code>.
numeric.  Desired length of the output vector,inputs being recycled as needed.
numeric vector.
numeric vector.
numeric vector.
numeric vector.
an object, probably of mode <code>complex</code>.
an object of mode <code>complex</code>, or one of a class for whicha methods has been defined.
further arguments passed to or from other methods.
string or namespace environment.
logical.
environment.
namespace environment.
character vector.
optional character vector.
namespace environment.
string naming the package/namespace to load.
vector of package names parallel to <code>generics</code>.
character vector specifying library.
logical.
character.
character.
environment.
a 3-column character matrix.
character.
any object.
character arguments.
the methods table name.
symbol: name of namespace
character vector naming symbols to exclude from theimport, particularly useful when <code>vars</code> is missing.
<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object to serialize.
a connection or the name of the file where the <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> objectis saved to or read from.
a logical.  If <code>TRUE</code> or <code>NA</code>, an ASCIIrepresentation is written; otherwise (default), a binary one is used.See the comments in the help for <code>save</code>.
the workspace format version to use.  <code>NULL</code>specifies the current default version (3). The only other supportedvalue is 2, the default from <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> 1.4.0 to <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> 3.5.0.
a logical specifying whether saving to a named file isto use <code>"gzip"</code> compression, or one of <code>"gzip"</code>,<code>"bzip2"</code> or <code>"xz"</code> to indicate the type of compression tobe used.  Ignored if <code>file</code> is a connection.
a hook function for handling reference objects.
a <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object
a character vector naming classes.  <code>value</code>can also be <code>NULL</code>.
logical affecting return value: see ‘Details’.
A non-negative integer specifying the desired length.Double values will be coerced to integer:supplying an argument of length other than one is an error.
object to be coerced or tested.
further arguments passed to or from other methods.
the factors for which interaction is to be computed, or asingle list giving those factors.
if <code>drop</code> is <code>TRUE</code>, unused factor levelsare dropped from the result.  The default is to retain allfactor levels.
string to construct the new level labels by joining theconstituent ones.
logical indicating if the order of factor concatenationshould be lexically ordered.
vectors (of the same mode) containing a sequenceof items (conceptually) with no duplicated values.
object to be converted or shifted.
logical: should the conversion be to a singlecharacter string or multiple individual characters?
the number of bits to shift.  Positive numbers shift rightand negative numbers shift left: allowed values are <code>-8 ... 8</code>.
the result type, partially matched.
object to be converted.
logical: should the conversion be to a singlecharacter string or multiple individual characters?
logical: should interpretation ofsurrogate pairs be attempted?  (See ‘Details’.)Only supported for <code>multiple = FALSE</code>.
a vector (atomic, not a list) for <code>rle()</code>;an object of class <code>"rle"</code> for <code>inverse.rle()</code>.
further arguments; ignored here.
number of significant digits for printing, see<code>print.default</code>.
character string, prepended to each printed line.
an arbitrary <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
a condition object.
call expression.
a condition object.
expression to be evaluated.
expression to be evaluated before returning or exiting.
function.
character string.
character string.
character string naming a restart.
restart object.
object.
character string naming a condition class.
additional arguments; see details below.
a condition object.
call expression.
a condition object.
expression to be evaluated.
expression to be evaluated before returning or exiting.
function.
character string.
character string.
character string naming a restart.
restart object.
object.
character string naming a condition class.
additional arguments; see details below.
a vector (including a list or <code>expression</code>vector) giving data to fill the array.  Non-atomic classed objectsare coerced by <code>as.vector</code>.
the dim attribute for the array to be created, that is aninteger vector of length one or more giving the maximal indices ineach dimension.
either <code>NULL</code> or the names for the dimensions.This must a list (or it will be ignored) with one component for eachdimension, either <code>NULL</code> or a character vector of the lengthgiven by <code>dim</code> for that dimension.  The list can be named, andthe list names will be used as names for the dimensions.  If thelist is shorter than the number of dimensions, it is extended by<code>NULL</code>s to the length required.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
additional arguments to be passed to or from methods.
object to be tested.
a non-empty character string naming the function to be called.
arguments to be part of the call.
an arbitrary <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
A non-negative integer specifying the desired length.Double values will be coerced to integer:supplying an argument of length other than one is an error.
object to be coerced or tested.
further arguments passed to or from other methods.
numeric.  Desired length of the output vector,inputs being recycled as needed.
numeric vector.
numeric vector.
numeric vector.
numeric vector.
an object, probably of mode <code>complex</code>.
an object of mode <code>complex</code>, or one of a class for whicha methods has been defined.
further arguments passed to or from other methods.
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
<code>NULL</code> or a character vector giving the rownames for the data frame.  Missing values are not allowed.
logical. If <code>TRUE</code>, setting row names andconverting column names (to syntactic names: see<code>make.names</code>) is optional.  Note that all of <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>'s<span class="pkg">base</span> package <code>as.data.frame()</code> methods use<code>optional</code> only for column names treatment, basically with themeaning of <code>data.frame(*, check.names = !optional)</code>.See also the <code>make.names</code> argument of the <code>matrix</code> method.
additional arguments to be passed to or from methods.
logical: should the character vector be convertedto a factor?
logical or integer; indicating if column names withmore than 256 (or <code>cut.names</code> if that is numeric) charactersshould be shortened (and the last 6 characters replaced by <code>" ..."</code>).
(optional) character vector of column names.
logical indicating if empty column names, i.e.,<code>""</code> should be fixed up (in <code>data.frame</code>) or not.
logical; passed to the <code>data.frame()</code> call.
a <code>logical</code>, i.e., one of <code>FALSE, NA, TRUE</code>,indicating what should happen if the row names (of the matrix<code>x</code>) are invalid.  If they are invalid, the default,<code>TRUE</code>, calls <code>make.names(*, unique=TRUE)</code>;<code>make.names=NA</code> will use “automatic” row names and a<code>FALSE</code> value will signal an error for invalid row names.
A non-negative integer specifying the desired length.Double values will be coerced to integer:supplying an argument of length other than one is an error.
object to be coerced or tested.
further arguments passed to or from other methods.
vectors (of the same mode) containing a sequenceof items (conceptually) with no duplicated values.
a <code>function</code>, a <code>formula</code>, or<code>NULL</code>, which is the default.
an environment to associate with the function
an arbitrary <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
a logical, if <code>TRUE</code> the environment will use a hash table.
an environment to be used as the enclosure of theenvironment created.
an environment
an integer specifying the initial size for a hashedenvironment.  An internal default value will be used if<code>size</code> is <code>NA</code> or zero.  This argument is ignored if<code>hash</code> is <code>FALSE</code>.
<code>expression</code>: <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> objects, typically calls, symbolsor constants.<br><code>as.expression</code>: arguments to be passed to methods.
an arbitrary <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
a vector of data, usually taking a small number of distinctvalues.
an optional vector of the unique values (as character strings)that <code>x</code> might have taken.  The default is the unique set ofvalues taken by <code>as.character(x)</code>, sorted intoincreasing order <em>of <code>x</code></em>.  Note that this set can bespecified as smaller than <code>sort(unique(x))</code>.
<em>either</em> an optional character vector oflabels for the levels (in the same order as <code>levels</code> afterremoving those in <code>exclude</code>), <em>or</em> a character string oflength 1.  Duplicated values in <code>labels</code> can be used to mapdifferent values of <code>x</code> to the same factor level.
a vector of values to be excluded when forming theset of levels.  This may be factor with the same level set as <code>x</code>or should be a <code>character</code>.
logical flag to determine if the levels should be regardedas ordered (in the order given).
an upper bound on the number of levels; see ‘Details’.
(in <code>ordered(.)</code>): any of the above, apart from<code>ordered</code> itself.
only add an <code>NA</code> level if it is used, i.e.if <code>any(is.na(x))</code>.
<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object to be tested: the default methods handle atomicvectors.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object to be tested: the default methods handle atomicvectors.
A non-negative integer specifying the desired length.Double values will be coerced to integer:supplying an argument of length other than one is an error.
object to be coerced or tested.
further arguments passed to or from other methods.
object to be tested.
objects, possibly named.
object to be coerced or tested.
a logical indicating whether to copy all values or(default) only those whose names do not begin with a dot.
a logical indicating whether the <code>names</code> ofthe resulting list should be sorted (increasingly).  Note that thisis somewhat costly, but may be useful for comparison of environments.
a character string giving the pathname to a DLL, also knownas a dynamic shared object.  (See ‘Details’ for what theseterms mean.)
a logical value controlling whether the symbols in theDLL are stored in their own local table and not sharedacross DLLs, or added to the global symbol table.  Whether this hasany effect is system-dependent.
a logical controlling whether all symbols are resolved (andrelocated) immediately the library is loaded or deferred until theyare used.  This control is useful for developers testing whether alibrary is complete and has all the necessary symbols, and for usersto ignore missing symbols.  Whether this has any effect is system-dependent.
other arguments for future expansion.
a character string giving a symbol name.
if supplied, confine the search for the <code>name</code> tothe DLL given by this argument (plus the conventional extension,‘<span class="file">.so</span>’, ‘<span class="file">.sl</span>’, ‘<span class="file">.dll</span>’, ...).  This is intended toadd safety for packages, which can ensure by using this argumentthat no other package can override their external symbols.  This isused in the same way as in <code>.C</code>, <code>.Call</code>,<code>.Fortran</code> and <code>.External</code> functions.
The type of symbol to look for: can be any (<code>""</code>, thedefault), <code>"Fortran"</code>, <code>"Call"</code> or <code>"External"</code>.
A non-negative integer specifying the desired length.Double values will be coerced to integer:supplying an argument of length other than one is an error.
object to be coerced or tested.
further arguments passed to or from other methods.
an optional data vector (including a list or<code>expression</code> vector).  Non-atomic classed <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> objects arecoerced by <code>as.vector</code> and all attributes discarded.
the desired number of rows.
the desired number of columns.
logical. If <code>FALSE</code> (the default) the matrix isfilled by columns, otherwise the matrix is filled by rows.
A <code>dimnames</code> attribute for the matrix:<code>NULL</code> or a <code>list</code> of length 2 giving the row and columnnames respectively.  An empty list is treated as <code>NULL</code>, and alist of length one as row names.  The list can be named, and thelist names will be used as names for the dimensions.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
additional arguments to be passed to or from methods.
logical indicating if the resulting matrixshould have character (rather than <code>NULL</code>)<code>rownames</code>.  The default, <code>NA</code>, uses <code>NULL</code>rownames if the data frame has ‘automatic’ row.names or for azero-row data frame.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object to be tested: the default method for<code>is.na</code> and <code>anyNA</code> handle atomic vectors, lists,pairlists, and <code>NULL</code>.
logical: should <code>anyNA</code> be applied recursivelyto lists and pairlists?
a suitable index vector for use with <code>x</code>.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object to be tested: the default method for<code>is.na</code> and <code>anyNA</code> handle atomic vectors, lists,pairlists, and <code>NULL</code>.
logical: should <code>anyNA</code> be applied recursivelyto lists and pairlists?
a suitable index vector for use with <code>x</code>.
a character vector with suitable numeric version strings (see‘Details’); for <code>package_version</code>, alternatively an Rversion object as obtained by <code>R.version</code>.
a logical indicating whether invalid numeric versionsshould results in an error (default) or not.
an object to be printed or summarized from one of thedate-time classes.
for timezone formatting, passed to <code>format.POSIXct</code>.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
number of significant digits for the computations:should be high enough to represent the least important time unitexactly.
further arguments to be passed from or to other methods.
date-time objects
date-time objects or character vectors.  (Charactervectors are converted by <code>as.POSIXct</code>.)
a numeric vector (in seconds)
one of <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>or <code>&gt;=</code>.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object to be tested: the default method for<code>is.na</code> and <code>anyNA</code> handle atomic vectors, lists,pairlists, and <code>NULL</code>.
logical: should <code>anyNA</code> be applied recursivelyto lists and pairlists?
a suitable index vector for use with <code>x</code>.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object to be tested: the default method for<code>is.na</code> and <code>anyNA</code> handle atomic vectors, lists,pairlists, and <code>NULL</code>.
logical: should <code>anyNA</code> be applied recursivelyto lists and pairlists?
a suitable index vector for use with <code>x</code>.
a vector of data, usually taking a small number of distinctvalues.
an optional vector of the unique values (as character strings)that <code>x</code> might have taken.  The default is the unique set ofvalues taken by <code>as.character(x)</code>, sorted intoincreasing order <em>of <code>x</code></em>.  Note that this set can bespecified as smaller than <code>sort(unique(x))</code>.
<em>either</em> an optional character vector oflabels for the levels (in the same order as <code>levels</code> afterremoving those in <code>exclude</code>), <em>or</em> a character string oflength 1.  Duplicated values in <code>labels</code> can be used to mapdifferent values of <code>x</code> to the same factor level.
a vector of values to be excluded when forming theset of levels.  This may be factor with the same level set as <code>x</code>or should be a <code>character</code>.
logical flag to determine if the levels should be regardedas ordered (in the order given).
an upper bound on the number of levels; see ‘Details’.
(in <code>ordered(.)</code>): any of the above, apart from<code>ordered</code> itself.
only add an <code>NA</code> level if it is used, i.e.if <code>any(is.na(x))</code>.
a character vector with suitable numeric version strings (see‘Details’); for <code>package_version</code>, alternatively an Rversion object as obtained by <code>R.version</code>.
a logical indicating whether invalid numeric versionsshould results in an error (default) or not.
object to be coerced or tested.
<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object to be tested: the default methods handle atomicvectors.
an object to be tested or coerced.
ignored.
A non-negative integer specifying the desired length.Double values will be coerced to integer:supplying an argument of length other than one is an error.
object to be coerced or tested.
further arguments passed to or from other methods.
a character vector with suitable numeric version strings (see‘Details’); for <code>package_version</code>, alternatively an Rversion object as obtained by <code>R.version</code>.
a logical indicating whether invalid numeric versionsshould results in an error (default) or not.
A non-negative integer specifying the desired length.Double values will be coerced to integer:supplying an argument of length other than one is an error.
object to be coerced or tested.
further arguments passed to or from other methods.
date-time or date objects.
an optional time zone specification to be used for theconversion, mainly for <code>"POSIXlt"</code> objects.
character string.  Units in which the results aredesired.  Can be abbreviated.
character string.  Like <code>units</code>, except thatabbreviations are not allowed.
character string or numeric value specifying a time interval.
character specifying the format of <code>tim</code>: see<code>strptime</code>.  The default is a locale-specific time format.
an object inheriting from class <code>"difftime"</code>.
arguments to be passed to or from other methods.
A non-negative integer specifying the desired length.Double values will be coerced to integer:supplying an argument of length other than one is an error.
object to be coerced or tested.
further arguments passed to or from other methods.
object to be tested.
a vector of data, usually taking a small number of distinctvalues.
an optional vector of the unique values (as character strings)that <code>x</code> might have taken.  The default is the unique set ofvalues taken by <code>as.character(x)</code>, sorted intoincreasing order <em>of <code>x</code></em>.  Note that this set can bespecified as smaller than <code>sort(unique(x))</code>.
<em>either</em> an optional character vector oflabels for the levels (in the same order as <code>levels</code> afterremoving those in <code>exclude</code>), <em>or</em> a character string oflength 1.  Duplicated values in <code>labels</code> can be used to mapdifferent values of <code>x</code> to the same factor level.
a vector of values to be excluded when forming theset of levels.  This may be factor with the same level set as <code>x</code>or should be a <code>character</code>.
logical flag to determine if the levels should be regardedas ordered (in the order given).
an upper bound on the number of levels; see ‘Details’.
(in <code>ordered(.)</code>): any of the above, apart from<code>ordered</code> itself.
only add an <code>NA</code> level if it is used, i.e.if <code>any(is.na(x))</code>.
a character vector with suitable numeric version strings (see‘Details’); for <code>package_version</code>, alternatively an Rversion object as obtained by <code>R.version</code>.
a logical indicating whether invalid numeric versionsshould results in an error (default) or not.
objects, possibly named.
object to be coerced or tested.
a logical indicating whether to copy all values or(default) only those whose names do not begin with a dot.
a logical indicating whether the <code>names</code> ofthe resulting list should be sorted (increasingly).  Note that thisis somewhat costly, but may be useful for comparison of environments.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
a numeric or complex matrix whose QR decomposition is to becomputed.  Logical matrices are coerced to numeric.
the tolerance for detecting linear dependencies in thecolumns of <code>x</code>. Only used if <code>LAPACK</code> is false and<code>x</code> is real.
a QR decomposition of the type computed by <code>qr</code>.
a vector or matrix of right-hand sides of equations.
a QR decomposition or (<code>qr.solve</code> only) a rectangular matrix.
effective rank.
logical.  For real <code>x</code>, if true use LAPACKotherwise use LINPACK (the default).
further arguments passed to or from other methods
desired length.
object to be coerced.
object to be tested.
object to be tested.
object to be coerced or tested.
one or more objects which can be interpreted as factors(including character strings), or a list (or data frame) whosecomponents can be so interpreted.  (For <code>as.table</code>, argumentspassed to specific methods; for <code>as.data.frame</code>, unused.)
levels to remove for all factors in <code>...</code>.  Ifit does not contain <code>NA</code> and <code>useNA</code> is notspecified, it implies <code>useNA = "ifany"</code>.  See‘Details’ for its interpretation for non-factor arguments.
whether to include <code>NA</code> values in the table.See ‘Details’.  Can be abbreviated.
the names to be given to the dimensions in the result (the<em>dimnames names</em>).
controls how the default <code>dnn</code> isconstructed.  See ‘Details’.
an arbitrary <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, or an object inheriting from class<code>"table"</code> for the <code>as.data.frame</code> method. Note that<code>as.data.frame.table(x, *)</code> may be called explicitly fornon-table <code>x</code> for “reshaping” <code>array</code>s.
a character vector giving the row names for the dataframe.
The name to be used for the column of tableentries, usually counts.
logical: should the classifying factors bereturned as factors (the default) or character vectors?
passed to <code>provideDimnames</code>.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object with a class or a numeric, complex, character,logical or raw vector.
logical.  Should missing values be removed before checking?
logical indicating if the check should be for<em>strictly</em> increasing values.
character string naming an atomic mode or<code>"list"</code> or <code>"expression"</code> or (except for <code>vector</code>)<code>"any"</code>.  Currently, <code>is.vector()</code> allows any type (see<code>typeof</code>) for <code>mode</code>, and when mode is not<code>"any"</code>, <code>is.vector(x, mode)</code> is almost the same as<code>typeof(x) == mode</code>.
a non-negative integer specifying the desired length.  Fora long vector, i.e., <code>length &gt; .Machine$integer.max</code>, ithas to be of type <code>"double"</code>.  Supplying an argument of lengthother than one is an error.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
a <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object
a character vector naming classes.  <code>value</code>can also be <code>NULL</code>.
logical affecting return value: see ‘Details’.
logical: if true all connections, including closed onesand the standard ones are displayed.  If false only open user-createdconnections are included.
integer: a row number of the table given by<code>showConnections</code>.
a connection.
string or namespace environment.
logical.
environment.
namespace environment.
character vector.
optional character vector.
namespace environment.
string naming the package/namespace to load.
vector of package names parallel to <code>generics</code>.
character vector specifying library.
logical.
character.
character.
environment.
a 3-column character matrix.
character.
any object.
character arguments.
the methods table name.
symbol: name of namespace
character vector naming symbols to exclude from theimport, particularly useful when <code>vars</code> is missing.
any interpreted <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> function.
a text string that can be retrieved when the browser is entered.
a condition that can be retrieved when the browser isentered.
an optional method signature. If specified, themethod is debugged, rather than its generic.
logical; a call to the support function<code>debuggingState</code> returns <code>TRUE</code> if debugging is globallyturned on, <code>FALSE</code> otherwise.  An argument of one or the otherof those values sets the state.  If the debugging state is<code>FALSE</code>, none of the debugging actions will occur (but explicit<code>browser</code> calls in functions will continue to work).
<code>raw</code>, <code>logical</code> or ‘number-like’ vectors (i.e., oftypes <code>double</code> (class <code>numeric</code>),<code>integer</code> and <code>complex</code>), or objects forwhich methods have been written.
character string.  A description of the connection:see ‘Details’.
character string.  A description of how to open the connection(if it should be opened initially).  See section ‘Modes’ forpossible values.
logical.  See the ‘Blocking’ section.
The name of the encoding to be assumed.  See the‘Encoding’ section.
logical.  If true, a ‘raw’ interface is used whichwill be more suitable for arguments which are not regular files,e.g. character devices.  This suppresses the check for a compressedfile when opening for text-mode reading, and asserts that the‘file’ may not be seekable.
character string, partially matched to<code>c("default", "internal", "wininet", "libcurl")</code>:see ‘Details’.
named character vector of HTTP headers to use in HTTPrequests.  It is ignored for non-HTTP URLs.  The <code>User-Agent</code>header, coming from the <code>HTTPUserAgent</code> option (see<code>options</code>) is used as the first header, automatically.
integer in 0–9.  The amount of compression to beapplied when writing, from none to maximal available.  For<code>xzfile</code> can also be negative: see the ‘Compression’section.
numeric: the timeout (in seconds) to be used for thisconnection.  Beware that some OSes may treat very large values aszero: however the POSIX standard requires values up to 31 days to besupported.
optional character vector with options. Currently only<code>"no-delay"</code> is supported on TCP sockets.
a filename within a zip file.
character string.  Host name for the port.
integer.  The TCP port number.
logical.  Should the socket be a client or a server?
a server socket listening for connections.
a connection.
character string.  Currently ignored.
character string.  Empty or <code>"read"</code> or <code>"write"</code>,partial matches allowed.
arguments passed to or from other methods.
string or namespace environment.
logical.
environment.
namespace environment.
character vector.
optional character vector.
namespace environment.
string naming the package/namespace to load.
vector of package names parallel to <code>generics</code>.
character vector specifying library.
logical.
character.
character.
environment.
a 3-column character matrix.
character.
any object.
character arguments.
the methods table name.
symbol: name of namespace
character vector naming symbols to exclude from theimport, particularly useful when <code>vars</code> is missing.
string or name space object.
integer specifying position to attach.
<code>NULL</code> or a character vector of dependencies to berecorded in object <code>.Depends</code> in the package.
string naming the package/name space to load.
character vector specifying library search path.
Now ignored except during package installation.
Ignored except during package installation.
logical; if true, stop just after loading code.
<code>NULL</code> or a version specification (a listwith components <code>op</code> and <code>version</code>).
logical: should progress and error messages be suppressed?
string or ‘name’, see <code>as.symbol</code>,of a package, e.g., <code>"stats"</code>.
character vectors; see <code>library</code>.
further arguments to be passed to <code>loadNamespace</code>.
numerical values to specify a day.
numerical values for a time within a day.Fractional seconds are allowed.
A time zone specification to be used for the conversion.<code>""</code> is the current time zone and <code>"GMT"</code> is UTC.  Invalidvalues are most commonly treated as UTC, on some platforms with a warning.
numerical values to specify a day.
numerical values for a time within a day.Fractional seconds are allowed.
A time zone specification to be used for the conversion.<code>""</code> is the current time zone and <code>"GMT"</code> is UTC.  Invalidvalues are most commonly treated as UTC, on some platforms with a warning.
character string.  A description of the connection:see ‘Details’.
character string.  A description of how to open the connection(if it should be opened initially).  See section ‘Modes’ forpossible values.
logical.  See the ‘Blocking’ section.
The name of the encoding to be assumed.  See the‘Encoding’ section.
logical.  If true, a ‘raw’ interface is used whichwill be more suitable for arguments which are not regular files,e.g. character devices.  This suppresses the check for a compressedfile when opening for text-mode reading, and asserts that the‘file’ may not be seekable.
character string, partially matched to<code>c("default", "internal", "wininet", "libcurl")</code>:see ‘Details’.
named character vector of HTTP headers to use in HTTPrequests.  It is ignored for non-HTTP URLs.  The <code>User-Agent</code>header, coming from the <code>HTTPUserAgent</code> option (see<code>options</code>) is used as the first header, automatically.
integer in 0–9.  The amount of compression to beapplied when writing, from none to maximal available.  For<code>xzfile</code> can also be negative: see the ‘Compression’section.
numeric: the timeout (in seconds) to be used for thisconnection.  Beware that some OSes may treat very large values aszero: however the POSIX standard requires values up to 31 days to besupported.
optional character vector with options. Currently only<code>"no-delay"</code> is supported on TCP sockets.
a filename within a zip file.
character string.  Host name for the port.
integer.  The TCP port number.
logical.  Should the socket be a client or a server?
a server socket listening for connections.
a connection.
character string.  Currently ignored.
character string.  Empty or <code>"read"</code> or <code>"write"</code>,partial matches allowed.
arguments passed to or from other methods.
a condition object.
call expression.
a condition object.
expression to be evaluated.
expression to be evaluated before returning or exiting.
function.
character string.
character string.
character string naming a restart.
restart object.
object.
character string naming a condition class.
additional arguments; see details below.
Any R object.
Optional, logical: indicate direction of conversion.
Optional, logical: whether conversion to S3 iscompleted.  Not usually needed, but see the details section.
a connection.
numeric.  A file position (relative to the originspecified by <code>origin</code>), or <code>NA</code>.
character string.  Empty or <code>"read"</code> or <code>"write"</code>,partial matches allowed.
character string.  One of <code>"start"</code>, <code>"current"</code>,<code>"end"</code>: see ‘Details’.
further arguments passed to or from other methods.
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object; a <code>matrix</code> for the matrix method.
numeric scalar &gt;= 0.  Smaller differences are notconsidered, see <code>all.equal.numeric</code>.
numeric scalar &gt;= 0.  <code>isSymmetric.matrix()</code>‘pre-tests’ the first and last few rows for fast detection of‘obviously’ asymmetric cases with this tolerance.  Setting itto length zero will skip the pre-tests.
further arguments passed to methods; the matrix methodpasses these to <code>all.equal</code>.  If the row and columnnames of <code>object</code> are allowed to differ for the symmetry checkdo use <code>check.attributes = FALSE</code>!
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object; a <code>matrix</code> for the matrix method.
numeric scalar &gt;= 0.  Smaller differences are notconsidered, see <code>all.equal.numeric</code>.
numeric scalar &gt;= 0.  <code>isSymmetric.matrix()</code>‘pre-tests’ the first and last few rows for fast detection of‘obviously’ asymmetric cases with this tolerance.  Setting itto length zero will skip the pre-tests.
further arguments passed to methods; the matrix methodpasses these to <code>all.equal</code>.  If the row and columnnames of <code>object</code> are allowed to differ for the symmetry checkdo use <code>check.attributes = FALSE</code>!
<code>raw</code>, <code>logical</code> or ‘number-like’ vectors (i.e., oftypes <code>double</code> (class <code>numeric</code>),<code>integer</code> and <code>complex</code>), or objects forwhich methods have been written.
numeric vector to which <em>jitter</em> should be added.
numeric.
numeric; if positive, used as <em>amount</em> (see below),otherwise, if <code>= 0</code> the default is <code>factor * z/50</code>.

Default (<code>NULL</code>): <code>factor * d/5</code> where <code>d</code> is aboutthe smallest difference between <code>x</code> values.
an object inheriting from class <code>"POSIXt"</code> or <code>"Date"</code>.
logical vector (possibly recycled).  Should the names beabbreviated?
an length-one object inheriting from class<code>"POSIXt"</code> or <code>"Date"</code>.
arguments for other methods.
an object inheriting from class <code>"POSIXt"</code> or <code>"Date"</code>.
logical vector (possibly recycled).  Should the names beabbreviated?
an length-one object inheriting from class<code>"POSIXt"</code> or <code>"Date"</code>.
arguments for other methods.
an object inheriting from class <code>"POSIXt"</code> or <code>"Date"</code>.
logical vector (possibly recycled).  Should the names beabbreviated?
an length-one object inheriting from class<code>"POSIXt"</code> or <code>"Date"</code>.
arguments for other methods.
A matrix or a the result of <code>qr</code> or a fit froma class inheriting from <code>"lm"</code>.
logical.  Should the result be exact?
character string, specifying the matrix norm with respectto which the condition number is to be computed, see also<code>norm</code>.  For <code>rcond</code>, the default is <code>"O"</code>,meaning the <b>O</b>ne- or 1-norm.  The (currently only) otherpossible value is <code>"I"</code> for the infinity norm.
a partially matched character string specifying the method to be used;<code>"qr"</code> is the default for back-compatibility, mainly.
logical.  If true, the matrix used is just the lowertriangular part of <code>z</code>.
logical.  If true and <code>z</code> is not complex, theLINPACK routine <code>dtrco()</code> is called; otherwise the relevantLAPACK routine is.
further arguments passed to or from other methods;for <code>kappa.*()</code>, notably <code>LINPACK</code> when <code>norm</code> is not<code>"2"</code>.
A matrix or a the result of <code>qr</code> or a fit froma class inheriting from <code>"lm"</code>.
logical.  Should the result be exact?
character string, specifying the matrix norm with respectto which the condition number is to be computed, see also<code>norm</code>.  For <code>rcond</code>, the default is <code>"O"</code>,meaning the <b>O</b>ne- or 1-norm.  The (currently only) otherpossible value is <code>"I"</code> for the infinity norm.
a partially matched character string specifying the method to be used;<code>"qr"</code> is the default for back-compatibility, mainly.
logical.  If true, the matrix used is just the lowertriangular part of <code>z</code>.
logical.  If true and <code>z</code> is not complex, theLINPACK routine <code>dtrco()</code> is called; otherwise the relevantLAPACK routine is.
further arguments passed to or from other methods;for <code>kappa.*()</code>, notably <code>LINPACK</code> when <code>norm</code> is not<code>"2"</code>.
A matrix or a the result of <code>qr</code> or a fit froma class inheriting from <code>"lm"</code>.
logical.  Should the result be exact?
character string, specifying the matrix norm with respectto which the condition number is to be computed, see also<code>norm</code>.  For <code>rcond</code>, the default is <code>"O"</code>,meaning the <b>O</b>ne- or 1-norm.  The (currently only) otherpossible value is <code>"I"</code> for the infinity norm.
a partially matched character string specifying the method to be used;<code>"qr"</code> is the default for back-compatibility, mainly.
logical.  If true, the matrix used is just the lowertriangular part of <code>z</code>.
logical.  If true and <code>z</code> is not complex, theLINPACK routine <code>dtrco()</code> is called; otherwise the relevantLAPACK routine is.
further arguments passed to or from other methods;for <code>kappa.*()</code>, notably <code>LINPACK</code> when <code>norm</code> is not<code>"2"</code>.
A matrix or a the result of <code>qr</code> or a fit froma class inheriting from <code>"lm"</code>.
logical.  Should the result be exact?
character string, specifying the matrix norm with respectto which the condition number is to be computed, see also<code>norm</code>.  For <code>rcond</code>, the default is <code>"O"</code>,meaning the <b>O</b>ne- or 1-norm.  The (currently only) otherpossible value is <code>"I"</code> for the infinity norm.
a partially matched character string specifying the method to be used;<code>"qr"</code> is the default for back-compatibility, mainly.
logical.  If true, the matrix used is just the lowertriangular part of <code>z</code>.
logical.  If true and <code>z</code> is not complex, theLINPACK routine <code>dtrco()</code> is called; otherwise the relevantLAPACK routine is.
further arguments passed to or from other methods;for <code>kappa.*()</code>, notably <code>LINPACK</code> when <code>norm</code> is not<code>"2"</code>.
A vector or array.
A vector or array.
a function; it may be a quoted string.
Provide dimnames that are the product of thedimnames of <code>X</code> and <code>Y</code>.
optional arguments to be passed to <code>FUN</code>.
a numeric or complex matrix whose SVD decompositionis to be computed.  Logical matrices are coerced to numeric.
the number of left  singular vectors to be computed.This must between <code>0</code> and <code>n = nrow(x)</code>.
the number of right singular vectors to be computed.This must be between <code>0</code> and <code>p = ncol(x)</code>.
logical.  Defunct and an error.
Any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object: the function is generic.
further arguments passed to or from other methods.
Any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object: the function is generic.
further arguments passed to or from other methods.
a vector (atomic or list) or an <code>expression</code>object.  Other objects (including classed objects) will be coercedby <code>base::as.list</code>.
the function to be applied to each element of <code>X</code>:see ‘Details’.  In the case of functions like<code>+</code>, <code>%*%</code>, the function name must be backquoted or quoted.
optional arguments to <code>FUN</code>.
logical or character string; should the result besimplified to a vector, matrix or higher dimensional array ifpossible?  For <code>sapply</code> it must be named and not abbreviated.The default value, <code>TRUE</code>, returns a vector or matrix if appropriate,whereas if <code>simplify = "array"</code> the result may be an<code>array</code> of “rank”(<i>=</i><code>length(dim(.))</code>) one higher than the resultof <code>FUN(X[[i]])</code>.
logical; if <code>TRUE</code> and if <code>X</code> is character,use <code>X</code> as <code>names</code> for the result unless it had namesalready.  Since this argument follows <code>...</code> its name cannotbe abbreviated.
a (generalized) vector; a template for the returnvalue from FUN.  See ‘Details’.
integer: the number of replications.
the expression (a language object, usually a call)to evaluate repeatedly.
a list, typically returned from <code>lapply()</code>.
logical; if true, <code>simplify2array()</code> will produce a(“higher rank”) array when appropriate, whereas<code>higher = FALSE</code> would return a matrix (or vector) only.These two cases correspond to <code>sapply(*, simplify = "array")</code> or<code>simplify = TRUE</code>, respectively.
The file path to the database, with no extension.
The environment into which objects are loaded.
An optional function which when called on a a charactervector of object names returns a logical vector: only objects forwhich this is true will be loaded.
Function of one argument, an environment.
The file path to the database, with no extension.
The environment into which objects are loaded.
An optional function which when called on a a charactervector of object names returns a logical vector: only objects forwhich this is true will be loaded.
Function of one argument, an environment.
an object

from which to extract elements.
with a <code>"row.names"</code> attribute, typically adata frame.
typically S3- or S4-classed.
The full path to the‘<span class="file">DESCRIPTION</span>’ file of a package.
the filepath to a lazyload database.
a character vector describing the location of <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>library trees to search through, or <code>NULL</code>.  The default valueof <code>NULL</code> corresponds to all libraries currently known to<code>.libPaths()</code>.
logical.  Should this not give warnings or an errorif the package(s) are not found?
logical.  Should  the <code>Imports</code> field be processed?
logical: should message(s) be printed.
A processed ‘<span class="file">DESCRIPTION</span>’ file of class<code>"packageDescription2"</code>.
platform strings of the form <code>"cpu-vendor-os"</code>.
name of image file to save or load.
integer.  Currently <code>type = 0</code> returns the internal<code>"row.names"</code> attribute (possibly <code>NULL</code>), <code>type = 2</code>the number of rows implied by the attribute, and <code>type = 1</code> thelatter with a negative sign for ‘automatic’ row names.
integer.  The number of rows.
character string such as <code>"package:MASS"</code>.
the object name in a lazyload database.
logical: are the values in the database compressed?
a load hook: see <code>unserialize</code>.
a length-one integer vector.
indices.
logical.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
a classless object to be placed into the class.
an optional time zone.
an optional character vector of classes <em>containing</em>the default classes.
see <code>difftime</code>.
Arguments passed to non-dot name versions.
an integer.
character vector of <em>same</em> objects, masking others.
character string naming the package which is masked from or by.
logical indicating if the masking happens <em>by</em><code>pkg</code>, or (<code>by = FALSE</code>) from <code>pkg</code>.
non-negative numeric vectors.
numeric vectors.
integer vectors.
non-negative numeric vectors.
numeric vectors.
integer vectors.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.  For replacement, a vector or factor.
a non-negative integer or double (which will be rounded down).
an object to be printed or summarized from one of thedate-time classes.
for timezone formatting, passed to <code>format.POSIXct</code>.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
number of significant digits for the computations:should be high enough to represent the least important time unitexactly.
further arguments to be passed from or to other methods.
date-time objects
date-time objects or character vectors.  (Charactervectors are converted by <code>as.POSIXct</code>.)
a numeric vector (in seconds)
one of <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>or <code>&gt;=</code>.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.  For replacement, a vector or factor.
a non-negative integer or double (which will be rounded down).
a <code>Date</code> object to be summarized or printed.
number of significant digits for the computations.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
further arguments to be passed from or to other methods.
date-time or date objects.
an optional time zone specification to be used for theconversion, mainly for <code>"POSIXlt"</code> objects.
character string.  Units in which the results aredesired.  Can be abbreviated.
character string.  Like <code>units</code>, except thatabbreviations are not allowed.
character string or numeric value specifying a time interval.
character specifying the format of <code>tim</code>: see<code>strptime</code>.  The default is a locale-specific time format.
an object inheriting from class <code>"difftime"</code>.
arguments to be passed to or from other methods.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.  For replacement, a vector or factor.
a non-negative integer or double (which will be rounded down).
an object to be printed or summarized from one of thedate-time classes.
for timezone formatting, passed to <code>format.POSIXct</code>.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
number of significant digits for the computations:should be high enough to represent the least important time unitexactly.
further arguments to be passed from or to other methods.
date-time objects
date-time objects or character vectors.  (Charactervectors are converted by <code>as.POSIXct</code>.)
a numeric vector (in seconds)
one of <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>or <code>&gt;=</code>.
an object to be printed or summarized from one of thedate-time classes.
for timezone formatting, passed to <code>format.POSIXct</code>.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
number of significant digits for the computations:should be high enough to represent the least important time unitexactly.
further arguments to be passed from or to other methods.
date-time objects
date-time objects or character vectors.  (Charactervectors are converted by <code>as.POSIXct</code>.)
a numeric vector (in seconds)
one of <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>or <code>&gt;=</code>.
a <code>list</code>, list-like such as an<code>expression</code> or an atomic vector (for which the resultis trivial).
logical indicating if the result should inherit the<code>names</code> from <code>x</code>.
an object, for example a factor.
A valid value for <code>levels(x)</code>.For the default method, <code>NULL</code> or a character vector.  For the<code>factor</code> method, a vector of character strings with length atleast the number of levels of <code>x</code>, or a named list specifying how torename the levels.
an object, for example a factor.
A valid value for <code>levels(x)</code>.For the default method, <code>NULL</code> or a character vector.  For the<code>factor</code> method, a vector of character strings with length atleast the number of levels of <code>x</code>, or a named list specifying how torename the levels.
an object, for example a factor.
A valid value for <code>levels(x)</code>.For the default method, <code>NULL</code> or a character vector.  For the<code>factor</code> method, a vector of character strings with length atleast the number of levels of <code>x</code>, or a named list specifying how torename the levels.
an object, for example a factor.
A valid value for <code>levels(x)</code>.For the default method, <code>NULL</code> or a character vector.  For the<code>factor</code> method, a vector of character strings with length atleast the number of levels of <code>x</code>, or a named list specifying how torename the levels.
non-negative numeric vectors.
numeric vectors.
integer vectors.
non-negative numeric vectors.
numeric vectors.
integer vectors.
the name of a package, given as a name orliteral character string, or a character string, depending onwhether <code>character.only</code> is <code>FALSE</code> (default) or<code>TRUE</code>.
the position on the search list at which to attach theloaded namespace.  Can also be the name of a position on the currentsearch list as given by <code>search()</code>.
a character vector describing the location of <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>library trees to search through, or <code>NULL</code>.  The default valueof <code>NULL</code> corresponds to all libraries currently known to<code>.libPaths()</code>.Non-existent library trees are silently ignored.
a logical indicating whether <code>package</code> or<code>help</code> can be assumed to be character strings.
logical.  If it is <code>TRUE</code>,  <code>FALSE</code> or<code>TRUE</code> is returned to indicate success.
logical.  If <code>TRUE</code>, warnings areprinted about <code>conflicts</code> from attaching the newpackage.  A conflict is a function masking a function,or a non-function masking a non-function. The default is <code>TRUE</code>unless specified as <code>FALSE</code> in the <code>conflicts.policy</code> option.
a logical.  If <code>TRUE</code>, additional diagnostics areprinted.
a logical.  If <code>TRUE</code>, no message confirmingpackage attaching is printed, and most often, no errors/warnings areprinted if package attaching fails.
character string naming a package.
character vector of names of objects that can maskobjects on the search path without signaling an error when strictconflict checking is enabled
character vector of names of objects toexclude or include in the attached frame. Only one of these argumentsmay be used in a call to <code>library</code> or <code>require</code>.
logical specifying whether required packageslisted in the <code>Depends</code> clause of the <code>DESCRIPTION</code> fileshould be attached automatically.
a character string naming a DLL (also known as a dynamicshared object or library) to load.
a character vector with the name of package.
a character vector describing the location of <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>library trees to search through.
the path to the loaded package whose DLL is to be unloaded.
a logical value indicating whether an announcementis printed on the console before loading the DLL.  Thedefault value is taken from the verbose entry in the system<code>options</code>.
the extension (including <span class="samp">.</span> if used) to appendto the file name to specify the library to be loaded.  This defaultsto the appropriate value for the operating system.
additional arguments needed by some libraries thatare passed to the call to <code>dyn.load</code> to controlhow the library and its dependencies are loaded.
a list of <code>"DLLInfo"</code> objects corresponding to theDLLs loaded by packages.  Can be missing.
a character string naming a DLL (also known as a dynamicshared object or library) to load.
a character vector with the name of package.
a character vector describing the location of <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>library trees to search through.
the path to the loaded package whose DLL is to be unloaded.
a logical value indicating whether an announcementis printed on the console before loading the DLL.  Thedefault value is taken from the verbose entry in the system<code>options</code>.
the extension (including <span class="samp">.</span> if used) to appendto the file name to specify the library to be loaded.  This defaultsto the appropriate value for the operating system.
additional arguments needed by some libraries thatare passed to the call to <code>dyn.load</code> to controlhow the library and its dependencies are loaded.
a list of <code>"DLLInfo"</code> objects corresponding to theDLLs loaded by packages.  Can be missing.
objects, possibly named.
object to be coerced or tested.
a logical indicating whether to copy all values or(default) only those whose names do not begin with a dot.
a logical indicating whether the <code>names</code> ofthe resulting list should be sorted (increasingly).  Note that thisis somewhat costly, but may be useful for comparison of environments.
a character vector of full path names; the defaultcorresponds to the working directory, <code>getwd()</code>.  Tildeexpansion (see <code>path.expand</code>) is performed.  Missingvalues will be ignored.  Elements with a marked encoding willbe converted to the native encoding (and if that fails, considerednon-existent).
an optional regular expression.  Only file nameswhich match the regular expression will be returned.
a logical value.  If <code>FALSE</code>, only thenames of visible files are returned (following Unix-style visibility,that is files whose name does not start with a dot).  If <code>TRUE</code>,all file names will be returned.
a logical value.  If <code>TRUE</code>, the directorypath is prepended to the file names to give a relative file path.If <code>FALSE</code>, the file names (rather than paths) are returned.
logical.  Should the listing recurse into directories?
logical.  Should pattern-matching be case-insensitive?
logical.  Should subdirectory names be included inrecursive listings?  (They always are in non-recursive ones).
logical.  Should both <code>"."</code> and <code>".."</code> be excludedalso from non-recursive listings?
a character vector of full path names; the defaultcorresponds to the working directory, <code>getwd()</code>.  Tildeexpansion (see <code>path.expand</code>) is performed.  Missingvalues will be ignored.  Elements with a marked encoding willbe converted to the native encoding (and if that fails, considerednon-existent).
an optional regular expression.  Only file nameswhich match the regular expression will be returned.
a logical value.  If <code>FALSE</code>, only thenames of visible files are returned (following Unix-style visibility,that is files whose name does not start with a dot).  If <code>TRUE</code>,all file names will be returned.
a logical value.  If <code>TRUE</code>, the directorypath is prepended to the file names to give a relative file path.If <code>FALSE</code>, the file names (rather than paths) are returned.
logical.  Should the listing recurse into directories?
logical.  Should pattern-matching be case-insensitive?
logical.  Should subdirectory names be included inrecursive listings?  (They always are in non-recursive ones).
logical.  Should both <code>"."</code> and <code>".."</code> be excludedalso from non-recursive listings?
A list of variables for the data frame.
An integer giving the desired number of rows for the data frame, or<code>NULL</code> (default), in which case the maximal length of theelements of the list will be used.  If necessary, list elements willbe replicated to the same length given by the number of rows.
a <code>list</code>, where <code>names(x)</code> mustnot contain empty (<code>""</code>) elements.
an <code>environment</code> or <code>NULL</code>.
(for the case <code>envir = NULL</code>): a parent frame akaenclosing environment, see <code>new.env</code>.
(for the case <code>envir = NULL</code>): logical indicatingif the created environment should use hashing, see <code>new.env</code>.
(in the case <code>envir = NULL, hash = TRUE</code>): hash size,see <code>new.env</code>.
a (readable binary-mode) connection or a character stringgiving the name of the file to load (when tilde expansionis done).
the environment where the data should be loaded.
should item names be printed during loading?
string or name space object.
integer specifying position to attach.
<code>NULL</code> or a character vector of dependencies to berecorded in object <code>.Depends</code> in the package.
string naming the package/name space to load.
character vector specifying library search path.
Now ignored except during package installation.
Ignored except during package installation.
logical; if true, stop just after loading code.
<code>NULL</code> or a version specification (a listwith components <code>op</code> and <code>version</code>).
logical: should progress and error messages be suppressed?
string or ‘name’, see <code>as.symbol</code>,of a package, e.g., <code>"stats"</code>.
character vectors; see <code>library</code>.
further arguments to be passed to <code>loadNamespace</code>.
string or namespace environment.
logical.
environment.
namespace environment.
character vector.
optional character vector.
namespace environment.
string naming the package/namespace to load.
vector of package names parallel to <code>generics</code>.
character vector specifying library.
logical.
character.
character.
environment.
a 3-column character matrix.
character.
any object.
character arguments.
the methods table name.
symbol: name of namespace
character vector naming symbols to exclude from theimport, particularly useful when <code>vars</code> is missing.
string or name space object.
integer specifying position to attach.
<code>NULL</code> or a character vector of dependencies to berecorded in object <code>.Depends</code> in the package.
string naming the package/name space to load.
character vector specifying library search path.
Now ignored except during package installation.
Ignored except during package installation.
logical; if true, stop just after loading code.
<code>NULL</code> or a version specification (a listwith components <code>op</code> and <code>version</code>).
logical: should progress and error messages be suppressed?
string or ‘name’, see <code>as.symbol</code>,of a package, e.g., <code>"stats"</code>.
character vectors; see <code>library</code>.
further arguments to be passed to <code>loadNamespace</code>.
an object to be evaluated.  See ‘Details’.
the <code>environment</code> in which <code>expr</code> is tobe evaluated.  May also be <code>NULL</code>, a list, a data frame,a pairlist or an integer as specified to <code>sys.call</code>.
Relevant when <code>envir</code> is a (pair)list or a data frame.Specifies the enclosure, i.e., where <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> looks for objects not foundin <code>envir</code>.  This can be <code>NULL</code> (interpreted as the basepackage environment, <code>baseenv()</code>) or an environment.
number of parent generations to go back
an environment.
logical specifying whether bindings should be locked.
a name object or character string.
a function taking zero or one arguments.
an environment.
logical specifying whether bindings should be locked.
a name object or character string.
a function taking zero or one arguments.
a numeric or complex vector.
a positive or complex number: the base with respect to whichlogarithms are computed.  Defaults to <i>e</i>=<code>exp(1)</code>.
a numeric or complex vector.
a positive or complex number: the base with respect to whichlogarithms are computed.  Defaults to <i>e</i>=<code>exp(1)</code>.
a numeric or complex vector.
a positive or complex number: the base with respect to whichlogarithms are computed.  Defaults to <i>e</i>=<code>exp(1)</code>.
a numeric or complex vector.
a positive or complex number: the base with respect to whichlogarithms are computed.  Defaults to <i>e</i>=<code>exp(1)</code>.
a numeric or complex vector.
a positive or complex number: the base with respect to whichlogarithms are computed.  Defaults to <i>e</i>=<code>exp(1)</code>.
A non-negative integer specifying the desired length.Double values will be coerced to integer:supplying an argument of length other than one is an error.
object to be coerced or tested.
further arguments passed to or from other methods.
a matrix or other <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object with <code>length(dim(x)) == 2</code>.For back compatibility reasons, when the above is not fulfilled,<code>as.matrix(x)</code> is called first.
logical.  Should the diagonal be included?
which environment to use in listing the available objects.Defaults to the <em>current</em> environment.  Although called<code>name</code> for back compatibility, in fact this argument canspecify the environment in any form; see the ‘Details’ section.
an alternative argument to <code>name</code> for specifying theenvironment as a position in the search list.  Mostly there forback compatibility.
an alternative argument to <code>name</code> for specifying theenvironment.  Mostly there for back compatibility.
a logical value.  If <code>TRUE</code>, allobject names are returned.  If <code>FALSE</code>, names which begin with a<span class="samp">.</span> are omitted.
an optional regular expression.  Only namesmatching <code>pattern</code> are returned.  <code>glob2rx</code> can beused to convert wildcard patterns to regular expressions.
logical indicating if the resulting<code>character</code> should be sorted alphabetically.  Note thatthis is part of <code>ls()</code> may take most of the time.
character vector to be coerced to syntactically validnames.  This is coerced to character if necessary.
logical; if <code>TRUE</code>, the resulting elements areunique.  This may be desired for, e.g., column names.
logical.  For compatibility with <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> prior to 1.9.0.
a character vector
a character string used to separate a duplicate name fromits sequence number.
an environment.
logical specifying whether bindings should be locked.
a name object or character string.
a function taking zero or one arguments.
a function of the appropriate arity (binary for<code>Reduce</code>, unary for <code>Filter</code>, <code>Find</code> and<code>Position</code>, <i>k</i>-ary for <code>Map</code> if this is called with<i>k</i> arguments).  An arbitrary predicate function for<code>Negate</code>.
a vector.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object of the same kind as the elements of<code>x</code>.
a logical indicating whether to proceed from left toright (default) or from right to left.
a logical indicating whether the successive reducecombinations should be accumulated.  By default, only the finalcombination is used.
the value to be returned in the case when“no match” (no element satisfying the predicate) is found.
vectors.
function to apply, found via <code>match.fun</code>.
arguments to vectorize over (vectors or lists of strictlypositive length, or all of zero length).  See also ‘Details’.
<code>list</code> or <code>pairlist</code> of arguments tovectorize over, see <code>...</code> above.
a list of other arguments to <code>FUN</code>.
logical or character string; attempt to reduce theresult to a vector, matrix or higher dimensional array; seethe <code>simplify</code> argument of <code>sapply</code>.
logical; use the names of the first ... argument, orif that is an unnamed character vector, use that vector as the names.
an array
a vector giving the margins to compute sums for.E.g., for a matrix <code>1</code> indicates rows, <code>2</code> indicatescolumns, <code>c(1, 2)</code> indicates rows and columns.When <code>x</code> has named dimnames, it can be a character vectorselecting dimension names.
an array
a vector giving the margins to compute sums for.E.g., for a matrix <code>1</code> indicates rows, <code>2</code> indicatescolumns, <code>c(1, 2)</code> indicates rows and columns.When <code>x</code> has named dimnames, it can be a character vectorselecting dimension names.
numbers of rows and columns.
vector or <code>NULL</code>: the values to be matched.Long vectors are supported.
vector or <code>NULL</code>: the values to be matched against.Long vectors are not supported.
the value to be returned in the case when no match isfound.  Note that it is coerced to <code>integer</code>.
a vector of values that cannot be matched.  Anyvalue in <code>x</code> matching a value in this vector is assigned the<code>nomatch</code> value.  For historical reasons, <code>FALSE</code> isequivalent to <code>NULL</code>.
a character vector (of length one unless <code>several.ok</code>is <code>TRUE</code>) or <code>NULL</code>.
a character vector of candidate values
logical specifying if <code>arg</code> should be allowedto have more than one element.
a function, by default the function from which<code>match.call</code> is called.  See details.
an unevaluated call to the function specified by<code>definition</code>, as generated by <code>call</code>.
logical.  Should arguments matching <code>...</code>in the call be included or left as a <code>...</code> argument?
an environment, from which the <code>...</code> in <code>call</code>are retrieved, if any.
item to match as function: a function, symbol orcharacter string.  See ‘Details’.
logical; control whether to search past non-functionobjects.
objects.
further arguments passed to methods.
logical: should missing values be removed?
a <code>Date</code> object to be summarized or printed.
number of significant digits for the computations.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
further arguments to be passed from or to other methods.
date-time or date objects.
an optional time zone specification to be used for theconversion, mainly for <code>"POSIXlt"</code> objects.
character string.  Units in which the results aredesired.  Can be abbreviated.
character string.  Like <code>units</code>, except thatabbreviations are not allowed.
character string or numeric value specifying a time interval.
character specifying the format of <code>tim</code>: see<code>strptime</code>.  The default is a locale-specific time format.
an object inheriting from class <code>"difftime"</code>.
arguments to be passed to or from other methods.
a vector of data, usually taking a small number of distinctvalues.
an optional vector of the unique values (as character strings)that <code>x</code> might have taken.  The default is the unique set ofvalues taken by <code>as.character(x)</code>, sorted intoincreasing order <em>of <code>x</code></em>.  Note that this set can bespecified as smaller than <code>sort(unique(x))</code>.
<em>either</em> an optional character vector oflabels for the levels (in the same order as <code>levels</code> afterremoving those in <code>exclude</code>), <em>or</em> a character string oflength 1.  Duplicated values in <code>labels</code> can be used to mapdifferent values of <code>x</code> to the same factor level.
a vector of values to be excluded when forming theset of levels.  This may be factor with the same level set as <code>x</code>or should be a <code>character</code>.
logical flag to determine if the levels should be regardedas ordered (in the order given).
an upper bound on the number of levels; see ‘Details’.
(in <code>ordered(.)</code>): any of the above, apart from<code>ordered</code> itself.
only add an <code>NA</code> level if it is used, i.e.if <code>any(is.na(x))</code>.
an object to be printed or summarized from one of thedate-time classes.
for timezone formatting, passed to <code>format.POSIXct</code>.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
number of significant digits for the computations:should be high enough to represent the least important time unitexactly.
further arguments to be passed from or to other methods.
date-time objects
date-time objects or character vectors.  (Charactervectors are converted by <code>as.POSIXct</code>.)
a numeric vector (in seconds)
one of <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>or <code>&gt;=</code>.
an optional data vector (including a list or<code>expression</code> vector).  Non-atomic classed <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> objects arecoerced by <code>as.vector</code> and all attributes discarded.
the desired number of rows.
the desired number of columns.
logical. If <code>FALSE</code> (the default) the matrix isfilled by columns, otherwise the matrix is filled by rows.
A <code>dimnames</code> attribute for the matrix:<code>NULL</code> or a <code>list</code> of length 2 giving the row and columnnames respectively.  An empty list is treated as <code>NULL</code>, and alist of length one as row names.  The list can be named, and thelist names will be used as names for the dimensions.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
additional arguments to be passed to or from methods.
logical indicating if the resulting matrixshould have character (rather than <code>NULL</code>)<code>rownames</code>.  The default, <code>NA</code>, uses <code>NULL</code>rownames if the data frame has ‘automatic’ row.names or for azero-row data frame.
numeric or character arguments (see Note).
a logical indicating whether missing values should beremoved.
numerical matrix
a character string specifying how ties arehandled, <code>"random"</code> by default; can be abbreviated; see‘Details’.
An <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.  Currently there are methods fornumeric/logical vectors and date,date-time and time interval objects.  Complex vectorsare allowed for <code>trim = 0</code>, only.
the fraction (0 to 0.5) of observations to betrimmed from each end of <code>x</code> before the mean is computed.Values of trim outside that range are taken as the nearest endpoint.
a logical value indicating whether <code>NA</code>values should be stripped before the computation proceeds.
further arguments passed to or from other methods.
a <code>Date</code> object to be summarized or printed.
number of significant digits for the computations.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
further arguments to be passed from or to other methods.
An <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.  Currently there are methods fornumeric/logical vectors and date,date-time and time interval objects.  Complex vectorsare allowed for <code>trim = 0</code>, only.
the fraction (0 to 0.5) of observations to betrimmed from each end of <code>x</code> before the mean is computed.Values of trim outside that range are taken as the nearest endpoint.
a logical value indicating whether <code>NA</code>values should be stripped before the computation proceeds.
further arguments passed to or from other methods.
date-time or date objects.
an optional time zone specification to be used for theconversion, mainly for <code>"POSIXlt"</code> objects.
character string.  Units in which the results aredesired.  Can be abbreviated.
character string.  Like <code>units</code>, except thatabbreviations are not allowed.
character string or numeric value specifying a time interval.
character specifying the format of <code>tim</code>: see<code>strptime</code>.  The default is a locale-specific time format.
an object inheriting from class <code>"difftime"</code>.
arguments to be passed to or from other methods.
an object to be printed or summarized from one of thedate-time classes.
for timezone formatting, passed to <code>format.POSIXct</code>.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
number of significant digits for the computations:should be high enough to represent the least important time unitexactly.
further arguments to be passed from or to other methods.
date-time objects
date-time objects or character vectors.  (Charactervectors are converted by <code>as.POSIXct</code>.)
a numeric vector (in seconds)
one of <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>or <code>&gt;=</code>.
an object to be printed or summarized from one of thedate-time classes.
for timezone formatting, passed to <code>format.POSIXct</code>.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
number of significant digits for the computations:should be high enough to represent the least important time unitexactly.
further arguments to be passed from or to other methods.
date-time objects
date-time objects or character vectors.  (Charactervectors are converted by <code>as.POSIXct</code>.)
a numeric vector (in seconds)
one of <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>or <code>&gt;=</code>.
numeric; new size limit in Mb.
numeric; new maximal node number.
numeric; new size limit in Mb.
numeric; new maximal node number.
A raw vector.  For <code>memCompress</code> a character vectorwill be converted to a raw vector with character strings separatedby <code>"\n"</code>.  Types <code>"gzip"</code> and <code>"xz"</code> support longraw vectors as from <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> 4.0.0.
character string, the type of compression.  May beabbreviated to a single letter, defaults to the first of the alternatives.
logical: should the result be converted to a characterstring?  NB: character strings have a limit of<i>2^31 - 1</i> bytes, so raw vectors should be used forlarge inputs.
A raw vector.  For <code>memCompress</code> a character vectorwill be converted to a raw vector with character strings separatedby <code>"\n"</code>.  Types <code>"gzip"</code> and <code>"xz"</code> support longraw vectors as from <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> 4.0.0.
character string, the type of compression.  May beabbreviated to a single letter, defaults to the first of the alternatives.
logical: should the result be converted to a characterstring?  NB: character strings have a limit of<i>2^31 - 1</i> bytes, so raw vectors should be used forlarge inputs.
data frames, or objects to be coerced to one.
specifications of the columns used for merging.See ‘Details’.
logical; <code>all = L</code> is shorthand for <code>all.x = L</code> and<code>all.y = L</code>, where <code>L</code> is either <code>TRUE</code> or<code>FALSE</code>.
logical; if <code>TRUE</code>, then extra rows will be added tothe output, one for each row in <code>x</code> that has no matching row in<code>y</code>.  These rows will have <code>NA</code>s in those columns that areusually filled with values from <code>y</code>.  The default is<code>FALSE</code>, so that only rows with data from both <code>x</code> and<code>y</code> are included in the output.
logical; analogous to <code>all.x</code>.
logical.  Should the result be sorted on the <code>by</code>columns?
a character vector of length 2 specifying the suffixesto be used for making unique the names of columns in the resultwhich are not used for merging (appearing in <code>by</code> etc).
logical indicating that <code>suffixes</code> are appended inmore cases to avoid duplicated column names in the result.  Thiswas implicitly false before <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> version 3.5.0.
values which cannot be matched.  See<code>match</code>.  This is intended to be used for merging on onecolumn, so these are incomparable values of that column.
arguments to be passed to or from methods.
data frames, or objects to be coerced to one.
specifications of the columns used for merging.See ‘Details’.
logical; <code>all = L</code> is shorthand for <code>all.x = L</code> and<code>all.y = L</code>, where <code>L</code> is either <code>TRUE</code> or<code>FALSE</code>.
logical; if <code>TRUE</code>, then extra rows will be added tothe output, one for each row in <code>x</code> that has no matching row in<code>y</code>.  These rows will have <code>NA</code>s in those columns that areusually filled with values from <code>y</code>.  The default is<code>FALSE</code>, so that only rows with data from both <code>x</code> and<code>y</code> are included in the output.
logical; analogous to <code>all.x</code>.
logical.  Should the result be sorted on the <code>by</code>columns?
a character vector of length 2 specifying the suffixesto be used for making unique the names of columns in the resultwhich are not used for merging (appearing in <code>by</code> etc).
logical indicating that <code>suffixes</code> are appended inmore cases to avoid duplicated column names in the result.  Thiswas implicitly false before <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> version 3.5.0.
values which cannot be matched.  See<code>match</code>.  This is intended to be used for merging on onecolumn, so these are incomparable values of that column.
arguments to be passed to or from methods.
data frames, or objects to be coerced to one.
specifications of the columns used for merging.See ‘Details’.
logical; <code>all = L</code> is shorthand for <code>all.x = L</code> and<code>all.y = L</code>, where <code>L</code> is either <code>TRUE</code> or<code>FALSE</code>.
logical; if <code>TRUE</code>, then extra rows will be added tothe output, one for each row in <code>x</code> that has no matching row in<code>y</code>.  These rows will have <code>NA</code>s in those columns that areusually filled with values from <code>y</code>.  The default is<code>FALSE</code>, so that only rows with data from both <code>x</code> and<code>y</code> are included in the output.
logical; analogous to <code>all.x</code>.
logical.  Should the result be sorted on the <code>by</code>columns?
a character vector of length 2 specifying the suffixesto be used for making unique the names of columns in the resultwhich are not used for merging (appearing in <code>by</code> etc).
logical indicating that <code>suffixes</code> are appended inmore cases to avoid duplicated column names in the result.  Thiswas implicitly false before <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> version 3.5.0.
values which cannot be matched.  See<code>match</code>.  This is intended to be used for merging on onecolumn, so these are incomparable values of that column.
arguments to be passed to or from methods.
zero or more objects which can be coerced to character(and which are pasted together with no separator) or (for<code>message</code> only) a single condition object.
see <code>gettext</code>.  If <code>NA</code>, messages willnot be translated, see also the note in <code>stop</code>.
logical: should messages given as a character stringhave a newline appended?
expression to evaluate.
character, indicating which classes of messages shouldbe suppressed.
For <code>get</code>, an object name (given as a characterstring or a symbol).<br>For <code>mget</code>, a character vector of object names.
where to look for the object (see ‘Details’); ifomitted search as if the name of the object appeared unquoted in anexpression.
the mode or type of object sought: see the‘Details’ section.
should the enclosing frames of the environment besearched?
For <code>mget</code>, a <code>list</code> of values tobe used if the item is not found: it will be coerced to a list ifnecessary.<br>For <code>dynGet</code> any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, e.g., a call to<code>stop()</code>.
integer specifying the minimal frame number to lookinto.
numeric or character arguments (see Note).
a logical indicating whether missing values should beremoved.
a formal argument.
numeric.  Desired length of the output vector,inputs being recycled as needed.
numeric vector.
numeric vector.
numeric vector.
numeric vector.
an object, probably of mode <code>complex</code>.
an object of mode <code>complex</code>, or one of a class for whicha methods has been defined.
further arguments passed to or from other methods.
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
a character string giving the desired mode or‘storage mode’ (type) of the object.
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
a character string giving the desired mode or‘storage mode’ (type) of the object.
an object inheriting from class <code>"POSIXt"</code> or <code>"Date"</code>.
logical vector (possibly recycled).  Should the names beabbreviated?
an length-one object inheriting from class<code>"POSIXt"</code> or <code>"Date"</code>.
arguments for other methods.
an object inheriting from class <code>"POSIXt"</code> or <code>"Date"</code>.
logical vector (possibly recycled).  Should the names beabbreviated?
an length-one object inheriting from class<code>"POSIXt"</code> or <code>"Date"</code>.
arguments for other methods.
an object inheriting from class <code>"POSIXt"</code> or <code>"Date"</code>.
logical vector (possibly recycled).  Should the names beabbreviated?
an length-one object inheriting from class<code>"POSIXt"</code> or <code>"Date"</code>.
arguments for other methods.
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object
an appropriate named <code>list</code> of attributes, or<code>NULL</code>.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
a character vector of up to the same length as <code>x</code>, or<code>NULL</code>.
an object to be printed or summarized from one of thedate-time classes.
for timezone formatting, passed to <code>format.POSIXct</code>.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
number of significant digits for the computations:should be high enough to represent the least important time unitexactly.
further arguments to be passed from or to other methods.
date-time objects
date-time objects or character vectors.  (Charactervectors are converted by <code>as.POSIXct</code>.)
a numeric vector (in seconds)
one of <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>or <code>&gt;=</code>.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
a character vector of up to the same length as <code>x</code>, or<code>NULL</code>.
an object to be printed or summarized from one of thedate-time classes.
for timezone formatting, passed to <code>format.POSIXct</code>.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
number of significant digits for the computations:should be high enough to represent the least important time unitexactly.
further arguments to be passed from or to other methods.
date-time objects
date-time objects or character vectors.  (Charactervectors are converted by <code>as.POSIXct</code>.)
a numeric vector (in seconds)
one of <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>or <code>&gt;=</code>.
string or namespace environment.
logical.
environment.
namespace environment.
character vector.
optional character vector.
namespace environment.
string naming the package/namespace to load.
vector of package names parallel to <code>generics</code>.
character vector specifying library.
logical.
character.
character.
environment.
a 3-column character matrix.
character.
any object.
character arguments.
the methods table name.
symbol: name of namespace
character vector naming symbols to exclude from theimport, particularly useful when <code>vars</code> is missing.
string or namespace environment.
logical.
environment.
namespace environment.
character vector.
optional character vector.
namespace environment.
string naming the package/namespace to load.
vector of package names parallel to <code>generics</code>.
character vector specifying library.
logical.
character.
character.
environment.
a 3-column character matrix.
character.
any object.
character arguments.
the methods table name.
symbol: name of namespace
character vector naming symbols to exclude from theimport, particularly useful when <code>vars</code> is missing.
string or namespace environment.
logical.
environment.
namespace environment.
character vector.
optional character vector.
namespace environment.
string naming the package/namespace to load.
vector of package names parallel to <code>generics</code>.
character vector specifying library.
logical.
character.
character.
environment.
a 3-column character matrix.
character.
any object.
character arguments.
the methods table name.
symbol: name of namespace
character vector naming symbols to exclude from theimport, particularly useful when <code>vars</code> is missing.
string or namespace environment.
logical.
environment.
namespace environment.
character vector.
optional character vector.
namespace environment.
string naming the package/namespace to load.
vector of package names parallel to <code>generics</code>.
character vector specifying library.
logical.
character.
character.
environment.
a 3-column character matrix.
character.
any object.
character arguments.
the methods table name.
symbol: name of namespace
character vector naming symbols to exclude from theimport, particularly useful when <code>vars</code> is missing.
string or namespace environment.
logical.
environment.
namespace environment.
character vector.
optional character vector.
namespace environment.
string naming the package/namespace to load.
vector of package names parallel to <code>generics</code>.
character vector specifying library.
logical.
character.
character.
environment.
a 3-column character matrix.
character.
any object.
character arguments.
the methods table name.
symbol: name of namespace
character vector naming symbols to exclude from theimport, particularly useful when <code>vars</code> is missing.
character vector, or a vector to be coerced to a charactervector.  Giving a factor is an error.
character string: partial matching to one of<code>c("bytes", "chars", "width")</code>.  See ‘Details’.
logical: should <code>NA</code> be returned for invalidmultibyte strings or <code>"bytes"</code>-encoded strings (rather thanthrowing an error)?
logical: should <code>NA</code> be returned when<code>x</code> is <code>NA</code>?  If false, <code>nchar()</code> returns<code>2</code>, as that is the number of printing characters used whenstrings are written to output, and <code>nzchar()</code> is <code>TRUE</code>.  Thedefault for <code>nchar()</code>, <code>NA</code>, means to use <code>keepNA = TRUE</code>unless <code>type</code> is <code>"width"</code>.
a vector, array, data frame, or <code>NULL</code>.
a vector, array, data frame, or <code>NULL</code>.
a function of the appropriate arity (binary for<code>Reduce</code>, unary for <code>Filter</code>, <code>Find</code> and<code>Position</code>, <i>k</i>-ary for <code>Map</code> if this is called with<i>k</i> arguments).  An arbitrary predicate function for<code>Negate</code>.
a vector.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object of the same kind as the elements of<code>x</code>.
a logical indicating whether to proceed from left toright (default) or from right to left.
a logical indicating whether the successive reducecombinations should be accumulated.  By default, only the finalcombination is used.
the value to be returned in the case when“no match” (no element satisfying the predicate) is found.
vectors.
a <code>function</code>, a <code>formula</code>, or<code>NULL</code>, which is the default.
an environment to associate with the function
an arbitrary <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
a logical, if <code>TRUE</code> the environment will use a hash table.
an environment to be used as the enclosure of theenvironment created.
an environment
an integer specifying the initial size for a hashedenvironment.  An internal default value will be used if<code>size</code> is <code>NA</code> or zero.  This argument is ignored if<code>hash</code> is <code>FALSE</code>.
A length-one logical vector that is not <code>NA</code>.Conditions of length greater than one are currently accepted with awarning, but only the first element is used.  An error is signalledinstead when the environment variable <span class="env">_R_CHECK_LENGTH_1_CONDITION_</span>is set to true.  Other types are coerced to logicalif possible, ignoring any class.
A syntactical name for a variable.
An expression evaluating to a vector (including a list andan expression) or to a pairlist or <code>NULL</code>.  Afactor value will be coerced to a character vector.  As from <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>4.0.0 this can be a long vector.
An <em>expression</em> in a formal sense.  This is either asimple expression or a so-called <em>compound expression</em>, usuallyof the form <code>{ expr1 ; expr2 }</code>.
a character string naming a function (and not abuilt-in operator).  Required for <code>UseMethod</code>.
for <code>UseMethod</code>: an object whose class willdetermine the method to be dispatched.  Defaults to the firstargument of the enclosing function.
further arguments to be passed to the next method.
One or more character vectors.
The ‘domain’ for the translation.
a non-negative integer.
the message to be used in English for <code>n = 1</code>.
the message to be used in English for <code>n = 0, 2, 3, ...</code>.
The directory in which to find translated messagecatalogs for the domain.
an object, usually a factor.
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, typically a vector of<code>character</code> strings.
optional <code>logical</code> eventually to be passed to<code>print()</code>, used by <code>print.default()</code>, indicatingwhether or not strings should be right aligned.
an object of class <code>"noquote"</code>.
further options passed to next methods, such as <code>print</code>.
for compatibility with the generic <code>c</code> function.
numeric matrix; note that packages such as <a href="https://CRAN.R-project.org/package=Matrix"><span class="pkg">Matrix</span></a>define more <code>norm()</code> methods.
character string, specifying the <em>type</em> of matrixnorm to be computed.A character indicating the type of norm desired.

specifies the <b>o</b>ne norm,(maximum absolute column sum);
specifies the <b>i</b>nfinity norm (maximumabsolute row sum);
specifies the <b>F</b>robenius norm (theEuclidean norm of <code>x</code> treated as if it were a vector);
specifies the <b>m</b>aximum modulus ofall the elements in <code>x</code>; and
specifies the “spectral” or 2-norm, whichis the largest singular value (<code>svd</code>) of <code>x</code>.
The default is <code>"O"</code>.  Only the first character of<code>type[1]</code> is used.
character vector of file paths.
the separator to be used on Windows – ignoredelsewhere.  Must be one of <code>c("/", "\\")</code>.
logical: if <code>TRUE</code> then an error is given if the resultcannot be determined; if <code>NA</code> then a warning.
a vector, array, data frame, or <code>NULL</code>.
a vector, array, data frame, or <code>NULL</code>.
logical: if true all connections, including closed onesand the standard ones are displayed.  If false only open user-createdconnections are included.
integer: a row number of the table given by<code>showConnections</code>.
a connection.
A non-negative integer specifying the desired length.Double values will be coerced to integer:supplying an argument of length other than one is an error.
object to be coerced or tested.
further arguments passed to or from other methods.
a character vector with suitable numeric version strings (see‘Details’); for <code>package_version</code>, alternatively an Rversion object as obtained by <code>R.version</code>.
a logical indicating whether invalid numeric versionsshould results in an error (default) or not.
object to be converted or shifted.
logical: should the conversion be to a singlecharacter string or multiple individual characters?
the number of bits to shift.  Positive numbers shift rightand negative numbers shift left: allowed values are <code>-8 ... 8</code>.
the result type, partially matched.
object to be converted or shifted.
logical: should the conversion be to a singlecharacter string or multiple individual characters?
the number of bits to shift.  Positive numbers shift rightand negative numbers shift left: allowed values are <code>-8 ... 8</code>.
the result type, partially matched.
character vector, or a vector to be coerced to a charactervector.  Giving a factor is an error.
character string: partial matching to one of<code>c("bytes", "chars", "width")</code>.  See ‘Details’.
logical: should <code>NA</code> be returned for invalidmultibyte strings or <code>"bytes"</code>-encoded strings (rather thanthrowing an error)?
logical: should <code>NA</code> be returned when<code>x</code> is <code>NA</code>?  If false, <code>nchar()</code> returns<code>2</code>, as that is the number of printing characters used whenstrings are written to output, and <code>nzchar()</code> is <code>TRUE</code>.  Thedefault for <code>nchar()</code>, <code>NA</code>, means to use <code>keepNA = TRUE</code>unless <code>type</code> is <code>"width"</code>.
which environment to use in listing the available objects.Defaults to the <em>current</em> environment.  Although called<code>name</code> for back compatibility, in fact this argument canspecify the environment in any form; see the ‘Details’ section.
an alternative argument to <code>name</code> for specifying theenvironment as a position in the search list.  Mostly there forback compatibility.
an alternative argument to <code>name</code> for specifying theenvironment.  Mostly there for back compatibility.
a logical value.  If <code>TRUE</code>, allobject names are returned.  If <code>FALSE</code>, names which begin with a<span class="samp">.</span> are omitted.
an optional regular expression.  Only namesmatching <code>pattern</code> are returned.  <code>glob2rx</code> can beused to convert wildcard patterns to regular expressions.
logical indicating if the resulting<code>character</code> should be sorted alphabetically.  Note thatthis is part of <code>ls()</code> may take most of the time.
a <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object
a character vector naming classes.  <code>value</code>can also be <code>NULL</code>.
logical affecting return value: see ‘Details’.
a <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object
a character vector naming classes.  <code>value</code>can also be <code>NULL</code>.
logical affecting return value: see ‘Details’.
logical: defunct: ignored, with a warning for false values.
The time-zone database to be used: the default is to tryknown locations until one is found.
an expression to be executed.
if TRUE, add <code>expr</code> to be executed after any previouslyset expressions (or before if <code>after</code> is FALSE); otherwise (thedefault) <code>expr</code> will overwrite any previously set expressions.
if <code>add</code> is TRUE and <code>after</code> is FALSE, then<code>expr</code> will be added on top of the expressions that were alreadyregistered. The resulting last in first out order is useful for freeingor closing resources in reverse order.
character string.  A description of the connection:see ‘Details’.
character string.  A description of how to open the connection(if it should be opened initially).  See section ‘Modes’ forpossible values.
logical.  See the ‘Blocking’ section.
The name of the encoding to be assumed.  See the‘Encoding’ section.
logical.  If true, a ‘raw’ interface is used whichwill be more suitable for arguments which are not regular files,e.g. character devices.  This suppresses the check for a compressedfile when opening for text-mode reading, and asserts that the‘file’ may not be seekable.
character string, partially matched to<code>c("default", "internal", "wininet", "libcurl")</code>:see ‘Details’.
named character vector of HTTP headers to use in HTTPrequests.  It is ignored for non-HTTP URLs.  The <code>User-Agent</code>header, coming from the <code>HTTPUserAgent</code> option (see<code>options</code>) is used as the first header, automatically.
integer in 0–9.  The amount of compression to beapplied when writing, from none to maximal available.  For<code>xzfile</code> can also be negative: see the ‘Compression’section.
numeric: the timeout (in seconds) to be used for thisconnection.  Beware that some OSes may treat very large values aszero: however the POSIX standard requires values up to 31 days to besupported.
optional character vector with options. Currently only<code>"no-delay"</code> is supported on TCP sockets.
a filename within a zip file.
character string.  Host name for the port.
integer.  The TCP port number.
logical.  Should the socket be a client or a server?
a server socket listening for connections.
a connection.
character string.  Currently ignored.
character string.  Empty or <code>"read"</code> or <code>"write"</code>,partial matches allowed.
arguments passed to or from other methods.
character string.  A description of the connection:see ‘Details’.
character string.  A description of how to open the connection(if it should be opened initially).  See section ‘Modes’ forpossible values.
logical.  See the ‘Blocking’ section.
The name of the encoding to be assumed.  See the‘Encoding’ section.
logical.  If true, a ‘raw’ interface is used whichwill be more suitable for arguments which are not regular files,e.g. character devices.  This suppresses the check for a compressedfile when opening for text-mode reading, and asserts that the‘file’ may not be seekable.
character string, partially matched to<code>c("default", "internal", "wininet", "libcurl")</code>:see ‘Details’.
named character vector of HTTP headers to use in HTTPrequests.  It is ignored for non-HTTP URLs.  The <code>User-Agent</code>header, coming from the <code>HTTPUserAgent</code> option (see<code>options</code>) is used as the first header, automatically.
integer in 0–9.  The amount of compression to beapplied when writing, from none to maximal available.  For<code>xzfile</code> can also be negative: see the ‘Compression’section.
numeric: the timeout (in seconds) to be used for thisconnection.  Beware that some OSes may treat very large values aszero: however the POSIX standard requires values up to 31 days to besupported.
optional character vector with options. Currently only<code>"no-delay"</code> is supported on TCP sockets.
a filename within a zip file.
character string.  Host name for the port.
integer.  The TCP port number.
logical.  Should the socket be a client or a server?
a server socket listening for connections.
a connection.
character string.  Currently ignored.
character string.  Empty or <code>"read"</code> or <code>"write"</code>,partial matches allowed.
arguments passed to or from other methods.
 The name of a file. 
 The character encoding to assume for the file. 
 The encoding with which to make strings: see the<code>encoding</code> argument of <code>parse</code>.
 A character vector of source lines.  Other <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> objectswill be coerced to character. 
 The timestamp to use on a copy of a file. 
 Is this <code>srcfilecopy</code> known to come from a file system file? 
 A <code>srcfile</code> object. 
 Line numbers. 
 A vector of four, six or eight values giving a source location; see‘Details’.
 An object of the appropriate class. 
 Whether to read the <code>srcfile</code> to obtain thetext of a <code>srcref</code>. 
 An optional second <code>srcref</code> object to mark the endof the character range. 
 Additional arguments to the methods; these will be ignored. 
 The name of a file. 
 The character encoding to assume for the file. 
 The encoding with which to make strings: see the<code>encoding</code> argument of <code>parse</code>.
 A character vector of source lines.  Other <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> objectswill be coerced to character. 
 The timestamp to use on a copy of a file. 
 Is this <code>srcfilecopy</code> known to come from a file system file? 
 A <code>srcfile</code> object. 
 Line numbers. 
 A vector of four, six or eight values giving a source location; see‘Details’.
 An object of the appropriate class. 
 Whether to read the <code>srcfile</code> to obtain thetext of a <code>srcref</code>. 
 An optional second <code>srcref</code> object to mark the endof the character range. 
 Additional arguments to the methods; these will be ignored. 
 The name of a file. 
 The character encoding to assume for the file. 
 The encoding with which to make strings: see the<code>encoding</code> argument of <code>parse</code>.
 A character vector of source lines.  Other <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> objectswill be coerced to character. 
 The timestamp to use on a copy of a file. 
 Is this <code>srcfilecopy</code> known to come from a file system file? 
 A <code>srcfile</code> object. 
 Line numbers. 
 A vector of four, six or eight values giving a source location; see‘Details’.
 An object of the appropriate class. 
 Whether to read the <code>srcfile</code> to obtain thetext of a <code>srcref</code>. 
 An optional second <code>srcref</code> object to mark the endof the character range. 
 Additional arguments to the methods; these will be ignored. 
objects.
further arguments passed to methods.
logical: should missing values be removed?
date objects
date objects or character vectors.  (Charactervectors are converted by <code>as.Date</code>.)
a numeric vector (in days) <em>or</em> an object of class<code>"difftime"</code>, rounded to the nearest whole day.
One of <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>or <code>&gt;=</code>.
date-time or date objects.
an optional time zone specification to be used for theconversion, mainly for <code>"POSIXlt"</code> objects.
character string.  Units in which the results aredesired.  Can be abbreviated.
character string.  Like <code>units</code>, except thatabbreviations are not allowed.
character string or numeric value specifying a time interval.
character specifying the format of <code>tim</code>: see<code>strptime</code>.  The default is a locale-specific time format.
an object inheriting from class <code>"difftime"</code>.
arguments to be passed to or from other methods.
a vector of data, usually taking a small number of distinctvalues.
an optional vector of the unique values (as character strings)that <code>x</code> might have taken.  The default is the unique set ofvalues taken by <code>as.character(x)</code>, sorted intoincreasing order <em>of <code>x</code></em>.  Note that this set can bespecified as smaller than <code>sort(unique(x))</code>.
<em>either</em> an optional character vector oflabels for the levels (in the same order as <code>levels</code> afterremoving those in <code>exclude</code>), <em>or</em> a character string oflength 1.  Duplicated values in <code>labels</code> can be used to mapdifferent values of <code>x</code> to the same factor level.
a vector of values to be excluded when forming theset of levels.  This may be factor with the same level set as <code>x</code>or should be a <code>character</code>.
logical flag to determine if the levels should be regardedas ordered (in the order given).
an upper bound on the number of levels; see ‘Details’.
(in <code>ordered(.)</code>): any of the above, apart from<code>ordered</code> itself.
only add an <code>NA</code> level if it is used, i.e.if <code>any(is.na(x))</code>.
a character vector with suitable numeric version strings (see‘Details’); for <code>package_version</code>, alternatively an Rversion object as obtained by <code>R.version</code>.
a logical indicating whether invalid numeric versionsshould results in an error (default) or not.
a vector of data, usually taking a small number of distinctvalues.
an optional vector of the unique values (as character strings)that <code>x</code> might have taken.  The default is the unique set ofvalues taken by <code>as.character(x)</code>, sorted intoincreasing order <em>of <code>x</code></em>.  Note that this set can bespecified as smaller than <code>sort(unique(x))</code>.
<em>either</em> an optional character vector oflabels for the levels (in the same order as <code>levels</code> afterremoving those in <code>exclude</code>), <em>or</em> a character string oflength 1.  Duplicated values in <code>labels</code> can be used to mapdifferent values of <code>x</code> to the same factor level.
a vector of values to be excluded when forming theset of levels.  This may be factor with the same level set as <code>x</code>or should be a <code>character</code>.
logical flag to determine if the levels should be regardedas ordered (in the order given).
an upper bound on the number of levels; see ‘Details’.
(in <code>ordered(.)</code>): any of the above, apart from<code>ordered</code> itself.
only add an <code>NA</code> level if it is used, i.e.if <code>any(is.na(x))</code>.
an object to be printed or summarized from one of thedate-time classes.
for timezone formatting, passed to <code>format.POSIXct</code>.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
number of significant digits for the computations:should be high enough to represent the least important time unitexactly.
further arguments to be passed from or to other methods.
date-time objects
date-time objects or character vectors.  (Charactervectors are converted by <code>as.POSIXct</code>.)
a numeric vector (in seconds)
one of <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>or <code>&gt;=</code>.
any options can be defined, using <code>name = value</code>.However, only the ones below are used in base <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>.

Options can also be passed by giving a single unnamed argument whichis a named list.
a character string holding an option name.
if the specified option is not set in the options list,this value is returned.  This facilitates retrieving an option andchecking whether it is set and setting it separately if not.
a sequence of numeric, complex, character or logicalvectors, all of the same length, or a classed <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
an atomic vector for <code>method</code>s <code>"shell"</code> and<code>"quick"</code>.  When <code>x</code> is a non-atomic <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, the default<code>"auto"</code> and <code>"radix"</code> methods may work if <code>order(x,..)</code>does.
vector of indices for partial sorting.(Non-<code>NULL</code> values are not implemented.)
logical.  Should the sort order be increasing ordecreasing? For the <code>"radix"</code> method, this can be a vector oflength equal to the number of arguments in <code>...</code>. For theother methods, it must be length one.
for controlling the treatment of <code>NA</code>s.If <code>TRUE</code>, missing values in the data are put last; if<code>FALSE</code>, they are put first; if <code>NA</code>, they are removed(see ‘Note’.)
the method to be used: partial matches are allowed.  Thedefault (<code>"auto"</code>) implies <code>"radix"</code> for short numeric vectors,integer vectors, logical vectors and factors.Otherwise, it implies <code>"shell"</code>.For details of methods <code>"shell"</code>, <code>"quick"</code>, and <code>"radix"</code>,see the help for <code>sort</code>.
a vector of data, usually taking a small number of distinctvalues.
an optional vector of the unique values (as character strings)that <code>x</code> might have taken.  The default is the unique set ofvalues taken by <code>as.character(x)</code>, sorted intoincreasing order <em>of <code>x</code></em>.  Note that this set can bespecified as smaller than <code>sort(unique(x))</code>.
<em>either</em> an optional character vector oflabels for the levels (in the same order as <code>levels</code> afterremoving those in <code>exclude</code>), <em>or</em> a character string oflength 1.  Duplicated values in <code>labels</code> can be used to mapdifferent values of <code>x</code> to the same factor level.
a vector of values to be excluded when forming theset of levels.  This may be factor with the same level set as <code>x</code>or should be a <code>character</code>.
logical flag to determine if the levels should be regardedas ordered (in the order given).
an upper bound on the number of levels; see ‘Details’.
(in <code>ordered(.)</code>): any of the above, apart from<code>ordered</code> itself.
only add an <code>NA</code> level if it is used, i.e.if <code>any(is.na(x))</code>.
First and second arguments for function <code>FUN</code>.Typically a vector or array.
a function to use on the outer products, found <em>via</em><code>match.fun</code> (except for the special case <code>"*"</code>).
optional arguments to be passed to <code>FUN</code>.
a character vector with suitable numeric version strings (see‘Details’); for <code>package_version</code>, alternatively an Rversion object as obtained by <code>R.version</code>.
a logical indicating whether invalid numeric versionsshould results in an error (default) or not.
character string: the hook name
character string: the package/namespace name
character string: an event for the package.  Can be abbreviated.
A function or a list of functions, or for <code>action = "replace"</code>, <code>NULL</code> 
The action to be taken.  Can be abbreviated.
string or namespace environment.
logical.
environment.
namespace environment.
character vector.
optional character vector.
namespace environment.
string naming the package/namespace to load.
vector of package names parallel to <code>generics</code>.
character vector specifying library.
logical.
character.
character.
environment.
a 3-column character matrix.
character.
any object.
character arguments.
the methods table name.
symbol: name of namespace
character vector naming symbols to exclude from theimport, particularly useful when <code>vars</code> is missing.
character vector: the names of packages.
a character vector describing the location of <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>library trees to search through, or <code>NULL</code>.  The default valueof <code>NULL</code> corresponds to checking the loaded namespace, thenall libraries currently known in <code>.libPaths()</code>.
logical.  Should this not give warnings or an errorif the package is not found?
a logical.  If <code>TRUE</code>, additional diagnostics areprinted, notably when a package is found more than once.
call expression.
zero or more objects which can be coerced to character(and which are pasted together with no separator) or (for<code>message</code> only) a single condition object.
see <code>gettext</code>.  If <code>NA</code>, messages willnot be translated, see also the note in <code>stop</code>.
logical: should messages given as a character stringhave a newline appended?
expression to evaluate.
character, indicating which classes of messages shouldbe suppressed.
object to be converted or shifted.
logical: should the conversion be to a singlecharacter string or multiple individual characters?
the number of bits to shift.  Positive numbers shift rightand negative numbers shift left: allowed values are <code>-8 ... 8</code>.
the result type, partially matched.
objects, possibly named.
object to be coerced or tested.
a logical indicating whether to copy all values or(default) only those whose names do not begin with a dot.
a logical indicating whether the <code>names</code> ofthe resulting list should be sorted (increasingly).  Note that thisis somewhat costly, but may be useful for comparison of environments.
a <code>function</code>, a <code>formula</code>, or<code>NULL</code>, which is the default.
an environment to associate with the function
an arbitrary <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
a logical, if <code>TRUE</code> the environment will use a hash table.
an environment to be used as the enclosure of theenvironment created.
an environment
an integer specifying the initial size for a hashedenvironment.  An internal default value will be used if<code>size</code> is <code>NA</code> or zero.  This argument is ignored if<code>hash</code> is <code>FALSE</code>.
a <code>function</code>, a <code>formula</code>, or<code>NULL</code>, which is the default.
an environment to associate with the function
an arbitrary <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
a logical, if <code>TRUE</code> the environment will use a hash table.
an environment to be used as the enclosure of theenvironment created.
an environment
an integer specifying the initial size for a hashedenvironment.  An internal default value will be used if<code>size</code> is <code>NA</code> or zero.  This argument is ignored if<code>hash</code> is <code>FALSE</code>.
the frame number if non-negative, the number of framesto go back if negative.
the number of generations to go back.  (See the‘Details’ section.)
a connection, or a character string giving the name of afile or a URL to read the expressions from.If <code>file</code> is <code>""</code> and <code>text</code> is missing or <code>NULL</code>then input is taken from the console.
integer (or coerced to integer).  The maximum number ofexpressions to parse.  If <code>n</code> is <code>NULL</code> or negative or<code>NA</code> the input is parsed in its entirety.
character vector.  The text to parse.  Elements are treatedas if they were lines of a file.  Other <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> objects will be coercedto character if possible.
the prompt to print when parsing from the keyboard.<code>NULL</code> means to use <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>'s prompt, <code>getOption("prompt")</code>.
a logical value; if <code>TRUE</code>, keepsource reference information.
<code>NULL</code>, a character vector, or a<code>srcfile</code> object.  See the ‘Details’ section.
encoding to be assumed for input strings.  If thevalue is <code>"latin1"</code> or <code>"UTF-8"</code> it is used to markcharacter strings as known to be in Latin-1 or UTF-8: it is not usedto re-encode the input.  To do the latter, specify the encoding aspart of the connection <code>con</code> or <em>via</em><code>options(encoding=)</code>: see the example under<code>file</code>. Arguments <code>encoding = "latin1"</code> and <code>encoding = "UTF-8"</code> are ignored with a warning when runningin a MBCS locale.
a <code>character</code> vector of length <code>1</code>, i.e., a“string”.
string or namespace environment.
logical.
environment.
namespace environment.
character vector.
optional character vector.
namespace environment.
string naming the package/namespace to load.
vector of package names parallel to <code>generics</code>.
character vector specifying library.
logical.
character.
character.
environment.
a 3-column character matrix.
character.
any object.
character arguments.
the methods table name.
symbol: name of namespace
character vector naming symbols to exclude from theimport, particularly useful when <code>vars</code> is missing.
one or more <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> objects, to be converted to character vectors.
a character string to separate the terms.  Not<code>NA_character_</code>.
an optional character string to separate the results.  Not<code>NA_character_</code>.
<code>logical</code> indicating if zero-lengthcharacter arguments should lead to the zero-length<code>character(0)</code> after the <code>sep</code>-phase (which turns into<code>""</code> in the <code>collapse</code>-phase, i.e., when <code>collapse</code> isnot <code>NULL</code>).
one or more <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> objects, to be converted to character vectors.
a character string to separate the terms.  Not<code>NA_character_</code>.
an optional character string to separate the results.  Not<code>NA_character_</code>.
<code>logical</code> indicating if zero-lengthcharacter arguments should lead to the zero-length<code>character(0)</code> after the <code>sep</code>-phase (which turns into<code>""</code> in the <code>collapse</code>-phase, i.e., when <code>collapse</code> isnot <code>NULL</code>).
character vector containing one or more path names.
character vector: the names of packages.
a character vector describing the location of <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>library trees to search through, or <code>NULL</code>.  The default valueof <code>NULL</code> corresponds to checking the loaded namespace, thenall libraries currently known in <code>.libPaths()</code>.
logical.  Should this not give warnings or an errorif the package is not found?
a logical.  If <code>TRUE</code>, additional diagnostics areprinted, notably when a package is found more than once.
call expression.
character string.  A description of the connection:see ‘Details’.
character string.  A description of how to open the connection(if it should be opened initially).  See section ‘Modes’ forpossible values.
logical.  See the ‘Blocking’ section.
The name of the encoding to be assumed.  See the‘Encoding’ section.
logical.  If true, a ‘raw’ interface is used whichwill be more suitable for arguments which are not regular files,e.g. character devices.  This suppresses the check for a compressedfile when opening for text-mode reading, and asserts that the‘file’ may not be seekable.
character string, partially matched to<code>c("default", "internal", "wininet", "libcurl")</code>:see ‘Details’.
named character vector of HTTP headers to use in HTTPrequests.  It is ignored for non-HTTP URLs.  The <code>User-Agent</code>header, coming from the <code>HTTPUserAgent</code> option (see<code>options</code>) is used as the first header, automatically.
integer in 0–9.  The amount of compression to beapplied when writing, from none to maximal available.  For<code>xzfile</code> can also be negative: see the ‘Compression’section.
numeric: the timeout (in seconds) to be used for thisconnection.  Beware that some OSes may treat very large values aszero: however the POSIX standard requires values up to 31 days to besupported.
optional character vector with options. Currently only<code>"no-delay"</code> is supported on TCP sockets.
a filename within a zip file.
character string.  Host name for the port.
integer.  The TCP port number.
logical.  Should the socket be a client or a server?
a server socket listening for connections.
a connection.
character string.  Currently ignored.
character string.  Empty or <code>"read"</code> or <code>"write"</code>,partial matches allowed.
arguments passed to or from other methods.
the coordinates of points in the plot. Alternatively, asingle plotting structure, function or <em>any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object with a<code>plot</code> method</em> can be provided.
the y coordinates of points in the plot, <em>optional</em>if <code>x</code> is an appropriate structure.
Arguments to be passed to methods, such asgraphical parameters (see <code>par</code>).Many methods will accept the following arguments:

what type of plot should be drawn.  Possible types are

<code>"p"</code> for <b>p</b>oints,
<code>"l"</code> for <b>l</b>ines,
<code>"b"</code> for <b>b</b>oth,
<code>"c"</code> for the lines part alone of <code>"b"</code>,
<code>"o"</code> for both ‘<b>o</b>verplotted’,
<code>"h"</code> for ‘<b>h</b>istogram’ like (or‘high-density’) vertical lines,
<code>"s"</code> for stair <b>s</b>teps,
<code>"S"</code> for other <b>s</b>teps, see ‘Details’ below,
<code>"n"</code> for no plotting.
All other <code>type</code>s give a warning or an error; using, e.g.,<code>type = "punkte"</code> being equivalent to <code>type = "p"</code> for Scompatibility.  Note that some methods,e.g. <code>plot.factor</code>, do not accept this.
an overall title for the plot: see <code>title</code>.
a sub title for the plot: see <code>title</code>.
a title for the x axis: see <code>title</code>.
a title for the y axis: see <code>title</code>.
the <i>y/x</i> aspect ratio,see <code>plot.window</code>.
the values to be matched: converted to a character vector by<code>as.character</code>.  Long vectors are supported.
the values to be matched against: converted to a charactervector.  Long vectors are not supported.
the value to be returned at non-matching or multiplypartially matching positions.  Note that it is coerced to <code>integer</code>.
should elements be in <code>table</code> be used morethan once?
numeric or character arguments (see Note).
a logical indicating whether missing values should beremoved.
numeric or character arguments (see Note).
a logical indicating whether missing values should beremoved.
numeric or character arguments (see Note).
a logical indicating whether missing values should beremoved.
numeric or character arguments (see Note).
a logical indicating whether missing values should beremoved.
the vector of polynomial coefficients in increasing order.
an integer between <code>1</code> and <code>length(search())</code>, the lengthof the search path, or <code>-1</code>.
a function of the appropriate arity (binary for<code>Reduce</code>, unary for <code>Filter</code>, <code>Find</code> and<code>Position</code>, <i>k</i>-ary for <code>Map</code> if this is called with<i>k</i> arguments).  An arbitrary predicate function for<code>Negate</code>.
a vector.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object of the same kind as the elements of<code>x</code>.
a logical indicating whether to proceed from left toright (default) or from right to left.
a logical indicating whether the successive reducecombinations should be accumulated.  By default, only the finalcombination is used.
the value to be returned in the case when“no match” (no element satisfying the predicate) is found.
vectors.
an object coercible to numeric by <code>as.numeric</code>.
integer giving the <em>desired</em> number ofintervals.  Non-integer values are rounded down.
nonnegative integer giving the <em>minimal</em> number ofintervals.  If <code>min.n == 0</code>, <code>pretty(.)</code> may return asingle value.
positive number, a factor (smaller than one)by which a default scale is shrunk in the case when<code>range(x)</code> is very small (usually 0).
non-negative numeric, typically <i>&gt; 1</i>.The interval unit is determined as {1,2,5,10} times <code>b</code>, apower of 10.  Larger <code>high.u.bias</code> values favor larger units.
non-negative numericmultiplier favoring factor 5 over 2.  Default and ‘optimal’:<code>u5.bias = .5 + 1.5*high.u.bias</code>.
integer code, one of {0,1,2}. If non-0, an<em>epsilon correction</em> is made at the boundaries such thatthe result boundaries will be outside <code>range(x)</code>; in the<em>small</em> case, the correction is only done if <code>eps.correct       &gt;= 2</code>.
further arguments for methods.
an object coercible to numeric by <code>as.numeric</code>.
integer giving the <em>desired</em> number ofintervals.  Non-integer values are rounded down.
nonnegative integer giving the <em>minimal</em> number ofintervals.  If <code>min.n == 0</code>, <code>pretty(.)</code> may return asingle value.
positive number, a factor (smaller than one)by which a default scale is shrunk in the case when<code>range(x)</code> is very small (usually 0).
non-negative numeric, typically <i>&gt; 1</i>.The interval unit is determined as {1,2,5,10} times <code>b</code>, apower of 10.  Larger <code>high.u.bias</code> values favor larger units.
non-negative numericmultiplier favoring factor 5 over 2.  Default and ‘optimal’:<code>u5.bias = .5 + 1.5*high.u.bias</code>.
integer code, one of {0,1,2}. If non-0, an<em>epsilon correction</em> is made at the boundaries such thatthe result boundaries will be outside <code>range(x)</code>; in the<em>small</em> case, the correction is only done if <code>eps.correct       &gt;= 2</code>.
further arguments for methods.
an atomic numerical or character object, possibly<code>complex</code> only for <code>prettyNum()</code>, typically avector of real numbers.  Any class is discarded, with a warning.
the desired number of digits after the decimalpoint (<code>format = "f"</code>) or <em>significant</em> digits(<code>format = "g"</code>, <code>= "e"</code> or <code>= "fg"</code>).

Default: 2 for integer, 4 for real numbers.  If less than 0,the C default of 6 digits is used.  If specified as more than 50, 50will be used with a warning unless <code>format = "f"</code> where it islimited to typically 324. (Not more than 15–21 digits need beaccurate, depending on the OS and compiler used.  This limit isjust a precaution against segfaults in the underlying C runtime.)
the total field width; if both <code>digits</code> and<code>width</code> are unspecified, <code>width</code> defaults to 1,otherwise to <code>digits + 1</code>.  <code>width = 0</code> will use<code>width = digits</code>, <code>width &lt; 0</code> means leftjustify the number in this field (equivalent to <code>flag = "-"</code>).If necessary, the result will have more characters than<code>width</code>.  For character data this is interpreted in characters(not bytes nor display width).
equal to <code>"d"</code>  (for integers), <code>"f"</code>,<code>"e"</code>, <code>"E"</code>, <code>"g"</code>, <code>"G"</code>, <code>"fg"</code> (forreals), or <code>"s"</code> (for strings).  Default is <code>"d"</code> forintegers, <code>"g"</code> for reals.

<code>"f"</code> gives numbers in the usual<code>xxx.xxx</code> format;  <code>"e"</code> and <code>"E"</code> give <code>n.ddde+nn</code> or<code>n.dddE+nn</code> (scientific format); <code>"g"</code> and <code>"G"</code> put<code>x[i]</code> into scientific format only if it saves space to do so<em>and</em> drop trailing zeros and decimal point - unless <code>flag</code>contains <code>"#"</code> which keeps trailing zeros for the <code>"g", "G"</code>formats.

<code>"fg"</code> (our own hybrid format) uses fixed format as <code>"f"</code>,but <code>digits</code> as the minimum number of <em>significant</em> digits.This can lead to quite long result strings, see examples below.  Notethat unlike <code>signif</code> this prints large numbers withmore significant digits than <code>digits</code>.  Trailing zeros are<em>dropped</em> in this format, unless <code>flag</code> contains<code>"#"</code>.
for <code>formatC</code>, a character string giving aformat modifier as in Kernighan and Ritchie (1988, page 243) or theC+99 standard.

pads leading zeros;
does left adjustment,
ensures a sign in all cases, i.e., <code>"+"</code> forpositive numbers ,
if the first character is not a sign, the spacecharacter <code>" "</code> will be used instead.
specifies “an alternative output form”,specifically depending on <code>format</code>.
on some platform–locale combination, activates“thousands' grouping” for decimal conversion,
in some versions of ‘<span class="file">glibc</span>’ allow for integerconversion to use the locale's alternative output digits, if any.
There can be more than one of these flags, in any order.  Other charactersused to have no effect for <code>character</code> formatting, but signalan error since <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> 3.4.0.
<code>"double"</code> (or <code>"real"</code>), <code>"integer"</code> or<code>"character"</code>.Default: Determined from the storage mode of <code>x</code>.
character; if not empty used as mark between every<code>big.interval</code> decimals <em>before</em> (hence <code>big</code>) thedecimal point.
see <code>big.mark</code> above; defaults to 3.
character; if not empty used as mark between every<code>small.interval</code> decimals <em>after</em> (hence <code>small</code>) thedecimal point.
see <code>small.mark</code> above; defaults to 5.
the character to be used to indicate the numericdecimal point.
if <code>x</code> is <code>character</code>, thecharacter known to have been used as the numeric decimal point in<code>x</code>.
string specifying if the string widths shouldbe preserved where possible in those cases where marks(<code>big.mark</code> or <code>small.mark</code>) are added.  <code>"common"</code>,the default, corresponds to <code>format</code>-like behaviorwhereas <code>"individual"</code> is the default in<code>formatC()</code>. Value can be abbreviated.
logical, character string or <code>NULL</code> specifyingif and how <em>zeros</em> should be formatted specially.  Useful forpretty printing ‘sparse’ objects.
logical; if <code>zero.print</code> is acharacter string, indicates if the exact zero entries in <code>x</code>should be simply replaced by <code>zero.print</code>.  Otherwise,depending on the widths of the respective strings, the (formatted)zeroes are <em>partly</em> replaced by <code>zero.print</code> and thenpadded with <code>" "</code> to the right were applicable.  In that case(false <code>replace[.zero]</code>), if the <code>zero.print</code> string doesnot fit, a warning is produced (if <code>warn.non.fitting</code> is true).

This works via <code>prettyNum()</code>, which calls <code>.format.zeros(*,    replace=replace.zero)</code> three times in this case, see the ‘Details’.
logical; if it is true, <code>replace[.zero]</code> isfalse and the <code>zero.print</code> string does not fit, a<code>warning</code> is signalled.
logical, indicating if trailing zeros,i.e., <code>"0"</code> <em>after</em> the decimal mark, should be removed;also drops <code>"e+00"</code> in exponential formats.  This is simply passedto <code>prettyNum()</code>, see the ‘Details’.
optional logical, to be used when <code>x</code> is<code>"character"</code> to indicate if it stems from<code>complex</code> vector or not.  By default (<code>NA</code>),<code>x</code> is checked to ‘look like’ complex.
arguments passed to <code>format</code>.
numeric vector of the same length as <code>x</code>, typically thenumbers of which the character vector <code>x</code> is the pre-format.
an object used to select a method.
further arguments passed to or from other methods.
logical, indicating whether or not strings should beprinted with surrounding quotes.
integer, indicating how many levels should beprinted for a factor; if <code>0</code>, no extra "Levels" line will beprinted.  The default, <code>NULL</code>, entails choosing <code>max.levels</code>such that the levels print on one line of width <code>width</code>.
only used when <code>max.levels</code> is NULL, see above.
minimal number of <em>significant</em> digits, see<code>print.default</code>.
character string (or <code>NULL</code>) indicating<code>NA</code> values in printed output, see<code>print.default</code>.
character specifying how zeros (<code>0</code>) should beprinted; for sparse tables, using <code>"."</code> can produce morereadable results, similar to printing sparse matrices in <a href="https://CRAN.R-project.org/package=Matrix"><span class="pkg">Matrix</span></a>.
logical, indicating whether or not strings should beright aligned.
character indicating if strings should left- orright-justified or left alone, passed to <code>format</code>.
logical indicating if internally stored sourceshould be used for printing when present, e.g., if<code>options(keep.source = TRUE)</code> has been in use.
an object
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, normally a data frame, possibly a matrix.
a factor or a list of factors, each of length<code>nrow(data)</code>.
a function to be applied to (usually data-frame) subsets of<code>data</code>.
further arguments to <code>FUN</code>.
logical: see <code>tapply</code>.
a condition object.
call expression.
a condition object.
expression to be evaluated.
expression to be evaluated before returning or exiting.
function.
character string.
character string.
character string naming a restart.
restart object.
object.
character string naming a condition class.
additional arguments; see details below.
character string.  A description of the connection:see ‘Details’.
character string.  A description of how to open the connection(if it should be opened initially).  See section ‘Modes’ forpossible values.
logical.  See the ‘Blocking’ section.
The name of the encoding to be assumed.  See the‘Encoding’ section.
logical.  If true, a ‘raw’ interface is used whichwill be more suitable for arguments which are not regular files,e.g. character devices.  This suppresses the check for a compressedfile when opening for text-mode reading, and asserts that the‘file’ may not be seekable.
character string, partially matched to<code>c("default", "internal", "wininet", "libcurl")</code>:see ‘Details’.
named character vector of HTTP headers to use in HTTPrequests.  It is ignored for non-HTTP URLs.  The <code>User-Agent</code>header, coming from the <code>HTTPUserAgent</code> option (see<code>options</code>) is used as the first header, automatically.
integer in 0–9.  The amount of compression to beapplied when writing, from none to maximal available.  For<code>xzfile</code> can also be negative: see the ‘Compression’section.
numeric: the timeout (in seconds) to be used for thisconnection.  Beware that some OSes may treat very large values aszero: however the POSIX standard requires values up to 31 days to besupported.
optional character vector with options. Currently only<code>"no-delay"</code> is supported on TCP sockets.
a filename within a zip file.
character string.  Host name for the port.
integer.  The TCP port number.
logical.  Should the socket be a client or a server?
a server socket listening for connections.
a connection.
character string.  Currently ignored.
character string.  Empty or <code>"read"</code> or <code>"write"</code>,partial matches allowed.
arguments passed to or from other methods.
object of class <code>data.frame</code>.
optional arguments to <code>print</code> methods.
the minimum number of significant digits to be used: see<code>print.default</code>.
logical, indicating whether or not entries should beprinted with surrounding quotes.
logical, indicating whether or not strings should beright-aligned.  The default is right-alignment.
logical (or character vector), indicating whether (orwhat) row names should be printed.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
a <code>Date</code> object to be summarized or printed.
number of significant digits for the computations.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
further arguments to be passed from or to other methods.
the object to be printed.
a non-null value for <code>digits</code> specifies the minimumnumber of significant digits to be printed in values.  The default,<code>NULL</code>, uses <code>getOption("digits")</code>.  (For theinterpretation for complex numbers see <code>signif</code>.)Non-integer values will be rounded down, and only valuesgreater than or equal to 1 and no greater than 22 are accepted.
logical, indicating whether or not strings(<code>character</code>s) should be printed with surrounding quotes.
a character string which is used to indicate<code>NA</code> values in printed output, or <code>NULL</code>(see ‘Details’).
a non-negative integer <i>≤ 1024</i>,or <code>NULL</code> (meaning 1), giving the spacing between adjacentcolumns in printed vectors, matrices and arrays.
logical, indicating whether or not strings should beright aligned.  The default is left alignment.
a non-null value for <code>max</code> specifies the approximatemaximum number of entries to be printed.  The default, <code>NULL</code>,uses <code>getOption("max.print")</code>: see that help page for moredetails.
controls the maximum number of columns on a line used inprinting vectors, matrices, etc.  The default, <code>NULL</code>, uses<code>getOption("width")</code>: see that help page for moredetails including allowed values.
logical, indicating whether to use sourcereferences or copies rather than deparsing language objects.The default is to use the original source if it is available.
further arguments to be passed to or from othermethods.  They are ignored in this function.
date-time or date objects.
an optional time zone specification to be used for theconversion, mainly for <code>"POSIXlt"</code> objects.
character string.  Units in which the results aredesired.  Can be abbreviated.
character string.  Like <code>units</code>, except thatabbreviations are not allowed.
character string or numeric value specifying a time interval.
character specifying the format of <code>tim</code>: see<code>strptime</code>.  The default is a locale-specific time format.
an object inheriting from class <code>"difftime"</code>.
arguments to be passed to or from other methods.
an object used to select a method.
further arguments passed to or from other methods.
logical, indicating whether or not strings should beprinted with surrounding quotes.
integer, indicating how many levels should beprinted for a factor; if <code>0</code>, no extra "Levels" line will beprinted.  The default, <code>NULL</code>, entails choosing <code>max.levels</code>such that the levels print on one line of width <code>width</code>.
only used when <code>max.levels</code> is NULL, see above.
minimal number of <em>significant</em> digits, see<code>print.default</code>.
character string (or <code>NULL</code>) indicating<code>NA</code> values in printed output, see<code>print.default</code>.
character specifying how zeros (<code>0</code>) should beprinted; for sparse tables, using <code>"."</code> can produce morereadable results, similar to printing sparse matrices in <a href="https://CRAN.R-project.org/package=Matrix"><span class="pkg">Matrix</span></a>.
logical, indicating whether or not strings should beright aligned.
character indicating if strings should left- orright-justified or left alone, passed to <code>format</code>.
logical indicating if internally stored sourceshould be used for printing when present, e.g., if<code>options(keep.source = TRUE)</code> has been in use.
a character string or <code>DLLInfo</code> object.The character string specifies the file name of the DLLof interest, and is given without the file name extension (e.g., the‘<span class="file">.dll</span>’ or ‘<span class="file">.so</span>’) and with no directory/path information.So a file ‘<span class="file">MyPackage/libs/MyPackage.so</span>’ would be specified as<span class="samp">MyPackage</span>.

The <code>DLLInfo</code> objects can be obtained directlyin calls to <code>dyn.load</code> and  <code>library.dynam</code>,or can be found after the DLL has been loaded using<code>getLoadedDLLs</code>, which returns a list of<code>DLLInfo</code> objects (index-able by DLL file name).

The <code>DLLInfo</code> approach avoids any ambiguities related to twoDLLs having the same name but corresponding to files in differentdirectories.
a logical value.  If this is <code>TRUE</code>, the elementsof the returned lists are named using the names of the routines (asseen by R via registration or raw name).  If <code>FALSE</code>,these names are not computed and assigned to the lists.  As aresult, the call should be quicker.  The name information is alsoavailable in the <code>NativeSymbolInfo</code> objects in the lists.
a numeric or complex matrix whose spectral decomposition is tobe computed.  Logical matrices are coerced to numeric.
if <code>TRUE</code>, the matrix is assumed to be symmetric(or Hermitian if complex) and only its lower triangle (diagonalincluded) is used.  If <code>symmetric</code> is not specified,<code>isSymmetric(x)</code> is used.
if <code>TRUE</code>, only the eigenvalues are computedand returned, otherwise both eigenvalues and eigenvectors arereturned.
logical. Defunct and ignored.
an object used to select a method.
further arguments passed to or from other methods.
logical, indicating whether or not strings should beprinted with surrounding quotes.
integer, indicating how many levels should beprinted for a factor; if <code>0</code>, no extra "Levels" line will beprinted.  The default, <code>NULL</code>, entails choosing <code>max.levels</code>such that the levels print on one line of width <code>width</code>.
only used when <code>max.levels</code> is NULL, see above.
minimal number of <em>significant</em> digits, see<code>print.default</code>.
character string (or <code>NULL</code>) indicating<code>NA</code> values in printed output, see<code>print.default</code>.
character specifying how zeros (<code>0</code>) should beprinted; for sparse tables, using <code>"."</code> can produce morereadable results, similar to printing sparse matrices in <a href="https://CRAN.R-project.org/package=Matrix"><span class="pkg">Matrix</span></a>.
logical, indicating whether or not strings should beright aligned.
character indicating if strings should left- orright-justified or left alone, passed to <code>format</code>.
logical indicating if internally stored sourceshould be used for printing when present, e.g., if<code>options(keep.source = TRUE)</code> has been in use.
an object used to select a method.
further arguments passed to or from other methods.
logical, indicating whether or not strings should beprinted with surrounding quotes.
integer, indicating how many levels should beprinted for a factor; if <code>0</code>, no extra "Levels" line will beprinted.  The default, <code>NULL</code>, entails choosing <code>max.levels</code>such that the levels print on one line of width <code>width</code>.
only used when <code>max.levels</code> is NULL, see above.
minimal number of <em>significant</em> digits, see<code>print.default</code>.
character string (or <code>NULL</code>) indicating<code>NA</code> values in printed output, see<code>print.default</code>.
character specifying how zeros (<code>0</code>) should beprinted; for sparse tables, using <code>"."</code> can produce morereadable results, similar to printing sparse matrices in <a href="https://CRAN.R-project.org/package=Matrix"><span class="pkg">Matrix</span></a>.
logical, indicating whether or not strings should beright aligned.
character indicating if strings should left- orright-justified or left alone, passed to <code>format</code>.
logical indicating if internally stored sourceshould be used for printing when present, e.g., if<code>options(keep.source = TRUE)</code> has been in use.
An object, for the methods inheriting from class <code>"hexmode"</code>.
<code>NULL</code> or a positive integer specifying the minimumfield width to be used, with padding by leading zeroes.
a logical indicating whether to use upper-caseletters or lower-case letters (default).
further arguments passed to or from other methods.
the name of a package, given as a name orliteral character string, or a character string, depending onwhether <code>character.only</code> is <code>FALSE</code> (default) or<code>TRUE</code>.
the position on the search list at which to attach theloaded namespace.  Can also be the name of a position on the currentsearch list as given by <code>search()</code>.
a character vector describing the location of <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>library trees to search through, or <code>NULL</code>.  The default valueof <code>NULL</code> corresponds to all libraries currently known to<code>.libPaths()</code>.Non-existent library trees are silently ignored.
a logical indicating whether <code>package</code> or<code>help</code> can be assumed to be character strings.
logical.  If it is <code>TRUE</code>,  <code>FALSE</code> or<code>TRUE</code> is returned to indicate success.
logical.  If <code>TRUE</code>, warnings areprinted about <code>conflicts</code> from attaching the newpackage.  A conflict is a function masking a function,or a non-function masking a non-function. The default is <code>TRUE</code>unless specified as <code>FALSE</code> in the <code>conflicts.policy</code> option.
a logical.  If <code>TRUE</code>, additional diagnostics areprinted.
a logical.  If <code>TRUE</code>, no message confirmingpackage attaching is printed, and most often, no errors/warnings areprinted if package attaching fails.
character string naming a package.
character vector of names of objects that can maskobjects on the search path without signaling an error when strictconflict checking is enabled
character vector of names of objects toexclude or include in the attached frame. Only one of these argumentsmay be used in a call to <code>library</code> or <code>require</code>.
logical specifying whether required packageslisted in the <code>Depends</code> clause of the <code>DESCRIPTION</code> fileshould be attached automatically.
an object used to select a method.
further arguments passed to or from other methods.
logical, indicating whether or not strings should beprinted with surrounding quotes.
integer, indicating how many levels should beprinted for a factor; if <code>0</code>, no extra "Levels" line will beprinted.  The default, <code>NULL</code>, entails choosing <code>max.levels</code>such that the levels print on one line of width <code>width</code>.
only used when <code>max.levels</code> is NULL, see above.
minimal number of <em>significant</em> digits, see<code>print.default</code>.
character string (or <code>NULL</code>) indicating<code>NA</code> values in printed output, see<code>print.default</code>.
character specifying how zeros (<code>0</code>) should beprinted; for sparse tables, using <code>"."</code> can produce morereadable results, similar to printing sparse matrices in <a href="https://CRAN.R-project.org/package=Matrix"><span class="pkg">Matrix</span></a>.
logical, indicating whether or not strings should beright aligned.
character indicating if strings should left- orright-justified or left alone, passed to <code>format</code>.
logical indicating if internally stored sourceshould be used for printing when present, e.g., if<code>options(keep.source = TRUE)</code> has been in use.
a character string or <code>DLLInfo</code> object.The character string specifies the file name of the DLLof interest, and is given without the file name extension (e.g., the‘<span class="file">.dll</span>’ or ‘<span class="file">.so</span>’) and with no directory/path information.So a file ‘<span class="file">MyPackage/libs/MyPackage.so</span>’ would be specified as<span class="samp">MyPackage</span>.

The <code>DLLInfo</code> objects can be obtained directlyin calls to <code>dyn.load</code> and  <code>library.dynam</code>,or can be found after the DLL has been loaded using<code>getLoadedDLLs</code>, which returns a list of<code>DLLInfo</code> objects (index-able by DLL file name).

The <code>DLLInfo</code> approach avoids any ambiguities related to twoDLLs having the same name but corresponding to files in differentdirectories.
a logical value.  If this is <code>TRUE</code>, the elementsof the returned lists are named using the names of the routines (asseen by R via registration or raw name).  If <code>FALSE</code>,these names are not computed and assigned to the lists.  As aresult, the call should be quicker.  The name information is alsoavailable in the <code>NativeSymbolInfo</code> objects in the lists.
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, typically a vector of<code>character</code> strings.
optional <code>logical</code> eventually to be passed to<code>print()</code>, used by <code>print.default()</code>, indicatingwhether or not strings should be right aligned.
an object of class <code>"noquote"</code>.
further options passed to next methods, such as <code>print</code>.
for compatibility with the generic <code>c</code> function.
a character vector with suitable numeric version strings (see‘Details’); for <code>package_version</code>, alternatively an Rversion object as obtained by <code>R.version</code>.
a logical indicating whether invalid numeric versionsshould results in an error (default) or not.
An object, for the methods inheriting from class <code>"octmode"</code>.
<code>NULL</code> or a positive integer specifying the minimumfield width to be used, with padding by leading zeroes.
further arguments passed to or from other methods.
the name of a package, given as a name orliteral character string, or a character string, depending onwhether <code>character.only</code> is <code>FALSE</code> (default) or<code>TRUE</code>.
the position on the search list at which to attach theloaded namespace.  Can also be the name of a position on the currentsearch list as given by <code>search()</code>.
a character vector describing the location of <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>library trees to search through, or <code>NULL</code>.  The default valueof <code>NULL</code> corresponds to all libraries currently known to<code>.libPaths()</code>.Non-existent library trees are silently ignored.
a logical indicating whether <code>package</code> or<code>help</code> can be assumed to be character strings.
logical.  If it is <code>TRUE</code>,  <code>FALSE</code> or<code>TRUE</code> is returned to indicate success.
logical.  If <code>TRUE</code>, warnings areprinted about <code>conflicts</code> from attaching the newpackage.  A conflict is a function masking a function,or a non-function masking a non-function. The default is <code>TRUE</code>unless specified as <code>FALSE</code> in the <code>conflicts.policy</code> option.
a logical.  If <code>TRUE</code>, additional diagnostics areprinted.
a logical.  If <code>TRUE</code>, no message confirmingpackage attaching is printed, and most often, no errors/warnings areprinted if package attaching fails.
character string naming a package.
character vector of names of objects that can maskobjects on the search path without signaling an error when strictconflict checking is enabled
character vector of names of objects toexclude or include in the attached frame. Only one of these argumentsmay be used in a call to <code>library</code> or <code>require</code>.
logical specifying whether required packageslisted in the <code>Depends</code> clause of the <code>DESCRIPTION</code> fileshould be attached automatically.
an object to be printed or summarized from one of thedate-time classes.
for timezone formatting, passed to <code>format.POSIXct</code>.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
number of significant digits for the computations:should be high enough to represent the least important time unitexactly.
further arguments to be passed from or to other methods.
date-time objects
date-time objects or character vectors.  (Charactervectors are converted by <code>as.POSIXct</code>.)
a numeric vector (in seconds)
one of <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>or <code>&gt;=</code>.
an object to be printed or summarized from one of thedate-time classes.
for timezone formatting, passed to <code>format.POSIXct</code>.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
number of significant digits for the computations:should be high enough to represent the least important time unitexactly.
further arguments to be passed from or to other methods.
date-time objects
date-time objects or character vectors.  (Charactervectors are converted by <code>as.POSIXct</code>.)
a numeric vector (in seconds)
one of <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>or <code>&gt;=</code>.
a condition object.
call expression.
a condition object.
expression to be evaluated.
expression to be evaluated before returning or exiting.
function.
character string.
character string.
character string naming a restart.
restart object.
object.
character string naming a condition class.
additional arguments; see details below.
a vector (atomic, not a list) for <code>rle()</code>;an object of class <code>"rle"</code> for <code>inverse.rle()</code>.
further arguments; ignored here.
number of significant digits for printing, see<code>print.default</code>.
character string, prepended to each printed line.
an object used to select a method.
further arguments passed to or from other methods.
logical, indicating whether or not strings should beprinted with surrounding quotes.
integer, indicating how many levels should beprinted for a factor; if <code>0</code>, no extra "Levels" line will beprinted.  The default, <code>NULL</code>, entails choosing <code>max.levels</code>such that the levels print on one line of width <code>width</code>.
only used when <code>max.levels</code> is NULL, see above.
minimal number of <em>significant</em> digits, see<code>print.default</code>.
character string (or <code>NULL</code>) indicating<code>NA</code> values in printed output, see<code>print.default</code>.
character specifying how zeros (<code>0</code>) should beprinted; for sparse tables, using <code>"."</code> can produce morereadable results, similar to printing sparse matrices in <a href="https://CRAN.R-project.org/package=Matrix"><span class="pkg">Matrix</span></a>.
logical, indicating whether or not strings should beright aligned.
character indicating if strings should left- orright-justified or left alone, passed to <code>format</code>.
logical indicating if internally stored sourceshould be used for printing when present, e.g., if<code>options(keep.source = TRUE)</code> has been in use.
 The name of a file. 
 The character encoding to assume for the file. 
 The encoding with which to make strings: see the<code>encoding</code> argument of <code>parse</code>.
 A character vector of source lines.  Other <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> objectswill be coerced to character. 
 The timestamp to use on a copy of a file. 
 Is this <code>srcfilecopy</code> known to come from a file system file? 
 A <code>srcfile</code> object. 
 Line numbers. 
 A vector of four, six or eight values giving a source location; see‘Details’.
 An object of the appropriate class. 
 Whether to read the <code>srcfile</code> to obtain thetext of a <code>srcref</code>. 
 An optional second <code>srcref</code> object to mark the endof the character range. 
 Additional arguments to the methods; these will be ignored. 
 The name of a file. 
 The character encoding to assume for the file. 
 The encoding with which to make strings: see the<code>encoding</code> argument of <code>parse</code>.
 A character vector of source lines.  Other <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> objectswill be coerced to character. 
 The timestamp to use on a copy of a file. 
 Is this <code>srcfilecopy</code> known to come from a file system file? 
 A <code>srcfile</code> object. 
 Line numbers. 
 A vector of four, six or eight values giving a source location; see‘Details’.
 An object of the appropriate class. 
 Whether to read the <code>srcfile</code> to obtain thetext of a <code>srcref</code>. 
 An optional second <code>srcref</code> object to mark the endof the character range. 
 Additional arguments to the methods; these will be ignored. 
one or more objects which can be interpreted as factors(including character strings), or a list (or data frame) whosecomponents can be so interpreted.  (For <code>as.table</code>, argumentspassed to specific methods; for <code>as.data.frame</code>, unused.)
levels to remove for all factors in <code>...</code>.  Ifit does not contain <code>NA</code> and <code>useNA</code> is notspecified, it implies <code>useNA = "ifany"</code>.  See‘Details’ for its interpretation for non-factor arguments.
whether to include <code>NA</code> values in the table.See ‘Details’.  Can be abbreviated.
the names to be given to the dimensions in the result (the<em>dimnames names</em>).
controls how the default <code>dnn</code> isconstructed.  See ‘Details’.
an arbitrary <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, or an object inheriting from class<code>"table"</code> for the <code>as.data.frame</code> method. Note that<code>as.data.frame.table(x, *)</code> may be called explicitly fornon-table <code>x</code> for “reshaping” <code>array</code>s.
a character vector giving the row names for the dataframe.
The name to be used for the column of tableentries, usually counts.
logical: should the classifying factors bereturned as factors (the default) or character vectors?
passed to <code>provideDimnames</code>.
arguments to be passed to <code>cat</code> (for<code>warnings()</code>).
a <code>"warnings"</code> object as returned by<code>warnings()</code>.
a <code>"warnings"</code> or <code>"summary.warnings"</code> object.
if not <code>missing</code>, a <code>character</code>vector of the same <code>length</code> as <code>x</code>, to “label”the messages.  Defaults to <code>paste0(seq_len(n), ": ")</code> for<i>n &gt;= 2</i> where <code>n &lt;- length(x)</code>.
a character string <code>cat()</code>ed before themessages are printed.
an object for which a summary is desired.
a result of the <em>default</em> method of <code>summary()</code>.
integer, indicating how many levels should be shown for<code>factor</code>s.
integer, used for number formatting with<code>signif()</code> (for <code>summary.default</code>) or<code>format()</code> (for <code>summary.data.frame</code>).  In<code>summary.default</code>, if not specified (i.e.,<code>missing(.)</code>), <code>signif()</code> will <em>not</em> be calledanymore (since <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> &gt;= 3.4.0, where the default has been changed toonly round in the <code>print</code> and <code>format</code> methods).
integer code used in <code>quantile(*, type=quantile.type)</code>for the default method.
additional arguments affecting the summary produced.
an object used to select a method.
further arguments passed to or from other methods.
logical, indicating whether or not strings should beprinted with surrounding quotes.
integer, indicating how many levels should beprinted for a factor; if <code>0</code>, no extra "Levels" line will beprinted.  The default, <code>NULL</code>, entails choosing <code>max.levels</code>such that the levels print on one line of width <code>width</code>.
only used when <code>max.levels</code> is NULL, see above.
minimal number of <em>significant</em> digits, see<code>print.default</code>.
character string (or <code>NULL</code>) indicating<code>NA</code> values in printed output, see<code>print.default</code>.
character specifying how zeros (<code>0</code>) should beprinted; for sparse tables, using <code>"."</code> can produce morereadable results, similar to printing sparse matrices in <a href="https://CRAN.R-project.org/package=Matrix"><span class="pkg">Matrix</span></a>.
logical, indicating whether or not strings should beright aligned.
character indicating if strings should left- orright-justified or left alone, passed to <code>format</code>.
logical indicating if internally stored sourceshould be used for printing when present, e.g., if<code>options(keep.source = TRUE)</code> has been in use.
arguments to be passed to <code>cat</code> (for<code>warnings()</code>).
a <code>"warnings"</code> object as returned by<code>warnings()</code>.
a <code>"warnings"</code> or <code>"summary.warnings"</code> object.
if not <code>missing</code>, a <code>character</code>vector of the same <code>length</code> as <code>x</code>, to “label”the messages.  Defaults to <code>paste0(seq_len(n), ": ")</code> for<i>n &gt;= 2</i> where <code>n &lt;- length(x)</code>.
a character string <code>cat()</code>ed before themessages are printed.
numeric or character matrix.
(optional) character vectors giving row or columnnames respectively.  By default, these are taken from<code>dimnames(x)</code>.
logical; if <code>TRUE</code> and <code>x</code> is of mode<code>"character"</code>, <em>quotes</em> (<span class="samp">"</span>) are used.
 if <code>TRUE</code> and <code>x</code> is of mode<code>"character"</code>, the output columns are <em>right</em>-justified.
how <code>NA</code>s are printed.  If this is non-null, itsvalue is used to represent <code>NA</code>.
arguments for <code>print</code> methods.
numeric or complex or logical vectors.
logical.  Should missing values be removed?
 table 
a vector giving the margins to split by.E.g., for a matrix <code>1</code> indicates rows, <code>2</code> indicatescolumns, <code>c(1, 2)</code> indicates rows and columns.When <code>x</code> has named dimnames, it can be a character vectorselecting dimension names.
 table 
a vector giving the margins to split by.E.g., for a matrix <code>1</code> indicates rows, <code>2</code> indicatescolumns, <code>c(1, 2)</code> indicates rows and columns.When <code>x</code> has named dimnames, it can be a character vectorselecting dimension names.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, for example a matrix, array or data frame.
a possible value for <code>dimnames(x)</code>: see the‘Value’ section.
a character string, used to separate <code>base</code>symbols and digits in the constructed dimnames.
a non-empty <code>list</code> of character vectors.  Thelist components are used in turn (and recycled when needed) toconstruct replacements for empty dimnames components.  See also theexamples.
logical indicating that the dimnames constructed areunique within each dimension in the sense of <code>make.unique</code>.
non-negative numeric vectors.
numeric vectors.
integer vectors.
a character vector.
A connection.
logical.  If true, a newline is appended to each stringpushed back.
character string, partially matched.  See details.
a character vector.
A connection.
logical.  If true, a newline is appended to each stringpushed back.
character string, partially matched.  See details.
a character string indicating whether the environment(workspace) should be saved, one of <code>"no"</code>, <code>"yes"</code>,<code>"ask"</code> or <code>"default"</code>.
the (numerical) error status to be returned to theoperating system, where relevant.  Conventionally <code>0</code>indicates successful completion.
should <code>.Last()</code> be executed?
a numeric or complex matrix whose QR decomposition is to becomputed.  Logical matrices are coerced to numeric.
the tolerance for detecting linear dependencies in thecolumns of <code>x</code>. Only used if <code>LAPACK</code> is false and<code>x</code> is real.
a QR decomposition of the type computed by <code>qr</code>.
a vector or matrix of right-hand sides of equations.
a QR decomposition or (<code>qr.solve</code> only) a rectangular matrix.
effective rank.
logical.  For real <code>x</code>, if true use LAPACKotherwise use LINPACK (the default).
further arguments passed to or from other methods
a numeric or complex matrix whose QR decomposition is to becomputed.  Logical matrices are coerced to numeric.
the tolerance for detecting linear dependencies in thecolumns of <code>x</code>. Only used if <code>LAPACK</code> is false and<code>x</code> is real.
a QR decomposition of the type computed by <code>qr</code>.
a vector or matrix of right-hand sides of equations.
a QR decomposition or (<code>qr.solve</code> only) a rectangular matrix.
effective rank.
logical.  For real <code>x</code>, if true use LAPACKotherwise use LINPACK (the default).
further arguments passed to or from other methods
a numeric or complex matrix whose QR decomposition is to becomputed.  Logical matrices are coerced to numeric.
the tolerance for detecting linear dependencies in thecolumns of <code>x</code>. Only used if <code>LAPACK</code> is false and<code>x</code> is real.
a QR decomposition of the type computed by <code>qr</code>.
a vector or matrix of right-hand sides of equations.
a QR decomposition or (<code>qr.solve</code> only) a rectangular matrix.
effective rank.
logical.  For real <code>x</code>, if true use LAPACKotherwise use LINPACK (the default).
further arguments passed to or from other methods
a numeric or complex matrix whose QR decomposition is to becomputed.  Logical matrices are coerced to numeric.
the tolerance for detecting linear dependencies in thecolumns of <code>x</code>. Only used if <code>LAPACK</code> is false and<code>x</code> is real.
a QR decomposition of the type computed by <code>qr</code>.
a vector or matrix of right-hand sides of equations.
a QR decomposition or (<code>qr.solve</code> only) a rectangular matrix.
effective rank.
logical.  For real <code>x</code>, if true use LAPACKotherwise use LINPACK (the default).
further arguments passed to or from other methods
object representing a QR decomposition.  This willtypically have come from a previous call to <code>qr</code> or<code>lsfit</code>.
logical expression of length 1.  Indicates whether anarbitrary  orthogonal completion of the <i>\bold{Q}</i> or<i>\bold{X}</i> matrices is to be made, or whether the <i>\bold{R}</i>matrix is to be completed  by binding zero-value rows beneath thesquare upper triangle.
integer in the range <code>1:nrow(qr$qr)</code>.  The numberof columns to be in the reconstructed <i>\bold{X}</i>.  The defaultwhen <code>complete</code> is <code>FALSE</code> is the first<code>min(ncol(X), nrow(X))</code> columns of the original <i>\bold{X}</i>from which the qr object was constructed.  The default when<code>complete</code> is <code>TRUE</code> is a square matrix with the original<i>\bold{X}</i> in the first <code>ncol(X)</code> columns and an arbitraryorthogonal completion (unitary completion in the complex case) inthe remaining columns.
vector (not matrix) of diagonal values.  Each column ofthe returned <i>\bold{Q}</i> will be multiplied by the correspondingdiagonal value.  Defaults to all <code>1</code>s.
a numeric or complex matrix whose QR decomposition is to becomputed.  Logical matrices are coerced to numeric.
the tolerance for detecting linear dependencies in thecolumns of <code>x</code>. Only used if <code>LAPACK</code> is false and<code>x</code> is real.
a QR decomposition of the type computed by <code>qr</code>.
a vector or matrix of right-hand sides of equations.
a QR decomposition or (<code>qr.solve</code> only) a rectangular matrix.
effective rank.
logical.  For real <code>x</code>, if true use LAPACKotherwise use LINPACK (the default).
further arguments passed to or from other methods
a numeric or complex matrix whose QR decomposition is to becomputed.  Logical matrices are coerced to numeric.
the tolerance for detecting linear dependencies in thecolumns of <code>x</code>. Only used if <code>LAPACK</code> is false and<code>x</code> is real.
a QR decomposition of the type computed by <code>qr</code>.
a vector or matrix of right-hand sides of equations.
a QR decomposition or (<code>qr.solve</code> only) a rectangular matrix.
effective rank.
logical.  For real <code>x</code>, if true use LAPACKotherwise use LINPACK (the default).
further arguments passed to or from other methods
object representing a QR decomposition.  This willtypically have come from a previous call to <code>qr</code> or<code>lsfit</code>.
logical expression of length 1.  Indicates whether anarbitrary  orthogonal completion of the <i>\bold{Q}</i> or<i>\bold{X}</i> matrices is to be made, or whether the <i>\bold{R}</i>matrix is to be completed  by binding zero-value rows beneath thesquare upper triangle.
integer in the range <code>1:nrow(qr$qr)</code>.  The numberof columns to be in the reconstructed <i>\bold{X}</i>.  The defaultwhen <code>complete</code> is <code>FALSE</code> is the first<code>min(ncol(X), nrow(X))</code> columns of the original <i>\bold{X}</i>from which the qr object was constructed.  The default when<code>complete</code> is <code>TRUE</code> is a square matrix with the original<i>\bold{X}</i> in the first <code>ncol(X)</code> columns and an arbitraryorthogonal completion (unitary completion in the complex case) inthe remaining columns.
vector (not matrix) of diagonal values.  Each column ofthe returned <i>\bold{Q}</i> will be multiplied by the correspondingdiagonal value.  Defaults to all <code>1</code>s.
a numeric or complex matrix whose QR decomposition is to becomputed.  Logical matrices are coerced to numeric.
the tolerance for detecting linear dependencies in thecolumns of <code>x</code>. Only used if <code>LAPACK</code> is false and<code>x</code> is real.
a QR decomposition of the type computed by <code>qr</code>.
a vector or matrix of right-hand sides of equations.
a QR decomposition or (<code>qr.solve</code> only) a rectangular matrix.
effective rank.
logical.  For real <code>x</code>, if true use LAPACKotherwise use LINPACK (the default).
further arguments passed to or from other methods
a numeric or complex matrix whose QR decomposition is to becomputed.  Logical matrices are coerced to numeric.
the tolerance for detecting linear dependencies in thecolumns of <code>x</code>. Only used if <code>LAPACK</code> is false and<code>x</code> is real.
a QR decomposition of the type computed by <code>qr</code>.
a vector or matrix of right-hand sides of equations.
a QR decomposition or (<code>qr.solve</code> only) a rectangular matrix.
effective rank.
logical.  For real <code>x</code>, if true use LAPACKotherwise use LINPACK (the default).
further arguments passed to or from other methods
object representing a QR decomposition.  This willtypically have come from a previous call to <code>qr</code> or<code>lsfit</code>.
logical expression of length 1.  Indicates whether anarbitrary  orthogonal completion of the <i>\bold{Q}</i> or<i>\bold{X}</i> matrices is to be made, or whether the <i>\bold{R}</i>matrix is to be completed  by binding zero-value rows beneath thesquare upper triangle.
integer in the range <code>1:nrow(qr$qr)</code>.  The numberof columns to be in the reconstructed <i>\bold{X}</i>.  The defaultwhen <code>complete</code> is <code>FALSE</code> is the first<code>min(ncol(X), nrow(X))</code> columns of the original <i>\bold{X}</i>from which the qr object was constructed.  The default when<code>complete</code> is <code>TRUE</code> is a square matrix with the original<i>\bold{X}</i> in the first <code>ncol(X)</code> columns and an arbitraryorthogonal completion (unitary completion in the complex case) inthe remaining columns.
vector (not matrix) of diagonal values.  Each column ofthe returned <i>\bold{Q}</i> will be multiplied by the correspondingdiagonal value.  Defaults to all <code>1</code>s.
an object inheriting from class <code>"POSIXt"</code> or <code>"Date"</code>.
logical vector (possibly recycled).  Should the names beabbreviated?
an length-one object inheriting from class<code>"POSIXt"</code> or <code>"Date"</code>.
arguments for other methods.
an object inheriting from class <code>"POSIXt"</code> or <code>"Date"</code>.
logical vector (possibly recycled).  Should the names beabbreviated?
an length-one object inheriting from class<code>"POSIXt"</code> or <code>"Date"</code>.
arguments for other methods.
an object inheriting from class <code>"POSIXt"</code> or <code>"Date"</code>.
logical vector (possibly recycled).  Should the names beabbreviated?
an length-one object inheriting from class<code>"POSIXt"</code> or <code>"Date"</code>.
arguments for other methods.
a character string indicating whether the environment(workspace) should be saved, one of <code>"no"</code>, <code>"yes"</code>,<code>"ask"</code> or <code>"default"</code>.
the (numerical) error status to be returned to theoperating system, where relevant.  Conventionally <code>0</code>indicates successful completion.
should <code>.Last()</code> be executed?
any syntactically valid <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> expression
a <code>call</code>, i.e., an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object of<code>class</code> (and <code>mode</code>) <code>"call"</code>.
an environment or a list object.  Defaults to thecurrent evaluation environment.
a character vector with suitable numeric version strings (see‘Details’); for <code>package_version</code>, alternatively an Rversion object as obtained by <code>R.version</code>.
a logical indicating whether invalid numeric versionsshould results in an error (default) or not.
As well as <code>"home"</code> which gives the <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> homedirectory, other known values are <code>"bin"</code>, <code>"doc"</code>,<code>"etc"</code>, <code>"include"</code>, <code>"modules"</code> and <code>"share"</code>giving the paths to the corresponding parts of an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> installation.
any <code>numeric</code> or character objects.
logical, indicating if <code>NA</code>'s should beomitted.
logical, indicating if all non-finite elements shouldbe omitted.
any <code>numeric</code> or character objects.
logical, indicating if <code>NA</code>'s should beomitted.
logical, indicating if all non-finite elements shouldbe omitted.
a numeric, complex, character or logical vector.
for controlling the treatment of <code>NA</code>s.If <code>TRUE</code>, missing values in the data are put last; if<code>FALSE</code>, they are put first; if <code>NA</code>, they are removed; if<code>"keep"</code> they are kept with rank <code>NA</code>.
a character string specifying how ties are treated,see ‘Details’; can be abbreviated.
a <code>list</code> or <code>expression</code>, i.e., “list-like”.
a <code>function</code> of one “principal” argument,passing further arguments via <code>...</code>.
character vector of <code>class</code> names, or<code>"ANY"</code> to match any class.
The default result (not used if <code>how = "replace"</code>).
character string partially matching the three possibilities given:see ‘Details’.
additional arguments passed to the call to <code>f</code>.
desired length.
object to be coerced.
character or raw vector.  A description of the connection.For an input this is an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> raw vector object, and for an outputconnection the name for the connection.
character.  Any of the standard connection open modes.
An output raw connection.
character or raw vector.  A description of the connection.For an input this is an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> raw vector object, and for an outputconnection the name for the connection.
character.  Any of the standard connection open modes.
An output raw connection.
object to be converted or shifted.
logical: should the conversion be to a singlecharacter string or multiple individual characters?
the number of bits to shift.  Positive numbers shift rightand negative numbers shift left: allowed values are <code>-8 ... 8</code>.
the result type, partially matched.
object to be converted or shifted.
logical: should the conversion be to a singlecharacter string or multiple individual characters?
the number of bits to shift.  Positive numbers shift rightand negative numbers shift left: allowed values are <code>-8 ... 8</code>.
the result type, partially matched.
object to be converted or shifted.
logical: should the conversion be to a singlecharacter string or multiple individual characters?
the number of bits to shift.  Positive numbers shift rightand negative numbers shift left: allowed values are <code>-8 ... 8</code>.
the result type, partially matched.
(generalized) vectors or matrices.  These can be given as namedarguments.  Other <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> objects may be coerced as appropriate, or S4methods may be used: see sections ‘Details’ and‘Value’.  (For the <code>"data.frame"</code> method of <code>cbind</code>these can be further arguments to <code>data.frame</code> such as<code>stringsAsFactors</code>.)
integer controlling the construction of labels inthe case of non-matrix-like arguments (for the default method):<br><code>deparse.level = 0</code> constructs no labels; the default,<br><code>deparse.level = 1 or 2</code> constructs labels from the argumentnames, see the ‘Value’ section below.
(only for data frame method:) logicalindicating if unique and valid <code>row.names</code> should beconstructed from the arguments.
logical, passed to <code>as.data.frame</code>;only has an effect when the <code>...</code> arguments contain a(non-<code>data.frame</code>) <code>character</code>.
if the data frames contain factors, the default<code>TRUE</code> ensures that <code>NA</code> levels of factors are kept, see<a href="https://bugs.R-project.org/show_bug.cgi?id=17562">PR#17562</a> and the ‘Data frame methods’.  In <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> versions upto 3.6.x, <code>factor.exclude = NA</code> has been implicitly hardcoded(<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> &lt;= 3.6.0) or the default (<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> = 3.6.x, x &gt;= 1).
(generalized) vectors or matrices.  These can be given as namedarguments.  Other <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> objects may be coerced as appropriate, or S4methods may be used: see sections ‘Details’ and‘Value’.  (For the <code>"data.frame"</code> method of <code>cbind</code>these can be further arguments to <code>data.frame</code> such as<code>stringsAsFactors</code>.)
integer controlling the construction of labels inthe case of non-matrix-like arguments (for the default method):<br><code>deparse.level = 0</code> constructs no labels; the default,<br><code>deparse.level = 1 or 2</code> constructs labels from the argumentnames, see the ‘Value’ section below.
(only for data frame method:) logicalindicating if unique and valid <code>row.names</code> should beconstructed from the arguments.
logical, passed to <code>as.data.frame</code>;only has an effect when the <code>...</code> arguments contain a(non-<code>data.frame</code>) <code>character</code>.
if the data frames contain factors, the default<code>TRUE</code> ensures that <code>NA</code> levels of factors are kept, see<a href="https://bugs.R-project.org/show_bug.cgi?id=17562">PR#17562</a> and the ‘Data frame methods’.  In <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> versions upto 3.6.x, <code>factor.exclude = NA</code> has been implicitly hardcoded(<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> &lt;= 3.6.0) or the default (<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> = 3.6.x, x &gt;= 1).
A matrix or a the result of <code>qr</code> or a fit froma class inheriting from <code>"lm"</code>.
logical.  Should the result be exact?
character string, specifying the matrix norm with respectto which the condition number is to be computed, see also<code>norm</code>.  For <code>rcond</code>, the default is <code>"O"</code>,meaning the <b>O</b>ne- or 1-norm.  The (currently only) otherpossible value is <code>"I"</code> for the infinity norm.
a partially matched character string specifying the method to be used;<code>"qr"</code> is the default for back-compatibility, mainly.
logical.  If true, the matrix used is just the lowertriangular part of <code>z</code>.
logical.  If true and <code>z</code> is not complex, theLINPACK routine <code>dtrco()</code> is called; otherwise the relevantLAPACK routine is.
further arguments passed to or from other methods;for <code>kappa.*()</code>, notably <code>LINPACK</code> when <code>norm</code> is not<code>"2"</code>.
numeric.  Desired length of the output vector,inputs being recycled as needed.
numeric vector.
numeric vector.
numeric vector.
numeric vector.
an object, probably of mode <code>complex</code>.
an object of mode <code>complex</code>, or one of a class for whicha methods has been defined.
further arguments passed to or from other methods.
either a character string naming a file or a connection.<code>""</code> indicates output to the console.  For <code>read.dcf</code> thiscan name a compressed file (see <code>gzfile</code>).
Fields to read from the DCF file.  Default is to read allfields.
a logical indicating whether in case of multipleoccurrences of a field in a record, all these should be gathered.If <code>all</code> is false (default), only the last such occurrence isused.
a character string with the names of the fields forwhich whitespace should be kept as is, or <code>NULL</code> (default)indicating that there are no such fields.  Coerced to character ifpossible.  For fields where whitespace is not to be kept as is,<code>read.dcf</code> removes leading and trailing whitespace, and<code>write.dcf</code> folds using <code>strwrap</code>.
the object to be written, typically a data frame.  If not, itis attempted to coerce <code>x</code> to a data frame.
logical.  If <code>TRUE</code>, the output is appended to thefile.  If <code>FALSE</code>, any existing file of the name is destroyed.
logical to be passed to <code>writeLines()</code>,see there: “for expert use”.
a positive integer specifying the indentation forcontinuation lines in output entries.
a positive integer giving the target column for wrappinglines in the output.
A connection object or a character string naming a file ora raw vector.
Either an object whose mode will give the mode of thevector to be read, or a character vector of length one describingthe mode: one of <code>"numeric"</code>, <code>"double"</code>,<code>"integer"</code>, <code>"int"</code>, <code>"logical"</code>, <code>"complex"</code>,<code>"character"</code>, <code>"raw"</code>.
numeric.  The (maximal) number of records to beread.  You can use an over-estimate here, but not too large asstorage is reserved for <code>n</code> items.
integer.  The number of bytes per element in the bytestream.  The default, <code>NA_integer_</code>, uses the natural size.Size changing is not supported for raw and complex vectors.
logical.  Only used for integers of sizes 1 and 2,when it determines if the quantity on fileshould be regarded as a signed or unsigned integer.
The endian-ness (<code>"big"</code> or <code>"little"</code>) of thetarget system for the file.  Using <code>"swap"</code> will force swappingendian-ness.
An <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object to be written to the connection.
See <code>writeLines</code>.
A connection object, or a character string naming a file,or a raw vector.
integer vector, giving the lengths in characters of(unterminated) character strings to be read or written.  Elementsmust be &gt;= 0 and not <code>NA</code>.
logical: For <code>readChar</code>, should <code>nchars</code> beregarded as a number of bytes not characters in a multi-bytelocale?  For <code>writeChar</code>, see <code>writeLines</code>.
A character vector to be written to the connection, atleast as long as <code>nchars</code>.
‘end of string’: character string.  The terminatorto be written after each string, followed by an ASCII <code>nul</code>;use <code>NULL</code> for no terminator at all.
the string printed when prompting the user for input.Should usually end with a space <code>" "</code>.
a connection object or a character string.
integer.  The (maximal) number of lines toread.  Negative values indicate that one should read up to the end ofinput on the connection.
logical.  Is it OK to reach the end of the connection before<code>n &gt; 0</code> lines are read?  If not, an error will be generated.
logical.  Warn if a text file is missing a final EOL or ifthere are embedded nuls in the file.
encoding to be assumed for input strings.  It isused to mark character strings as known to be inLatin-1 or UTF-8: it is not used to re-encode the input.  To do thelatter, specify the encoding as part of the connection <code>con</code> orvia <code>options(encoding=)</code>: see the examples.
logical: should nuls be skipped?
<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object to serialize.
a connection or the name of the file where the <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> objectis saved to or read from.
a logical.  If <code>TRUE</code> or <code>NA</code>, an ASCIIrepresentation is written; otherwise (default), a binary one is used.See the comments in the help for <code>save</code>.
the workspace format version to use.  <code>NULL</code>specifies the current default version (3). The only other supportedvalue is 2, the default from <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> 1.4.0 to <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> 3.5.0.
a logical specifying whether saving to a named file isto use <code>"gzip"</code> compression, or one of <code>"gzip"</code>,<code>"bzip2"</code> or <code>"xz"</code> to indicate the type of compression tobe used.  Ignored if <code>file</code> is a connection.
a hook function for handling reference objects.
A length-one character vector giving the path to thefile.  Tilde-expansion is performed where supported.
all the arguments to be passed.
a function of the appropriate arity (binary for<code>Reduce</code>, unary for <code>Filter</code>, <code>Find</code> and<code>Position</code>, <i>k</i>-ary for <code>Map</code> if this is called with<i>k</i> arguments).  An arbitrary predicate function for<code>Negate</code>.
a vector.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object of the same kind as the elements of<code>x</code>.
a logical indicating whether to proceed from left toright (default) or from right to left.
a logical indicating whether the successive reducecombinations should be accumulated.  By default, only the finalcombination is used.
the value to be returned in the case when“no match” (no element satisfying the predicate) is found.
vectors.
Object to finalize.  Must be an environment or an external pointer.
Function to call on finalization. Must accept a single argument,which will be the object to finalize.
logical: should the finalizer be run if the object isstill uncollected at the end of the <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> session?
character string containing a regular expression(or character string for <code>fixed = TRUE</code>) to be matchedin the given character vector.  Coerced by<code>as.character</code> to a character string if possible.  If acharacter vector of length 2 or more is supplied, the first elementis used with a warning.  Missing values are allowed except for<code>regexpr</code>, <code>gregexpr</code> and <code>regexec</code>.
a character vector where matches are sought, or anobject which can be coerced by <code>as.character</code> to a charactervector.  Long vectors are supported.
if <code>FALSE</code>, the pattern matching is <em>casesensitive</em> and if <code>TRUE</code>, case is ignored during matching.
logical.  Should Perl-compatible regexps be used?
if <code>FALSE</code>, a vector containing the (<code>integer</code>)indices of the matches determined by <code>grep</code> is returned, and if<code>TRUE</code>, a vector containing the matching elements themselves isreturned.
logical.  If <code>TRUE</code>, <code>pattern</code> is a string to bematched as is.  Overrides all conflicting arguments.
logical.  If <code>TRUE</code> the matching is donebyte-by-byte rather than character-by-character.  See‘Details’.
logical.  If <code>TRUE</code> return indices or values forelements that do <em>not</em> match.
a replacement for matched pattern in <code>sub</code> and<code>gsub</code>.  Coerced to character if possible.  For<code>fixed = FALSE</code> this can include backreferences <code>"\1"</code> to<code>"\9"</code> to parenthesized subexpressions of <code>pattern</code>.  For<code>perl = TRUE</code> only, it can also contain <code>"\U"</code> or<code>"\L"</code> to convert the rest of the replacement to upper orlower case and <code>"\E"</code> to end case conversion.  If acharacter vector of length 2 or more is supplied, the first elementis used with a warning.  If <code>NA</code>, all elements in the resultcorresponding to matches will be set to <code>NA</code>.
character string containing a regular expression(or character string for <code>fixed = TRUE</code>) to be matchedin the given character vector.  Coerced by<code>as.character</code> to a character string if possible.  If acharacter vector of length 2 or more is supplied, the first elementis used with a warning.  Missing values are allowed except for<code>regexpr</code>, <code>gregexpr</code> and <code>regexec</code>.
a character vector where matches are sought, or anobject which can be coerced by <code>as.character</code> to a charactervector.  Long vectors are supported.
if <code>FALSE</code>, the pattern matching is <em>casesensitive</em> and if <code>TRUE</code>, case is ignored during matching.
logical.  Should Perl-compatible regexps be used?
if <code>FALSE</code>, a vector containing the (<code>integer</code>)indices of the matches determined by <code>grep</code> is returned, and if<code>TRUE</code>, a vector containing the matching elements themselves isreturned.
logical.  If <code>TRUE</code>, <code>pattern</code> is a string to bematched as is.  Overrides all conflicting arguments.
logical.  If <code>TRUE</code> the matching is donebyte-by-byte rather than character-by-character.  See‘Details’.
logical.  If <code>TRUE</code> return indices or values forelements that do <em>not</em> match.
a replacement for matched pattern in <code>sub</code> and<code>gsub</code>.  Coerced to character if possible.  For<code>fixed = FALSE</code> this can include backreferences <code>"\1"</code> to<code>"\9"</code> to parenthesized subexpressions of <code>pattern</code>.  For<code>perl = TRUE</code> only, it can also contain <code>"\U"</code> or<code>"\L"</code> to convert the rest of the replacement to upper orlower case and <code>"\E"</code> to end case conversion.  If acharacter vector of length 2 or more is supplied, the first elementis used with a warning.  If <code>NA</code>, all elements in the resultcorresponding to matches will be set to <code>NA</code>.
string or namespace environment.
logical.
environment.
namespace environment.
character vector.
optional character vector.
namespace environment.
string naming the package/namespace to load.
vector of package names parallel to <code>generics</code>.
character vector specifying library.
logical.
character.
character.
environment.
a 3-column character matrix.
character.
any object.
character arguments.
the methods table name.
symbol: name of namespace
character vector naming symbols to exclude from theimport, particularly useful when <code>vars</code> is missing.
string or namespace environment.
logical.
environment.
namespace environment.
character vector.
optional character vector.
namespace environment.
string naming the package/namespace to load.
vector of package names parallel to <code>generics</code>.
character vector specifying library.
logical.
character.
character.
environment.
a 3-column character matrix.
character.
any object.
character arguments.
the methods table name.
symbol: name of namespace
character vector naming symbols to exclude from theimport, particularly useful when <code>vars</code> is missing.
a character vector
an object with match data
a logical: if <code>TRUE</code>, extract or replace thenon-matched substrings.
an object with suitable replacement values for thematched or non-matched substrings (see <code>Details</code>).
a character vector
an object with match data
a logical: if <code>TRUE</code>, extract or replace thenon-matched substrings.
an object with suitable replacement values for thematched or non-matched substrings (see <code>Details</code>).
the objects to be removed, as names (unquoted) orcharacter strings (quoted).
a character vector naming objects to be removed.
where to do the removal.  By default, uses thecurrent environment.  See ‘details’ for other possibilities.
the <code>environment</code> to use.  See ‘details’.
should the enclosing frames of the environment beinspected?
the function that is to be invoked each time a top-level taskis successfully completed.  This is called with 5 or 4 argumentsdepending on whether <code>data</code> is specified or not, respectively.The return value should be a logical value indicating whether tokeep the callback in the list of active callbacks or discard it.
if specified, this is the 5-th argument in the call to thecallback function <code>f</code>.
a string or an integer identifying the element in theinternal callback list to be removed.Integer indices are 1-based, i.e the first element is 1.The names of currently registered handlers is availableusing <code>getTaskCallbackNames</code>and is also returned in a call to <code>addTaskCallback</code>.
character: names to be used.
a vector (of any mode including a <code>list</code>) or a factor or (for<code>rep</code> only) a <code>POSIXct</code> or <code>POSIXlt</code> or <code>Date</code>object; or an S4 object containing such an object.
further arguments to be passed to or from other methods.For the internal default method these can include:

an integer-valued vector giving the(non-negative) number of times to repeat each element if oflength <code>length(x)</code>, or to repeat the whole vector if oflength 1.  Negative or <code>NA</code> values are an error.  A<code>double</code> vector is accepted, other inputs being coerced toan integer or double vector.
non-negative integer.  The desired length of theoutput vector.  Other inputs will be coerced to a doublevector and the first element taken.  Ignored if <code>NA</code> or invalid.
non-negative integer.  Each element of <code>x</code>is repeated <code>each</code> times.  Other inputs will be coerced toan integer or double vector and the first element taken.  Treated as<code>1</code> if <code>NA</code> or invalid.
see <code>...</code> above.
a vector (of any mode including a <code>list</code>) or a factor or (for<code>rep</code> only) a <code>POSIXct</code> or <code>POSIXlt</code> or <code>Date</code>object; or an S4 object containing such an object.
further arguments to be passed to or from other methods.For the internal default method these can include:

an integer-valued vector giving the(non-negative) number of times to repeat each element if oflength <code>length(x)</code>, or to repeat the whole vector if oflength 1.  Negative or <code>NA</code> values are an error.  A<code>double</code> vector is accepted, other inputs being coerced toan integer or double vector.
non-negative integer.  The desired length of theoutput vector.  Other inputs will be coerced to a doublevector and the first element taken.  Ignored if <code>NA</code> or invalid.
non-negative integer.  Each element of <code>x</code>is repeated <code>each</code> times.  Other inputs will be coerced toan integer or double vector and the first element taken.  Treated as<code>1</code> if <code>NA</code> or invalid.
see <code>...</code> above.
a vector (of any mode including a <code>list</code>) or a factor or (for<code>rep</code> only) a <code>POSIXct</code> or <code>POSIXlt</code> or <code>Date</code>object; or an S4 object containing such an object.
further arguments to be passed to or from other methods.For the internal default method these can include:

an integer-valued vector giving the(non-negative) number of times to repeat each element if oflength <code>length(x)</code>, or to repeat the whole vector if oflength 1.  Negative or <code>NA</code> values are an error.  A<code>double</code> vector is accepted, other inputs being coerced toan integer or double vector.
non-negative integer.  The desired length of theoutput vector.  Other inputs will be coerced to a doublevector and the first element taken.  Ignored if <code>NA</code> or invalid.
non-negative integer.  Each element of <code>x</code>is repeated <code>each</code> times.  Other inputs will be coerced toan integer or double vector and the first element taken.  Treated as<code>1</code> if <code>NA</code> or invalid.
see <code>...</code> above.
date-time or date objects.
an optional time zone specification to be used for theconversion, mainly for <code>"POSIXlt"</code> objects.
character string.  Units in which the results aredesired.  Can be abbreviated.
character string.  Like <code>units</code>, except thatabbreviations are not allowed.
character string or numeric value specifying a time interval.
character specifying the format of <code>tim</code>: see<code>strptime</code>.  The default is a locale-specific time format.
an object inheriting from class <code>"difftime"</code>.
arguments to be passed to or from other methods.
a vector (of any mode including a <code>list</code>) or a factor or (for<code>rep</code> only) a <code>POSIXct</code> or <code>POSIXlt</code> or <code>Date</code>object; or an S4 object containing such an object.
further arguments to be passed to or from other methods.For the internal default method these can include:

an integer-valued vector giving the(non-negative) number of times to repeat each element if oflength <code>length(x)</code>, or to repeat the whole vector if oflength 1.  Negative or <code>NA</code> values are an error.  A<code>double</code> vector is accepted, other inputs being coerced toan integer or double vector.
non-negative integer.  The desired length of theoutput vector.  Other inputs will be coerced to a doublevector and the first element taken.  Ignored if <code>NA</code> or invalid.
non-negative integer.  Each element of <code>x</code>is repeated <code>each</code> times.  Other inputs will be coerced toan integer or double vector and the first element taken.  Treated as<code>1</code> if <code>NA</code> or invalid.
see <code>...</code> above.
a vector (of any mode including a <code>list</code>) or a factor or (for<code>rep</code> only) a <code>POSIXct</code> or <code>POSIXlt</code> or <code>Date</code>object; or an S4 object containing such an object.
further arguments to be passed to or from other methods.For the internal default method these can include:

an integer-valued vector giving the(non-negative) number of times to repeat each element if oflength <code>length(x)</code>, or to repeat the whole vector if oflength 1.  Negative or <code>NA</code> values are an error.  A<code>double</code> vector is accepted, other inputs being coerced toan integer or double vector.
non-negative integer.  The desired length of theoutput vector.  Other inputs will be coerced to a doublevector and the first element taken.  Ignored if <code>NA</code> or invalid.
non-negative integer.  Each element of <code>x</code>is repeated <code>each</code> times.  Other inputs will be coerced toan integer or double vector and the first element taken.  Treated as<code>1</code> if <code>NA</code> or invalid.
see <code>...</code> above.
a character vector with suitable numeric version strings (see‘Details’); for <code>package_version</code>, alternatively an Rversion object as obtained by <code>R.version</code>.
a logical indicating whether invalid numeric versionsshould results in an error (default) or not.
a vector (of any mode including a <code>list</code>) or a factor or (for<code>rep</code> only) a <code>POSIXct</code> or <code>POSIXlt</code> or <code>Date</code>object; or an S4 object containing such an object.
further arguments to be passed to or from other methods.For the internal default method these can include:

an integer-valued vector giving the(non-negative) number of times to repeat each element if oflength <code>length(x)</code>, or to repeat the whole vector if oflength 1.  Negative or <code>NA</code> values are an error.  A<code>double</code> vector is accepted, other inputs being coerced toan integer or double vector.
non-negative integer.  The desired length of theoutput vector.  Other inputs will be coerced to a doublevector and the first element taken.  Ignored if <code>NA</code> or invalid.
non-negative integer.  Each element of <code>x</code>is repeated <code>each</code> times.  Other inputs will be coerced toan integer or double vector and the first element taken.  Treated as<code>1</code> if <code>NA</code> or invalid.
see <code>...</code> above.
a vector (of any mode including a <code>list</code>) or a factor or (for<code>rep</code> only) a <code>POSIXct</code> or <code>POSIXlt</code> or <code>Date</code>object; or an S4 object containing such an object.
further arguments to be passed to or from other methods.For the internal default method these can include:

an integer-valued vector giving the(non-negative) number of times to repeat each element if oflength <code>length(x)</code>, or to repeat the whole vector if oflength 1.  Negative or <code>NA</code> values are an error.  A<code>double</code> vector is accepted, other inputs being coerced toan integer or double vector.
non-negative integer.  The desired length of theoutput vector.  Other inputs will be coerced to a doublevector and the first element taken.  Ignored if <code>NA</code> or invalid.
non-negative integer.  Each element of <code>x</code>is repeated <code>each</code> times.  Other inputs will be coerced toan integer or double vector and the first element taken.  Treated as<code>1</code> if <code>NA</code> or invalid.
see <code>...</code> above.
A length-one logical vector that is not <code>NA</code>.Conditions of length greater than one are currently accepted with awarning, but only the first element is used.  An error is signalledinstead when the environment variable <span class="env">_R_CHECK_LENGTH_1_CONDITION_</span>is set to true.  Other types are coerced to logicalif possible, ignoring any class.
A syntactical name for a variable.
An expression evaluating to a vector (including a list andan expression) or to a pairlist or <code>NULL</code>.  Afactor value will be coerced to a character vector.  As from <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>4.0.0 this can be a long vector.
An <em>expression</em> in a formal sense.  This is either asimple expression or a so-called <em>compound expression</em>, usuallyof the form <code>{ expr1 ; expr2 }</code>.
vector
an index vector
replacement values
a vector (atomic or list) or an <code>expression</code>object.  Other objects (including classed objects) will be coercedby <code>base::as.list</code>.
the function to be applied to each element of <code>X</code>:see ‘Details’.  In the case of functions like<code>+</code>, <code>%*%</code>, the function name must be backquoted or quoted.
optional arguments to <code>FUN</code>.
logical or character string; should the result besimplified to a vector, matrix or higher dimensional array ifpossible?  For <code>sapply</code> it must be named and not abbreviated.The default value, <code>TRUE</code>, returns a vector or matrix if appropriate,whereas if <code>simplify = "array"</code> the result may be an<code>array</code> of “rank”(<i>=</i><code>length(dim(.))</code>) one higher than the resultof <code>FUN(X[[i]])</code>.
logical; if <code>TRUE</code> and if <code>X</code> is character,use <code>X</code> as <code>names</code> for the result unless it had namesalready.  Since this argument follows <code>...</code> its name cannotbe abbreviated.
a (generalized) vector; a template for the returnvalue from FUN.  See ‘Details’.
integer: the number of replications.
the expression (a language object, usually a call)to evaluate repeatedly.
a list, typically returned from <code>lapply()</code>.
logical; if true, <code>simplify2array()</code> will produce a(“higher rank”) array when appropriate, whereas<code>higher = FALSE</code> would return a matrix (or vector) only.These two cases correspond to <code>sapply(*, simplify = "array")</code> or<code>simplify = TRUE</code>, respectively.
the name of a package, given as a name orliteral character string, or a character string, depending onwhether <code>character.only</code> is <code>FALSE</code> (default) or<code>TRUE</code>.
the position on the search list at which to attach theloaded namespace.  Can also be the name of a position on the currentsearch list as given by <code>search()</code>.
a character vector describing the location of <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>library trees to search through, or <code>NULL</code>.  The default valueof <code>NULL</code> corresponds to all libraries currently known to<code>.libPaths()</code>.Non-existent library trees are silently ignored.
a logical indicating whether <code>package</code> or<code>help</code> can be assumed to be character strings.
logical.  If it is <code>TRUE</code>,  <code>FALSE</code> or<code>TRUE</code> is returned to indicate success.
logical.  If <code>TRUE</code>, warnings areprinted about <code>conflicts</code> from attaching the newpackage.  A conflict is a function masking a function,or a non-function masking a non-function. The default is <code>TRUE</code>unless specified as <code>FALSE</code> in the <code>conflicts.policy</code> option.
a logical.  If <code>TRUE</code>, additional diagnostics areprinted.
a logical.  If <code>TRUE</code>, no message confirmingpackage attaching is printed, and most often, no errors/warnings areprinted if package attaching fails.
character string naming a package.
character vector of names of objects that can maskobjects on the search path without signaling an error when strictconflict checking is enabled
character vector of names of objects toexclude or include in the attached frame. Only one of these argumentsmay be used in a call to <code>library</code> or <code>require</code>.
logical specifying whether required packageslisted in the <code>Depends</code> clause of the <code>DESCRIPTION</code> fileshould be attached automatically.
string or name space object.
integer specifying position to attach.
<code>NULL</code> or a character vector of dependencies to berecorded in object <code>.Depends</code> in the package.
string naming the package/name space to load.
character vector specifying library search path.
Now ignored except during package installation.
Ignored except during package installation.
logical; if true, stop just after loading code.
<code>NULL</code> or a version specification (a listwith components <code>op</code> and <code>version</code>).
logical: should progress and error messages be suppressed?
string or ‘name’, see <code>as.symbol</code>,of a package, e.g., <code>"stats"</code>.
character vectors; see <code>library</code>.
further arguments to be passed to <code>loadNamespace</code>.
a condition object.
call expression.
a condition object.
expression to be evaluated.
expression to be evaluated before returning or exiting.
function.
character string.
character string.
character string naming a restart.
restart object.
object.
character string naming a condition class.
additional arguments; see details below.
a condition object.
call expression.
a condition object.
expression to be evaluated.
expression to be evaluated before returning or exiting.
function.
character string.
character string.
character string naming a restart.
restart object.
object.
character string naming a condition class.
additional arguments; see details below.
An R object, not a function or environment or <code>NULL</code>.
A value as returned by <code>tracemem</code> or <code>retracemem</code>.
Empty or one or more name or name=expression terms.
An expression.
An expression.
the name, possibly <code>quote()</code>d, of a functionto be traced or untraced.  For <code>untrace</code> or for <code>trace</code>with more than one argument, more than one name can be given in thequoted form, and the same action will be applied to each one.  For“hidden” functions such as S3 methods in a namespace,<code>where = *</code> typically needs to be specified as well.
either a function or an unevaluated expression.  Thefunction will be called or the expression will be evaluated eitherat the beginning of the call, or before those steps in the callspecified by the argument <code>at</code>.See the details section.
either a <code>function</code> or an unevaluated expression.  Thefunction will be called or the expression will be evaluated onexiting the function.See the details section.
optional numeric vector or list.  If supplied, <code>tracer</code>will be called just before the corresponding step in the body of thefunction.See the details section. 
If <code>TRUE</code> (as per default), a descriptive line isprinted before any trace expression is evaluated.
 If this argument is supplied, it should be asignature for a method for function <code>what</code>.  In this case, themethod, and <em>not</em> the function itself, is traced.
 For complicated tracing, such as tracing within a loopinside the function, you will need to insert the desired calls byediting the body of the function.  If so, supply the <code>edit</code>argument either as <code>TRUE</code>, or as the name of the editor youwant to use.  Then <code>trace()</code> will call <code>edit</code> anduse the version of the function after you edit it.  See the detailssection for additional information.
where to look for the function to betraced; by default, the top-level environment of the call to<code>trace</code>.

An important use of this argument is to trace functions from apackage which are “hidden” or called from another package.The namespace mechanism imports the functions to be called (with theexception of functions in the base package).  The functions beingcalled are <em>not</em> the same objects seen from the top-level (ingeneral, the imported packages may not even be attached).Therefore, you must ensure that the correct versions are beingtraced.  The way to do this is to set argument <code>where</code> to afunction in the namespace (or that namespace).  The tracingcomputations will then start looking in the environment of thatfunction (which will be the namespace of the corresponding package).(Yes, it's subtle, but the semantics here are central to hownamespaces work in <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>.)
logical; a call to the support function <code>tracingState</code> returns <code>TRUE</code>if tracing is globally turned on, <code>FALSE</code> otherwise.  Anargument of one or the other of those values sets the state.  If thetracing state is <code>FALSE</code>, none of the trace actions willactually occur (used, for example, by debugging functions to shutoff tracing during debugging).
arguments to the support function <code>.doTrace</code>, calls towhich are inserted into the modified function or method:<code>expr</code> is the tracing action (such as a call to<code>browser()</code>), and <code>msg</code> is a string identifying theplace where the trace action occurs.
If <code>returnValue</code> finds no return value (e.g.a function exited because of an error, restart or as a resultof evaluating a return from a caller function), it will return<code>default</code> instead.
a vector or another object for which reversal is defined.
a vector or another object for which reversal is defined.
a vector (atomic, not a list) for <code>rle()</code>;an object of class <code>"rle"</code> for <code>inverse.rle()</code>.
further arguments; ignored here.
number of significant digits for printing, see<code>print.default</code>.
character string, prepended to each printed line.
the objects to be removed, as names (unquoted) orcharacter strings (quoted).
a character vector naming objects to be removed.
where to do the removal.  By default, uses thecurrent environment.  See ‘details’ for other possibilities.
the <code>environment</code> to use.  See ‘details’.
should the enclosing frames of the environment beinspected?
character or <code>NULL</code>.  If <code>kind</code> is a characterstring, set <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>'s RNG to the kind desired.  Use <code>"default"</code> toreturn to the <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> default.  See ‘Details’ for theinterpretation of <code>NULL</code>.
character string or <code>NULL</code>.  If it is a characterstring, set the method of Normal generation.  Use <code>"default"</code>to return to the <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> default.  <code>NULL</code> makes no change.
character string or <code>NULL</code>.  If it is a characterstring, set the method of discrete uniform generation (used in <code>sample</code>, for instance).  Use <code>"default"</code> to return to the <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> default.  <code>NULL</code> makes no change.
a single value, interpreted as an integer, or <code>NULL</code>(see ‘Details’).
a character string containing a version number,e.g., <code>"1.6.2"</code>.  The default RNG configuration of the current<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> version is used if <code>vstr</code> is greater than the current version.
integer code in <code>0:k</code> for the above <code>kind</code>.
integers.  See the details for how many are required(which depends on <code>rng.kind</code>).
character or <code>NULL</code>.  If <code>kind</code> is a characterstring, set <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>'s RNG to the kind desired.  Use <code>"default"</code> toreturn to the <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> default.  See ‘Details’ for theinterpretation of <code>NULL</code>.
character string or <code>NULL</code>.  If it is a characterstring, set the method of Normal generation.  Use <code>"default"</code>to return to the <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> default.  <code>NULL</code> makes no change.
character string or <code>NULL</code>.  If it is a characterstring, set the method of discrete uniform generation (used in <code>sample</code>, for instance).  Use <code>"default"</code> to return to the <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> default.  <code>NULL</code> makes no change.
a single value, interpreted as an integer, or <code>NULL</code>(see ‘Details’).
a character string containing a version number,e.g., <code>"1.6.2"</code>.  The default RNG configuration of the current<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> version is used if <code>vstr</code> is greater than the current version.
integer code in <code>0:k</code> for the above <code>kind</code>.
integers.  See the details for how many are required(which depends on <code>rng.kind</code>).
a numeric vector.  Or, for <code>round</code> and <code>signif</code>, acomplex vector.
integer indicating the number of decimal places(<code>round</code>) or significant digits (<code>signif</code>) to be used.Negative values are allowed (see ‘Details’).
arguments to be passed to methods.
an object inheriting from <code>"POSIXt"</code> or <code>"Date"</code>.
one of the units listed.  Can be abbreviated.
arguments to be passed to or from other methods, notably<code>digits</code> for <code>round</code>.
an object inheriting from <code>"POSIXt"</code> or <code>"Date"</code>.
one of the units listed.  Can be abbreviated.
arguments to be passed to or from other methods, notably<code>digits</code> for <code>round</code>.
a matrix-like object, that is one with a two-dimensional<code>dim</code>.
a matrix dimension, i.e., an integer valued numeric vector oflength two (with non-negative entries).
a logical value indicating whether the value shouldbe returned as a factor of row labels (created if necessary)rather than as numbers.
object of class <code>"data.frame"</code>, or any other class forwhich a method has been defined.
<code>logical</code>, i.e., one of <code>FALSE, NA, TRUE</code>,indicating what should happen if the specified row names, i.e.,<code>value</code>, are invalid, e.g., duplicated or <code>NA</code>.  The default(is back compatible), <code>FALSE</code>, will signal an error, where<code>NA</code> will “automatic” row names and <code>TRUE</code> will call<code>make.names(value, unique=TRUE)</code> for constructing validnames.
an object to be coerced to character unless an integervector.  It should have (after coercion) the same length as thenumber of rows of <code>x</code> with no duplicated nor missing values.<code>NULL</code> is also allowed: see ‘Details’.
object of class <code>"data.frame"</code>, or any other class forwhich a method has been defined.
<code>logical</code>, i.e., one of <code>FALSE, NA, TRUE</code>,indicating what should happen if the specified row names, i.e.,<code>value</code>, are invalid, e.g., duplicated or <code>NA</code>.  The default(is back compatible), <code>FALSE</code>, will signal an error, where<code>NA</code> will “automatic” row names and <code>TRUE</code> will call<code>make.names(value, unique=TRUE)</code> for constructing validnames.
an object to be coerced to character unless an integervector.  It should have (after coercion) the same length as thenumber of rows of <code>x</code> with no duplicated nor missing values.<code>NULL</code> is also allowed: see ‘Details’.
object of class <code>"data.frame"</code>, or any other class forwhich a method has been defined.
<code>logical</code>, i.e., one of <code>FALSE, NA, TRUE</code>,indicating what should happen if the specified row names, i.e.,<code>value</code>, are invalid, e.g., duplicated or <code>NA</code>.  The default(is back compatible), <code>FALSE</code>, will signal an error, where<code>NA</code> will “automatic” row names and <code>TRUE</code> will call<code>make.names(value, unique=TRUE)</code> for constructing validnames.
an object to be coerced to character unless an integervector.  It should have (after coercion) the same length as thenumber of rows of <code>x</code> with no duplicated nor missing values.<code>NULL</code> is also allowed: see ‘Details’.
object of class <code>"data.frame"</code>, or any other class forwhich a method has been defined.
<code>logical</code>, i.e., one of <code>FALSE, NA, TRUE</code>,indicating what should happen if the specified row names, i.e.,<code>value</code>, are invalid, e.g., duplicated or <code>NA</code>.  The default(is back compatible), <code>FALSE</code>, will signal an error, where<code>NA</code> will “automatic” row names and <code>TRUE</code> will call<code>make.names(value, unique=TRUE)</code> for constructing validnames.
an object to be coerced to character unless an integervector.  It should have (after coercion) the same length as thenumber of rows of <code>x</code> with no duplicated nor missing values.<code>NULL</code> is also allowed: see ‘Details’.
object of class <code>"data.frame"</code>, or any other class forwhich a method has been defined.
<code>logical</code>, i.e., one of <code>FALSE, NA, TRUE</code>,indicating what should happen if the specified row names, i.e.,<code>value</code>, are invalid, e.g., duplicated or <code>NA</code>.  The default(is back compatible), <code>FALSE</code>, will signal an error, where<code>NA</code> will “automatic” row names and <code>TRUE</code> will call<code>make.names(value, unique=TRUE)</code> for constructing validnames.
an object to be coerced to character unless an integervector.  It should have (after coercion) the same length as thenumber of rows of <code>x</code> with no duplicated nor missing values.<code>NULL</code> is also allowed: see ‘Details’.
object of class <code>"data.frame"</code>, or any other class forwhich a method has been defined.
<code>logical</code>, i.e., one of <code>FALSE, NA, TRUE</code>,indicating what should happen if the specified row names, i.e.,<code>value</code>, are invalid, e.g., duplicated or <code>NA</code>.  The default(is back compatible), <code>FALSE</code>, will signal an error, where<code>NA</code> will “automatic” row names and <code>TRUE</code> will call<code>make.names(value, unique=TRUE)</code> for constructing validnames.
an object to be coerced to character unless an integervector.  It should have (after coercion) the same length as thenumber of rows of <code>x</code> with no duplicated nor missing values.<code>NULL</code> is also allowed: see ‘Details’.
an array of two or more dimensions, containing numeric,complex, integer or logical values, or a numeric data frame.  For<code>.colSums()</code> etc, a numeric, integer or logical matrix (orvector of length <code>m * n</code>).
logical.  Should missing values (including <code>NaN</code>)be omitted from the calculations?
integer: Which dimensions are regarded as ‘rows’ or‘columns’ to sum over.  For <code>row*</code>, the sum or mean isover dimensions <code>dims+1, ...</code>; for <code>col*</code> it is overdimensions <code>1:dims</code>.
the dimensions of the matrix <code>x</code> for<code>.colSums()</code> etc.
a matrix-like <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, with at least two dimensions for<code>colnames</code>.
logical. If <code>FALSE</code> and names are <code>NULL</code>, names are created.
for created names.
a valid value for that component of<code>dimnames(x)</code>.  For a matrix or array this is either<code>NULL</code> or a character vector of non-zero length equal to theappropriate dimension.
a matrix-like <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, with at least two dimensions for<code>colnames</code>.
logical. If <code>FALSE</code> and names are <code>NULL</code>, names are created.
for created names.
a valid value for that component of<code>dimnames(x)</code>.  For a matrix or array this is either<code>NULL</code> or a character vector of non-zero length equal to theappropriate dimension.
a matrix, data frame or vector of numeric data.  Missingvalues are allowed.  A numeric vector will be treated as a column vector.
a vector or factor giving the grouping, with one elementper row of <code>x</code>.  Missing values will be treated as anothergroup and a warning will be given.
if <code>TRUE</code>, then the result will be in order of<code>sort(unique(group))</code>, if <code>FALSE</code>, it will be in the orderthat groups were encountered.
logical (<code>TRUE</code> or <code>FALSE</code>).  Should <code>NA</code>(including <code>NaN</code>) values be discarded?
other arguments to be passed to or from methods
a matrix, data frame or vector of numeric data.  Missingvalues are allowed.  A numeric vector will be treated as a column vector.
a vector or factor giving the grouping, with one elementper row of <code>x</code>.  Missing values will be treated as anothergroup and a warning will be given.
if <code>TRUE</code>, then the result will be in order of<code>sort(unique(group))</code>, if <code>FALSE</code>, it will be in the orderthat groups were encountered.
logical (<code>TRUE</code> or <code>FALSE</code>).  Should <code>NA</code>(including <code>NaN</code>) values be discarded?
other arguments to be passed to or from methods
a matrix, data frame or vector of numeric data.  Missingvalues are allowed.  A numeric vector will be treated as a column vector.
a vector or factor giving the grouping, with one elementper row of <code>x</code>.  Missing values will be treated as anothergroup and a warning will be given.
if <code>TRUE</code>, then the result will be in order of<code>sort(unique(group))</code>, if <code>FALSE</code>, it will be in the orderthat groups were encountered.
logical (<code>TRUE</code> or <code>FALSE</code>).  Should <code>NA</code>(including <code>NaN</code>) values be discarded?
other arguments to be passed to or from methods
an array of two or more dimensions, containing numeric,complex, integer or logical values, or a numeric data frame.  For<code>.colSums()</code> etc, a numeric, integer or logical matrix (orvector of length <code>m * n</code>).
logical.  Should missing values (including <code>NaN</code>)be omitted from the calculations?
integer: Which dimensions are regarded as ‘rows’ or‘columns’ to sum over.  For <code>row*</code>, the sum or mean isover dimensions <code>dims+1, ...</code>; for <code>col*</code> it is overdimensions <code>1:dims</code>.
the dimensions of the matrix <code>x</code> for<code>.colSums()</code> etc.
either a vector of one or more elements from which to choose,or a positive integer.  See ‘Details.’
a positive number, the number of items to choose from.  See‘Details.’
a non-negative integer giving the number of items to choose.
should sampling be with replacement?
a vector of probability weights for obtaining the elementsof the vector being sampled.
<code>logical</code> indicating if the hash-version ofthe algorithm should be used.  Can only be used for <code>replace =      FALSE</code>, <code>prob = NULL</code>, and <code>size &lt;= n/2</code>, and reallyshould be used for large <code>n</code>, as <code>useHash=FALSE</code> will usememory proportional to <code>n</code>.
either a vector of one or more elements from which to choose,or a positive integer.  See ‘Details.’
a positive number, the number of items to choose from.  See‘Details.’
a non-negative integer giving the number of items to choose.
should sampling be with replacement?
a vector of probability weights for obtaining the elementsof the vector being sampled.
<code>logical</code> indicating if the hash-version ofthe algorithm should be used.  Can only be used for <code>replace =      FALSE</code>, <code>prob = NULL</code>, and <code>size &lt;= n/2</code>, and reallyshould be used for large <code>n</code>, as <code>useHash=FALSE</code> will usememory proportional to <code>n</code>.
a vector (atomic or list) or an <code>expression</code>object.  Other objects (including classed objects) will be coercedby <code>base::as.list</code>.
the function to be applied to each element of <code>X</code>:see ‘Details’.  In the case of functions like<code>+</code>, <code>%*%</code>, the function name must be backquoted or quoted.
optional arguments to <code>FUN</code>.
logical or character string; should the result besimplified to a vector, matrix or higher dimensional array ifpossible?  For <code>sapply</code> it must be named and not abbreviated.The default value, <code>TRUE</code>, returns a vector or matrix if appropriate,whereas if <code>simplify = "array"</code> the result may be an<code>array</code> of “rank”(<i>=</i><code>length(dim(.))</code>) one higher than the resultof <code>FUN(X[[i]])</code>.
logical; if <code>TRUE</code> and if <code>X</code> is character,use <code>X</code> as <code>names</code> for the result unless it had namesalready.  Since this argument follows <code>...</code> its name cannotbe abbreviated.
a (generalized) vector; a template for the returnvalue from FUN.  See ‘Details’.
integer: the number of replications.
the expression (a language object, usually a call)to evaluate repeatedly.
a list, typically returned from <code>lapply()</code>.
logical; if true, <code>simplify2array()</code> will produce a(“higher rank”) array when appropriate, whereas<code>higher = FALSE</code> would return a matrix (or vector) only.These two cases correspond to <code>sapply(*, simplify = "array")</code> or<code>simplify = TRUE</code>, respectively.
the names of the objects to be saved (as symbols orcharacter strings).
A character vector containing the names of objects to besaved.
a (writable binary-mode) connection or the name of thefile where the data will be saved (when tilde expansionis done).  Must be a file name for <code>save.image</code> or<code>version = 1</code>.
if <code>TRUE</code>, an ASCII representation of the data iswritten.  The default value of <code>ascii</code> is <code>FALSE</code> whichleads to a binary file being written.  If <code>NA</code> and<code>version &gt;= 2</code>, a different ASCII representation is used whichwrites double/complex numbers as binary fractions.
the workspace format version to use.  <code>NULL</code>specifies the current default format (3).  Version 1 was the defaultfrom <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> 0.99.0 to <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> 1.3.1 and version 2 from <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> 1.4.0 to 3.5.0.Version 3 is supported from <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> 3.5.0.
environment to search for objects to be saved.
logical or character string specifying whether savingto a named file is to use compression.  <code>TRUE</code> corresponds to<code>gzip</code> compression, and character strings <code>"gzip"</code>,<code>"bzip2"</code> or <code>"xz"</code> specify the type ofcompression.  Ignored when <code>file</code> is a connection andfor workspace format version 1.
integer: the level of compression to beused.  Defaults to <code>6</code> for <code>gzip</code> compression and to<code>9</code> for <code>bzip2</code> or <code>xz</code> compression.  See thehelp for <code>file</code> for possible values and their merits.
logical: should objects which are promises beforced before saving?
logical: should the existence of the objects bechecked before starting to save (and in particular before openingthe file/connection)?  Does not apply to version 1 saves.
logical.  If <code>TRUE</code>, a temporary file is used forcreating the saved workspace.  The temporary file is renamed to<code>file</code> if the save succeeds.  This preserves an existingworkspace <code>file</code> if the save fails, but at the cost of usingextra disk space during the save.
the names of the objects to be saved (as symbols orcharacter strings).
A character vector containing the names of objects to besaved.
a (writable binary-mode) connection or the name of thefile where the data will be saved (when tilde expansionis done).  Must be a file name for <code>save.image</code> or<code>version = 1</code>.
if <code>TRUE</code>, an ASCII representation of the data iswritten.  The default value of <code>ascii</code> is <code>FALSE</code> whichleads to a binary file being written.  If <code>NA</code> and<code>version &gt;= 2</code>, a different ASCII representation is used whichwrites double/complex numbers as binary fractions.
the workspace format version to use.  <code>NULL</code>specifies the current default format (3).  Version 1 was the defaultfrom <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> 0.99.0 to <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> 1.3.1 and version 2 from <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> 1.4.0 to 3.5.0.Version 3 is supported from <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> 3.5.0.
environment to search for objects to be saved.
logical or character string specifying whether savingto a named file is to use compression.  <code>TRUE</code> corresponds to<code>gzip</code> compression, and character strings <code>"gzip"</code>,<code>"bzip2"</code> or <code>"xz"</code> specify the type ofcompression.  Ignored when <code>file</code> is a connection andfor workspace format version 1.
integer: the level of compression to beused.  Defaults to <code>6</code> for <code>gzip</code> compression and to<code>9</code> for <code>bzip2</code> or <code>xz</code> compression.  See thehelp for <code>file</code> for possible values and their merits.
logical: should objects which are promises beforced before saving?
logical: should the existence of the objects bechecked before starting to save (and in particular before openingthe file/connection)?  Does not apply to version 1 saves.
logical.  If <code>TRUE</code>, a temporary file is used forcreating the saved workspace.  The temporary file is renamed to<code>file</code> if the save succeeds.  This preserves an existingworkspace <code>file</code> if the save fails, but at the cost of usingextra disk space during the save.
<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object to serialize.
a connection or the name of the file where the <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> objectis saved to or read from.
a logical.  If <code>TRUE</code> or <code>NA</code>, an ASCIIrepresentation is written; otherwise (default), a binary one is used.See the comments in the help for <code>save</code>.
the workspace format version to use.  <code>NULL</code>specifies the current default version (3). The only other supportedvalue is 2, the default from <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> 1.4.0 to <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> 3.5.0.
a logical specifying whether saving to a named file isto use <code>"gzip"</code> compression, or one of <code>"gzip"</code>,<code>"bzip2"</code> or <code>"xz"</code> to indicate the type of compression tobe used.  Ignored if <code>file</code> is a connection.
a hook function for handling reference objects.
a numeric matrix(like object).
either a logical value or numeric-alike vector of lengthequal to the number of columns of <code>x</code>, where‘numeric-alike’ means that <code>as.numeric(.)</code> willbe applied successfully if <code>is.numeric(.)</code> is not true.
either a logical value or a numeric-alike vector of lengthequal to the number of columns of <code>x</code>.
a numeric matrix(like object).
either a logical value or numeric-alike vector of lengthequal to the number of columns of <code>x</code>, where‘numeric-alike’ means that <code>as.numeric(.)</code> willbe applied successfully if <code>is.numeric(.)</code> is not true.
either a logical value or a numeric-alike vector of lengthequal to the number of columns of <code>x</code>.
the name of a file to read data values from.  If thespecified file is <code>""</code>, then input is taken from the keyboard(or whatever <code>stdin()</code> reads if input is redirected or<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> is embedded).(In this case input can be terminated by a blank line or an EOFsignal, <span class="samp">Ctrl-D</span> on Unix and <span class="samp">Ctrl-Z</span> on Windows.)

Otherwise, the file name is interpreted <em>relative</em> to thecurrent working directory (given by <code>getwd()</code>),unless it specifies an <em>absolute</em> path.Tilde-expansion is performed where supported.When running <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> from a script, <code>file = "stdin"</code> can be used torefer to the process's <code>stdin</code> file stream.

This can be a compressed file (see <code>file</code>).

Alternatively, <code>file</code> can be a <code>connection</code>,which will be opened if necessary, and if so closed at the end ofthe function call.  Whatever mode the connection is opened in,any of LF, CRLF or CR will be accepted as the EOL marker for a lineand so will match <code>sep = "\n"</code>.

<code>file</code> can also be a complete URL.  (For the supported URLschemes, see the ‘URLs’ section of the help for<code>url</code>.)

To read a data file not in the current encoding (for example aLatin-1 file in a UTF-8 locale or conversely) use a<code>file</code> connection setting its <code>encoding</code> argument(or <code>scan</code>'s <code>fileEncoding</code> argument).
the type of <code>what</code> gives the type of data tobe read.  (Here ‘type’ is used in the sense of<code>typeof</code>.)  The supported types are <code>logical</code>,<code>integer</code>, <code>numeric</code>, <code>complex</code>, <code>character</code>,<code>raw</code> and <code>list</code>.  If <code>what</code> is a list, it isassumed that the lines of the data file are records each containing<code>length(what)</code> items (‘fields’) and the list componentsshould have elements which are one of the first six (atomic)types listed or <code>NULL</code>, see section ‘Details’ below.
the maximum number of data values to be read, or if<code>what</code> is a list, the maximum number of records to be read.  Ifomitted or not positive or an invalid value for an integer(and <code>nlines</code> is not set to a positive value), <code>scan</code> willread to the end of <code>file</code>.
integer: the maximum number of data values to be read, defaulting tono limit.  Invalid values will be ignored.
by default, scan expects to read ‘white-space’delimited input fields.  Alternatively, <code>sep</code> can be used tospecify a character which delimits fields.  A field is alwaysdelimited by an end-of-line marker unless it is quoted.

If specified this should be the empty character string (the default)or <code>NULL</code> or a character string containing just one single-bytecharacter.
the set of quoting characters as a single characterstring or <code>NULL</code>.  In a multibyte locale the quoting charactersmust be ASCII (single-byte).
decimal point character.  This should be a character stringcontaining just one single-byte character.  (<code>NULL</code> and azero-length character vector are also accepted, and taken as thedefault.)
the number of  lines of the input file to skip beforebeginning to read data values.
if positive, the maximum number of lines of data to be read.
character vector.  Elements of this vector are to beinterpreted as missing (<code>NA</code>) values.  Blank fields arealso considered to be missing values in logical, integer, numericand complex fields.  Note that the test happens <em>after</em> white space is stripped from the input, so <code>na.strings</code> values may need their own white space stripped in advance.
logical: if <code>TRUE</code>, <code>scan</code> will flush to theend of the line after reading the last of the fields requested.This allows putting comments after the last field, but precludesputting more that one record on a line.
logical: if <code>TRUE</code>, <code>scan</code> will implicitly addempty fields to any lines with fewer fields than implied by<code>what</code>.
vector of logical value(s) corresponding to itemsin the <code>what</code> argument.  It is used only when <code>sep</code> hasbeen specified, and allows the stripping of leading and trailing‘white space’ from <code>character</code> fields (<code>numeric</code> fieldsare always stripped).  Note: white space inside quoted strings isnot stripped.

If <code>strip.white</code> is of length 1, it applies to all fields;otherwise, if <code>strip.white[i]</code> is <code>TRUE</code> <em>and</em> the<code>i</code>-th field is of mode character (because <code>what[i]</code> is)then the leading and trailing unquoted white space from field <code>i</code> isstripped.
logical: if <code>FALSE</code> (default), scan() will print aline, saying how many items have been read.
logical: if <code>TRUE</code> blank lines in theinput are ignored, except when counting <code>skip</code> and <code>nlines</code>.
logical.  Only used if <code>what</code> is a list.  If<code>FALSE</code>, all of a record must appear on one line (but more thanone record can appear on a single line).  Note that using <code>fill = TRUE</code>implies that a record will be terminated at the end of a line.
character: a character vector of length onecontaining a single character or an empty string.  Use <code>""</code> toturn off the interpretation of comments altogether (the default).
logical.  Should C-style escapes such as<span class="samp">\n</span> be processed (the default) or read verbatim?   Note that ifnot within quotes these could be interpreted as a delimiter (but notas a comment character).

The escapes which are interpreted are the control characters<span class="samp">\a, \b, \f, \n, \r, \t, \v</span> and octal andhexadecimal representations like <span class="samp">\040</span> and <span class="samp">\0x2A</span>.  Anyother escaped character is treated as itself, including backslash.Note that Unicode escapes (starting <span class="samp">\u</span> or <span class="samp">\U</span>: seeQuotes) are never processed.
character string: if non-empty declares theencoding used on a file (not a connection nor the keyboard) so thecharacter data can be re-encoded.  See the ‘Encoding’ sectionof the help for <code>file</code>, and the ‘R DataImport/Export Manual’.
encoding to be assumed for input strings.  If thevalue is <code>"latin1"</code> or <code>"UTF-8"</code> it is used to markcharacter strings as known to be in Latin-1 or UTF-8: it is not usedto re-encode the input (see <code>fileEncoding</code>).See also ‘Details’.
character string: if <code>file</code> is not supplied and this is,then data are read from the value of <code>text</code> via a text connection.
logical: should nuls be skipped when reading characterfields?
a connection.
numeric.  A file position (relative to the originspecified by <code>origin</code>), or <code>NA</code>.
character string.  Empty or <code>"read"</code> or <code>"write"</code>,partial matches allowed.
character string.  One of <code>"start"</code>, <code>"current"</code>,<code>"end"</code>: see ‘Details’.
further arguments passed to or from other methods.
a connection.
numeric.  A file position (relative to the originspecified by <code>origin</code>), or <code>NA</code>.
character string.  Empty or <code>"read"</code> or <code>"write"</code>,partial matches allowed.
character string.  One of <code>"start"</code>, <code>"current"</code>,<code>"end"</code>: see ‘Details’.
further arguments passed to or from other methods.
arguments passed to or from methods.
the starting and (maximal) end values of thesequence.  Of length <code>1</code> unless just <code>from</code> is supplied asan unnamed argument.
number: increment of the sequence.
desired length of the sequence.  Anon-negative number, which for <code>seq</code> and <code>seq.int</code> will berounded up if fractional.
take the length from the length of this argument.
arguments passed to or from methods.
the starting and (maximal) end values of thesequence.  Of length <code>1</code> unless just <code>from</code> is supplied asan unnamed argument.
number: increment of the sequence.
desired length of the sequence.  Anon-negative number, which for <code>seq</code> and <code>seq.int</code> will berounded up if fractional.
take the length from the length of this argument.
arguments passed to or from methods.
the starting and (maximal) end values of thesequence.  Of length <code>1</code> unless just <code>from</code> is supplied asan unnamed argument.
number: increment of the sequence.
desired length of the sequence.  Anon-negative number, which for <code>seq</code> and <code>seq.int</code> will berounded up if fractional.
take the length from the length of this argument.
starting date.  Required
end date.  Optional.
increment of the sequence.  Optional.  See ‘Details’.
integer, optional.  Desired length of the sequence.
take the length from the length of this argument.
arguments passed to or from other methods.
arguments passed to or from methods.
the starting and (maximal) end values of thesequence.  Of length <code>1</code> unless just <code>from</code> is supplied asan unnamed argument.
number: increment of the sequence.
desired length of the sequence.  Anon-negative number, which for <code>seq</code> and <code>seq.int</code> will berounded up if fractional.
take the length from the length of this argument.
arguments passed to or from methods.
the starting and (maximal) end values of thesequence.  Of length <code>1</code> unless just <code>from</code> is supplied asan unnamed argument.
number: increment of the sequence.
desired length of the sequence.  Anon-negative number, which for <code>seq</code> and <code>seq.int</code> will berounded up if fractional.
take the length from the length of this argument.
starting date.  Required.
end date.  Optional.
increment of the sequence.  Optional.  See ‘Details’.
integer, optional.  Desired length of the sequence.
take the length from the length of this argument.
arguments passed to or from other methods.
coerced to a non-negative integer vector each element of whichspecifies the length of a sequence.
coerced to an integer vector each element of whichspecifies the first element of a sequence.
coerced to an integer vector each element of whichspecifies the step size between elements of a sequence.
additional arguments passed to methods.
coerced to a non-negative integer vector each element of whichspecifies the length of a sequence.
coerced to an integer vector each element of whichspecifies the first element of a sequence.
coerced to an integer vector each element of whichspecifies the step size between elements of a sequence.
additional arguments passed to methods.
<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object to serialize.
an open connection or (for <code>serialize</code>)<code>NULL</code> or (for <code>unserialize</code>) a raw vector(see ‘Details’).
a logical.  If <code>TRUE</code> or <code>NA</code>, an ASCIIrepresentation is written; otherwise (default) a binary one.See also the comments in the help for <code>save</code>.
a logical: if a binary representation is used, should abig-endian one (XDR) be used?
the workspace format version to use.  <code>NULL</code>specifies the current default version (3). The only other supportedvalue is 2, the default from <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> 1.4.0 to <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> 3.5.0.
a hook function for handling reference objects.
character string.  A description of the connection:see ‘Details’.
character string.  A description of how to open the connection(if it should be opened initially).  See section ‘Modes’ forpossible values.
logical.  See the ‘Blocking’ section.
The name of the encoding to be assumed.  See the‘Encoding’ section.
logical.  If true, a ‘raw’ interface is used whichwill be more suitable for arguments which are not regular files,e.g. character devices.  This suppresses the check for a compressedfile when opening for text-mode reading, and asserts that the‘file’ may not be seekable.
character string, partially matched to<code>c("default", "internal", "wininet", "libcurl")</code>:see ‘Details’.
named character vector of HTTP headers to use in HTTPrequests.  It is ignored for non-HTTP URLs.  The <code>User-Agent</code>header, coming from the <code>HTTPUserAgent</code> option (see<code>options</code>) is used as the first header, automatically.
integer in 0–9.  The amount of compression to beapplied when writing, from none to maximal available.  For<code>xzfile</code> can also be negative: see the ‘Compression’section.
numeric: the timeout (in seconds) to be used for thisconnection.  Beware that some OSes may treat very large values aszero: however the POSIX standard requires values up to 31 days to besupported.
optional character vector with options. Currently only<code>"no-delay"</code> is supported on TCP sockets.
a filename within a zip file.
character string.  Host name for the port.
integer.  The TCP port number.
logical.  Should the socket be a client or a server?
a server socket listening for connections.
a connection.
character string.  Currently ignored.
character string.  Empty or <code>"read"</code> or <code>"write"</code>,partial matches allowed.
arguments passed to or from other methods.
character or <code>NULL</code>.  If <code>kind</code> is a characterstring, set <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>'s RNG to the kind desired.  Use <code>"default"</code> toreturn to the <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> default.  See ‘Details’ for theinterpretation of <code>NULL</code>.
character string or <code>NULL</code>.  If it is a characterstring, set the method of Normal generation.  Use <code>"default"</code>to return to the <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> default.  <code>NULL</code> makes no change.
character string or <code>NULL</code>.  If it is a characterstring, set the method of discrete uniform generation (used in <code>sample</code>, for instance).  Use <code>"default"</code> to return to the <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> default.  <code>NULL</code> makes no change.
a single value, interpreted as an integer, or <code>NULL</code>(see ‘Details’).
a character string containing a version number,e.g., <code>"1.6.2"</code>.  The default RNG configuration of the current<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> version is used if <code>vstr</code> is greater than the current version.
integer code in <code>0:k</code> for the above <code>kind</code>.
integers.  See the details for how many are required(which depends on <code>rng.kind</code>).
vectors (of the same mode) containing a sequenceof items (conceptually) with no duplicated values.
vectors (of the same mode) containing a sequenceof items (conceptually) with no duplicated values.
character string: the hook name
character string: the package/namespace name
character string: an event for the package.  Can be abbreviated.
A function or a list of functions, or for <code>action = "replace"</code>, <code>NULL</code> 
The action to be taken.  Can be abbreviated.
string or namespace environment.
logical.
environment.
namespace environment.
character vector.
optional character vector.
namespace environment.
string naming the package/namespace to load.
vector of package names parallel to <code>generics</code>.
character vector specifying library.
logical.
character.
character.
environment.
a 3-column character matrix.
character.
any object.
character arguments.
the methods table name.
symbol: name of namespace
character vector naming symbols to exclude from theimport, particularly useful when <code>vars</code> is missing.
double (of length one).  Set a limit onthe total or elapsed cpu time in seconds, respectively.
logical.  If <code>TRUE</code>, the limits apply only tothe rest of the current computation.
double (of length one).  Set a limit onthe total or elapsed cpu time in seconds, respectively.
logical.  If <code>TRUE</code>, the limits apply only tothe rest of the current computation.
A character string: tilde expansion will be done.
logical: if true all connections, including closed onesand the standard ones are displayed.  If false only open user-createdconnections are included.
integer: a row number of the table given by<code>showConnections</code>.
a connection.
a character vector, usually of length one.
character: the type of shell quoting.  Partial matching issupported.  <code>"cmd"</code> and <code>"cmd2"</code> refer to the Windows shell.<code>"cmd"</code> is the default under Windows.
a numeric vector
a condition object.
call expression.
a condition object.
expression to be evaluated.
expression to be evaluated before returning or exiting.
function.
character string.
character string.
character string naming a restart.
restart object.
object.
character string naming a condition class.
additional arguments; see details below.
a numeric vector.  Or, for <code>round</code> and <code>signif</code>, acomplex vector.
integer indicating the number of decimal places(<code>round</code>) or significant digits (<code>signif</code>) to be used.Negative values are allowed (see ‘Details’).
arguments to be passed to methods.
a condition object.
call expression.
a condition object.
expression to be evaluated.
expression to be evaluated before returning or exiting.
function.
character string.
character string.
character string naming a restart.
restart object.
object.
character string naming a condition class.
additional arguments; see details below.
a condition object.
call expression.
a condition object.
expression to be evaluated.
expression to be evaluated before returning or exiting.
function.
character string.
character string.
character string naming a restart.
restart object.
object.
character string naming a condition class.
additional arguments; see details below.
a condition object.
call expression.
a condition object.
expression to be evaluated.
expression to be evaluated before returning or exiting.
function.
character string.
character string.
character string naming a restart.
restart object.
object.
character string naming a condition class.
additional arguments; see details below.
a condition object.
call expression.
a condition object.
expression to be evaluated.
expression to be evaluated before returning or exiting.
function.
character string.
character string.
character string naming a restart.
restart object.
object.
character string naming a condition class.
additional arguments; see details below.
a vector (atomic or list) or an <code>expression</code>object.  Other objects (including classed objects) will be coercedby <code>base::as.list</code>.
the function to be applied to each element of <code>X</code>:see ‘Details’.  In the case of functions like<code>+</code>, <code>%*%</code>, the function name must be backquoted or quoted.
optional arguments to <code>FUN</code>.
logical or character string; should the result besimplified to a vector, matrix or higher dimensional array ifpossible?  For <code>sapply</code> it must be named and not abbreviated.The default value, <code>TRUE</code>, returns a vector or matrix if appropriate,whereas if <code>simplify = "array"</code> the result may be an<code>array</code> of “rank”(<i>=</i><code>length(dim(.))</code>) one higher than the resultof <code>FUN(X[[i]])</code>.
logical; if <code>TRUE</code> and if <code>X</code> is character,use <code>X</code> as <code>names</code> for the result unless it had namesalready.  Since this argument follows <code>...</code> its name cannotbe abbreviated.
a (generalized) vector; a template for the returnvalue from FUN.  See ‘Details’.
integer: the number of replications.
the expression (a language object, usually a call)to evaluate repeatedly.
a list, typically returned from <code>lapply()</code>.
logical; if true, <code>simplify2array()</code> will produce a(“higher rank”) array when appropriate, whereas<code>higher = FALSE</code> would return a matrix (or vector) only.These two cases correspond to <code>sapply(*, simplify = "array")</code> or<code>simplify = TRUE</code>, respectively.
numeric or complex vectors.
A non-negative integer specifying the desired length.Double values will be coerced to integer:supplying an argument of length other than one is an error.
object to be coerced or tested.
further arguments passed to or from other methods.
a numeric or complex vector
a writable connection or a character string naming thefile to write to, or <code>NULL</code> to stop sink-ing.
logical.  If <code>TRUE</code>, output will be appended to<code>file</code>; otherwise, it will overwrite the contents of<code>file</code>.
character string.  Either the output stream or the messagesstream.  The name will be partially matched so can be abbreviated.
logical: if <code>TRUE</code>, output will be sent to the newsink and to the current output stream, like the Unix program <code>tee</code>.
a writable connection or a character string naming thefile to write to, or <code>NULL</code> to stop sink-ing.
logical.  If <code>TRUE</code>, output will be appended to<code>file</code>; otherwise, it will overwrite the contents of<code>file</code>.
character string.  Either the output stream or the messagesstream.  The name will be partially matched so can be abbreviated.
logical: if <code>TRUE</code>, output will be sent to the newsink and to the current output stream, like the Unix program <code>tee</code>.
numeric or complex vectors.
an array.  If <code>x</code> has no dimension attribute, it isconsidered a one-dimensional array.
an integer vector giving the dimension numbers to slice by.
character string.  A description of the connection:see ‘Details’.
character string.  A description of how to open the connection(if it should be opened initially).  See section ‘Modes’ forpossible values.
logical.  See the ‘Blocking’ section.
The name of the encoding to be assumed.  See the‘Encoding’ section.
logical.  If true, a ‘raw’ interface is used whichwill be more suitable for arguments which are not regular files,e.g. character devices.  This suppresses the check for a compressedfile when opening for text-mode reading, and asserts that the‘file’ may not be seekable.
character string, partially matched to<code>c("default", "internal", "wininet", "libcurl")</code>:see ‘Details’.
named character vector of HTTP headers to use in HTTPrequests.  It is ignored for non-HTTP URLs.  The <code>User-Agent</code>header, coming from the <code>HTTPUserAgent</code> option (see<code>options</code>) is used as the first header, automatically.
integer in 0–9.  The amount of compression to beapplied when writing, from none to maximal available.  For<code>xzfile</code> can also be negative: see the ‘Compression’section.
numeric: the timeout (in seconds) to be used for thisconnection.  Beware that some OSes may treat very large values aszero: however the POSIX standard requires values up to 31 days to besupported.
optional character vector with options. Currently only<code>"no-delay"</code> is supported on TCP sockets.
a filename within a zip file.
character string.  Host name for the port.
integer.  The TCP port number.
logical.  Should the socket be a client or a server?
a server socket listening for connections.
a connection.
character string.  Currently ignored.
character string.  Empty or <code>"read"</code> or <code>"write"</code>,partial matches allowed.
arguments passed to or from other methods.
character string.  A description of the connection:see ‘Details’.
character string.  A description of how to open the connection(if it should be opened initially).  See section ‘Modes’ forpossible values.
logical.  See the ‘Blocking’ section.
The name of the encoding to be assumed.  See the‘Encoding’ section.
logical.  If true, a ‘raw’ interface is used whichwill be more suitable for arguments which are not regular files,e.g. character devices.  This suppresses the check for a compressedfile when opening for text-mode reading, and asserts that the‘file’ may not be seekable.
character string, partially matched to<code>c("default", "internal", "wininet", "libcurl")</code>:see ‘Details’.
named character vector of HTTP headers to use in HTTPrequests.  It is ignored for non-HTTP URLs.  The <code>User-Agent</code>header, coming from the <code>HTTPUserAgent</code> option (see<code>options</code>) is used as the first header, automatically.
integer in 0–9.  The amount of compression to beapplied when writing, from none to maximal available.  For<code>xzfile</code> can also be negative: see the ‘Compression’section.
numeric: the timeout (in seconds) to be used for thisconnection.  Beware that some OSes may treat very large values aszero: however the POSIX standard requires values up to 31 days to besupported.
optional character vector with options. Currently only<code>"no-delay"</code> is supported on TCP sockets.
a filename within a zip file.
character string.  Host name for the port.
integer.  The TCP port number.
logical.  Should the socket be a client or a server?
a server socket listening for connections.
a connection.
character string.  Currently ignored.
character string.  Empty or <code>"read"</code> or <code>"write"</code>,partial matches allowed.
arguments passed to or from other methods.
list of open socket connections and server sockets.
logical.  If <code>TRUE</code> wait for corresponding socket tobecome available for writing; otherwise wait for it to becomeavailable for reading or for accepting an incomingconnection (server sockets).
numeric or <code>NULL</code>. Time in seconds to wait for asocket to become available; <code>NULL</code> means waitindefinitely.
character string.  A description of the connection:see ‘Details’.
character string.  A description of how to open the connection(if it should be opened initially).  See section ‘Modes’ forpossible values.
logical.  See the ‘Blocking’ section.
The name of the encoding to be assumed.  See the‘Encoding’ section.
logical.  If true, a ‘raw’ interface is used whichwill be more suitable for arguments which are not regular files,e.g. character devices.  This suppresses the check for a compressedfile when opening for text-mode reading, and asserts that the‘file’ may not be seekable.
character string, partially matched to<code>c("default", "internal", "wininet", "libcurl")</code>:see ‘Details’.
named character vector of HTTP headers to use in HTTPrequests.  It is ignored for non-HTTP URLs.  The <code>User-Agent</code>header, coming from the <code>HTTPUserAgent</code> option (see<code>options</code>) is used as the first header, automatically.
integer in 0–9.  The amount of compression to beapplied when writing, from none to maximal available.  For<code>xzfile</code> can also be negative: see the ‘Compression’section.
numeric: the timeout (in seconds) to be used for thisconnection.  Beware that some OSes may treat very large values aszero: however the POSIX standard requires values up to 31 days to besupported.
optional character vector with options. Currently only<code>"no-delay"</code> is supported on TCP sockets.
a filename within a zip file.
character string.  Host name for the port.
integer.  The TCP port number.
logical.  Should the socket be a client or a server?
a server socket listening for connections.
a connection.
character string.  Currently ignored.
character string.  Empty or <code>"read"</code> or <code>"write"</code>,partial matches allowed.
arguments passed to or from other methods.
a square numeric or complex matrix containing the coefficients ofthe linear system.  Logical matrices are coerced to numeric.
a numeric or complex vector or matrix giving the right-handside(s) of the linear system.  If missing, <code>b</code> is taken to bean identity matrix and <code>solve</code> will return the inverse of <code>a</code>.
the tolerance for detecting linear dependencies in thecolumns of <code>a</code>.  The default is <code>.Machine$double.eps</code>. Notcurrently used with complex matrices <code>a</code>.
logical.  Defunct and an error.
further arguments passed to or from other methods
a square numeric or complex matrix containing the coefficients ofthe linear system.  Logical matrices are coerced to numeric.
a numeric or complex vector or matrix giving the right-handside(s) of the linear system.  If missing, <code>b</code> is taken to bean identity matrix and <code>solve</code> will return the inverse of <code>a</code>.
the tolerance for detecting linear dependencies in thecolumns of <code>a</code>.  The default is <code>.Machine$double.eps</code>. Notcurrently used with complex matrices <code>a</code>.
logical.  Defunct and an error.
further arguments passed to or from other methods
a numeric or complex matrix whose QR decomposition is to becomputed.  Logical matrices are coerced to numeric.
the tolerance for detecting linear dependencies in thecolumns of <code>x</code>. Only used if <code>LAPACK</code> is false and<code>x</code> is real.
a QR decomposition of the type computed by <code>qr</code>.
a vector or matrix of right-hand sides of equations.
a QR decomposition or (<code>qr.solve</code> only) a rectangular matrix.
effective rank.
logical.  For real <code>x</code>, if true use LAPACKotherwise use LINPACK (the default).
further arguments passed to or from other methods
for <code>sort</code> an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object with a class or a numeric,complex, character or logical vector.  For <code>sort.int</code>, anumeric, complex, character or logical vector, or a factor.
logical.  Should the sort be increasing or decreasing?For the <code>"radix"</code> method, this can be a vector oflength equal to the number of arguments in <code>...</code>. For theother methods, it must be length one. Not available for partial sorting.
arguments to be passed to or from methods or (for thedefault methods and objects without a class) to <code>sort.int</code>.
for controlling the treatment of <code>NA</code>s.If <code>TRUE</code>, missing values in the data are put last; if<code>FALSE</code>, they are put first; if <code>NA</code>, they are removed.
<code>NULL</code> or a  vector of indices for partial sorting.
character string specifying the algorithm used.  Notavailable for partial sorting.  Can be abbreviated.
logical indicating if the ordering index vector shouldbe returned as well. Supported by <code>method == "radix"</code> for any<code>na.last</code> mode and data type, and the other methods when<code>na.last = NA</code> (the default) and fully sorting non-factors.
for <code>sort</code> an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object with a class or a numeric,complex, character or logical vector.  For <code>sort.int</code>, anumeric, complex, character or logical vector, or a factor.
logical.  Should the sort be increasing or decreasing?For the <code>"radix"</code> method, this can be a vector oflength equal to the number of arguments in <code>...</code>. For theother methods, it must be length one. Not available for partial sorting.
arguments to be passed to or from methods or (for thedefault methods and objects without a class) to <code>sort.int</code>.
for controlling the treatment of <code>NA</code>s.If <code>TRUE</code>, missing values in the data are put last; if<code>FALSE</code>, they are put first; if <code>NA</code>, they are removed.
<code>NULL</code> or a  vector of indices for partial sorting.
character string specifying the algorithm used.  Notavailable for partial sorting.  Can be abbreviated.
logical indicating if the ordering index vector shouldbe returned as well. Supported by <code>method == "radix"</code> for any<code>na.last</code> mode and data type, and the other methods when<code>na.last = NA</code> (the default) and fully sorting non-factors.
for <code>sort</code> an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object with a class or a numeric,complex, character or logical vector.  For <code>sort.int</code>, anumeric, complex, character or logical vector, or a factor.
logical.  Should the sort be increasing or decreasing?For the <code>"radix"</code> method, this can be a vector oflength equal to the number of arguments in <code>...</code>. For theother methods, it must be length one. Not available for partial sorting.
arguments to be passed to or from methods or (for thedefault methods and objects without a class) to <code>sort.int</code>.
for controlling the treatment of <code>NA</code>s.If <code>TRUE</code>, missing values in the data are put last; if<code>FALSE</code>, they are put first; if <code>NA</code>, they are removed.
<code>NULL</code> or a  vector of indices for partial sorting.
character string specifying the algorithm used.  Notavailable for partial sorting.  Can be abbreviated.
logical indicating if the ordering index vector shouldbe returned as well. Supported by <code>method == "radix"</code> for any<code>na.last</code> mode and data type, and the other methods when<code>na.last = NA</code> (the default) and fully sorting non-factors.
a sequence of numeric, complex, character or logicalvectors, all of the same length, or a classed <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
an atomic vector for <code>method</code>s <code>"shell"</code> and<code>"quick"</code>.  When <code>x</code> is a non-atomic <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, the default<code>"auto"</code> and <code>"radix"</code> methods may work if <code>order(x,..)</code>does.
vector of indices for partial sorting.(Non-<code>NULL</code> values are not implemented.)
logical.  Should the sort order be increasing ordecreasing? For the <code>"radix"</code> method, this can be a vector oflength equal to the number of arguments in <code>...</code>. For theother methods, it must be length one.
for controlling the treatment of <code>NA</code>s.If <code>TRUE</code>, missing values in the data are put last; if<code>FALSE</code>, they are put first; if <code>NA</code>, they are removed(see ‘Note’.)
the method to be used: partial matches are allowed.  Thedefault (<code>"auto"</code>) implies <code>"radix"</code> for short numeric vectors,integer vectors, logical vectors and factors.Otherwise, it implies <code>"shell"</code>.For details of methods <code>"shell"</code>, <code>"quick"</code>, and <code>"radix"</code>,see the help for <code>sort</code>.
for <code>sort</code> an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object with a class or a numeric,complex, character or logical vector.  For <code>sort.int</code>, anumeric, complex, character or logical vector, or a factor.
logical.  Should the sort be increasing or decreasing?For the <code>"radix"</code> method, this can be a vector oflength equal to the number of arguments in <code>...</code>. For theother methods, it must be length one. Not available for partial sorting.
arguments to be passed to or from methods or (for thedefault methods and objects without a class) to <code>sort.int</code>.
for controlling the treatment of <code>NA</code>s.If <code>TRUE</code>, missing values in the data are put last; if<code>FALSE</code>, they are put first; if <code>NA</code>, they are removed.
<code>NULL</code> or a  vector of indices for partial sorting.
character string specifying the algorithm used.  Notavailable for partial sorting.  Can be abbreviated.
logical indicating if the ordering index vector shouldbe returned as well. Supported by <code>method == "radix"</code> for any<code>na.last</code> mode and data type, and the other methods when<code>na.last = NA</code> (the default) and fully sorting non-factors.
a connection or a character string giving thepathname of the file or URL to read from.  <code>""</code> indicates theconnection <code>stdin()</code>.
<code>TRUE</code>, <code>FALSE</code> or an environment, determiningwhere the parsed expressions are evaluated.  <code>FALSE</code> (thedefault) corresponds to the user's workspace (the globalenvironment) and <code>TRUE</code> to the environment from which<code>source</code> is called.
logical; if <code>TRUE</code>, each expression is printedafter parsing, before evaluation.
logical; if <code>TRUE</code>, the result of<code>eval(i)</code> is printed for each expression <code>i</code>; defaultsto the value of <code>echo</code>.
for <code>source()</code> and <code>withAutoprint(*, evaluated=TRUE)</code>:<em>instead</em> of specifying <code>file</code>, an<code>expression</code>, <code>call</code>, or <code>list</code>of <code>call</code>'s, but <em>not</em> an unevaluated “expression”.

for <code>withAutoprint()</code> (with default <code>evaluated=FALSE</code>):one or more unevaluated “expressions”.
logical indicating that <code>exprs</code> is passed to<code>source(exprs= *)</code> and hence must be evaluated, i.e., a formal<code>expression</code>, <code>call</code> or <code>list</code> of calls.
logical indicating if newline (hence empty line) shouldbe printed before each expression (when <code>echo = TRUE</code>).
if <code>TRUE</code>, more diagnostics (than just<code>echo = TRUE</code>) are printed during parsing and evaluation ofinput, including extra info for <b>each</b> expression.
character; gives the prompt to be used if<code>echo = TRUE</code>.
integer; is used only if <code>echo</code> is<code>TRUE</code> and gives the maximal number of characters output forthe deparse of a single expression.
integer, passed to <code>deparse()</code> whichis used (only) when there are no source references.
<code>character</code> vector, passed as<code>control</code> to <code>deparse()</code>, see also<code>.deparseOpts</code>.  In <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> version &lt;= 3.3.x, this washardcoded to <code>"showAttributes"</code>, which is the defaultcurrently; <code>deparseCtrl = "all"</code> may be preferable, when strictback compatibility is not of importance.
logical; if <code>TRUE</code> and <code>file</code> is a pathname,the <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> working directory is temporarily changed to the directorycontaining <code>file</code> for evaluating.
character vector.  The encoding(s) to be assumed when<code>file</code> is a character string: see <code>file</code>.  Apossible value is <code>"unknown"</code> when the encoding is guessed: seethe ‘Encodings’ section.
character; gives the prompt to use oncontinuation lines if <code>echo = TRUE</code>.
integer; how many comment lines at the start of thefile to skip if <code>echo = TRUE</code>.
logical: should the source formatting be retainedwhen echoing expressions, if possible?
(for <code>withAutoprint()</code>:) further (non-file related)arguments to be passed to <code>source(.)</code>.
vector or data frame containing values to be divided into groups.
a ‘factor’ in the sense that <code>as.factor(f)</code>defines the grouping, or a list of such factors in which case theirinteraction is used for the grouping. If <code>x</code> is a data frame,<code>f</code> can also be a formula of the form <code> ~ g</code> to split bythe variable <code>g</code>, or more generally of the form <code> ~ g1 +      ... + gk</code> to split by the interaction of the variables<code>g1</code>, ..., <code>gk</code>, where these variables are evaluated inthe data frame <code>x</code> using the usual non-standard evaluationrules.
logical indicating if levels that do not occur should be dropped(if <code>f</code> is a <code>factor</code> or a list).
a list of vectors or data frames compatible with asplitting of <code>x</code>. Recycling applies if the lengths do not match.
character string, passed to <code>interaction</code> in thecase where <code>f</code> is a <code>list</code>.
logical, passed to <code>interaction</code> when<code>f</code> is a list.
further potential arguments passed to methods.
vector or data frame containing values to be divided into groups.
a ‘factor’ in the sense that <code>as.factor(f)</code>defines the grouping, or a list of such factors in which case theirinteraction is used for the grouping. If <code>x</code> is a data frame,<code>f</code> can also be a formula of the form <code> ~ g</code> to split bythe variable <code>g</code>, or more generally of the form <code> ~ g1 +      ... + gk</code> to split by the interaction of the variables<code>g1</code>, ..., <code>gk</code>, where these variables are evaluated inthe data frame <code>x</code> using the usual non-standard evaluationrules.
logical indicating if levels that do not occur should be dropped(if <code>f</code> is a <code>factor</code> or a list).
a list of vectors or data frames compatible with asplitting of <code>x</code>. Recycling applies if the lengths do not match.
character string, passed to <code>interaction</code> in thecase where <code>f</code> is a <code>list</code>.
logical, passed to <code>interaction</code> when<code>f</code> is a list.
further potential arguments passed to methods.
a <code>Date</code> object to be summarized or printed.
number of significant digits for the computations.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
further arguments to be passed from or to other methods.
vector or data frame containing values to be divided into groups.
a ‘factor’ in the sense that <code>as.factor(f)</code>defines the grouping, or a list of such factors in which case theirinteraction is used for the grouping. If <code>x</code> is a data frame,<code>f</code> can also be a formula of the form <code> ~ g</code> to split bythe variable <code>g</code>, or more generally of the form <code> ~ g1 +      ... + gk</code> to split by the interaction of the variables<code>g1</code>, ..., <code>gk</code>, where these variables are evaluated inthe data frame <code>x</code> using the usual non-standard evaluationrules.
logical indicating if levels that do not occur should be dropped(if <code>f</code> is a <code>factor</code> or a list).
a list of vectors or data frames compatible with asplitting of <code>x</code>. Recycling applies if the lengths do not match.
character string, passed to <code>interaction</code> in thecase where <code>f</code> is a <code>list</code>.
logical, passed to <code>interaction</code> when<code>f</code> is a list.
further potential arguments passed to methods.
an object to be printed or summarized from one of thedate-time classes.
for timezone formatting, passed to <code>format.POSIXct</code>.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
number of significant digits for the computations:should be high enough to represent the least important time unitexactly.
further arguments to be passed from or to other methods.
date-time objects
date-time objects or character vectors.  (Charactervectors are converted by <code>as.POSIXct</code>.)
a numeric vector (in seconds)
one of <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>or <code>&gt;=</code>.
vector or data frame containing values to be divided into groups.
a ‘factor’ in the sense that <code>as.factor(f)</code>defines the grouping, or a list of such factors in which case theirinteraction is used for the grouping. If <code>x</code> is a data frame,<code>f</code> can also be a formula of the form <code> ~ g</code> to split bythe variable <code>g</code>, or more generally of the form <code> ~ g1 +      ... + gk</code> to split by the interaction of the variables<code>g1</code>, ..., <code>gk</code>, where these variables are evaluated inthe data frame <code>x</code> using the usual non-standard evaluationrules.
logical indicating if levels that do not occur should be dropped(if <code>f</code> is a <code>factor</code> or a list).
a list of vectors or data frames compatible with asplitting of <code>x</code>. Recycling applies if the lengths do not match.
character string, passed to <code>interaction</code> in thecase where <code>f</code> is a <code>list</code>.
logical, passed to <code>interaction</code> when<code>f</code> is a list.
further potential arguments passed to methods.
vector or data frame containing values to be divided into groups.
a ‘factor’ in the sense that <code>as.factor(f)</code>defines the grouping, or a list of such factors in which case theirinteraction is used for the grouping. If <code>x</code> is a data frame,<code>f</code> can also be a formula of the form <code> ~ g</code> to split bythe variable <code>g</code>, or more generally of the form <code> ~ g1 +      ... + gk</code> to split by the interaction of the variables<code>g1</code>, ..., <code>gk</code>, where these variables are evaluated inthe data frame <code>x</code> using the usual non-standard evaluationrules.
logical indicating if levels that do not occur should be dropped(if <code>f</code> is a <code>factor</code> or a list).
a list of vectors or data frames compatible with asplitting of <code>x</code>. Recycling applies if the lengths do not match.
character string, passed to <code>interaction</code> in thecase where <code>f</code> is a <code>list</code>.
logical, passed to <code>interaction</code> when<code>f</code> is a list.
further potential arguments passed to methods.
vector or data frame containing values to be divided into groups.
a ‘factor’ in the sense that <code>as.factor(f)</code>defines the grouping, or a list of such factors in which case theirinteraction is used for the grouping. If <code>x</code> is a data frame,<code>f</code> can also be a formula of the form <code> ~ g</code> to split bythe variable <code>g</code>, or more generally of the form <code> ~ g1 +      ... + gk</code> to split by the interaction of the variables<code>g1</code>, ..., <code>gk</code>, where these variables are evaluated inthe data frame <code>x</code> using the usual non-standard evaluationrules.
logical indicating if levels that do not occur should be dropped(if <code>f</code> is a <code>factor</code> or a list).
a list of vectors or data frames compatible with asplitting of <code>x</code>. Recycling applies if the lengths do not match.
character string, passed to <code>interaction</code> in thecase where <code>f</code> is a <code>list</code>.
logical, passed to <code>interaction</code> when<code>f</code> is a list.
further potential arguments passed to methods.
a character vector of format strings, each of up to 8192 bytes.
values to be passed into <code>fmt</code>.  Only logical,integer, real and character vectors are supported, but some coercionwill be done: see the ‘Details’ section. Up to 100.
see <code>gettext</code>.
a numeric or <code>complex</code> vector or array.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, to be coerced to a character vector.
the kind of quotes to be used, see ‘Details’.
 The name of a file. 
 The character encoding to assume for the file. 
 The encoding with which to make strings: see the<code>encoding</code> argument of <code>parse</code>.
 A character vector of source lines.  Other <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> objectswill be coerced to character. 
 The timestamp to use on a copy of a file. 
 Is this <code>srcfilecopy</code> known to come from a file system file? 
 A <code>srcfile</code> object. 
 Line numbers. 
 A vector of four, six or eight values giving a source location; see‘Details’.
 An object of the appropriate class. 
 Whether to read the <code>srcfile</code> to obtain thetext of a <code>srcref</code>. 
 An optional second <code>srcref</code> object to mark the endof the character range. 
 Additional arguments to the methods; these will be ignored. 
 The name of a file. 
 The character encoding to assume for the file. 
 The encoding with which to make strings: see the<code>encoding</code> argument of <code>parse</code>.
 A character vector of source lines.  Other <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> objectswill be coerced to character. 
 The timestamp to use on a copy of a file. 
 Is this <code>srcfilecopy</code> known to come from a file system file? 
 A <code>srcfile</code> object. 
 Line numbers. 
 A vector of four, six or eight values giving a source location; see‘Details’.
 An object of the appropriate class. 
 Whether to read the <code>srcfile</code> to obtain thetext of a <code>srcref</code>. 
 An optional second <code>srcref</code> object to mark the endof the character range. 
 Additional arguments to the methods; these will be ignored. 
 The name of a file. 
 The character encoding to assume for the file. 
 The encoding with which to make strings: see the<code>encoding</code> argument of <code>parse</code>.
 A character vector of source lines.  Other <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> objectswill be coerced to character. 
 The timestamp to use on a copy of a file. 
 Is this <code>srcfilecopy</code> known to come from a file system file? 
 A <code>srcfile</code> object. 
 Line numbers. 
 A vector of four, six or eight values giving a source location; see‘Details’.
 An object of the appropriate class. 
 Whether to read the <code>srcfile</code> to obtain thetext of a <code>srcref</code>. 
 An optional second <code>srcref</code> object to mark the endof the character range. 
 Additional arguments to the methods; these will be ignored. 
 The name of a file. 
 The character encoding to assume for the file. 
 The encoding with which to make strings: see the<code>encoding</code> argument of <code>parse</code>.
 A character vector of source lines.  Other <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> objectswill be coerced to character. 
 The timestamp to use on a copy of a file. 
 Is this <code>srcfilecopy</code> known to come from a file system file? 
 A <code>srcfile</code> object. 
 Line numbers. 
 A vector of four, six or eight values giving a source location; see‘Details’.
 An object of the appropriate class. 
 Whether to read the <code>srcfile</code> to obtain thetext of a <code>srcref</code>. 
 An optional second <code>srcref</code> object to mark the endof the character range. 
 Additional arguments to the methods; these will be ignored. 
The name of the generic.
The generic function definition. Never passed whendefining a new generic.
vector of <code>character</code> string whose “starts”are considered.
<code>character</code> vector (often of length one).
logical: if true all connections, including closed onesand the standard ones are displayed.  If false only open user-createdconnections are included.
integer: a row number of the table given by<code>showConnections</code>.
a connection.
logical: if true all connections, including closed onesand the standard ones are displayed.  If false only open user-createdconnections are included.
integer: a row number of the table given by<code>showConnections</code>.
a connection.
logical: if true all connections, including closed onesand the standard ones are displayed.  If false only open user-createdconnections are included.
integer: a row number of the table given by<code>showConnections</code>.
a connection.
zero or more objects which can be coerced to character(and which are pasted together with no separator) or a singlecondition object.
logical, indicating if the call should become part of theerror message.
see <code>gettext</code>.  If <code>NA</code>, messages willnot be translated.
any number of <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> expressions, which should eachevaluate to (a logical vector of all) <code>TRUE</code>.  Use<em>either</em> <code>...</code> <em>or</em><code>exprs</code>, the latter typically an unevaluated expression of theform 

Note that e.g., positive numbers are <em>not</em> <code>TRUE</code>, even whenthey are coerced to <code>TRUE</code>, e.g., inside <code>if(.)</code> or inarithmetic computations in <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>.

If names are provided to <code>...</code>, they will be used in lieu ofthe default error message.
alternative to <code>exprs</code> or <code>...</code>:an ‘expression-like’ object, typically an<code>expression</code>, but also a <code>call</code>, a<code>name</code>, or atomic constant such as <code>TRUE</code>.
(only when <code>exprs</code> is used:) indicates the<code>environment</code> in which the expressions should beevaluated; by default the one from where <code>stopifnot()</code> has beencalled.
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
a character string giving the desired mode or‘storage mode’ (type) of the object.
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
a character string giving the desired mode or‘storage mode’ (type) of the object.
a connection, or a character string giving the name of afile or a URL to read the expressions from.If <code>file</code> is <code>""</code> and <code>text</code> is missing or <code>NULL</code>then input is taken from the console.
integer (or coerced to integer).  The maximum number ofexpressions to parse.  If <code>n</code> is <code>NULL</code> or negative or<code>NA</code> the input is parsed in its entirety.
character vector.  The text to parse.  Elements are treatedas if they were lines of a file.  Other <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> objects will be coercedto character if possible.
the prompt to print when parsing from the keyboard.<code>NULL</code> means to use <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>'s prompt, <code>getOption("prompt")</code>.
a logical value; if <code>TRUE</code>, keepsource reference information.
<code>NULL</code>, a character vector, or a<code>srcfile</code> object.  See the ‘Details’ section.
encoding to be assumed for input strings.  If thevalue is <code>"latin1"</code> or <code>"UTF-8"</code> it is used to markcharacter strings as known to be in Latin-1 or UTF-8: it is not usedto re-encode the input.  To do the latter, specify the encoding aspart of the connection <code>con</code> or <em>via</em><code>options(encoding=)</code>: see the example under<code>file</code>. Arguments <code>encoding = "latin1"</code> and <code>encoding = "UTF-8"</code> are ignored with a warning when runningin a MBCS locale.
a <code>character</code> vector of length <code>1</code>, i.e., a“string”.
a connection, or a character string giving the name of afile or a URL to read the expressions from.If <code>file</code> is <code>""</code> and <code>text</code> is missing or <code>NULL</code>then input is taken from the console.
integer (or coerced to integer).  The maximum number ofexpressions to parse.  If <code>n</code> is <code>NULL</code> or negative or<code>NA</code> the input is parsed in its entirety.
character vector.  The text to parse.  Elements are treatedas if they were lines of a file.  Other <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> objects will be coercedto character if possible.
the prompt to print when parsing from the keyboard.<code>NULL</code> means to use <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>'s prompt, <code>getOption("prompt")</code>.
a logical value; if <code>TRUE</code>, keepsource reference information.
<code>NULL</code>, a character vector, or a<code>srcfile</code> object.  See the ‘Details’ section.
encoding to be assumed for input strings.  If thevalue is <code>"latin1"</code> or <code>"UTF-8"</code> it is used to markcharacter strings as known to be in Latin-1 or UTF-8: it is not usedto re-encode the input.  To do the latter, specify the encoding aspart of the connection <code>con</code> or <em>via</em><code>options(encoding=)</code>: see the example under<code>file</code>. Arguments <code>encoding = "latin1"</code> and <code>encoding = "UTF-8"</code> are ignored with a warning when runningin a MBCS locale.
a <code>character</code> vector of length <code>1</code>, i.e., a“string”.
An object to be converted: a character vector for<code>strptime</code>, an object which can be converted to<code>"POSIXlt"</code> for <code>strftime</code>.
A character string specifying the time zone to be used forthe conversion.  System-specific (see <code>as.POSIXlt</code>), but<code>""</code> is the current time zone, and <code>"GMT"</code> is UTC.Invalid values are most commonly treated as UTC, on some platforms witha warning.
A character string.  The default for the <code>format</code>methods is<code>"%Y-%m-%d %H:%M:%S"</code> if any element has a timecomponent which is not midnight, and <code>"%Y-%m-%d"</code>otherwise.  If <code>options("digits.secs")</code> is set, up tothe specified number of digits will be printed for seconds.
Further arguments to be passed from or to other methods.
logical.  Should the time zone abbreviation be appendedto the output?  This is used in printing times, and more reliablethan using <code>"%Z"</code>.
An object to be converted: a character vector for<code>strptime</code>, an object which can be converted to<code>"POSIXlt"</code> for <code>strftime</code>.
A character string specifying the time zone to be used forthe conversion.  System-specific (see <code>as.POSIXlt</code>), but<code>""</code> is the current time zone, and <code>"GMT"</code> is UTC.Invalid values are most commonly treated as UTC, on some platforms witha warning.
A character string.  The default for the <code>format</code>methods is<code>"%Y-%m-%d %H:%M:%S"</code> if any element has a timecomponent which is not midnight, and <code>"%Y-%m-%d"</code>otherwise.  If <code>options("digits.secs")</code> is set, up tothe specified number of digits will be printed for seconds.
Further arguments to be passed from or to other methods.
logical.  Should the time zone abbreviation be appendedto the output?  This is used in printing times, and more reliablethan using <code>"%Z"</code>.
a character vector, or an object which can be coerced to acharacter vector using <code>as.character</code>.
an integer vector giving the (non-negative) numbers oftimes to repeat the respective elements of <code>x</code>.
character vector, each element of which is to be split.  Otherinputs, including a factor, will give an error.
character vector (or object which can be coerced to such)containing regular expression(s) (unless <code>fixed = TRUE</code>)to use for splitting.  If empty matches occur, in particular if<code>split</code> has length 0, <code>x</code> is split into single characters.If <code>split</code> has length greater than 1, it is re-cycled along<code>x</code>.
logical.  If <code>TRUE</code> match <code>split</code> exactly, otherwiseuse regular expressions.  Has priority over <code>perl</code>.
logical.  Should Perl-compatible regexps be used?
logical.  If <code>TRUE</code> the matching is donebyte-by-byte rather than character-by-character, and inputs withmarked encodings are not converted.  This is forced (with a warning)if any input is found which is marked as <code>"bytes"</code>(see <code>Encoding</code>).
a character vector, or something coercible to this by<code>as.character</code>.
an integer which is between 2 and 36 inclusive, or zero(default).
a character vector, or an object which can be coerced to acharacter vector by <code>as.character</code>.
Positive integer values: recycled to the length of <code>x</code>.
an object which will havevarious attributes attached to it.
attributes, specified in <code>tag = value</code>form, which will be attached to data.
a character vector, or an object which can be converted to acharacter vector by <code>as.character</code>.
a positive integer giving the target column for wrappinglines in the output.
a non-negative integer giving the indentation of thefirst line in a paragraph.
a non-negative integer specifying the indentation ofsubsequent lines in paragraphs.
a character string to be used as prefix foreach line except the first, for which <code>initial</code> is used.
a logical.  If <code>TRUE</code>, the result is a singlecharacter vector of line text; otherwise, it is a list of the samelength as <code>x</code> the elements of which are character vectors ofline text obtained from the corresponding element of <code>x</code>.(Hence, the result in the former case is obtained by unlisting thatof the latter.)
character string containing a regular expression(or character string for <code>fixed = TRUE</code>) to be matchedin the given character vector.  Coerced by<code>as.character</code> to a character string if possible.  If acharacter vector of length 2 or more is supplied, the first elementis used with a warning.  Missing values are allowed except for<code>regexpr</code>, <code>gregexpr</code> and <code>regexec</code>.
a character vector where matches are sought, or anobject which can be coerced by <code>as.character</code> to a charactervector.  Long vectors are supported.
if <code>FALSE</code>, the pattern matching is <em>casesensitive</em> and if <code>TRUE</code>, case is ignored during matching.
logical.  Should Perl-compatible regexps be used?
if <code>FALSE</code>, a vector containing the (<code>integer</code>)indices of the matches determined by <code>grep</code> is returned, and if<code>TRUE</code>, a vector containing the matching elements themselves isreturned.
logical.  If <code>TRUE</code>, <code>pattern</code> is a string to bematched as is.  Overrides all conflicting arguments.
logical.  If <code>TRUE</code> the matching is donebyte-by-byte rather than character-by-character.  See‘Details’.
logical.  If <code>TRUE</code> return indices or values forelements that do <em>not</em> match.
a replacement for matched pattern in <code>sub</code> and<code>gsub</code>.  Coerced to character if possible.  For<code>fixed = FALSE</code> this can include backreferences <code>"\1"</code> to<code>"\9"</code> to parenthesized subexpressions of <code>pattern</code>.  For<code>perl = TRUE</code> only, it can also contain <code>"\U"</code> or<code>"\L"</code> to convert the rest of the replacement to upper orlower case and <code>"\E"</code> to end case conversion.  If acharacter vector of length 2 or more is supplied, the first elementis used with a warning.  If <code>NA</code>, all elements in the resultcorresponding to matches will be set to <code>NA</code>.
object to be subsetted.
logical expression indicating elements or rows to keep:missing values are taken as false.
expression, indicating columns to select from adata frame.
passed on to <code>[</code> indexing operator.
further arguments to be passed to or from other methods.
object to be subsetted.
logical expression indicating elements or rows to keep:missing values are taken as false.
expression, indicating columns to select from adata frame.
passed on to <code>[</code> indexing operator.
further arguments to be passed to or from other methods.
object to be subsetted.
logical expression indicating elements or rows to keep:missing values are taken as false.
expression, indicating columns to select from adata frame.
passed on to <code>[</code> indexing operator.
further arguments to be passed to or from other methods.
object to be subsetted.
logical expression indicating elements or rows to keep:missing values are taken as false.
expression, indicating columns to select from adata frame.
passed on to <code>[</code> indexing operator.
further arguments to be passed to or from other methods.
any syntactically valid <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> expression
a <code>call</code>, i.e., an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object of<code>class</code> (and <code>mode</code>) <code>"call"</code>.
an environment or a list object.  Defaults to thecurrent evaluation environment.
a character vector.
integer.  The first element to be replaced.
integer.  The last element to be replaced.
a character vector, recycled if necessary.
a character vector.
integer.  The first element to be replaced.
integer.  The last element to be replaced.
a character vector, recycled if necessary.
a character vector.
integer.  The first element to be replaced.
integer.  The last element to be replaced.
a character vector, recycled if necessary.
a character vector.
integer.  The first element to be replaced.
integer.  The last element to be replaced.
a character vector, recycled if necessary.
numeric or complex or logical vectors.
logical.  Should missing values (including <code>NaN</code>) beremoved?
an object for which a summary is desired.
a result of the <em>default</em> method of <code>summary()</code>.
integer, indicating how many levels should be shown for<code>factor</code>s.
integer, used for number formatting with<code>signif()</code> (for <code>summary.default</code>) or<code>format()</code> (for <code>summary.data.frame</code>).  In<code>summary.default</code>, if not specified (i.e.,<code>missing(.)</code>), <code>signif()</code> will <em>not</em> be calledanymore (since <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> &gt;= 3.4.0, where the default has been changed toonly round in the <code>print</code> and <code>format</code> methods).
integer code used in <code>quantile(*, type=quantile.type)</code>for the default method.
additional arguments affecting the summary produced.
character string.  A description of the connection:see ‘Details’.
character string.  A description of how to open the connection(if it should be opened initially).  See section ‘Modes’ forpossible values.
logical.  See the ‘Blocking’ section.
The name of the encoding to be assumed.  See the‘Encoding’ section.
logical.  If true, a ‘raw’ interface is used whichwill be more suitable for arguments which are not regular files,e.g. character devices.  This suppresses the check for a compressedfile when opening for text-mode reading, and asserts that the‘file’ may not be seekable.
character string, partially matched to<code>c("default", "internal", "wininet", "libcurl")</code>:see ‘Details’.
named character vector of HTTP headers to use in HTTPrequests.  It is ignored for non-HTTP URLs.  The <code>User-Agent</code>header, coming from the <code>HTTPUserAgent</code> option (see<code>options</code>) is used as the first header, automatically.
integer in 0–9.  The amount of compression to beapplied when writing, from none to maximal available.  For<code>xzfile</code> can also be negative: see the ‘Compression’section.
numeric: the timeout (in seconds) to be used for thisconnection.  Beware that some OSes may treat very large values aszero: however the POSIX standard requires values up to 31 days to besupported.
optional character vector with options. Currently only<code>"no-delay"</code> is supported on TCP sockets.
a filename within a zip file.
character string.  Host name for the port.
integer.  The TCP port number.
logical.  Should the socket be a client or a server?
a server socket listening for connections.
a connection.
character string.  Currently ignored.
character string.  Empty or <code>"read"</code> or <code>"write"</code>,partial matches allowed.
arguments passed to or from other methods.
an object for which a summary is desired.
a result of the <em>default</em> method of <code>summary()</code>.
integer, indicating how many levels should be shown for<code>factor</code>s.
integer, used for number formatting with<code>signif()</code> (for <code>summary.default</code>) or<code>format()</code> (for <code>summary.data.frame</code>).  In<code>summary.default</code>, if not specified (i.e.,<code>missing(.)</code>), <code>signif()</code> will <em>not</em> be calledanymore (since <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> &gt;= 3.4.0, where the default has been changed toonly round in the <code>print</code> and <code>format</code> methods).
integer code used in <code>quantile(*, type=quantile.type)</code>for the default method.
additional arguments affecting the summary produced.
objects.
further arguments passed to methods.
logical: should missing values be removed?
a <code>Date</code> object to be summarized or printed.
number of significant digits for the computations.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
further arguments to be passed from or to other methods.
a <code>Date</code> object to be summarized or printed.
number of significant digits for the computations.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
further arguments to be passed from or to other methods.
an object for which a summary is desired.
a result of the <em>default</em> method of <code>summary()</code>.
integer, indicating how many levels should be shown for<code>factor</code>s.
integer, used for number formatting with<code>signif()</code> (for <code>summary.default</code>) or<code>format()</code> (for <code>summary.data.frame</code>).  In<code>summary.default</code>, if not specified (i.e.,<code>missing(.)</code>), <code>signif()</code> will <em>not</em> be calledanymore (since <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> &gt;= 3.4.0, where the default has been changed toonly round in the <code>print</code> and <code>format</code> methods).
integer code used in <code>quantile(*, type=quantile.type)</code>for the default method.
additional arguments affecting the summary produced.
date-time or date objects.
an optional time zone specification to be used for theconversion, mainly for <code>"POSIXlt"</code> objects.
character string.  Units in which the results aredesired.  Can be abbreviated.
character string.  Like <code>units</code>, except thatabbreviations are not allowed.
character string or numeric value specifying a time interval.
character specifying the format of <code>tim</code>: see<code>strptime</code>.  The default is a locale-specific time format.
an object inheriting from class <code>"difftime"</code>.
arguments to be passed to or from other methods.
an object for which a summary is desired.
a result of the <em>default</em> method of <code>summary()</code>.
integer, indicating how many levels should be shown for<code>factor</code>s.
integer, used for number formatting with<code>signif()</code> (for <code>summary.default</code>) or<code>format()</code> (for <code>summary.data.frame</code>).  In<code>summary.default</code>, if not specified (i.e.,<code>missing(.)</code>), <code>signif()</code> will <em>not</em> be calledanymore (since <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> &gt;= 3.4.0, where the default has been changed toonly round in the <code>print</code> and <code>format</code> methods).
integer code used in <code>quantile(*, type=quantile.type)</code>for the default method.
additional arguments affecting the summary produced.
a vector of data, usually taking a small number of distinctvalues.
an optional vector of the unique values (as character strings)that <code>x</code> might have taken.  The default is the unique set ofvalues taken by <code>as.character(x)</code>, sorted intoincreasing order <em>of <code>x</code></em>.  Note that this set can bespecified as smaller than <code>sort(unique(x))</code>.
<em>either</em> an optional character vector oflabels for the levels (in the same order as <code>levels</code> afterremoving those in <code>exclude</code>), <em>or</em> a character string oflength 1.  Duplicated values in <code>labels</code> can be used to mapdifferent values of <code>x</code> to the same factor level.
a vector of values to be excluded when forming theset of levels.  This may be factor with the same level set as <code>x</code>or should be a <code>character</code>.
logical flag to determine if the levels should be regardedas ordered (in the order given).
an upper bound on the number of levels; see ‘Details’.
(in <code>ordered(.)</code>): any of the above, apart from<code>ordered</code> itself.
only add an <code>NA</code> level if it is used, i.e.if <code>any(is.na(x))</code>.
an object for which a summary is desired.
a result of the <em>default</em> method of <code>summary()</code>.
integer, indicating how many levels should be shown for<code>factor</code>s.
integer, used for number formatting with<code>signif()</code> (for <code>summary.default</code>) or<code>format()</code> (for <code>summary.data.frame</code>).  In<code>summary.default</code>, if not specified (i.e.,<code>missing(.)</code>), <code>signif()</code> will <em>not</em> be calledanymore (since <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> &gt;= 3.4.0, where the default has been changed toonly round in the <code>print</code> and <code>format</code> methods).
integer code used in <code>quantile(*, type=quantile.type)</code>for the default method.
additional arguments affecting the summary produced.
a character vector with suitable numeric version strings (see‘Details’); for <code>package_version</code>, alternatively an Rversion object as obtained by <code>R.version</code>.
a logical indicating whether invalid numeric versionsshould results in an error (default) or not.
a vector of data, usually taking a small number of distinctvalues.
an optional vector of the unique values (as character strings)that <code>x</code> might have taken.  The default is the unique set ofvalues taken by <code>as.character(x)</code>, sorted intoincreasing order <em>of <code>x</code></em>.  Note that this set can bespecified as smaller than <code>sort(unique(x))</code>.
<em>either</em> an optional character vector oflabels for the levels (in the same order as <code>levels</code> afterremoving those in <code>exclude</code>), <em>or</em> a character string oflength 1.  Duplicated values in <code>labels</code> can be used to mapdifferent values of <code>x</code> to the same factor level.
a vector of values to be excluded when forming theset of levels.  This may be factor with the same level set as <code>x</code>or should be a <code>character</code>.
logical flag to determine if the levels should be regardedas ordered (in the order given).
an upper bound on the number of levels; see ‘Details’.
(in <code>ordered(.)</code>): any of the above, apart from<code>ordered</code> itself.
only add an <code>NA</code> level if it is used, i.e.if <code>any(is.na(x))</code>.
an object to be printed or summarized from one of thedate-time classes.
for timezone formatting, passed to <code>format.POSIXct</code>.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
number of significant digits for the computations:should be high enough to represent the least important time unitexactly.
further arguments to be passed from or to other methods.
date-time objects
date-time objects or character vectors.  (Charactervectors are converted by <code>as.POSIXct</code>.)
a numeric vector (in seconds)
one of <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>or <code>&gt;=</code>.
an object to be printed or summarized from one of thedate-time classes.
for timezone formatting, passed to <code>format.POSIXct</code>.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
number of significant digits for the computations:should be high enough to represent the least important time unitexactly.
further arguments to be passed from or to other methods.
date-time objects
date-time objects or character vectors.  (Charactervectors are converted by <code>as.POSIXct</code>.)
a numeric vector (in seconds)
one of <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>or <code>&gt;=</code>.
an object to be printed or summarized from one of thedate-time classes.
for timezone formatting, passed to <code>format.POSIXct</code>.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
number of significant digits for the computations:should be high enough to represent the least important time unitexactly.
further arguments to be passed from or to other methods.
date-time objects
date-time objects or character vectors.  (Charactervectors are converted by <code>as.POSIXct</code>.)
a numeric vector (in seconds)
one of <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>or <code>&gt;=</code>.
an object to be printed or summarized from one of thedate-time classes.
for timezone formatting, passed to <code>format.POSIXct</code>.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
number of significant digits for the computations:should be high enough to represent the least important time unitexactly.
further arguments to be passed from or to other methods.
date-time objects
date-time objects or character vectors.  (Charactervectors are converted by <code>as.POSIXct</code>.)
a numeric vector (in seconds)
one of <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>or <code>&gt;=</code>.
 The name of a file. 
 The character encoding to assume for the file. 
 The encoding with which to make strings: see the<code>encoding</code> argument of <code>parse</code>.
 A character vector of source lines.  Other <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> objectswill be coerced to character. 
 The timestamp to use on a copy of a file. 
 Is this <code>srcfilecopy</code> known to come from a file system file? 
 A <code>srcfile</code> object. 
 Line numbers. 
 A vector of four, six or eight values giving a source location; see‘Details’.
 An object of the appropriate class. 
 Whether to read the <code>srcfile</code> to obtain thetext of a <code>srcref</code>. 
 An optional second <code>srcref</code> object to mark the endof the character range. 
 Additional arguments to the methods; these will be ignored. 
 The name of a file. 
 The character encoding to assume for the file. 
 The encoding with which to make strings: see the<code>encoding</code> argument of <code>parse</code>.
 A character vector of source lines.  Other <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> objectswill be coerced to character. 
 The timestamp to use on a copy of a file. 
 Is this <code>srcfilecopy</code> known to come from a file system file? 
 A <code>srcfile</code> object. 
 Line numbers. 
 A vector of four, six or eight values giving a source location; see‘Details’.
 An object of the appropriate class. 
 Whether to read the <code>srcfile</code> to obtain thetext of a <code>srcref</code>. 
 An optional second <code>srcref</code> object to mark the endof the character range. 
 Additional arguments to the methods; these will be ignored. 
one or more objects which can be interpreted as factors(including character strings), or a list (or data frame) whosecomponents can be so interpreted.  (For <code>as.table</code>, argumentspassed to specific methods; for <code>as.data.frame</code>, unused.)
levels to remove for all factors in <code>...</code>.  Ifit does not contain <code>NA</code> and <code>useNA</code> is notspecified, it implies <code>useNA = "ifany"</code>.  See‘Details’ for its interpretation for non-factor arguments.
whether to include <code>NA</code> values in the table.See ‘Details’.  Can be abbreviated.
the names to be given to the dimensions in the result (the<em>dimnames names</em>).
controls how the default <code>dnn</code> isconstructed.  See ‘Details’.
an arbitrary <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, or an object inheriting from class<code>"table"</code> for the <code>as.data.frame</code> method. Note that<code>as.data.frame.table(x, *)</code> may be called explicitly fornon-table <code>x</code> for “reshaping” <code>array</code>s.
a character vector giving the row names for the dataframe.
The name to be used for the column of tableentries, usually counts.
logical: should the classifying factors bereturned as factors (the default) or character vectors?
passed to <code>provideDimnames</code>.
arguments to be passed to <code>cat</code> (for<code>warnings()</code>).
a <code>"warnings"</code> object as returned by<code>warnings()</code>.
a <code>"warnings"</code> or <code>"summary.warnings"</code> object.
if not <code>missing</code>, a <code>character</code>vector of the same <code>length</code> as <code>x</code>, to “label”the messages.  Defaults to <code>paste0(seq_len(n), ": ")</code> for<i>n &gt;= 2</i> where <code>n &lt;- length(x)</code>.
a character string <code>cat()</code>ed before themessages are printed.
zero or more objects which can be coerced to character(and which are pasted together with no separator) or (for<code>message</code> only) a single condition object.
see <code>gettext</code>.  If <code>NA</code>, messages willnot be translated, see also the note in <code>stop</code>.
logical: should messages given as a character stringhave a newline appended?
expression to evaluate.
character, indicating which classes of messages shouldbe suppressed.
zero or more objects which can be coerced to character(and which are pasted together with no separator) or (for<code>message</code> only) a single condition object.
see <code>gettext</code>.  If <code>NA</code>, messages willnot be translated, see also the note in <code>stop</code>.
logical: should messages given as a character stringhave a newline appended?
expression to evaluate.
character, indicating which classes of messages shouldbe suppressed.
zero or more objects which can be coerced to character(and which are pasted together with no separator) or a singlecondition object.
logical, indicating if the call should become part of thewarning message.
logical, indicating if the call should be outputimmediately, even if <code>getOption("warn") &lt;= 0</code>.
logical, indicating as far as possible the message shouldbe output as a single line when <code>options(warn = 1)</code>.
expression to evaluate.
see <code>gettext</code>.  If <code>NA</code>, messages willnot be translated, see also the note in <code>stop</code>.
character, indicating which classes of warnings shouldbe suppressed.
a condition object.
call expression.
a condition object.
expression to be evaluated.
expression to be evaluated before returning or exiting.
function.
character string.
character string.
character string naming a restart.
restart object.
object.
character string naming a condition class.
additional arguments; see details below.
a numeric or complex matrix whose SVD decompositionis to be computed.  Logical matrices are coerced to numeric.
the number of left  singular vectors to be computed.This must between <code>0</code> and <code>n = nrow(x)</code>.
the number of right singular vectors to be computed.This must be between <code>0</code> and <code>p = ncol(x)</code>.
logical.  Defunct and an error.
an array, including a matrix.
a vector of indices giving the extent(s) of <code>x</code>which correspond to <code>STATS</code>.Where <code>x</code> has named dimnames, it can be a charactervector selecting dimension names.
the summary statistic which is to be swept out.
the function to be used to carry out the sweep.
logical.  If <code>TRUE</code> (the default), warn if thelength or dimensions of <code>STATS</code> do not match the specifieddimensions of <code>x</code>.  Set to <code>FALSE</code> for a small speed gainwhen you <em>know</em> that dimensions match.
optional arguments to <code>FUN</code>.
an expression evaluating to a number or a characterstring.
the list of alternatives.  If it is intended that<code>EXPR</code> has a character-string value these will benamed, perhaps except for one alternative to be used as a‘default’ value.
the frame number if non-negative, the number of framesto go back if negative.
the number of generations to go back.  (See the‘Details’ section.)
the frame number if non-negative, the number of framesto go back if negative.
the number of generations to go back.  (See the‘Details’ section.)
a character vector containing a single path name.  Tildeexpansion (see <code>path.expand</code>) is done.
character vectors containing file or directory paths.  Tildeexpansion (see <code>path.expand</code>) is done.
logical; should the warnings on failure be shown?
logical. Should elements of the path other than thelast be created?  If true, like the Unix command <code>mkdir -p</code>.
the mode to be used on Unix-alikes: it will becoerced by <code>as.octmode</code>.  For <code>Sys.chmod</code> it isrecycled along <code>paths</code>.
logical: should the mode be restricted by the<code>umask</code> setting?
the frame number if non-negative, the number of framesto go back if negative.
the number of generations to go back.  (See the‘Details’ section.)
the frame number if non-negative, the number of framesto go back if negative.
the number of generations to go back.  (See the‘Details’ section.)
the frame number if non-negative, the number of framesto go back if negative.
the number of generations to go back.  (See the‘Details’ section.)
a character vector, or <code>NULL</code>.
a character string.
logical: should the result be named?  If <code>NA</code> (thedefault) single-element results are not named whereas multi-elementresults are.
character string.  The following categories shouldalways be supported: <code>"LC_ALL"</code>, <code>"LC_COLLATE"</code>,<code>"LC_CTYPE"</code>, <code>"LC_MONETARY"</code>, <code>"LC_NUMERIC"</code> and<code>"LC_TIME"</code>.  Some systems (not Windows) will also support<code>"LC_MESSAGES"</code>, <code>"LC_PAPER"</code> and <code>"LC_MEASUREMENT"</code>.
character string.  A valid locale name on the system inuse.  Normally <code>""</code> (the default) will pick up the defaultlocale for the system.
character vector of patterns for relative or absolutefilepaths.  Missing values will be ignored.
logical: should matches to directories from patternsthat do not already end in <code>/</code>have a slash appended?  May not be supported on all platforms.
an object

from which to extract elements.
with a <code>"row.names"</code> attribute, typically adata frame.
typically S3- or S4-classed.
The full path to the‘<span class="file">DESCRIPTION</span>’ file of a package.
the filepath to a lazyload database.
a character vector describing the location of <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>library trees to search through, or <code>NULL</code>.  The default valueof <code>NULL</code> corresponds to all libraries currently known to<code>.libPaths()</code>.
logical.  Should this not give warnings or an errorif the package(s) are not found?
logical.  Should  the <code>Imports</code> field be processed?
logical: should message(s) be printed.
A processed ‘<span class="file">DESCRIPTION</span>’ file of class<code>"packageDescription2"</code>.
platform strings of the form <code>"cpu-vendor-os"</code>.
name of image file to save or load.
integer.  Currently <code>type = 0</code> returns the internal<code>"row.names"</code> attribute (possibly <code>NULL</code>), <code>type = 2</code>the number of rows implied by the attribute, and <code>type = 1</code> thelatter with a negative sign for ‘automatic’ row names.
integer.  The number of rows.
character string such as <code>"package:MASS"</code>.
the object name in a lazyload database.
logical: are the values in the database compressed?
a load hook: see <code>unserialize</code>.
a length-one integer vector.
indices.
logical.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
a classless object to be placed into the class.
an optional time zone.
an optional character vector of classes <em>containing</em>the default classes.
see <code>difftime</code>.
Arguments passed to non-dot name versions.
an integer.
character vector of <em>same</em> objects, masking others.
character string naming the package which is masked from or by.
logical indicating if the masking happens <em>by</em><code>pkg</code>, or (<code>by = FALSE</code>) from <code>pkg</code>.
the frame number if non-negative, the number of framesto go back if negative.
the number of generations to go back.  (See the‘Details’ section.)
the frame number if non-negative, the number of framesto go back if negative.
the number of generations to go back.  (See the‘Details’ section.)
the frame number if non-negative, the number of framesto go back if negative.
the number of generations to go back.  (See the‘Details’ section.)
the frame number if non-negative, the number of framesto go back if negative.
the number of generations to go back.  (See the‘Details’ section.)
character vector of file paths.  Tilde expansion is done:see <code>path.expand</code>.
an object

from which to extract elements.
with a <code>"row.names"</code> attribute, typically adata frame.
typically S3- or S4-classed.
The full path to the‘<span class="file">DESCRIPTION</span>’ file of a package.
the filepath to a lazyload database.
a character vector describing the location of <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>library trees to search through, or <code>NULL</code>.  The default valueof <code>NULL</code> corresponds to all libraries currently known to<code>.libPaths()</code>.
logical.  Should this not give warnings or an errorif the package(s) are not found?
logical.  Should  the <code>Imports</code> field be processed?
logical: should message(s) be printed.
A processed ‘<span class="file">DESCRIPTION</span>’ file of class<code>"packageDescription2"</code>.
platform strings of the form <code>"cpu-vendor-os"</code>.
name of image file to save or load.
integer.  Currently <code>type = 0</code> returns the internal<code>"row.names"</code> attribute (possibly <code>NULL</code>), <code>type = 2</code>the number of rows implied by the attribute, and <code>type = 1</code> thelatter with a negative sign for ‘automatic’ row names.
integer.  The number of rows.
character string such as <code>"package:MASS"</code>.
the object name in a lazyload database.
logical: are the values in the database compressed?
a load hook: see <code>unserialize</code>.
a length-one integer vector.
indices.
logical.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
a classless object to be placed into the class.
an optional time zone.
an optional character vector of classes <em>containing</em>the default classes.
see <code>difftime</code>.
Arguments passed to non-dot name versions.
an integer.
character vector of <em>same</em> objects, masking others.
character string naming the package which is masked from or by.
logical indicating if the masking happens <em>by</em><code>pkg</code>, or (<code>by = FALSE</code>) from <code>pkg</code>.
named arguments with values coercible to a character string.
a character vector, or an object coercible to character.
A character vector containing file or directory paths.
A date-time of class <code>"POSIXct"</code> or an object which can becoerced to one.  Fractions of a second may be ignored.  Recycled along<code>paths</code>.
character string.  The following categories shouldalways be supported: <code>"LC_ALL"</code>, <code>"LC_COLLATE"</code>,<code>"LC_CTYPE"</code>, <code>"LC_MONETARY"</code>, <code>"LC_NUMERIC"</code> and<code>"LC_TIME"</code>.  Some systems (not Windows) will also support<code>"LC_MESSAGES"</code>, <code>"LC_PAPER"</code> and <code>"LC_MEASUREMENT"</code>.
character string.  A valid locale name on the system inuse.  Normally <code>""</code> (the default) will pick up the defaultlocale for the system.
The time interval to suspend execution for, in seconds.
a character string naming the file to be read from
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object specifying the environment in which theexpressions are to be evaluated.  May also be a list or an integer.The default value <code>NULL</code> corresponds to evaluation in the baseenvironment.  This is probably not what you want; you shouldtypically supply an explicit <code>envir</code> argument.
logical; if <code>TRUE</code>, the <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> working directory ischanged to the directory containing <code>file</code> for evaluating.
logical.  If <code>TRUE</code>, functions keeptheir source including comments, see<code>options(keep.source = *)</code> for more details.
logical.  If <code>TRUE</code> and <code>keep.source</code> isalso <code>TRUE</code>, functions keep parse data with their source, see<code>options(keep.parse.data = *)</code> for more details.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> environment to be used as top level whileevaluating the expressions.  This argument is useful for frameworksrunning package tests; the default should be used in other cases
the frame number if non-negative, the number of framesto go back if negative.
the number of generations to go back.  (See the‘Details’ section.)
logical: defunct: ignored, with a warning for false values.
The time-zone database to be used: the default is to tryknown locations until one is found.
a character vector containing a single path name.  Tildeexpansion (see <code>path.expand</code>) is done.
character vectors containing file or directory paths.  Tildeexpansion (see <code>path.expand</code>) is done.
logical; should the warnings on failure be shown?
logical. Should elements of the path other than thelast be created?  If true, like the Unix command <code>mkdir -p</code>.
the mode to be used on Unix-alikes: it will becoerced by <code>as.octmode</code>.  For <code>Sys.chmod</code> it isrecycled along <code>paths</code>.
logical: should the mode be restricted by the<code>umask</code> setting?
named arguments with values coercible to a character string.
a character vector, or an object coercible to character.
Character vector of names or paths of possible executables.
the system command to be invoked, as a character string.
a logical (not <code>NA</code>) which indicates whether tocapture the output of the command as an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> character vector.
a logical (not <code>NA</code>)indicating whether messages written to ‘<span class="file">stdout</span>’ or‘<span class="file">stderr</span>’ should be ignored.
a logical (not <code>NA</code>) indicating whether the <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>interpreter should wait for the command to finish, or run itasynchronously.  This will be ignored (and the interpreter willalways wait) if <code>intern = TRUE</code>. When running the commandasynchronously, no output will be displayed on the <code>Rgui</code>console in Windows (it will be dropped, instead).
if a character vector is supplied, this is copied onestring per line to a temporary file, and the standard input of<code>command</code> is redirected to the file.
timeout in seconds, ignored if 0.  This is a limit for theelapsed time running <code>command</code> in a separate process.  Fractionsof seconds are ignored.
argumentsthat are accepted on Windows but ignored on this platform, with awarning.
character vectors, specifying subdirectory and file(s)within some package.  The default, none, returns theroot of the package.  Wildcards are not supported.
a character string with the name of a single package.An error occurs if more than one package name is given.
a character vector with path names of <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> libraries.See ‘Details’ for the meaning of the default value of <code>NULL</code>.
logical.  If <code>TRUE</code>, an error is given if thereare no matching files.
Valid <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> expression to be timed.
Logical - should a garbage collection be performedimmediately before the timing?  Default is <code>TRUE</code>.
the system command to be invoked, as a character string.
a character vector of arguments to <code>command</code>.
where output to ‘<span class="file">stdout</span>’ or‘<span class="file">stderr</span>’ should be sent.  Possible values are <code>""</code>, to the <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>console (the default), <code>NULL</code> or <code>FALSE</code> (discard output),<code>TRUE</code> (capture the output in a character vector) or acharacter string naming a file.
should input be diverted?  <code>""</code> means the default,alternatively a character string naming a file.  Ignoredif <code>input</code> is supplied.
if a character vector is supplied, this is copied onestring per line to a temporary file, and the standard input of<code>command</code> is redirected to the file.
character vector of name=value strings to set environmentvariables.
a logical (not <code>NA</code>) indicating whether the <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>interpreter should wait for the command to finish, or run itasynchronously.  This will be ignored (and the interpreter willalways wait) if <code>stdout = TRUE</code> or <code>stderr = TRUE</code>. Whenrunning the command asynchronously, no output will be displayed onthe <code>Rgui</code> console in Windows (it will be dropped, instead).
timeout in seconds, ignored if 0.  This is a limit for theelapsed time running <code>command</code> in a separate process.   Fractionsof seconds are ignored.
arguments that are accepted on Windows butignored on this platform, with a warning.
a matrix or data frame, typically.
A non-negative integer specifying the desired length.Double values will be coerced to integer:supplying an argument of length other than one is an error.
object to be coerced or tested.
further arguments passed to or from other methods.
a matrix or data frame, typically.
a matrix or data frame, typically.
one or more objects which can be interpreted as factors(including character strings), or a list (or data frame) whosecomponents can be so interpreted.  (For <code>as.table</code>, argumentspassed to specific methods; for <code>as.data.frame</code>, unused.)
levels to remove for all factors in <code>...</code>.  Ifit does not contain <code>NA</code> and <code>useNA</code> is notspecified, it implies <code>useNA = "ifany"</code>.  See‘Details’ for its interpretation for non-factor arguments.
whether to include <code>NA</code> values in the table.See ‘Details’.  Can be abbreviated.
the names to be given to the dimensions in the result (the<em>dimnames names</em>).
controls how the default <code>dnn</code> isconstructed.  See ‘Details’.
an arbitrary <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, or an object inheriting from class<code>"table"</code> for the <code>as.data.frame</code> method. Note that<code>as.data.frame.table(x, *)</code> may be called explicitly fornon-table <code>x</code> for “reshaping” <code>array</code>s.
a character vector giving the row names for the dataframe.
The name to be used for the column of tableentries, usually counts.
logical: should the classifying factors bereturned as factors (the default) or character vectors?
passed to <code>provideDimnames</code>.
a numeric vector (of positive integers), or a factor.Long vectors are supported.
the number of bins to be used.
numeric or complex vectors.
a numeric or complex vector
numeric or complex vectors.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object for which a <code>split</code> methodexists.  Typically vector-like, allowing subsetting with<code>[</code>.
a <code>list</code> of one or more <code>factor</code>s,each of same length as <code>X</code>.  The elements are coerced tofactors by <code>as.factor</code>.
a function (or name of a function) to be applied, or <code>NULL</code>.In the case of functions like <code>+</code>, <code>%*%</code>, etc.,the function name must be backquoted or quoted.  If <code>FUN</code> is<code>NULL</code>, tapply returns a vector which can be used to subscriptthe multi-way array <code>tapply</code> normally produces.
optional arguments to <code>FUN</code>: the Note section.
(only in the case of simplification to an array) thevalue with which the array is initialized as<code>array(default, dim = ..)</code>.  Before <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> 3.4.0, thiswas hard coded to <code>array()</code>'s default <code>NA</code>.  If itis <code>NA</code> (the default), the missing value of the answer type,e.g. <code>NA_real_</code>, is chosen (<code>as.raw(0)</code> for<code>"raw"</code>).  In a numerical case, it may be set, e.g., to<code>FUN(integer(0))</code>, e.g., in the case of <code>FUN = sum</code> to<code>0</code> or <code>0L</code>.
logical; if <code>FALSE</code>, <code>tapply</code> always returnsan array of mode <code>"list"</code>; in other words, a <code>list</code>with a <code>dim</code> attribute.  If <code>TRUE</code> (the default), then if<code>FUN</code> always returns a scalar, <code>tapply</code> returns an arraywith the mode of the scalar.
this can be a list of callbacks in which each elementis a list with  an element  named <code>"f"</code>which is a callback function, and an optionalelement named <code>"data"</code> which is the 5-th argument to besupplied  to the callback when it is invoked.Typically this argument is not specified, and one uses <code>add</code> toregister callbacks after the manager is created.
a logical value indicating whetherthe <code>evaluate</code> function has already been registeredwith the internal task callback mechanism.This is usually <code>FALSE</code> andthe first time a callback is addedvia the <code>add</code> function, the<code>evaluate</code> function is automatically registered.One can control when the function is registeredby specifying <code>TRUE</code> for this argumentand calling <code>addTaskCallback</code> manually.
a logical value, which if <code>TRUE</code>,causes information to be printed to the consoleabout certain activities this dispatch manager performs.This is useful for debugging callbacks and the handleritself.
numeric or complex matrices (or vectors): <code>y = NULL</code>is taken to be the same matrix as <code>x</code>.  Vectors are promoted tosingle-column or single-row matrices, depending on the context.
a non-empty character vector giving the initial partof the name.
a non-empty character vector giving the directory name
a non-empty character vector giving the file extension
<code>logical</code> indicating if <code>tmpdir()</code>should be checked and recreated if no longer valid.
a non-empty character vector giving the initial partof the name.
a non-empty character vector giving the directory name
a non-empty character vector giving the file extension
<code>logical</code> indicating if <code>tmpdir()</code>should be checked and recreated if no longer valid.
character.  A description of the connection.For an input this is an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> character vector object, and for an outputconnection the name for the <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> character vector to receive theoutput, or <code>NULL</code> (for none).
character string.  Either <code>"r"</code> (or equivalently <code>""</code>)for an input connection or <code>"w"</code> or <code>"a"</code> for an outputconnection.
logical.  Used only for output connections.  If <code>TRUE</code>,output is assigned to a variable in the calling environment.  Otherwisethe global environment is used.
a <code>character</code> string specifying the connection name.
character string, partially matched.  Used only for input connections.  Howmarked strings in <code>object</code> should be handled: converted to thecurrent locale, used byte-by-byte or translated to UTF-8.
An output text connection.
character.  A description of the connection.For an input this is an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> character vector object, and for an outputconnection the name for the <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> character vector to receive theoutput, or <code>NULL</code> (for none).
character string.  Either <code>"r"</code> (or equivalently <code>""</code>)for an input connection or <code>"w"</code> or <code>"a"</code> for an outputconnection.
logical.  Used only for output connections.  If <code>TRUE</code>,output is assigned to a variable in the calling environment.  Otherwisethe global environment is used.
a <code>character</code> string specifying the connection name.
character string, partially matched.  Used only for input connections.  Howmarked strings in <code>object</code> should be handled: converted to thecurrent locale, used byte-by-byte or translated to UTF-8.
An output text connection.
a character vector, or an object that can be coerced tocharacter by <code>as.character</code>.
a character string specifying the characters to betranslated.  If a character vector of length 2 or more is supplied,the first element is used with a warning.
a character string specifying the translations. If acharacter vector of length 2 or more is supplied, the first elementis used with a warning.
logical: translate to upper or lower case?.
environment.
return this environment, if it matches beforeany other criterion is satisfied.  The default, the option<span class="samp">topLevelEnvironment</span>, is set by <code>sys.source</code>,which treats a specific environment as the top level environment.Supplying the argument as <code>NULL</code> or <code>emptyenv()</code> meansit will never match.
The object to be converted.
Suggestion for the maximum field width.  Values of<code>NULL</code> or <code>0</code> indicate no maximum.The minimum value accepted is 6 and smaller values are taken as 6.
Optional arguments passed to or from methods.
The object to be converted.
Suggestion for the maximum field width.  Values of<code>NULL</code> or <code>0</code> indicate no maximum.The minimum value accepted is 6 and smaller values are taken as 6.
Optional arguments passed to or from methods.
a character vector, or an object that can be coerced tocharacter by <code>as.character</code>.
a character string specifying the characters to betranslated.  If a character vector of length 2 or more is supplied,the first element is used with a warning.
a character string specifying the translations. If acharacter vector of length 2 or more is supplied, the first elementis used with a warning.
logical: translate to upper or lower case?.
the name, possibly <code>quote()</code>d, of a functionto be traced or untraced.  For <code>untrace</code> or for <code>trace</code>with more than one argument, more than one name can be given in thequoted form, and the same action will be applied to each one.  For“hidden” functions such as S3 methods in a namespace,<code>where = *</code> typically needs to be specified as well.
either a function or an unevaluated expression.  Thefunction will be called or the expression will be evaluated eitherat the beginning of the call, or before those steps in the callspecified by the argument <code>at</code>.See the details section.
either a <code>function</code> or an unevaluated expression.  Thefunction will be called or the expression will be evaluated onexiting the function.See the details section.
optional numeric vector or list.  If supplied, <code>tracer</code>will be called just before the corresponding step in the body of thefunction.See the details section. 
If <code>TRUE</code> (as per default), a descriptive line isprinted before any trace expression is evaluated.
 If this argument is supplied, it should be asignature for a method for function <code>what</code>.  In this case, themethod, and <em>not</em> the function itself, is traced.
 For complicated tracing, such as tracing within a loopinside the function, you will need to insert the desired calls byediting the body of the function.  If so, supply the <code>edit</code>argument either as <code>TRUE</code>, or as the name of the editor youwant to use.  Then <code>trace()</code> will call <code>edit</code> anduse the version of the function after you edit it.  See the detailssection for additional information.
where to look for the function to betraced; by default, the top-level environment of the call to<code>trace</code>.

An important use of this argument is to trace functions from apackage which are “hidden” or called from another package.The namespace mechanism imports the functions to be called (with theexception of functions in the base package).  The functions beingcalled are <em>not</em> the same objects seen from the top-level (ingeneral, the imported packages may not even be attached).Therefore, you must ensure that the correct versions are beingtraced.  The way to do this is to set argument <code>where</code> to afunction in the namespace (or that namespace).  The tracingcomputations will then start looking in the environment of thatfunction (which will be the namespace of the corresponding package).(Yes, it's subtle, but the semantics here are central to hownamespaces work in <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>.)
logical; a call to the support function <code>tracingState</code> returns <code>TRUE</code>if tracing is globally turned on, <code>FALSE</code> otherwise.  Anargument of one or the other of those values sets the state.  If thetracing state is <code>FALSE</code>, none of the trace actions willactually occur (used, for example, by debugging functions to shutoff tracing during debugging).
arguments to the support function <code>.doTrace</code>, calls towhich are inserted into the modified function or method:<code>expr</code> is the tracing action (such as a call to<code>browser()</code>), and <code>msg</code> is a string identifying theplace where the trace action occurs.
If <code>returnValue</code> finds no return value (e.g.a function exited because of an error, restart or as a resultof evaluating a return from a caller function), it will return<code>default</code> instead.
<code>NULL</code> (default, meaning <code>.Traceback</code>), or aninteger count of calls to skip in the current stack, or a list orpairlist of calls.  See the details.
a number, the maximum number of lines to be printed<em>per call</em>.  The default is unlimited.  Applies only when <code>x</code>is <code>NULL</code>, a <code>list</code> or a <code>pairlist</code> ofcalls, see the details.
An R object, not a function or environment or <code>NULL</code>.
A value as returned by <code>tracemem</code> or <code>retracemem</code>.
the name, possibly <code>quote()</code>d, of a functionto be traced or untraced.  For <code>untrace</code> or for <code>trace</code>with more than one argument, more than one name can be given in thequoted form, and the same action will be applied to each one.  For“hidden” functions such as S3 methods in a namespace,<code>where = *</code> typically needs to be specified as well.
either a function or an unevaluated expression.  Thefunction will be called or the expression will be evaluated eitherat the beginning of the call, or before those steps in the callspecified by the argument <code>at</code>.See the details section.
either a <code>function</code> or an unevaluated expression.  Thefunction will be called or the expression will be evaluated onexiting the function.See the details section.
optional numeric vector or list.  If supplied, <code>tracer</code>will be called just before the corresponding step in the body of thefunction.See the details section. 
If <code>TRUE</code> (as per default), a descriptive line isprinted before any trace expression is evaluated.
 If this argument is supplied, it should be asignature for a method for function <code>what</code>.  In this case, themethod, and <em>not</em> the function itself, is traced.
 For complicated tracing, such as tracing within a loopinside the function, you will need to insert the desired calls byediting the body of the function.  If so, supply the <code>edit</code>argument either as <code>TRUE</code>, or as the name of the editor youwant to use.  Then <code>trace()</code> will call <code>edit</code> anduse the version of the function after you edit it.  See the detailssection for additional information.
where to look for the function to betraced; by default, the top-level environment of the call to<code>trace</code>.

An important use of this argument is to trace functions from apackage which are “hidden” or called from another package.The namespace mechanism imports the functions to be called (with theexception of functions in the base package).  The functions beingcalled are <em>not</em> the same objects seen from the top-level (ingeneral, the imported packages may not even be attached).Therefore, you must ensure that the correct versions are beingtraced.  The way to do this is to set argument <code>where</code> to afunction in the namespace (or that namespace).  The tracingcomputations will then start looking in the environment of thatfunction (which will be the namespace of the corresponding package).(Yes, it's subtle, but the semantics here are central to hownamespaces work in <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>.)
logical; a call to the support function <code>tracingState</code> returns <code>TRUE</code>if tracing is globally turned on, <code>FALSE</code> otherwise.  Anargument of one or the other of those values sets the state.  If thetracing state is <code>FALSE</code>, none of the trace actions willactually occur (used, for example, by debugging functions to shutoff tracing during debugging).
arguments to the support function <code>.doTrace</code>, calls towhich are inserted into the modified function or method:<code>expr</code> is the tracing action (such as a call to<code>browser()</code>), and <code>msg</code> is a string identifying theplace where the trace action occurs.
If <code>returnValue</code> finds no return value (e.g.a function exited because of an error, restart or as a resultof evaluating a return from a caller function), it will return<code>default</code> instead.
The object to be transformed
Further arguments of the form <code>tag=value</code>
The object to be transformed
Further arguments of the form <code>tag=value</code>
The object to be transformed
Further arguments of the form <code>tag=value</code>
non-negative numeric vectors.
numeric vectors.
integer vectors.
a character vector
a character string specifying whether to remove bothleading and trailing whitespace (default), or only leading(<code>"left"</code>) or trailing (<code>"right"</code>).  Can be abbreviated.
a string specifying a regular expression to match(one character of) “white space”, see Details foralternatives to the default.
a numeric vector.  Or, for <code>round</code> and <code>signif</code>, acomplex vector.
integer indicating the number of decimal places(<code>round</code>) or significant digits (<code>signif</code>) to be used.Negative values are allowed (see ‘Details’).
arguments to be passed to methods.
an object inheriting from <code>"POSIXt"</code> or <code>"Date"</code>.
one of the units listed.  Can be abbreviated.
arguments to be passed to or from other methods, notably<code>digits</code> for <code>round</code>.
an object inheriting from <code>"POSIXt"</code> or <code>"Date"</code>.
one of the units listed.  Can be abbreviated.
arguments to be passed to or from other methods, notably<code>digits</code> for <code>round</code>.
a connection.
numeric.  A file position (relative to the originspecified by <code>origin</code>), or <code>NA</code>.
character string.  Empty or <code>"read"</code> or <code>"write"</code>,partial matches allowed.
character string.  One of <code>"start"</code>, <code>"current"</code>,<code>"end"</code>: see ‘Details’.
further arguments passed to or from other methods.
a connection.
numeric.  A file position (relative to the originspecified by <code>origin</code>), or <code>NA</code>.
character string.  Empty or <code>"read"</code> or <code>"write"</code>,partial matches allowed.
character string.  One of <code>"start"</code>, <code>"current"</code>,<code>"end"</code>: see ‘Details’.
further arguments passed to or from other methods.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> expression to try.
logical: should the report of error messages besuppressed?
a connection, or a character string naming thefile to print to (via <code>cat(*, file = outFile)</code>);used only if <code>silent</code> is false, as by default.
a condition object.
call expression.
a condition object.
expression to be evaluated.
expression to be evaluated before returning or exiting.
function.
character string.
character string.
character string naming a restart.
restart object.
object.
character string naming a condition class.
additional arguments; see details below.
a condition object.
call expression.
a condition object.
expression to be evaluated.
expression to be evaluated before returning or exiting.
function.
character string.
character string.
character string naming a restart.
restart object.
object.
character string naming a condition class.
additional arguments; see details below.
any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
a <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object
a character vector naming classes.  <code>value</code>can also be <code>NULL</code>.
logical affecting return value: see ‘Details’.
any interpreted <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> function.
a text string that can be retrieved when the browser is entered.
a condition that can be retrieved when the browser isentered.
an optional method signature. If specified, themethod is debugged, rather than its generic.
logical; a call to the support function<code>debuggingState</code> returns <code>TRUE</code> if debugging is globallyturned on, <code>FALSE</code> otherwise.  An argument of one or the otherof those values sets the state.  If the debugging state is<code>FALSE</code>, none of the debugging actions will occur (but explicit<code>browser</code> calls in functions will continue to work).
vectors (of the same mode) containing a sequenceof items (conceptually) with no duplicated values.
a vector or a data frame or an array or <code>NULL</code>.
a vector of values that cannot be compared.<code>FALSE</code> is a special value, meaning that all values can becompared, and may be the only value accepted for methods other thanthe default.  It will be coerced internally to the same type as<code>x</code>.
logical indicating if duplication should be consideredfrom the last, i.e., the last (or rightmost) of identical elements willbe kept.  This only matters for <code>names</code> or<code>dimnames</code>.
the maximum number of unique items expected (greater than one).See <code>duplicated</code>.
arguments for particular methods.
the array margin to be held fixed: a single integer.
a vector or a data frame or an array or <code>NULL</code>.
a vector of values that cannot be compared.<code>FALSE</code> is a special value, meaning that all values can becompared, and may be the only value accepted for methods other thanthe default.  It will be coerced internally to the same type as<code>x</code>.
logical indicating if duplication should be consideredfrom the last, i.e., the last (or rightmost) of identical elements willbe kept.  This only matters for <code>names</code> or<code>dimnames</code>.
the maximum number of unique items expected (greater than one).See <code>duplicated</code>.
arguments for particular methods.
the array margin to be held fixed: a single integer.
a vector or a data frame or an array or <code>NULL</code>.
a vector of values that cannot be compared.<code>FALSE</code> is a special value, meaning that all values can becompared, and may be the only value accepted for methods other thanthe default.  It will be coerced internally to the same type as<code>x</code>.
logical indicating if duplication should be consideredfrom the last, i.e., the last (or rightmost) of identical elements willbe kept.  This only matters for <code>names</code> or<code>dimnames</code>.
the maximum number of unique items expected (greater than one).See <code>duplicated</code>.
arguments for particular methods.
the array margin to be held fixed: a single integer.
a vector or a data frame or an array or <code>NULL</code>.
a vector of values that cannot be compared.<code>FALSE</code> is a special value, meaning that all values can becompared, and may be the only value accepted for methods other thanthe default.  It will be coerced internally to the same type as<code>x</code>.
logical indicating if duplication should be consideredfrom the last, i.e., the last (or rightmost) of identical elements willbe kept.  This only matters for <code>names</code> or<code>dimnames</code>.
the maximum number of unique items expected (greater than one).See <code>duplicated</code>.
arguments for particular methods.
the array margin to be held fixed: a single integer.
a vector or a data frame or an array or <code>NULL</code>.
a vector of values that cannot be compared.<code>FALSE</code> is a special value, meaning that all values can becompared, and may be the only value accepted for methods other thanthe default.  It will be coerced internally to the same type as<code>x</code>.
logical indicating if duplication should be consideredfrom the last, i.e., the last (or rightmost) of identical elements willbe kept.  This only matters for <code>names</code> or<code>dimnames</code>.
the maximum number of unique items expected (greater than one).See <code>duplicated</code>.
arguments for particular methods.
the array margin to be held fixed: a single integer.
a character vector with suitable numeric version strings (see‘Details’); for <code>package_version</code>, alternatively an Rversion object as obtained by <code>R.version</code>.
a logical indicating whether invalid numeric versionsshould results in an error (default) or not.
an object to be printed or summarized from one of thedate-time classes.
for timezone formatting, passed to <code>format.POSIXct</code>.
numeric or <code>NULL</code>, specifying the maximal number ofentries to be printed.  By default, when <code>NULL</code>,<code>getOption("max.print")</code> used.
number of significant digits for the computations:should be high enough to represent the least important time unitexactly.
further arguments to be passed from or to other methods.
date-time objects
date-time objects or character vectors.  (Charactervectors are converted by <code>as.POSIXct</code>.)
a numeric vector (in seconds)
one of <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>or <code>&gt;=</code>.
arguments to be passed to <code>cat</code> (for<code>warnings()</code>).
a <code>"warnings"</code> object as returned by<code>warnings()</code>.
a <code>"warnings"</code> or <code>"summary.warnings"</code> object.
if not <code>missing</code>, a <code>character</code>vector of the same <code>length</code> as <code>x</code>, to “label”the messages.  Defaults to <code>paste0(seq_len(n), ": ")</code> for<i>n &gt;= 2</i> where <code>n &lt;- length(x)</code>.
a character string <code>cat()</code>ed before themessages are printed.
date-time or date objects.
an optional time zone specification to be used for theconversion, mainly for <code>"POSIXlt"</code> objects.
character string.  Units in which the results aredesired.  Can be abbreviated.
character string.  Like <code>units</code>, except thatabbreviations are not allowed.
character string or numeric value specifying a time interval.
character specifying the format of <code>tim</code>: see<code>strptime</code>.  The default is a locale-specific time format.
an object inheriting from class <code>"difftime"</code>.
arguments to be passed to or from other methods.
date-time or date objects.
an optional time zone specification to be used for theconversion, mainly for <code>"POSIXlt"</code> objects.
character string.  Units in which the results aredesired.  Can be abbreviated.
character string.  Like <code>units</code>, except thatabbreviations are not allowed.
character string or numeric value specifying a time interval.
character specifying the format of <code>tim</code>: see<code>strptime</code>.  The default is a locale-specific time format.
an object inheriting from class <code>"difftime"</code>.
arguments to be passed to or from other methods.
date-time or date objects.
an optional time zone specification to be used for theconversion, mainly for <code>"POSIXlt"</code> objects.
character string.  Units in which the results aredesired.  Can be abbreviated.
character string.  Like <code>units</code>, except thatabbreviations are not allowed.
character string or numeric value specifying a time interval.
character specifying the format of <code>tim</code>: see<code>strptime</code>.  The default is a locale-specific time format.
an object inheriting from class <code>"difftime"</code>.
arguments to be passed to or from other methods.
date-time or date objects.
an optional time zone specification to be used for theconversion, mainly for <code>"POSIXlt"</code> objects.
character string.  Units in which the results aredesired.  Can be abbreviated.
character string.  Like <code>units</code>, except thatabbreviations are not allowed.
character string or numeric value specifying a time interval.
character specifying the format of <code>tim</code>: see<code>strptime</code>.  The default is a locale-specific time format.
an object inheriting from class <code>"difftime"</code>.
arguments to be passed to or from other methods.
(arguments)
a character vector with the names of the file(s) ordirectories to be deleted.
logical.  Should directories be deleted recursively?
logical.  Should permissions be changed (if possible) toallow the file or directory to be removed?
logical. Should wildcards (see ‘Details’ below) andtilde (see <code>path.expand</code>) be expanded?
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object, typically a list or vector.
logical.  Should unlisting be applied to listcomponents of <code>x</code>?
logical.  Should names be preserved?
string or name space object.
integer specifying position to attach.
<code>NULL</code> or a character vector of dependencies to berecorded in object <code>.Depends</code> in the package.
string naming the package/name space to load.
character vector specifying library search path.
Now ignored except during package installation.
Ignored except during package installation.
logical; if true, stop just after loading code.
<code>NULL</code> or a version specification (a listwith components <code>op</code> and <code>version</code>).
logical: should progress and error messages be suppressed?
string or ‘name’, see <code>as.symbol</code>,of a package, e.g., <code>"stats"</code>.
character vectors; see <code>library</code>.
further arguments to be passed to <code>loadNamespace</code>.
an environment.
logical specifying whether bindings should be locked.
a name object or character string.
a function taking zero or one arguments.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
logical; if true, the <code>dimnames</code> (names and rownames) are removed even from <code>data.frame</code>s.
<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object to serialize.
an open connection or (for <code>serialize</code>)<code>NULL</code> or (for <code>unserialize</code>) a raw vector(see ‘Details’).
a logical.  If <code>TRUE</code> or <code>NA</code>, an ASCIIrepresentation is written; otherwise (default) a binary one.See also the comments in the help for <code>save</code>.
a logical: if a binary representation is used, should abig-endian one (XDR) be used?
the workspace format version to use.  <code>NULL</code>specifies the current default version (3). The only other supportedvalue is 2, the default from <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> 1.4.0 to <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> 3.5.0.
a hook function for handling reference objects.
vector or data frame containing values to be divided into groups.
a ‘factor’ in the sense that <code>as.factor(f)</code>defines the grouping, or a list of such factors in which case theirinteraction is used for the grouping. If <code>x</code> is a data frame,<code>f</code> can also be a formula of the form <code> ~ g</code> to split bythe variable <code>g</code>, or more generally of the form <code> ~ g1 +      ... + gk</code> to split by the interaction of the variables<code>g1</code>, ..., <code>gk</code>, where these variables are evaluated inthe data frame <code>x</code> using the usual non-standard evaluationrules.
logical indicating if levels that do not occur should be dropped(if <code>f</code> is a <code>factor</code> or a list).
a list of vectors or data frames compatible with asplitting of <code>x</code>. Recycling applies if the lengths do not match.
character string, passed to <code>interaction</code> in thecase where <code>f</code> is a <code>list</code>.
logical, passed to <code>interaction</code> when<code>f</code> is a list.
further potential arguments passed to methods.
the name, possibly <code>quote()</code>d, of a functionto be traced or untraced.  For <code>untrace</code> or for <code>trace</code>with more than one argument, more than one name can be given in thequoted form, and the same action will be applied to each one.  For“hidden” functions such as S3 methods in a namespace,<code>where = *</code> typically needs to be specified as well.
either a function or an unevaluated expression.  Thefunction will be called or the expression will be evaluated eitherat the beginning of the call, or before those steps in the callspecified by the argument <code>at</code>.See the details section.
either a <code>function</code> or an unevaluated expression.  Thefunction will be called or the expression will be evaluated onexiting the function.See the details section.
optional numeric vector or list.  If supplied, <code>tracer</code>will be called just before the corresponding step in the body of thefunction.See the details section. 
If <code>TRUE</code> (as per default), a descriptive line isprinted before any trace expression is evaluated.
 If this argument is supplied, it should be asignature for a method for function <code>what</code>.  In this case, themethod, and <em>not</em> the function itself, is traced.
 For complicated tracing, such as tracing within a loopinside the function, you will need to insert the desired calls byediting the body of the function.  If so, supply the <code>edit</code>argument either as <code>TRUE</code>, or as the name of the editor youwant to use.  Then <code>trace()</code> will call <code>edit</code> anduse the version of the function after you edit it.  See the detailssection for additional information.
where to look for the function to betraced; by default, the top-level environment of the call to<code>trace</code>.

An important use of this argument is to trace functions from apackage which are “hidden” or called from another package.The namespace mechanism imports the functions to be called (with theexception of functions in the base package).  The functions beingcalled are <em>not</em> the same objects seen from the top-level (ingeneral, the imported packages may not even be attached).Therefore, you must ensure that the correct versions are beingtraced.  The way to do this is to set argument <code>where</code> to afunction in the namespace (or that namespace).  The tracingcomputations will then start looking in the environment of thatfunction (which will be the namespace of the corresponding package).(Yes, it's subtle, but the semantics here are central to hownamespaces work in <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>.)
logical; a call to the support function <code>tracingState</code> returns <code>TRUE</code>if tracing is globally turned on, <code>FALSE</code> otherwise.  Anargument of one or the other of those values sets the state.  If thetracing state is <code>FALSE</code>, none of the trace actions willactually occur (used, for example, by debugging functions to shutoff tracing during debugging).
arguments to the support function <code>.doTrace</code>, calls towhich are inserted into the modified function or method:<code>expr</code> is the tracing action (such as a call to<code>browser()</code>), and <code>msg</code> is a string identifying theplace where the trace action occurs.
If <code>returnValue</code> finds no return value (e.g.a function exited because of an error, restart or as a resultof evaluating a return from a caller function), it will return<code>default</code> instead.
An R object, not a function or environment or <code>NULL</code>.
A value as returned by <code>tracemem</code> or <code>retracemem</code>.
character string.  A description of the connection:see ‘Details’.
character string.  A description of how to open the connection(if it should be opened initially).  See section ‘Modes’ forpossible values.
logical.  See the ‘Blocking’ section.
The name of the encoding to be assumed.  See the‘Encoding’ section.
logical.  If true, a ‘raw’ interface is used whichwill be more suitable for arguments which are not regular files,e.g. character devices.  This suppresses the check for a compressedfile when opening for text-mode reading, and asserts that the‘file’ may not be seekable.
character string, partially matched to<code>c("default", "internal", "wininet", "libcurl")</code>:see ‘Details’.
named character vector of HTTP headers to use in HTTPrequests.  It is ignored for non-HTTP URLs.  The <code>User-Agent</code>header, coming from the <code>HTTPUserAgent</code> option (see<code>options</code>) is used as the first header, automatically.
integer in 0–9.  The amount of compression to beapplied when writing, from none to maximal available.  For<code>xzfile</code> can also be negative: see the ‘Compression’section.
numeric: the timeout (in seconds) to be used for thisconnection.  Beware that some OSes may treat very large values aszero: however the POSIX standard requires values up to 31 days to besupported.
optional character vector with options. Currently only<code>"no-delay"</code> is supported on TCP sockets.
a filename within a zip file.
character string.  Host name for the port.
integer.  The TCP port number.
logical.  Should the socket be a client or a server?
a server socket listening for connections.
a connection.
character string.  Currently ignored.
character string.  Empty or <code>"read"</code> or <code>"write"</code>,partial matches allowed.
arguments passed to or from other methods.
a matrix or other <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object with <code>length(dim(x)) == 2</code>.For back compatibility reasons, when the above is not fulfilled,<code>as.matrix(x)</code> is called first.
logical.  Should the diagonal be included?
character string.  A description of the connection:see ‘Details’.
character string.  A description of how to open the connection(if it should be opened initially).  See section ‘Modes’ forpossible values.
logical.  See the ‘Blocking’ section.
The name of the encoding to be assumed.  See the‘Encoding’ section.
logical.  If true, a ‘raw’ interface is used whichwill be more suitable for arguments which are not regular files,e.g. character devices.  This suppresses the check for a compressedfile when opening for text-mode reading, and asserts that the‘file’ may not be seekable.
character string, partially matched to<code>c("default", "internal", "wininet", "libcurl")</code>:see ‘Details’.
named character vector of HTTP headers to use in HTTPrequests.  It is ignored for non-HTTP URLs.  The <code>User-Agent</code>header, coming from the <code>HTTPUserAgent</code> option (see<code>options</code>) is used as the first header, automatically.
integer in 0–9.  The amount of compression to beapplied when writing, from none to maximal available.  For<code>xzfile</code> can also be negative: see the ‘Compression’section.
numeric: the timeout (in seconds) to be used for thisconnection.  Beware that some OSes may treat very large values aszero: however the POSIX standard requires values up to 31 days to besupported.
optional character vector with options. Currently only<code>"no-delay"</code> is supported on TCP sockets.
a filename within a zip file.
character string.  Host name for the port.
integer.  The TCP port number.
logical.  Should the socket be a client or a server?
a server socket listening for connections.
a connection.
character string.  Currently ignored.
character string.  Empty or <code>"read"</code> or <code>"write"</code>,partial matches allowed.
arguments passed to or from other methods.
a character string naming a function (and not abuilt-in operator).  Required for <code>UseMethod</code>.
for <code>UseMethod</code>: an object whose class willdetermine the method to be dispatched.  Defaults to the firstargument of the enclosing function.
further arguments to be passed to the next method.
object to be converted.
logical: should the conversion be to a singlecharacter string or multiple individual characters?
logical: should interpretation ofsurrogate pairs be attempted?  (See ‘Details’.)Only supported for <code>multiple = FALSE</code>.
a character vector.
a character vector.
a vector (atomic or list) or an <code>expression</code>object.  Other objects (including classed objects) will be coercedby <code>base::as.list</code>.
the function to be applied to each element of <code>X</code>:see ‘Details’.  In the case of functions like<code>+</code>, <code>%*%</code>, the function name must be backquoted or quoted.
optional arguments to <code>FUN</code>.
logical or character string; should the result besimplified to a vector, matrix or higher dimensional array ifpossible?  For <code>sapply</code> it must be named and not abbreviated.The default value, <code>TRUE</code>, returns a vector or matrix if appropriate,whereas if <code>simplify = "array"</code> the result may be an<code>array</code> of “rank”(<i>=</i><code>length(dim(.))</code>) one higher than the resultof <code>FUN(X[[i]])</code>.
logical; if <code>TRUE</code> and if <code>X</code> is character,use <code>X</code> as <code>names</code> for the result unless it had namesalready.  Since this argument follows <code>...</code> its name cannotbe abbreviated.
a (generalized) vector; a template for the returnvalue from FUN.  See ‘Details’.
integer: the number of replications.
the expression (a language object, usually a call)to evaluate repeatedly.
a list, typically returned from <code>lapply()</code>.
logical; if true, <code>simplify2array()</code> will produce a(“higher rank”) array when appropriate, whereas<code>higher = FALSE</code> would return a matrix (or vector) only.These two cases correspond to <code>sapply(*, simplify = "array")</code> or<code>simplify = TRUE</code>, respectively.
character string naming an atomic mode or<code>"list"</code> or <code>"expression"</code> or (except for <code>vector</code>)<code>"any"</code>.  Currently, <code>is.vector()</code> allows any type (see<code>typeof</code>) for <code>mode</code>, and when mode is not<code>"any"</code>, <code>is.vector(x, mode)</code> is almost the same as<code>typeof(x) == mode</code>.
a non-negative integer specifying the desired length.  Fora long vector, i.e., <code>length &gt; .Machine$integer.max</code>, ithas to be of type <code>"double"</code>.  Supplying an argument of lengthother than one is an error.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
function to apply, found via <code>match.fun</code>.
a character vector of arguments which should bevectorized.  Defaults to all arguments of <code>FUN</code>.
logical or character string; attempt to reduce theresult to a vector, matrix or higher dimensional array; seethe <code>simplify</code> argument of <code>sapply</code>.
logical; use names if the first ... argument hasnames, or if it is a character vector, use that character vector asthe names.
zero or more objects which can be coerced to character(and which are pasted together with no separator) or a singlecondition object.
logical, indicating if the call should become part of thewarning message.
logical, indicating if the call should be outputimmediately, even if <code>getOption("warn") &lt;= 0</code>.
logical, indicating as far as possible the message shouldbe output as a single line when <code>options(warn = 1)</code>.
expression to evaluate.
see <code>gettext</code>.  If <code>NA</code>, messages willnot be translated, see also the note in <code>stop</code>.
character, indicating which classes of warnings shouldbe suppressed.
a condition object.
call expression.
a condition object.
expression to be evaluated.
expression to be evaluated before returning or exiting.
function.
character string.
character string.
character string naming a restart.
restart object.
object.
character string naming a condition class.
additional arguments; see details below.
arguments to be passed to <code>cat</code> (for<code>warnings()</code>).
a <code>"warnings"</code> object as returned by<code>warnings()</code>.
a <code>"warnings"</code> or <code>"summary.warnings"</code> object.
if not <code>missing</code>, a <code>character</code>vector of the same <code>length</code> as <code>x</code>, to “label”the messages.  Defaults to <code>paste0(seq_len(n), ": ")</code> for<i>n &gt;= 2</i> where <code>n &lt;- length(x)</code>.
a character string <code>cat()</code>ed before themessages are printed.
an object inheriting from class <code>"POSIXt"</code> or <code>"Date"</code>.
logical vector (possibly recycled).  Should the names beabbreviated?
an length-one object inheriting from class<code>"POSIXt"</code> or <code>"Date"</code>.
arguments for other methods.
an object inheriting from class <code>"POSIXt"</code> or <code>"Date"</code>.
logical vector (possibly recycled).  Should the names beabbreviated?
an length-one object inheriting from class<code>"POSIXt"</code> or <code>"Date"</code>.
arguments for other methods.
an object inheriting from class <code>"POSIXt"</code> or <code>"Date"</code>.
logical vector (possibly recycled).  Should the names beabbreviated?
an length-one object inheriting from class<code>"POSIXt"</code> or <code>"Date"</code>.
arguments for other methods.
a <code>logical</code> vector or array.  <code>NA</code>sare allowed and omitted (treated as if <code>FALSE</code>).
logical; should <b>arr</b>ay <b>ind</b>ices be returnedwhen <code>x</code> is an array?
integer-valued index vector, as resulting from<code>which(x)</code>.
<code>dim(.)</code> integer vector
optional list of character <code>dimnames(.)</code>.If <code>useNames</code> is true, to be used for constructing dimnames for<code>arrayInd()</code> (and hence, <code>which(*, arr.ind=TRUE)</code>).If <code>names(.dimnames)</code> is not empty, these are used ascolumn names.  <code>.dimnames[[1]]</code> is used as row names.
logical indicating if the value of <code>arrayInd()</code>should have (non-null) dimnames at all.
numeric (logical, integer or double) vector or an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> objectfor which the internal coercion to <code>double</code> works whose<code>min</code> or <code>max</code> is searched for.
numeric (logical, integer or double) vector or an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> objectfor which the internal coercion to <code>double</code> works whose<code>min</code> or <code>max</code> is searched for.
A length-one logical vector that is not <code>NA</code>.Conditions of length greater than one are currently accepted with awarning, but only the first element is used.  An error is signalledinstead when the environment variable <span class="env">_R_CHECK_LENGTH_1_CONDITION_</span>is set to true.  Other types are coerced to logicalif possible, ignoring any class.
A syntactical name for a variable.
An expression evaluating to a vector (including a list andan expression) or to a pairlist or <code>NULL</code>.  Afactor value will be coerced to a character vector.  As from <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span>4.0.0 this can be a long vector.
An <em>expression</em> in a formal sense.  This is either asimple expression or a so-called <em>compound expression</em>, usuallyof the form <code>{ expr1 ; expr2 }</code>.
data to use for constructing an environment. For thedefault <code>with</code> method this may be an environment, a list, adata frame, or an integer as in <code>sys.call</code>. For <code>within</code>,it can be a list or a data frame.
expression to evaluate; particularly for <code>within()</code>often a “compound” expression, i.e., of the form 

for the <code>list</code> method of <code>within()</code>,a <code>logical</code> specifying if the resulting list should keepthe <code>attributes</code> from <code>data</code> and have its<code>names</code> in the same order.  Often this is unneeded asthe result is a <em>named</em> list anyway, and then <code>keepAttrs =      FALSE</code> is more efficient.
arguments to be passed to (future) methods.
data to use for constructing an environment. For thedefault <code>with</code> method this may be an environment, a list, adata frame, or an integer as in <code>sys.call</code>. For <code>within</code>,it can be a list or a data frame.
expression to evaluate; particularly for <code>within()</code>often a “compound” expression, i.e., of the form 

for the <code>list</code> method of <code>within()</code>,a <code>logical</code> specifying if the resulting list should keepthe <code>attributes</code> from <code>data</code> and have its<code>names</code> in the same order.  Often this is unneeded asthe result is a <em>named</em> list anyway, and then <code>keepAttrs =      FALSE</code> is more efficient.
arguments to be passed to (future) methods.
a connection or a character string giving thepathname of the file or URL to read from.  <code>""</code> indicates theconnection <code>stdin()</code>.
<code>TRUE</code>, <code>FALSE</code> or an environment, determiningwhere the parsed expressions are evaluated.  <code>FALSE</code> (thedefault) corresponds to the user's workspace (the globalenvironment) and <code>TRUE</code> to the environment from which<code>source</code> is called.
logical; if <code>TRUE</code>, each expression is printedafter parsing, before evaluation.
logical; if <code>TRUE</code>, the result of<code>eval(i)</code> is printed for each expression <code>i</code>; defaultsto the value of <code>echo</code>.
for <code>source()</code> and <code>withAutoprint(*, evaluated=TRUE)</code>:<em>instead</em> of specifying <code>file</code>, an<code>expression</code>, <code>call</code>, or <code>list</code>of <code>call</code>'s, but <em>not</em> an unevaluated “expression”.

for <code>withAutoprint()</code> (with default <code>evaluated=FALSE</code>):one or more unevaluated “expressions”.
logical indicating that <code>exprs</code> is passed to<code>source(exprs= *)</code> and hence must be evaluated, i.e., a formal<code>expression</code>, <code>call</code> or <code>list</code> of calls.
logical indicating if newline (hence empty line) shouldbe printed before each expression (when <code>echo = TRUE</code>).
if <code>TRUE</code>, more diagnostics (than just<code>echo = TRUE</code>) are printed during parsing and evaluation ofinput, including extra info for <b>each</b> expression.
character; gives the prompt to be used if<code>echo = TRUE</code>.
integer; is used only if <code>echo</code> is<code>TRUE</code> and gives the maximal number of characters output forthe deparse of a single expression.
integer, passed to <code>deparse()</code> whichis used (only) when there are no source references.
<code>character</code> vector, passed as<code>control</code> to <code>deparse()</code>, see also<code>.deparseOpts</code>.  In <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> version &lt;= 3.3.x, this washardcoded to <code>"showAttributes"</code>, which is the defaultcurrently; <code>deparseCtrl = "all"</code> may be preferable, when strictback compatibility is not of importance.
logical; if <code>TRUE</code> and <code>file</code> is a pathname,the <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> working directory is temporarily changed to the directorycontaining <code>file</code> for evaluating.
character vector.  The encoding(s) to be assumed when<code>file</code> is a character string: see <code>file</code>.  Apossible value is <code>"unknown"</code> when the encoding is guessed: seethe ‘Encodings’ section.
character; gives the prompt to use oncontinuation lines if <code>echo = TRUE</code>.
integer; how many comment lines at the start of thefile to skip if <code>echo = TRUE</code>.
logical: should the source formatting be retainedwhen echoing expressions, if possible?
(for <code>withAutoprint()</code>:) further (non-file related)arguments to be passed to <code>source(.)</code>.
a condition object.
call expression.
a condition object.
expression to be evaluated.
expression to be evaluated before returning or exiting.
function.
character string.
character string.
character string naming a restart.
restart object.
object.
character string naming a condition class.
additional arguments; see details below.
data to use for constructing an environment. For thedefault <code>with</code> method this may be an environment, a list, adata frame, or an integer as in <code>sys.call</code>. For <code>within</code>,it can be a list or a data frame.
expression to evaluate; particularly for <code>within()</code>often a “compound” expression, i.e., of the form 

for the <code>list</code> method of <code>within()</code>,a <code>logical</code> specifying if the resulting list should keepthe <code>attributes</code> from <code>data</code> and have its<code>names</code> in the same order.  Often this is unneeded asthe result is a <em>named</em> list anyway, and then <code>keepAttrs =      FALSE</code> is more efficient.
arguments to be passed to (future) methods.
data to use for constructing an environment. For thedefault <code>with</code> method this may be an environment, a list, adata frame, or an integer as in <code>sys.call</code>. For <code>within</code>,it can be a list or a data frame.
expression to evaluate; particularly for <code>within()</code>often a “compound” expression, i.e., of the form 

for the <code>list</code> method of <code>within()</code>,a <code>logical</code> specifying if the resulting list should keepthe <code>attributes</code> from <code>data</code> and have its<code>names</code> in the same order.  Often this is unneeded asthe result is a <em>named</em> list anyway, and then <code>keepAttrs =      FALSE</code> is more efficient.
arguments to be passed to (future) methods.
data to use for constructing an environment. For thedefault <code>with</code> method this may be an environment, a list, adata frame, or an integer as in <code>sys.call</code>. For <code>within</code>,it can be a list or a data frame.
expression to evaluate; particularly for <code>within()</code>often a “compound” expression, i.e., of the form 

for the <code>list</code> method of <code>within()</code>,a <code>logical</code> specifying if the resulting list should keepthe <code>attributes</code> from <code>data</code> and have its<code>names</code> in the same order.  Often this is unneeded asthe result is a <em>named</em> list anyway, and then <code>keepAttrs =      FALSE</code> is more efficient.
arguments to be passed to (future) methods.
a condition object.
call expression.
a condition object.
expression to be evaluated.
expression to be evaluated before returning or exiting.
function.
character string.
character string.
character string naming a restart.
restart object.
object.
character string naming a condition class.
additional arguments; see details below.
an expression to be evaluated.
the data to be written out, usually an atomic vector.
a <code>connection</code>, or a character string namingthe file to write to.  If <code>""</code>, print to the standard outputconnection.

When <code>.Platform$OS.type != "windows"</code>, and itis <code>"|cmd"</code>, the output is piped to the command givenby ‘<span class="file">cmd</span>’.
the number of columns to write the data in.
if <code>TRUE</code> the data <code>x</code> are appended to theconnection.
a string used to separate columns.  Using <code>sep = "\t"</code>gives tab delimited output; default is <code>" "</code>.
either a character string naming a file or a connection.<code>""</code> indicates output to the console.  For <code>read.dcf</code> thiscan name a compressed file (see <code>gzfile</code>).
Fields to read from the DCF file.  Default is to read allfields.
a logical indicating whether in case of multipleoccurrences of a field in a record, all these should be gathered.If <code>all</code> is false (default), only the last such occurrence isused.
a character string with the names of the fields forwhich whitespace should be kept as is, or <code>NULL</code> (default)indicating that there are no such fields.  Coerced to character ifpossible.  For fields where whitespace is not to be kept as is,<code>read.dcf</code> removes leading and trailing whitespace, and<code>write.dcf</code> folds using <code>strwrap</code>.
the object to be written, typically a data frame.  If not, itis attempted to coerce <code>x</code> to a data frame.
logical.  If <code>TRUE</code>, the output is appended to thefile.  If <code>FALSE</code>, any existing file of the name is destroyed.
logical to be passed to <code>writeLines()</code>,see there: “for expert use”.
a positive integer specifying the indentation forcontinuation lines in output entries.
a positive integer giving the target column for wrappinglines in the output.
A connection object or a character string naming a file ora raw vector.
Either an object whose mode will give the mode of thevector to be read, or a character vector of length one describingthe mode: one of <code>"numeric"</code>, <code>"double"</code>,<code>"integer"</code>, <code>"int"</code>, <code>"logical"</code>, <code>"complex"</code>,<code>"character"</code>, <code>"raw"</code>.
numeric.  The (maximal) number of records to beread.  You can use an over-estimate here, but not too large asstorage is reserved for <code>n</code> items.
integer.  The number of bytes per element in the bytestream.  The default, <code>NA_integer_</code>, uses the natural size.Size changing is not supported for raw and complex vectors.
logical.  Only used for integers of sizes 1 and 2,when it determines if the quantity on fileshould be regarded as a signed or unsigned integer.
The endian-ness (<code>"big"</code> or <code>"little"</code>) of thetarget system for the file.  Using <code>"swap"</code> will force swappingendian-ness.
An <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object to be written to the connection.
See <code>writeLines</code>.
A connection object, or a character string naming a file,or a raw vector.
integer vector, giving the lengths in characters of(unterminated) character strings to be read or written.  Elementsmust be &gt;= 0 and not <code>NA</code>.
logical: For <code>readChar</code>, should <code>nchars</code> beregarded as a number of bytes not characters in a multi-bytelocale?  For <code>writeChar</code>, see <code>writeLines</code>.
A character vector to be written to the connection, atleast as long as <code>nchars</code>.
‘end of string’: character string.  The terminatorto be written after each string, followed by an ASCII <code>nul</code>;use <code>NULL</code> for no terminator at all.
A character vector
A connection object or a character string.
character string.  A string to be written to the connectionafter each line of text.
logical.  See ‘Details’.
<code>raw</code>, <code>logical</code> or ‘number-like’ vectors (i.e., oftypes <code>double</code> (class <code>numeric</code>),<code>integer</code> and <code>complex</code>), or objects forwhich methods have been written.
object of class <code>data.frame</code>.
row names for old and new rows.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
a character vector with suitable numeric version strings (see‘Details’); for <code>package_version</code>, alternatively an Rversion object as obtained by <code>R.version</code>.
a logical indicating whether invalid numeric versionsshould results in an error (default) or not.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
an <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> object.
character string.  A description of the connection:see ‘Details’.
character string.  A description of how to open the connection(if it should be opened initially).  See section ‘Modes’ forpossible values.
logical.  See the ‘Blocking’ section.
The name of the encoding to be assumed.  See the‘Encoding’ section.
logical.  If true, a ‘raw’ interface is used whichwill be more suitable for arguments which are not regular files,e.g. character devices.  This suppresses the check for a compressedfile when opening for text-mode reading, and asserts that the‘file’ may not be seekable.
character string, partially matched to<code>c("default", "internal", "wininet", "libcurl")</code>:see ‘Details’.
named character vector of HTTP headers to use in HTTPrequests.  It is ignored for non-HTTP URLs.  The <code>User-Agent</code>header, coming from the <code>HTTPUserAgent</code> option (see<code>options</code>) is used as the first header, automatically.
integer in 0–9.  The amount of compression to beapplied when writing, from none to maximal available.  For<code>xzfile</code> can also be negative: see the ‘Compression’section.
numeric: the timeout (in seconds) to be used for thisconnection.  Beware that some OSes may treat very large values aszero: however the POSIX standard requires values up to 31 days to besupported.
optional character vector with options. Currently only<code>"no-delay"</code> is supported on TCP sockets.
a filename within a zip file.
character string.  Host name for the port.
integer.  The TCP port number.
logical.  Should the socket be a client or a server?
a server socket listening for connections.
a connection.
character string.  Currently ignored.
character string.  Empty or <code>"read"</code> or <code>"write"</code>,partial matches allowed.
arguments passed to or from other methods.
a numeric or complex vector or any <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> number-like objectwhich has a <code>round</code> method and basic arithmetic methodsincluding <code>log10()</code>.
integer indicating the precision to be used.
the intercept and slope, single values.
logical asking whether to <em>untransform</em>.  See‘Details’.
the y-value(s) for horizontal line(s).
the x-value(s) for vertical line(s).
a vector of length two giving the intercept and slope.
an object with a <code>coef</code> method.  See ‘Details’.
graphical parameters such as<code>col</code>, <code>lty</code> and  <code>lwd</code> (possibly as vectors: see‘Details’) and <code>xpd</code> and the line characteristics<code>lend</code>, <code>ljoin</code> and <code>lmitre</code>.
coordinates of points <b>from</b> which to draw.
coordinates of points <b>to</b> which to draw.  At leastone must the supplied
length of the edges of the arrow head (in inches).
angle from the shaft of the arrow to the edge of thearrow head.
integer code, determining <em>kind</em> of arrows to bedrawn.
graphical parameters, possible vectors.<code>NA</code> values in <code>col</code> cause the arrow to be omitted.
graphical parameters such as <code>xpd</code> and the linecharacteristics <code>lend</code>, <code>ljoin</code> and <code>lmitre</code>:see <code>par</code>.
a two-dimensional contingency table in matrix form.
a character vector of length two giving the colors used fordrawing positive and negative Pearson residuals, respectively.
the amount of space (as a fraction of the averagerectangle width and height) left between each rectangle.
overall title for the plot.
a label for the x axis.  Defaults to the name (if any) ofthe row dimension in <code>x</code>.
a label for the y axis.  Defaults to the name (if any) ofthe column dimension in <code>x</code>.
an integer specifying which side of the plot the axis isto be drawn on.  The axis is placed as follows: 1=below,2=left, 3=above and 4=right.
the points at which tick-marks are to be drawn.  Non-finite(infinite, <code>NaN</code> or <code>NA</code>) values are omitted.  By default(when <code>NULL</code>) tickmark locations are computed, see‘Details’ below.
this can either be a logical value specifying whether(numerical) annotations are to be made at the tickmarks, or acharacter or expression vector of labels to be placed at thetickpoints.  (Other objects are coerced by <code>as.graphicsAnnot</code>.)If this is not logical, <code>at</code> should also be supplied and of thesame length.  If <code>labels</code> is of length zero after coercion,it has the same effect as supplying <code>TRUE</code>.
a logical value specifying whether tickmarks and an axis lineshould be drawn.
the number of lines into the margin at which the axis linewill be drawn, if not <code>NA</code>.
the coordinate at which the axis line is to be drawn:if not <code>NA</code> this overrides the value of <code>line</code>.
a logical value indicating whether the axis should bedrawn in the outer plot margin, rather than the standard plotmargin.
font for text.  Defaults to <code>par("font")</code>.
line type for both the axis line and the tick marks.
line widths for the axis line and the tickmarks.  Zero or negative values will suppress the line or ticks.
colors for the axis line and the tick marksrespectively.  <code>col = NULL</code> means to use <code>par("fg")</code>,possibly specified inline, and <code>col.ticks = NULL</code> means to usewhatever color <code>col</code> resolved to.
adjustment (see <code>par("adj")</code>) for all labels<em>parallel</em> (‘horizontal’) to the reading direction.  Ifthis is not a finite value, the default is used (centring forstrings parallel to the axis, justification of the end nearest theaxis otherwise).
adjustment for each tick label <em>perpendicular</em> to thereading direction.  For labels parallel to the axes, <code>padj = 0</code>means right or top alignment, and <code>padj = 1</code> means left or bottomalignment.  This can be a vector given a value for each string, andwill be recycled as necessary.

If <code>padj</code> is not a finite value (the default), the value of<code>par("las")</code> determines the adjustment.  For strings plottedperpendicular to the axis the default is to centre the string.
an optional (typically non-negative) numeric factor tobe multiplied with the size of an ‘m’ to determine theminimal gap between labels that are drawn, see ‘Details’.The default, <code>NA</code>, corresponds to <code>1</code> for tick labels drawn<em>parallel</em> to the axis and <code>0.25</code> otherwise, i.e., thedefault is equivalent to 

<code>gap.axis</code> may typically be relevant when <code>at = ..</code>tick-mark positions are specified explicitly.
other graphical parameters may also be passed asarguments to this function, particularly, <code>cex.axis</code>, <code>col.axis</code>and <code>font.axis</code> for axis annotation, i.e. tick labels, <code>mgp</code>and <code>xaxp</code> or <code>yaxp</code> for positioning, <code>tck</code> or<code>tcl</code> for tick mark length and direction, <code>las</code> forvertical/horizontal label orientation, or <code>fg</code> instead of<code>col</code>, and <code>xpd</code> for clipping.  See <code>par</code> on these.

Parameters <code>xaxt</code> (sides 1 and 3) and <code>yaxt</code> (sides 2 and4) control if the axis is plotted at all.

Note that <code>lab</code> will partial match to argument<code>labels</code> unless the latter is also supplied.  (Since thedefault axes have already been set up by <code>plot.window</code>,<code>lab</code> will not be acted on by <code>axis</code>.)
an object which indicates the range over which an axis shouldbe drawn
the points at which tick-marks are to be drawn.
an integer specifying which side of the plot the axis isto be drawn on.  The axis is placed as follows: 1=below,2=left, 3=above and 4=right.
this can either be a logical value specifying whether(numerical) annotations are to be made at the tickmarks, or acharacter or expression vector of labels to be placed at thetickpoints. If this is specified as a character or expressionvector, <code>at</code> should be supplied and they should be the samelength.
arguments to be passed to methods and perhaps then to<code>axis</code>.
A date-time or date object.
See <code>axis</code>.
See <code>strptime</code>.
Either a logical value specifying whetherannotations are to be made at the tickmarks, or a vector of characterstrings to be placed at the tickpoints.
Further arguments to be passed from or to other methods,typically graphical parameters.
A date-time or date object.
See <code>axis</code>.
See <code>strptime</code>.
Either a logical value specifying whetherannotations are to be made at the tickmarks, or a vector of characterstrings to be placed at the tickpoints.
Further arguments to be passed from or to other methods,typically graphical parameters.
integer in 1:4, as for <code>axis</code>.
numeric vector of length three, defaulting to<code>par("xaxp")</code> or <code>par("yaxp")</code>depending on the <code>side</code> argument (<code>par("xaxp")</code>if <code>side</code> is 1 or 3, <code>par("yaxp")</code> if side is 2 or 4).
numeric vector of length two giving user coordinatelimits, defaulting to the relevant portion of<code>par("usr")</code> (<code>par("usr")[1:2]</code> or<code>par("usr")[3:4]</code> for <code>side</code> in (1,3) or (2,4)respectively).
logical indicating if log coordinates are active; defaultsto <code>par("xlog")</code> or <code>par("ylog")</code>depending on <code>side</code>.
(only used when <code>log</code> is true): approximate (lowerbound for the) number of tick intervals; defaults to<code>par("lab")[j]</code> where <code>j</code> is 1 or 2 depending on<code>side</code>.  Set this to <code>Inf</code> if you want the same behavioras in earlier <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> versions (than 2.14.x).
either a vector or matrix of values describing thebars which make up the plot.  If <code>height</code> is a vector, theplot consists of a sequence of rectangular bars with heightsgiven by the values in the vector.  If <code>height</code> is a matrixand <code>beside</code> is <code>FALSE</code> then each bar of the plotcorresponds to a column of <code>height</code>, with the values in thecolumn giving the heights of stacked sub-bars making up thebar.  If <code>height</code> is a matrix and <code>beside</code> is<code>TRUE</code>, then the values in each column are juxtaposedrather than stacked.
optional vector of bar widths. Re-cycled to length thenumber of bars drawn.  Specifying a single value will have novisible effect unless <code>xlim</code> is specified.
the amount of space (as a fraction of the average barwidth) left before each bar.  May be given as a single number orone number per bar.  If <code>height</code> is a matrix and<code>beside</code> is <code>TRUE</code>, <code>space</code> may be specified bytwo numbers, where the first is the space between bars in thesame group, and the second the space between the groups.  If notgiven explicitly, it defaults to <code>c(0,1)</code> if <code>height</code>is a matrix and <code>beside</code> is <code>TRUE</code>, and to 0.2otherwise.
a vector of names to be plotted below each bar orgroup of bars.  If this argument is omitted, then the names aretaken from the <code>names</code> attribute of <code>height</code> if thisis a vector, or the column names if it is a matrix.
a vector of text used to construct a legend forthe plot, or a logical indicating whether a legend should beincluded.  This is only useful when <code>height</code> is a matrix.In that case given legend labels should correspond to the rows of<code>height</code>; if <code>legend.text</code> is true, the row names of<code>height</code> will be used as labels if they are non-null.
a logical value.  If <code>FALSE</code>, the columns of<code>height</code> are portrayed as stacked bars, and if <code>TRUE</code>the columns are portrayed as juxtaposed bars.
a logical value.  If <code>FALSE</code>, the bars are drawnvertically with the first bar to the left.  If <code>TRUE</code>, thebars are drawn horizontally with the first at the bottom.
a vector giving the density of shading lines, inlines per inch, for the bars or bar components.The default value of <code>NULL</code> means that no shading linesare drawn. Non-positive values of <code>density</code> also inhibit thedrawing of shading lines.
the slope of shading lines, given as an angle indegrees (counter-clockwise), for the bars or bar components.
a vector of colors for the bars or bar components.By default, grey is used if <code>height</code> is a vector, and agamma-corrected grey palette if <code>height</code> is a matrix.
the color to be used for the border of the bars.Use <code>border = NA</code> to omit borders.  If there are shadinglines, <code>border = TRUE</code> means use the same colour forthe border as for the shading lines.
overall and sub title for the plot.
a label for the x axis.
a label for the y axis.
limits for the x axis.
limits for the y axis.
logical. Should bars be allowed to go outside region?
string specifying if axis scales should be logarithmic; see<code>plot.default</code>.
logical.  If <code>TRUE</code>, a vertical (or horizontal, if<code>horiz</code> is true) axis is drawn.
logical.  If <code>TRUE</code>, and if there are<code>names.arg</code> (see above), theother axis is drawn (with <code>lty = 0</code>) and labeled.
expansion factor for numeric axis labels (see<code>par('cex')</code>).
expansion factor for axis names (bar labels).
logical.  If <code>TRUE</code>, the lines which divideadjacent (non-stacked!) bars will be drawn.  Only applies when<code>space = 0</code> (which it partly is when <code>beside = TRUE</code>).
logical.  If <code>FALSE</code>, nothing is plotted.
the graphics parameter <code>lty</code> (see<code>par('lty')</code>) applied to the axisand tick marks of the categorical (default horizontal) axis.  Notethat by default the axis is suppressed.
a vector indicating how much the bars should be shiftedrelative to the x axis.
logical specifying if bars should be added to an alreadyexisting plot; defaults to <code>FALSE</code>.
logical specifying if the default annotation (<code>main</code>,<code>sub</code>, <code>xlab</code>, <code>ylab</code>) should appear on the plot, see<code>title</code>.
list of additional arguments to pass to<code>legend()</code>; names of the list are used as argumentnames.  Only used if <code>legend.text</code> is supplied.
a formula where the <code>y</code> variables are numeric datato plot against the categorical <code>x</code> variables.  The formulacan have one of three forms:

(see the examples).
a data frame (or list) from which the variables in formulashould be taken.
an optional vector specifying a subset of observationsto be used.
a function which indicates what should happen whenthe data contain <code>NA</code> values.  The default is to ignore missingvalues in the given variables.
arguments to be passed to/from other methods.  For thedefault method these can include further arguments (such as<code>axes</code>, <code>asp</code> and <code>main</code>) andgraphical parameters (see <code>par</code>) which are passed to<code>plot.window()</code>, <code>title()</code> and<code>axis</code>.
either a vector or matrix of values describing thebars which make up the plot.  If <code>height</code> is a vector, theplot consists of a sequence of rectangular bars with heightsgiven by the values in the vector.  If <code>height</code> is a matrixand <code>beside</code> is <code>FALSE</code> then each bar of the plotcorresponds to a column of <code>height</code>, with the values in thecolumn giving the heights of stacked sub-bars making up thebar.  If <code>height</code> is a matrix and <code>beside</code> is<code>TRUE</code>, then the values in each column are juxtaposedrather than stacked.
optional vector of bar widths. Re-cycled to length thenumber of bars drawn.  Specifying a single value will have novisible effect unless <code>xlim</code> is specified.
the amount of space (as a fraction of the average barwidth) left before each bar.  May be given as a single number orone number per bar.  If <code>height</code> is a matrix and<code>beside</code> is <code>TRUE</code>, <code>space</code> may be specified bytwo numbers, where the first is the space between bars in thesame group, and the second the space between the groups.  If notgiven explicitly, it defaults to <code>c(0,1)</code> if <code>height</code>is a matrix and <code>beside</code> is <code>TRUE</code>, and to 0.2otherwise.
a vector of names to be plotted below each bar orgroup of bars.  If this argument is omitted, then the names aretaken from the <code>names</code> attribute of <code>height</code> if thisis a vector, or the column names if it is a matrix.
a vector of text used to construct a legend forthe plot, or a logical indicating whether a legend should beincluded.  This is only useful when <code>height</code> is a matrix.In that case given legend labels should correspond to the rows of<code>height</code>; if <code>legend.text</code> is true, the row names of<code>height</code> will be used as labels if they are non-null.
a logical value.  If <code>FALSE</code>, the columns of<code>height</code> are portrayed as stacked bars, and if <code>TRUE</code>the columns are portrayed as juxtaposed bars.
a logical value.  If <code>FALSE</code>, the bars are drawnvertically with the first bar to the left.  If <code>TRUE</code>, thebars are drawn horizontally with the first at the bottom.
a vector giving the density of shading lines, inlines per inch, for the bars or bar components.The default value of <code>NULL</code> means that no shading linesare drawn. Non-positive values of <code>density</code> also inhibit thedrawing of shading lines.
the slope of shading lines, given as an angle indegrees (counter-clockwise), for the bars or bar components.
a vector of colors for the bars or bar components.By default, grey is used if <code>height</code> is a vector, and agamma-corrected grey palette if <code>height</code> is a matrix.
the color to be used for the border of the bars.Use <code>border = NA</code> to omit borders.  If there are shadinglines, <code>border = TRUE</code> means use the same colour forthe border as for the shading lines.
overall and sub title for the plot.
a label for the x axis.
a label for the y axis.
limits for the x axis.
limits for the y axis.
logical. Should bars be allowed to go outside region?
string specifying if axis scales should be logarithmic; see<code>plot.default</code>.
logical.  If <code>TRUE</code>, a vertical (or horizontal, if<code>horiz</code> is true) axis is drawn.
logical.  If <code>TRUE</code>, and if there are<code>names.arg</code> (see above), theother axis is drawn (with <code>lty = 0</code>) and labeled.
expansion factor for numeric axis labels (see<code>par('cex')</code>).
expansion factor for axis names (bar labels).
logical.  If <code>TRUE</code>, the lines which divideadjacent (non-stacked!) bars will be drawn.  Only applies when<code>space = 0</code> (which it partly is when <code>beside = TRUE</code>).
logical.  If <code>FALSE</code>, nothing is plotted.
the graphics parameter <code>lty</code> (see<code>par('lty')</code>) applied to the axisand tick marks of the categorical (default horizontal) axis.  Notethat by default the axis is suppressed.
a vector indicating how much the bars should be shiftedrelative to the x axis.
logical specifying if bars should be added to an alreadyexisting plot; defaults to <code>FALSE</code>.
logical specifying if the default annotation (<code>main</code>,<code>sub</code>, <code>xlab</code>, <code>ylab</code>) should appear on the plot, see<code>title</code>.
list of additional arguments to pass to<code>legend()</code>; names of the list are used as argumentnames.  Only used if <code>legend.text</code> is supplied.
a formula where the <code>y</code> variables are numeric datato plot against the categorical <code>x</code> variables.  The formulacan have one of three forms:

(see the examples).
a data frame (or list) from which the variables in formulashould be taken.
an optional vector specifying a subset of observationsto be used.
a function which indicates what should happen whenthe data contain <code>NA</code> values.  The default is to ignore missingvalues in the given variables.
arguments to be passed to/from other methods.  For thedefault method these can include further arguments (such as<code>axes</code>, <code>asp</code> and <code>main</code>) andgraphical parameters (see <code>par</code>) which are passed to<code>plot.window()</code>, <code>title()</code> and<code>axis</code>.
character, one of <code>"plot"</code>, <code>"figure"</code>,<code>"inner"</code> and <code>"outer"</code>.
line type of the box.
further graphical parameters, such as <code>bty</code>,<code>col</code>, or <code>lwd</code>, see <code>par</code>.  Note that<code>xpd</code> is not accepted as clipping is always to the deviceregion.
a formula, such as <code>y ~ grp</code>, where <code>y</code> is anumeric vector of data values to be split into groups according tothe grouping variable <code>grp</code> (usually a factor).  Note that<code>~ g1 + g2</code> is equivalent to <code>g1:g2</code>.
a data.frame (or list) from which the variables in<code>formula</code> should be taken.
an optional vector specifying a subset of observationsto be used for plotting.
a function which indicates what should happenwhen the data contain <code>NA</code>s.  The default is to ignore missingvalues in either the response or the group.
x- and y-axis annotation, since <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> 3.6.0 with anon-empty default.  Can be suppressed by <code>ann=FALSE</code>.
<code>logical</code> indicating if axes should be annotated (by<code>xlab</code> and <code>ylab</code>).
passed to <code>split.default</code>, see there.
for specifying data from which the boxplots are to beproduced. Either a numeric vector, or a single list containing suchvectors. Additional unnamed arguments specify further dataas separate vectors (each corresponding to a component boxplot).<code>NA</code>s are allowed in the data.
For the <code>formula</code> method, named arguments to be passed tothe default method.

For the default method, unnamed arguments are additional datavectors (unless <code>x</code> is a list when they are ignored), and namedarguments are arguments and graphical parameters to be passedto <code>bxp</code> in addition to the ones given by argument<code>pars</code> (and override those in <code>pars</code>). Note that<code>bxp</code> may or may not make use of graphical parameters it ispassed: see its documentation.
this determines how far the plot whiskers extend outfrom the box.  If <code>range</code> is positive, the whiskers extendto the most extreme data point which is no more than<code>range</code> times the interquartile range from the box. A valueof zero causes the whiskers to extend to the data extremes.
a vector giving the relative widths of the boxes makingup the plot.
if <code>varwidth</code> is <code>TRUE</code>, the boxes aredrawn with widths proportional to the square-roots of the numberof observations in the groups.
if <code>notch</code> is <code>TRUE</code>, a notch is drawn ineach side of the boxes.  If the notches of two plots do notoverlap this is ‘strong evidence’ that the two medians differ(Chambers <em>et al</em>, 1983, p. 62).  See <code>boxplot.stats</code>for the calculations used.
if <code>outline</code> is not true, the outliers arenot drawn (as points whereas S+ uses lines).
group labels which will be printed under each boxplot.Can be a character vector or an expression (seeplotmath).
a scale factor to be applied to all boxes.  When thereare only a few groups, the appearance of the plot can be improvedby making the boxes narrower.
staple line width expansion, proportional to boxwidth.
outlier line width expansion, proportional to boxwidth.
if <code>TRUE</code> (the default) then a boxplot isproduced.  If not, the summaries which the boxplots are based onare returned.
an optional vector of colors for the outlines of theboxplots.  The values in <code>border</code> are recycled if thelength of <code>border</code> is less than the number of plots.
if <code>col</code> is non-null it is assumed to contain colorsto be used to colour the bodies of the box plots. By default theyare in the background colour.
character indicating if x or y or both coordinates shouldbe plotted in log scale.
a list of (potentially many) more graphical parameters,e.g., <code>boxwex</code> or <code>outpch</code>; these are passed to<code>bxp</code> (if <code>plot</code> is true); for details, see there.
logical indicating if the boxplots should behorizontal; default <code>FALSE</code> means vertical boxes.
logical, if true <em>add</em> boxplot to current plot.
numeric vector giving the locations where the boxplots shouldbe drawn, particularly when <code>add = TRUE</code>;defaults to <code>1:n</code> where <code>n</code> is the number of boxes.
a formula, such as <code>y ~ grp</code>, where <code>y</code> is anumeric vector of data values to be split into groups according tothe grouping variable <code>grp</code> (usually a factor).  Note that<code>~ g1 + g2</code> is equivalent to <code>g1:g2</code>.
a data.frame (or list) from which the variables in<code>formula</code> should be taken.
an optional vector specifying a subset of observationsto be used for plotting.
a function which indicates what should happenwhen the data contain <code>NA</code>s.  The default is to ignore missingvalues in either the response or the group.
x- and y-axis annotation, since <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> 3.6.0 with anon-empty default.  Can be suppressed by <code>ann=FALSE</code>.
<code>logical</code> indicating if axes should be annotated (by<code>xlab</code> and <code>ylab</code>).
passed to <code>split.default</code>, see there.
for specifying data from which the boxplots are to beproduced. Either a numeric vector, or a single list containing suchvectors. Additional unnamed arguments specify further dataas separate vectors (each corresponding to a component boxplot).<code>NA</code>s are allowed in the data.
For the <code>formula</code> method, named arguments to be passed tothe default method.

For the default method, unnamed arguments are additional datavectors (unless <code>x</code> is a list when they are ignored), and namedarguments are arguments and graphical parameters to be passedto <code>bxp</code> in addition to the ones given by argument<code>pars</code> (and override those in <code>pars</code>). Note that<code>bxp</code> may or may not make use of graphical parameters it ispassed: see its documentation.
this determines how far the plot whiskers extend outfrom the box.  If <code>range</code> is positive, the whiskers extendto the most extreme data point which is no more than<code>range</code> times the interquartile range from the box. A valueof zero causes the whiskers to extend to the data extremes.
a vector giving the relative widths of the boxes makingup the plot.
if <code>varwidth</code> is <code>TRUE</code>, the boxes aredrawn with widths proportional to the square-roots of the numberof observations in the groups.
if <code>notch</code> is <code>TRUE</code>, a notch is drawn ineach side of the boxes.  If the notches of two plots do notoverlap this is ‘strong evidence’ that the two medians differ(Chambers <em>et al</em>, 1983, p. 62).  See <code>boxplot.stats</code>for the calculations used.
if <code>outline</code> is not true, the outliers arenot drawn (as points whereas S+ uses lines).
group labels which will be printed under each boxplot.Can be a character vector or an expression (seeplotmath).
a scale factor to be applied to all boxes.  When thereare only a few groups, the appearance of the plot can be improvedby making the boxes narrower.
staple line width expansion, proportional to boxwidth.
outlier line width expansion, proportional to boxwidth.
if <code>TRUE</code> (the default) then a boxplot isproduced.  If not, the summaries which the boxplots are based onare returned.
an optional vector of colors for the outlines of theboxplots.  The values in <code>border</code> are recycled if thelength of <code>border</code> is less than the number of plots.
if <code>col</code> is non-null it is assumed to contain colorsto be used to colour the bodies of the box plots. By default theyare in the background colour.
character indicating if x or y or both coordinates shouldbe plotted in log scale.
a list of (potentially many) more graphical parameters,e.g., <code>boxwex</code> or <code>outpch</code>; these are passed to<code>bxp</code> (if <code>plot</code> is true); for details, see there.
logical indicating if the boxplots should behorizontal; default <code>FALSE</code> means vertical boxes.
logical, if true <em>add</em> boxplot to current plot.
numeric vector giving the locations where the boxplots shouldbe drawn, particularly when <code>add = TRUE</code>;defaults to <code>1:n</code> where <code>n</code> is the number of boxes.
a numeric matrix.
logical indicating if columns (by default) or rows(<code>use.cols = FALSE</code>) should be plotted.
Further arguments to <code>boxplot</code>.
a list containing data summaries to be used in constructingthe plots.  These are usually the result of a call to<code>boxplot</code>, but can be generated in any fashion.
if <code>notch</code> is <code>TRUE</code>, a notch is drawn in eachside of the boxes.  If the notches of two plots do not overlap thenthe medians are significantly different at the 5 percent level.
a vector giving the relative widths of the boxes makingup the plot.
if <code>varwidth</code> is <code>TRUE</code>, the boxes are drawnwith widths proportional to the square-roots of the number ofobservations in the groups.
if <code>outline</code> is not true, the outliers are notdrawn.
numeric in (0,1). When <code>notch = TRUE</code>, thefraction of the box width that the notches should use.
character or numeric (vector), the color of the boxborders.  Is recycled for multiple boxes.  Is used as default forthe <code>boxcol</code>, <code>medcol</code>, <code>whiskcol</code>, <code>staplecol</code>,and <code>outcol</code> options (see below).
character, indicating if any axis should be drawn inlogarithmic scale, as in <code>plot.default</code>.
logical, indicating if a ‘frame’(<code>box</code>) should be drawn; defaults to <code>TRUE</code>, unless<code>axes = FALSE</code> is specified.
logical indicating if the  boxplots should behorizontal; default <code>FALSE</code> means vertical boxes.
a logical value indicating whether the default annotation(title and x and y axis labels) should appear on the plot.
logical, if true <em>add</em> boxplot to current plot.
numeric vector giving the locations where the boxplotsshould be drawn, particularly when <code>add = TRUE</code>; defaults to<code>1:n</code> where <code>n</code> is the number of boxes.
Set to <code>TRUE</code> or <code>FALSE</code> to override thedefaults on whether an x-axis label is printed for each group.
graphical parameters (etc) can be passed asarguments to this function, either as a list (<code>pars</code>) ornormally(<code>...</code>), see the following.  (Those in <code>...</code>take precedence over those in <code>pars</code>.)

Currently, <code>yaxs</code> and <code>ylim</code> are used ‘along theboxplot’, i.e., vertically, when <code>horizontal</code> isfalse, and <code>xlim</code> horizontally.<code>xaxt</code>, <code>yaxt</code>, <code>las</code>, <code>cex.axis</code>,<code>gap.axis</code>, and<code>col.axis</code> are passed to <code>axis</code>, and <code>main</code>,<code>cex.main</code>, <code>col.main</code>, <code>sub</code>, <code>cex.sub</code>,<code>col.sub</code>, <code>xlab</code>, <code>ylab</code>, <code>cex.lab</code>, and<code>col.lab</code> are passed to <code>title</code>.

In addition, <code>axes</code> is accepted (see<code>plot.window</code>), with default <code>TRUE</code>.

The following arguments (or <code>pars</code> components) allow furthercustomization of the boxplot graphics.  Their defaults are typicallydetermined from the non-prefixed version (e.g., <code>boxlty</code> from<code>lty</code>), either from the specified argument or <code>pars</code>component or the corresponding <code>par</code> one.

a scale factor to be applied to all boxes.  When thereare only a few groups, the appearance of the plot can be improved bymaking the boxes narrower.  The default depends on <code>at</code> andtypically is <i>0.8</i>.
staple and outlier line width expansion,proportional to box width; both default to 0.5.
box outline type, width,color, and fill color (which currently defaults to <code>col</code> and willin future default to <code>par("bg")</code>).
median line type,line width, point character, point size expansion, color, andbackground color.  The default <code>medpch = NA</code> suppresses thepoint, and <code>medlty = "blank"</code> does so for the line.Note that <code>medlwd</code> defaults to<i>3x</i> the default <code>lwd</code>.
whisker line type (default:<code>"dashed"</code>), width, and color.
staple (= end of whisker) linetype, width, and color.
outlier linetype, line width, point character, point size expansion, color, andbackground color.  The default <code>outlty =  "blank"</code> suppresses thelines and <code>outpch = NA</code> suppresses points.
an object, the default method expects a single numericalvariable (or an object coercible to this).
a <code>"factor"</code> interpreted to be the dependent variable
a <code>"formula"</code> of type <code>y ~ x</code> with a single dependent<code>"factor"</code> and a single numerical explanatory variable.
an optional data frame.
logical. Should the computed conditional densities be plotted?
convenience tolerance parameter for y-axis annotation.If the distance between two labels drops under this threshold, they areplotted equidistantly.
a character or numeric vector specifying in which orderthe levels of the dependent variable should be plotted.
arguments passed to <code>density</code>
a vector of fill colors of the same length as <code>levels(y)</code>.The default is to call <code>gray.colors</code>.
border color of shaded polygons.
character strings for annotation
character vector for annotation of y axis, defaults to<code>levels(y)</code>.
the range of x and y values with sensible defaults.
an optional vector specifying a subset of observationsto be used for plotting.
user coordinates of clipping rectangle
a two-element vector describing the number of rows and thenumber of columns in a screen matrix <em>or</em> a matrix with 4 columns.If a matrix, then each row describes a screen with values for the left,right, bottom, and top of the screen (in that order) in NDC units,that is 0 at the lower left corner of the device surface, and 1 atthe upper right corner.
a number giving the screen to be split.  It defaults tothe current screen if there is one, otherwise the whole device region.
logical: should the selected screen be cleared?
a number indicating which screen to prepare for drawing(<code>screen</code>), erase (<code>erase.screen</code>), or close(<code>close.screen</code>).  (<code>close.screen</code> will accept a vector ofscreen numbers.)
logical value indicating whether the screen should beerased as part of the preparation for drawing in the screen.
logical value indicating whether all of thescreens should be closed.
a formula describing the form of conditioning plot.  Aformula of the form <code>y ~ x | a</code> indicates that plots of<code>y</code> versus <code>x</code> should be produced conditional on thevariable <code>a</code>.  A formula of the form <code>y ~ x| a * b</code>indicates that plots of <code>y</code> versus <code>x</code> should be producedconditional on the two variables <code>a</code> and <code>b</code>.

All three or four variables may be either numeric or factors.When <code>x</code> or <code>y</code> are factors, the result is almost as if<code>as.numeric()</code> was applied, whereas for factor<code>a</code> or <code>b</code>, the conditioning (and its graphics if<code>show.given</code> is true) are adapted.
a data frame containing values for any variables in theformula.  By default the environment where <code>coplot</code> was calledfrom is used.
a value or list of two values which determine howthe conditioning on <code>a</code> and <code>b</code> is to take place.

When there is no <code>b</code> (i.e., conditioning only on <code>a</code>),usually this is a matrix with two columns each row of which gives aninterval, to be conditioned on, but is can also be a single vectorof numbers or a set of factor levels (if the variable beingconditioned on is a factor). In this case (no <code>b</code>),the result of <code>co.intervals</code> can be used directly as<code>given.values</code> argument.
a <code>function(x, y, col, pch, ...)</code>which gives the action to be carried out ineach panel of the display.  The default is <code>points</code>.
the panels of the plot are laid out in a <code>rows</code> by<code>columns</code> array.  <code>rows</code> gives the number of rows in thearray.
the number of columns in the panel layout array.
logical (possibly of length 2 for 2 conditioningvariables): should conditioning plots be shown for thecorresponding conditioning variables (default <code>TRUE</code>).
a vector of colors to be used to plot the points.  If tooshort, the values are recycled.
a vector of plotting symbols or characters.  If too short,the values are recycled.
a named vector with components <code>"num"</code> and<code>"fac"</code> giving the background colors for the (shingle) bars,for <b>num</b>eric and <b>fac</b>tor conditioning variables respectively.
character; labels to use for the x axis and thefirst conditioning variable.  If only one label is given, it is usedfor the x axis and the default label is used for the conditioningvariable.
character; labels to use for the y axis and anysecond conditioning variable.
logical: if true the panel function is given anadditional (third) argument <code>subscripts</code> giving the subscriptsof the data passed to that panel.
function for creating axis (tick) labels when x or yare factors.
integer; the number of conditioning intervals,for a and b, possibly of length 2.  It is only used if thecorresponding conditioning variable is not a <code>factor</code>.
numeric &lt; 1; the fraction of overlap of theconditioning variables, possibly of length 2 for x and ydirection.  When overlap &lt; 0, there will be <em>gaps</em> betweenthe data slices.
the range for the x axis.
the range for the y axis.
additional arguments to the panel function.
a numeric vector.
locations of grid lines at which the values in <code>z</code> aremeasured.  These must be in ascending order.  By default, equallyspaced values from 0 to 1 are used.  If <code>x</code> is a <code>list</code>,its components <code>x$x</code> and <code>x$y</code> are used for <code>x</code>and <code>y</code>, respectively. If the list has component <code>z</code> thisis used for <code>z</code>.
a matrix containing the values to be plotted (<code>NA</code>s areallowed).  Note that <code>x</code> can be used instead of <code>z</code> forconvenience.
number of contour levels desired <b>iff</b><code>levels</code> is not supplied.
numeric vector of levels at which to draw contourlines.
a vector giving the labels for the contour lines.  If<code>NULL</code> then the levels are used as labels, otherwise this iscoerced by <code>as.character</code>.
<code>cex</code> for contour labelling.  This is an absolutesize, not a multiple of <code>par("cex")</code>.
logical.  Contours are labelled if <code>TRUE</code>.
character string specifying where the labels will belocated. Possible values are <code>"simple"</code>, <code>"edge"</code> and<code>"flattest"</code> (the default).  See the ‘Details’ section.
if <code>NULL</code>, the current font family and face are usedfor the contour labels.  If a character vector of length 2 thenHershey vector fonts are used for the contour labels. The firstelement of the vector selects a typeface and the second elementselects a fontindex (see <code>text</code> for more information).The default is <code>NULL</code> on graphics devices with high-qualityrotation of text and <code>c("sans serif", "plain")</code> otherwise.
x-, y- and z-limits for the plot.
logical indicating whether axes or a boxshould be drawn, see <code>plot.default</code>.
colour(s) for the lines drawn.
line type(s) for the lines drawn.
line width(s) for the lines drawn.
logical. If <code>TRUE</code>, add to a current plot.
additional arguments to <code>plot.window</code>,<code>title</code>, <code>Axis</code> and <code>box</code>,typically graphical parameters such as <code>cex.axis</code>.
locations of grid lines at which the values in <code>z</code> aremeasured.  These must be in ascending order.  By default, equallyspaced values from 0 to 1 are used.  If <code>x</code> is a <code>list</code>,its components <code>x$x</code> and <code>x$y</code> are used for <code>x</code>and <code>y</code>, respectively. If the list has component <code>z</code> thisis used for <code>z</code>.
a matrix containing the values to be plotted (<code>NA</code>s areallowed).  Note that <code>x</code> can be used instead of <code>z</code> forconvenience.
number of contour levels desired <b>iff</b><code>levels</code> is not supplied.
numeric vector of levels at which to draw contourlines.
a vector giving the labels for the contour lines.  If<code>NULL</code> then the levels are used as labels, otherwise this iscoerced by <code>as.character</code>.
<code>cex</code> for contour labelling.  This is an absolutesize, not a multiple of <code>par("cex")</code>.
logical.  Contours are labelled if <code>TRUE</code>.
character string specifying where the labels will belocated. Possible values are <code>"simple"</code>, <code>"edge"</code> and<code>"flattest"</code> (the default).  See the ‘Details’ section.
if <code>NULL</code>, the current font family and face are usedfor the contour labels.  If a character vector of length 2 thenHershey vector fonts are used for the contour labels. The firstelement of the vector selects a typeface and the second elementselects a fontindex (see <code>text</code> for more information).The default is <code>NULL</code> on graphics devices with high-qualityrotation of text and <code>c("sans serif", "plain")</code> otherwise.
x-, y- and z-limits for the plot.
logical indicating whether axes or a boxshould be drawn, see <code>plot.default</code>.
colour(s) for the lines drawn.
line type(s) for the lines drawn.
line width(s) for the lines drawn.
logical. If <code>TRUE</code>, add to a current plot.
additional arguments to <code>plot.window</code>,<code>title</code>, <code>Axis</code> and <code>box</code>,typically graphical parameters such as <code>cex.axis</code>.
a formula describing the form of conditioning plot.  Aformula of the form <code>y ~ x | a</code> indicates that plots of<code>y</code> versus <code>x</code> should be produced conditional on thevariable <code>a</code>.  A formula of the form <code>y ~ x| a * b</code>indicates that plots of <code>y</code> versus <code>x</code> should be producedconditional on the two variables <code>a</code> and <code>b</code>.

All three or four variables may be either numeric or factors.When <code>x</code> or <code>y</code> are factors, the result is almost as if<code>as.numeric()</code> was applied, whereas for factor<code>a</code> or <code>b</code>, the conditioning (and its graphics if<code>show.given</code> is true) are adapted.
a data frame containing values for any variables in theformula.  By default the environment where <code>coplot</code> was calledfrom is used.
a value or list of two values which determine howthe conditioning on <code>a</code> and <code>b</code> is to take place.

When there is no <code>b</code> (i.e., conditioning only on <code>a</code>),usually this is a matrix with two columns each row of which gives aninterval, to be conditioned on, but is can also be a single vectorof numbers or a set of factor levels (if the variable beingconditioned on is a factor). In this case (no <code>b</code>),the result of <code>co.intervals</code> can be used directly as<code>given.values</code> argument.
a <code>function(x, y, col, pch, ...)</code>which gives the action to be carried out ineach panel of the display.  The default is <code>points</code>.
the panels of the plot are laid out in a <code>rows</code> by<code>columns</code> array.  <code>rows</code> gives the number of rows in thearray.
the number of columns in the panel layout array.
logical (possibly of length 2 for 2 conditioningvariables): should conditioning plots be shown for thecorresponding conditioning variables (default <code>TRUE</code>).
a vector of colors to be used to plot the points.  If tooshort, the values are recycled.
a vector of plotting symbols or characters.  If too short,the values are recycled.
a named vector with components <code>"num"</code> and<code>"fac"</code> giving the background colors for the (shingle) bars,for <b>num</b>eric and <b>fac</b>tor conditioning variables respectively.
character; labels to use for the x axis and thefirst conditioning variable.  If only one label is given, it is usedfor the x axis and the default label is used for the conditioningvariable.
character; labels to use for the y axis and anysecond conditioning variable.
logical: if true the panel function is given anadditional (third) argument <code>subscripts</code> giving the subscriptsof the data passed to that panel.
function for creating axis (tick) labels when x or yare factors.
integer; the number of conditioning intervals,for a and b, possibly of length 2.  It is only used if thecorresponding conditioning variable is not a <code>factor</code>.
numeric &lt; 1; the fraction of overlap of theconditioning variables, possibly of length 2 for x and ydirection.  When overlap &lt; 0, there will be <em>gaps</em> betweenthe data slices.
the range for the x axis.
the range for the y axis.
additional arguments to the panel function.
a numeric vector.
The name of a function, or a call or anexpression written as a function of <code>x</code> which willevaluate to an object of the same length as <code>x</code>.
a ‘vectorizing’ numeric <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> function.
alias for <code>from</code> for compatibility with <code>plot</code>
the range over which the function will be plotted.
integer; the number of x values at which to evaluate.
logical; if <code>TRUE</code> add to an already existing plot; if<code>NA</code> start a new plot taking the defaults for the limits andlog-scaling of the x-axis from the previous plot.  Taken as<code>FALSE</code> (with a warning if a different value is supplied) if nographics device is open.
<code>NULL</code> or a numeric vector of length 2;if non-<code>NULL</code> it provides the defaults for <code>c(from, to)</code>and, unless <code>add = TRUE</code>, selects the x-limits of the plot – see<code>plot.window</code>.
plot type: see <code>plot.default</code>.
character string giving the name to be used for the x axis.
labels and graphical parameterscan also be specified as arguments.  See ‘Details’ for theinterpretation of the default for <code>log</code>.

For the <code>"function"</code> method of <code>plot</code>, <code>...</code> caninclude any of the other arguments of <code>curve</code>, except<code>expr</code>.
either a vector or matrix of numeric values (<code>NA</code>s areallowed).  If <code>x</code> is a matrix the overall plot consists ofjuxtaposed dotplots for each row.  Inputs which satisfy<code>is.numeric(x)</code> but not<code>is.vector(x) || is.matrix(x)</code> are coerced by<code>as.numeric</code>, with a warning.
a vector of labels for each point.For vectors the default is to use <code>names(x)</code> and for matricesthe row labels <code>dimnames(x)[[1]]</code>.
an optional factor indicating how the elements of<code>x</code> are grouped.If <code>x</code> is a matrix, <code>groups</code> will default to the columnsof <code>x</code>.
data values for the groups.This is typically a summary such as the median or meanof each group.
offset in inches of <code>ylab</code> and <code>labels</code>; washardwired to 0.4 before <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> 4.0.0.
a <code>logical</code> value indicating whether the default annotation(title and x and y axis labels) should appear on the plot.
a string indicating the x-axis style; use <code>"n"</code> tosuppress and see also <code>par("xaxt")</code>.
a logical indicating whether a box should be drawnaround the plot.
a character string indicating if one or the other axis shouldbe logarithmic, see <code>plot.default</code>.
the character size to be used.  Setting <code>cex</code>to a value smaller than one can be a useful way of avoiding labeloverlap.  Unlike many other graphics functions, this sets the actualsize, not a multiple of <code>par("cex")</code>.
the <code>cex</code> to be applied to plotting symbols.This behaves like <code>cex</code> in <code>plot()</code>.
the plotting character or symbol to be used.
the plotting character or symbol to be used for groupvalues.
the background color of plotting characters or symbols to beused; use <code>par(bg= *)</code> to set the background color ofthe whole plot.
the color(s) to be used for points and labels.
the single color to be used for group labels andvalues.
the color(s) to be used for the horizontal lines.
horizontal range for the plot, see<code>plot.window</code>, for example.
overall title for the plot, see <code>title</code>.
axis annotations as in <code>title</code>.
graphical parameters can also be specified as arguments.
a two-element vector describing the number of rows and thenumber of columns in a screen matrix <em>or</em> a matrix with 4 columns.If a matrix, then each row describes a screen with values for the left,right, bottom, and top of the screen (in that order) in NDC units,that is 0 at the lower left corner of the device surface, and 1 atthe upper right corner.
a number giving the screen to be split.  It defaults tothe current screen if there is one, otherwise the whole device region.
logical: should the selected screen be cleared?
a number indicating which screen to prepare for drawing(<code>screen</code>), erase (<code>erase.screen</code>), or close(<code>close.screen</code>).  (<code>close.screen</code> will accept a vector ofscreen numbers.)
logical value indicating whether the screen should beerased as part of the preparation for drawing in the screen.
logical value indicating whether all of thescreens should be closed.
locations of grid lines at which the values in <code>z</code> aremeasured.  These must be in ascending order.  (The rest of thisdescription does not apply to <code>.filled.contour</code>.)By default, equally spaced values from 0 to 1 are used.  If <code>x</code>is a <code>list</code>, its components <code>x$x</code> and <code>x$y</code> are usedfor <code>x</code> and <code>y</code>, respectively.  If the list has component<code>z</code> this is used for <code>z</code>.
a numeric matrix containing the values to be plotted..  Note that<code>x</code> can be used instead of <code>z</code> for convenience.
x limits for the plot.
y limits for the plot.
z limits for the plot.
a set of levels which are used to partition the rangeof <code>z</code>.  Must be <b>strictly</b> increasing (and finite).  Areaswith <code>z</code> values between consecutive levels are painted with thesame color.
if <code>levels</code> is not specified, the range of <code>z</code>,values is divided into approximately this many levels.
a color palette function to be used to assigncolors in the plot.
an explicit set of colors to be used in the plot.This argument overrides any palette function specification.  Thereshould be one less color than levels
statements which add titles to the main plot.
statements which draw axes (and a <code>box</code>)on the main plot.  This overrides the default axes.
statements which add titles for the plot key.
statements which draw axes on the plot key.This overrides the default axis.
the <i>y/x</i> aspect ratio, see <code>plot.window</code>.
the x axis style.  The default is to use internallabeling.
the y axis style.  The default is to use internallabeling.
the style of labeling to be used.  The default is touse horizontal labeling.
logicals indicating if axes and a box should bedrawn, as in <code>plot.default</code>.
additional graphical parameters, currently only passed to<code>title()</code>.
a 2 by 2 by <i>k</i> contingency table in array form, or as a2 by 2 matrix if <i>k</i> is 1.
a vector of length 2 specifying the colors to use for thesmaller and larger diagonals of each 2 by 2 table.
confidence level used for the confidence rings onthe odds ratios.  Must be a single nonnegative number less than 1;if set to 0, confidence rings are suppressed.
a character string specifying how to standardize the table.Must match one of <code>"margins"</code>, <code>"ind.max"</code>, or<code>"all.max"</code>, and can be abbreviated to the initial letter.If set to <code>"margins"</code>, each 2 by 2 table is standardized toequate the margins specified by <code>margin</code> while preserving theodds ratio.  If <code>"ind.max"</code> or <code>"all.max"</code>, the tables areeither individually or simultaneously standardized to a maximal cellfrequency of 1.
a numeric vector with the margins to equate.  Must beone of <code>1</code>, <code>2</code>, or <code>c(1, 2)</code> (the default), whichcorresponds to standardizing the row, column, or both margins ineach 2 by 2 table.Only used if <code>std</code> equals <code>"margins"</code>.
the amount of space (as a fraction of the maximal radiusof the quarter circles) used for the row and column labels.
character string for the fourfold title.
a numeric vector of the form <code>c(nr, nc)</code>, indicatingthat the displays for the 2 by 2 tables should be arranged in an<code>nr</code> by <code>nc</code> layout, filled by rows.
a numeric vector of the form <code>c(nr, nc)</code>, indicatingthat the displays for the 2 by 2 tables should be arranged in an<code>nr</code> by <code>nc</code> layout, filled by columns.
numeric vector of coordinates.
character strings giving the coordinate systems toconvert between.
numeric vector of coordinates.
character strings giving the coordinate systems toconvert between.
number of cells of the grid in x and y direction.  When<code>NULL</code>, as per default, the grid aligns with the tick marks onthe corresponding <em>default</em> axis (i.e., tickmarks as computed by<code>axTicks</code>).  When <code>NA</code>, no grid lines aredrawn in the corresponding direction.
character or (integer) numeric; color of the grid lines.
character or (integer) numeric; line type of the grid lines.
non-negative numeric giving line width of the grid lines.
logical, only used when <em>log</em> coordinates andalignment with the axis tick marks are active.  Setting <code>equilogs =      FALSE</code> in that case gives <em>non equidistant</em> tick alignedgrid lines.
a vector of values for which the histogram is desired.
one of:

 a vector giving the breakpoints between histogram cells,
 a function to compute the vector of breakpoints,
 a single number giving the number of cells for the histogram,
 a character string naming an algorithm to compute thenumber of cells (see ‘Details’),
 a function to compute the number of cells.
In the last three cases the number is a suggestion only; as thebreakpoints will be set to <code>pretty</code> values, the numberis limited to <code>1e6</code> (with a warning if it was larger).  If<code>breaks</code> is a function, the <code>x</code> vector is supplied to itas the only argument (and the number of breaks is only limited bythe amount of available memory).
logical; if <code>TRUE</code>, the histogram graphic is arepresentation of frequencies, the <code>counts</code> component ofthe result; if <code>FALSE</code>, probability densities, component<code>density</code>, are plotted (so that the histogram has a total areaof one).  Defaults to <code>TRUE</code> <em>if and only if</em> <code>breaks</code> areequidistant (and <code>probability</code> is not specified).
an <em>alias</em> for <code>!freq</code>, for S compatibility.
logical; if <code>TRUE</code>, an <code>x[i]</code> equal tothe <code>breaks</code> value will be included in the first (or last, for<code>right = FALSE</code>) bar.  This will be ignored (with a warning)unless <code>breaks</code> is a vector.
logical; if <code>TRUE</code>, the histogram cells areright-closed (left open) intervals.
the density of shading lines, in lines per inch.The default value of <code>NULL</code> means that no shading linesare drawn. Non-positive values of <code>density</code> also inhibit thedrawing of shading lines.
the slope of shading lines, given as an angle indegrees (counter-clockwise).
a colour to be used to fill the bars.The default of <code>NULL</code> yields unfilled bars.
the color of the border around the bars.  The defaultis to use the standard foreground color.
main title and axis labels: these arguments to<code>title()</code> get “smart” defaults here, e.g., the default<code>ylab</code> is <code>"Frequency"</code> iff <code>freq</code> is true.
the range of x and y values with sensible defaults.Note that <code>xlim</code> is <em>not</em> used to define the histogram (breaks),but only for plotting (when <code>plot = TRUE</code>).
logical.  If <code>TRUE</code> (default), axes are draw if theplot is drawn.
logical.  If <code>TRUE</code> (default), a histogram isplotted, otherwise a list of breaks and counts is returned.  In thelatter case, a warning is used if (typically graphical) argumentsare specified that only apply to the <code>plot = TRUE</code> case.
logical or character string.  Additionally draw labels on topof bars, if not <code>FALSE</code>; see <code>plot.histogram</code>.
numeric (integer).  For S(-PLUS) compatibility only,<code>nclass</code> is equivalent to <code>breaks</code> for a scalar orcharacter argument.
logical.  If <code>plot = FALSE</code> and<code>warn.unused = TRUE</code>, a warning will be issued when graphicalparameters are passed to <code>hist.default()</code>.
further arguments and graphical parameters passed to<code>plot.histogram</code> and thence to <code>title</code> and<code>axis</code> (if <code>plot = TRUE</code>).
a vector of values for which the histogram is desired.
one of:

 a vector giving the breakpoints between histogram cells,
 a function to compute the vector of breakpoints,
 a single number giving the number of cells for the histogram,
 a character string naming an algorithm to compute thenumber of cells (see ‘Details’),
 a function to compute the number of cells.
In the last three cases the number is a suggestion only; as thebreakpoints will be set to <code>pretty</code> values, the numberis limited to <code>1e6</code> (with a warning if it was larger).  If<code>breaks</code> is a function, the <code>x</code> vector is supplied to itas the only argument (and the number of breaks is only limited bythe amount of available memory).
logical; if <code>TRUE</code>, the histogram graphic is arepresentation of frequencies, the <code>counts</code> component ofthe result; if <code>FALSE</code>, probability densities, component<code>density</code>, are plotted (so that the histogram has a total areaof one).  Defaults to <code>TRUE</code> <em>if and only if</em> <code>breaks</code> areequidistant (and <code>probability</code> is not specified).
an <em>alias</em> for <code>!freq</code>, for S compatibility.
logical; if <code>TRUE</code>, an <code>x[i]</code> equal tothe <code>breaks</code> value will be included in the first (or last, for<code>right = FALSE</code>) bar.  This will be ignored (with a warning)unless <code>breaks</code> is a vector.
logical; if <code>TRUE</code>, the histogram cells areright-closed (left open) intervals.
the density of shading lines, in lines per inch.The default value of <code>NULL</code> means that no shading linesare drawn. Non-positive values of <code>density</code> also inhibit thedrawing of shading lines.
the slope of shading lines, given as an angle indegrees (counter-clockwise).
a colour to be used to fill the bars.The default of <code>NULL</code> yields unfilled bars.
the color of the border around the bars.  The defaultis to use the standard foreground color.
main title and axis labels: these arguments to<code>title()</code> get “smart” defaults here, e.g., the default<code>ylab</code> is <code>"Frequency"</code> iff <code>freq</code> is true.
the range of x and y values with sensible defaults.Note that <code>xlim</code> is <em>not</em> used to define the histogram (breaks),but only for plotting (when <code>plot = TRUE</code>).
logical.  If <code>TRUE</code> (default), axes are draw if theplot is drawn.
logical.  If <code>TRUE</code> (default), a histogram isplotted, otherwise a list of breaks and counts is returned.  In thelatter case, a warning is used if (typically graphical) argumentsare specified that only apply to the <code>plot = TRUE</code> case.
logical or character string.  Additionally draw labels on topof bars, if not <code>FALSE</code>; see <code>plot.histogram</code>.
numeric (integer).  For S(-PLUS) compatibility only,<code>nclass</code> is equivalent to <code>breaks</code> for a scalar orcharacter argument.
logical.  If <code>plot = FALSE</code> and<code>warn.unused = TRUE</code>, a warning will be issued when graphicalparameters are passed to <code>hist.default()</code>.
further arguments and graphical parameters passed to<code>plot.histogram</code> and thence to <code>title</code> and<code>axis</code> (if <code>plot = TRUE</code>).
coordinates of points in a scatter plot.  Alternatively, anyobject which defines coordinates (a plotting structure, timeseries etc: see <code>xy.coords</code>) can be given as <code>x</code>,and <code>y</code> left missing.
an optional character vector giving labels for thepoints.  Will be coerced using <code>as.character</code>, andrecycled if necessary to the length of <code>x</code>.  Excess labels willbe discarded, with a warning.
if <code>pos</code> is <code>TRUE</code>, a component is added to thereturn value which indicates where text was plotted relative to eachidentified point: see Value.
the maximum number of points to be identified.
logical: if <code>plot</code> is <code>TRUE</code>, the labels areprinted near the points and if <code>FALSE</code> they are omitted.
logical: if <code>TRUE</code> and <code>plot = TRUE</code>, thelower-left corners of the labels are plotted at the points clickedrather than relative to the points.
the distance (in character widths) which separates thelabel from identified points.  Negative values are allowed.  Notused if <code>atpen = TRUE</code>.
the maximal distance (in inches) for the pointer to be‘close enough’ to a point.
if <code>order</code> is <code>TRUE</code>, a component is added to thereturn value which indicates the order in which points wereidentified: see Value.
further arguments passed to <code>par</code> such as<code>cex</code>, <code>col</code> and <code>font</code>.
locations of grid lines at which the values in <code>z</code> aremeasured.  These must be finite, non-missing and in (strictly)ascending order.  By default, equallyspaced values from 0 to 1 are used.  If <code>x</code> is a <code>list</code>,its components <code>x$x</code> and <code>x$y</code> are used for <code>x</code>and <code>y</code>, respectively. If the list has component <code>z</code> thisis used for <code>z</code>.
a numeric or logical matrix containing the values to be plotted(<code>NA</code>s are allowed).  Note that <code>x</code> can be used insteadof <code>z</code> for convenience.
the minimum and maximum <code>z</code> values for which colorsshould be plotted, defaulting to the range of the finite values of<code>z</code>. Each of the given colors will be used to color anequispaced interval of this range. The <em>midpoints</em> of theintervals cover the range, so that values just outside the rangewill be plotted.
ranges for the plotted <code>x</code> and <code>y</code> values,defaulting to the ranges of <code>x</code> and <code>y</code>.
a list of colors such as that generated by<code>hcl.colors</code>, <code>gray.colors</code> or similarfunctions.
logical; if <code>TRUE</code>, add to current plot (and disregardthe following four arguments).  This is rarely useful because<code>image</code> ‘paints’ over existing graphics.
style of x and y axis.  The default <code>"i"</code> isappropriate for images.  See <code>par</code>.
each a character string giving the labels for the x andy axis.  Default to the ‘call names’ of <code>x</code> or <code>y</code>, or to<code>""</code> if these were unspecified.
a set of finite numeric breakpoints for the colours:must have one more breakpoint than colour and be in increasingorder.  Unsorted vectors will be sorted, with a warning.
logical. If true the midpoints of the colour intervalsare equally spaced, and <code>zlim[1]</code> and <code>zlim[2]</code> were takento be midpoints.  The default is to have colour intervals of equallengths between the limits.
logical; if <code>TRUE</code> a bitmap raster is used toplot the image instead of polygons. The grid must be regular in thatcase, otherwise an error is raised.   For the behaviour when this isnot specified, see ‘Details’.
graphical parameters for <code>plot</code> may also bepassed as arguments to this function, as can the plot aspect ratio<code>asp</code> and <code>axes</code> (see <code>plot.window</code>).
locations of grid lines at which the values in <code>z</code> aremeasured.  These must be finite, non-missing and in (strictly)ascending order.  By default, equallyspaced values from 0 to 1 are used.  If <code>x</code> is a <code>list</code>,its components <code>x$x</code> and <code>x$y</code> are used for <code>x</code>and <code>y</code>, respectively. If the list has component <code>z</code> thisis used for <code>z</code>.
a numeric or logical matrix containing the values to be plotted(<code>NA</code>s are allowed).  Note that <code>x</code> can be used insteadof <code>z</code> for convenience.
the minimum and maximum <code>z</code> values for which colorsshould be plotted, defaulting to the range of the finite values of<code>z</code>. Each of the given colors will be used to color anequispaced interval of this range. The <em>midpoints</em> of theintervals cover the range, so that values just outside the rangewill be plotted.
ranges for the plotted <code>x</code> and <code>y</code> values,defaulting to the ranges of <code>x</code> and <code>y</code>.
a list of colors such as that generated by<code>hcl.colors</code>, <code>gray.colors</code> or similarfunctions.
logical; if <code>TRUE</code>, add to current plot (and disregardthe following four arguments).  This is rarely useful because<code>image</code> ‘paints’ over existing graphics.
style of x and y axis.  The default <code>"i"</code> isappropriate for images.  See <code>par</code>.
each a character string giving the labels for the x andy axis.  Default to the ‘call names’ of <code>x</code> or <code>y</code>, or to<code>""</code> if these were unspecified.
a set of finite numeric breakpoints for the colours:must have one more breakpoint than colour and be in increasingorder.  Unsorted vectors will be sorted, with a warning.
logical. If true the midpoints of the colour intervalsare equally spaced, and <code>zlim[1]</code> and <code>zlim[2]</code> were takento be midpoints.  The default is to have colour intervals of equallengths between the limits.
logical; if <code>TRUE</code> a bitmap raster is used toplot the image instead of polygons. The grid must be regular in thatcase, otherwise an error is raised.   For the behaviour when this isnot specified, see ‘Details’.
graphical parameters for <code>plot</code> may also bepassed as arguments to this function, as can the plot aspect ratio<code>asp</code> and <code>axes</code> (see <code>plot.window</code>).
a matrix object specifying the location of the next<i>N</i> figures on the output device.  Each value in the matrix mustbe <code>0</code> or a positive integer.  If <i>N</i> is the largestpositive integer in the matrix, then the integers<i>{1, …, N-1}</i> must also appear at least once in the matrix.
a vector of values for the widths of columns on thedevice.  Relative widths are specified with numeric values.    Absolutewidths (in centimetres) are specified with the <code>lcm()</code> function (seeexamples).
a vector of values for the heights of rows on the device.Relative and absolute heights can be specified, see <code>widths</code> above.
either a logical value or a matrix object.  If thelatter, then it must have the same dimensions as <code>mat</code> andeach value in the matrix must be either <code>0</code> or <code>1</code>.
number of figures to plot.
a dimension to be interpreted as a number of centimetres.
a matrix object specifying the location of the next<i>N</i> figures on the output device.  Each value in the matrix mustbe <code>0</code> or a positive integer.  If <i>N</i> is the largestpositive integer in the matrix, then the integers<i>{1, …, N-1}</i> must also appear at least once in the matrix.
a vector of values for the widths of columns on thedevice.  Relative widths are specified with numeric values.    Absolutewidths (in centimetres) are specified with the <code>lcm()</code> function (seeexamples).
a vector of values for the heights of rows on the device.Relative and absolute heights can be specified, see <code>widths</code> above.
either a logical value or a matrix object.  If thelatter, then it must have the same dimensions as <code>mat</code> andeach value in the matrix must be either <code>0</code> or <code>1</code>.
number of figures to plot.
a dimension to be interpreted as a number of centimetres.
a matrix object specifying the location of the next<i>N</i> figures on the output device.  Each value in the matrix mustbe <code>0</code> or a positive integer.  If <i>N</i> is the largestpositive integer in the matrix, then the integers<i>{1, …, N-1}</i> must also appear at least once in the matrix.
a vector of values for the widths of columns on thedevice.  Relative widths are specified with numeric values.    Absolutewidths (in centimetres) are specified with the <code>lcm()</code> function (seeexamples).
a vector of values for the heights of rows on the device.Relative and absolute heights can be specified, see <code>widths</code> above.
either a logical value or a matrix object.  If thelatter, then it must have the same dimensions as <code>mat</code> andeach value in the matrix must be either <code>0</code> or <code>1</code>.
number of figures to plot.
a dimension to be interpreted as a number of centimetres.
the x and y co-ordinates to be used to position the legend.They can be specified by keyword or in any way which is accepted by<code>xy.coords</code>: See ‘Details’.
a character or expression vectorof length <i>≥ 1</i> to appear in the legend.  Otherobjects will be coerced by <code>as.graphicsAnnot</code>.
if specified, this argument will cause boxes filledwith the specified colors (or shaded in the specified colors)to appear beside the legend text.
the color of points or lines appearing in the legend.
the border color for the boxes (used only if<code>fill</code> is specified).
the line types and widths for lines appearing in thelegend.  One of these two <em>must</em> be specified for line drawing.
the plotting symbols appearing in the legend, asnumeric vector or a vector of 1-character strings (see<code>points</code>). Unlike <code>points</code>, this can all bespecified as a single multi-character string.  <em>Must</em> bespecified for symbol drawing.
angle of shading lines.
the density of shading lines, if numeric andpositive. If <code>NULL</code> or negative or <code>NA</code> color fillingis assumed.
the type of box to be drawn around the legend.  The allowedvalues are <code>"o"</code> (the default) and <code>"n"</code>.
the background color for the legend box.  (Note that this isonly used if <code>bty != "n"</code>.)
the line type, width and color forthe legend box (if <code>bty = "o"</code>).
the background color for the <code>points</code>,corresponding to its argument <code>bg</code>.
character expansion factor <b>relative</b> to current<code>par("cex")</code>.  Used for text, and provides the default for<code>pt.cex</code>.
expansion factor(s) for the points.
line width for the points, defaults to the one forlines, or if that is not set, to <code>par("lwd")</code>.
how the legend is to be justified relative to the legendx location.  A value of 0 means left justified, 0.5 means centeredand 1 means right justified.
the same as <code>xjust</code> for the legend y location.
character interspacing factor for horizontal (x) spacing.
the same for vertical (y) line distances.
numeric of length 1 or 2; the string adjustment for legendtext.  Useful for y-adjustment when <code>labels</code> areplotmath expressions.
the width of the legend text in x (<code>"user"</code>)coordinates.  (Should be a single positive number even for a reversedx axis.)  Defaults to the proper value computed by<code>strwidth(legend)</code>.
the color used for the legend text.
the font used for the legend text, see <code>text</code>.
logical; if <code>TRUE</code>, merge points and lines butnot filled boxes.  Defaults to <code>TRUE</code> if there are points and lines.
logical; if <code>TRUE</code>, shows how <code>legend</code> does allits magical computations.
logical.  If <code>FALSE</code>, nothing is plotted but thesizes are returned.
the number of columns in which to set the legend items(default is 1, a vertical legend).
logical; if <code>TRUE</code>, set the legend horizontallyrather than vertically (specifying <code>horiz</code> overrides the <code>ncol</code>specification).
a character string or length-one expression giving atitle to be placed at the top of the legend.  Other objects will becoerced by <code>as.graphicsAnnot</code>.
inset distance(s) from the margins as a fraction of theplot region when legend is placed by keyword.
if supplied, a value of the graphical parameter <code>xpd</code>to be used while the legend is being drawn.
color for <code>title</code>.
horizontal adjustment for <code>title</code>: see the helpfor <code>par("adj")</code>.
the length of lines drawn to illustrate <code>lty</code>and/or <code>lwd</code> (in units of character widths).
coordinate vectors of points to join.
character indicating the type of plotting; actually any ofthe <code>type</code>s as in <code>plot.default</code>.
Further graphical parameters (see <code>par</code>) mayalso be supplied as arguments, particularly, line type, <code>lty</code>,line width, <code>lwd</code>, color, <code>col</code> and for <code>type = "b"</code>,<code>pch</code>.  Also the line characteristics <code>lend</code>, <code>ljoin</code>and <code>lmitre</code>.
coordinate vectors of points to join.
character indicating the type of plotting; actually any ofthe <code>type</code>s as in <code>plot.default</code>.
Further graphical parameters (see <code>par</code>) mayalso be supplied as arguments, particularly, line type, <code>lty</code>,line width, <code>lwd</code>, color, <code>col</code> and for <code>type = "b"</code>,<code>pch</code>.  Also the line characteristics <code>lend</code>, <code>ljoin</code>and <code>lmitre</code>.
the maximum number of points to locate.  Valid values startat 1.
One of <code>"n"</code>, <code>"p"</code>, <code>"l"</code> or<code>"o"</code>. If <code>"p"</code> or <code>"o"</code> the points areplotted; if <code>"l"</code>  or <code>"o"</code> they are joined by lines.
additional graphics parameters used if <code>type != "n"</code>for plotting the locations.
vectors or matrices of data for plotting.  The number ofrows should match.  If one of them are missing, the other is takenas <code>y</code> and an <code>x</code> vector of <code>1:n</code> is used.Missing values (<code>NA</code>s) are allowed.  Since <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> 4.0.0,<code>class(.)</code>es of <code>x</code> and <code>y</code> such as<code>"Date"</code> are typically preserved.
character string (length 1 vector) or vector of 1-characterstrings indicating the type of plot for eachcolumn of <code>y</code>, see <code>plot</code> for all possible<code>type</code>s.  The first character of <code>type</code>defines the first plot, the second character the second, etc.Characters in <code>type</code> are cycled through; e.g., <code>"pl"</code>alternately plots points and lines.
vector of line types, widths, and end styles.The first element is for the first column, the second element forthe second column, etc., even if lines are not plotted for allcolumns. Line types will be used cyclically until all plots aredrawn.
character string or vector of 1-characters or integers forplotting characters, see <code>points</code> for details.The first character is the plotting-character for the first plot,the second for the second, etc.  The default is the digits (1through 9, 0) then the lowercase and uppercase letters.
vector of colors.  Colors are used cyclically.
vector of character expansion sizes, used cyclically.This works as a multiple of <code>par("cex")</code>.  <code>NULL</code> isequivalent to <code>1.0</code>. 
vector of background (fill) colors for the open plotsymbols given by <code>pch = 21:25</code> as in <code>points</code>.  Thedefault <code>NA</code> corresponds to the one of the underlying function<code>plot.xy</code>.
titles for x and y axes, as in <code>plot</code>.
ranges of x and y axes, as in <code>plot</code>.
Graphical parameters (see <code>par</code>) and any furtherarguments of <code>plot</code>, typically <code>plot.default</code>, may also besupplied as arguments to this function; even <code>panel.first</code> etcnow work.  Hence, the high-levelgraphics control arguments described under <code>par</code> and thearguments to <code>title</code> may be supplied to this function.
logical.  If <code>TRUE</code>, plots are added to current one,using <code>points</code> and <code>lines</code>.
logical.  If <code>TRUE</code>, write one line of what isdone.
vectors or matrices of data for plotting.  The number ofrows should match.  If one of them are missing, the other is takenas <code>y</code> and an <code>x</code> vector of <code>1:n</code> is used.Missing values (<code>NA</code>s) are allowed.  Since <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> 4.0.0,<code>class(.)</code>es of <code>x</code> and <code>y</code> such as<code>"Date"</code> are typically preserved.
character string (length 1 vector) or vector of 1-characterstrings indicating the type of plot for eachcolumn of <code>y</code>, see <code>plot</code> for all possible<code>type</code>s.  The first character of <code>type</code>defines the first plot, the second character the second, etc.Characters in <code>type</code> are cycled through; e.g., <code>"pl"</code>alternately plots points and lines.
vector of line types, widths, and end styles.The first element is for the first column, the second element forthe second column, etc., even if lines are not plotted for allcolumns. Line types will be used cyclically until all plots aredrawn.
character string or vector of 1-characters or integers forplotting characters, see <code>points</code> for details.The first character is the plotting-character for the first plot,the second for the second, etc.  The default is the digits (1through 9, 0) then the lowercase and uppercase letters.
vector of colors.  Colors are used cyclically.
vector of character expansion sizes, used cyclically.This works as a multiple of <code>par("cex")</code>.  <code>NULL</code> isequivalent to <code>1.0</code>. 
vector of background (fill) colors for the open plotsymbols given by <code>pch = 21:25</code> as in <code>points</code>.  Thedefault <code>NA</code> corresponds to the one of the underlying function<code>plot.xy</code>.
titles for x and y axes, as in <code>plot</code>.
ranges of x and y axes, as in <code>plot</code>.
Graphical parameters (see <code>par</code>) and any furtherarguments of <code>plot</code>, typically <code>plot.default</code>, may also besupplied as arguments to this function; even <code>panel.first</code> etcnow work.  Hence, the high-levelgraphics control arguments described under <code>par</code> and thearguments to <code>title</code> may be supplied to this function.
logical.  If <code>TRUE</code>, plots are added to current one,using <code>points</code> and <code>lines</code>.
logical.  If <code>TRUE</code>, write one line of what isdone.
vectors or matrices of data for plotting.  The number ofrows should match.  If one of them are missing, the other is takenas <code>y</code> and an <code>x</code> vector of <code>1:n</code> is used.Missing values (<code>NA</code>s) are allowed.  Since <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> 4.0.0,<code>class(.)</code>es of <code>x</code> and <code>y</code> such as<code>"Date"</code> are typically preserved.
character string (length 1 vector) or vector of 1-characterstrings indicating the type of plot for eachcolumn of <code>y</code>, see <code>plot</code> for all possible<code>type</code>s.  The first character of <code>type</code>defines the first plot, the second character the second, etc.Characters in <code>type</code> are cycled through; e.g., <code>"pl"</code>alternately plots points and lines.
vector of line types, widths, and end styles.The first element is for the first column, the second element forthe second column, etc., even if lines are not plotted for allcolumns. Line types will be used cyclically until all plots aredrawn.
character string or vector of 1-characters or integers forplotting characters, see <code>points</code> for details.The first character is the plotting-character for the first plot,the second for the second, etc.  The default is the digits (1through 9, 0) then the lowercase and uppercase letters.
vector of colors.  Colors are used cyclically.
vector of character expansion sizes, used cyclically.This works as a multiple of <code>par("cex")</code>.  <code>NULL</code> isequivalent to <code>1.0</code>. 
vector of background (fill) colors for the open plotsymbols given by <code>pch = 21:25</code> as in <code>points</code>.  Thedefault <code>NA</code> corresponds to the one of the underlying function<code>plot.xy</code>.
titles for x and y axes, as in <code>plot</code>.
ranges of x and y axes, as in <code>plot</code>.
Graphical parameters (see <code>par</code>) and any furtherarguments of <code>plot</code>, typically <code>plot.default</code>, may also besupplied as arguments to this function; even <code>panel.first</code> etcnow work.  Hence, the high-levelgraphics control arguments described under <code>par</code> and thearguments to <code>title</code> may be supplied to this function.
logical.  If <code>TRUE</code>, plots are added to current one,using <code>points</code> and <code>lines</code>.
logical.  If <code>TRUE</code>, write one line of what isdone.
a contingency table in array form, with optional categorylabels specified in the <code>dimnames(x)</code> attribute.  The table isbest created by the <code>table()</code> command.
character string for the mosaic title.
character string for the mosaic sub-title (at bottom).
x- and y-axis labels used for the plot; by default,the first and second element of <code>names(dimnames(X))</code> (i.e., thename of the first and second variable in <code>X</code>).
vector ordering of the variables, containing a permutationof the integers <code>1:length(dim(x))</code> (the default).
vector of offsets to determine percentage spacing at eachlevel of the mosaic (appropriate values are between 0 and 20,and the default is 20 times the number of splits for 2-dimensionaltables, and 10 otherwise).  Rescaled to maximally 50, and recycled ifnecessary.
vector of split directions (<code>"v"</code> for vertical and<code>"h"</code> for horizontal) for each level of the mosaic, onedirection for each dimension of the contingency table.  Thedefault consists of alternating directions, beginning with avertical split.
logical or (recycling) vector of colors for colorshading, used only when <code>shade</code> is <code>FALSE</code>, or <code>NULL</code>(default).  By default, grey boxes are drawn.  <code>color = TRUE</code>uses a gamma-corrected grey palette.  <code>color = FALSE</code> gives emptyboxes with no shading.
a logical indicating whether to produce extended mosaicplots, or a numeric vector of at most 5 distinct positive numbersgiving the absolute values of the cut points for the residuals.  Bydefault, <code>shade</code> is <code>FALSE</code>, and simple mosaics arecreated.  Using <code>shade = TRUE</code> cuts absolute values at 2 and4.
a list of vectors with the marginal totals to be fit inthe log-linear model.  By default, an independence model is fitted.See <code>loglin</code> for further information.
The magnification to be used for axis annotation,as a multiple of <code>par("cex")</code>.
numeric; the style of axis labels, see <code>par</code>.
colour of borders of cells: see <code>polygon</code>.
a character string indicating the type of residual to berepresented.  Must be one of <code>"pearson"</code> (giving components ofPearson's <i>chi-squared</i>), <code>"deviance"</code> (givingcomponents of the likelihood ratio <i>chi-squared</i>), or<code>"FT"</code> for the Freeman-Tukey residuals.  The value of thisargument can be abbreviated.
a formula, such as <code>y ~ x</code>.
a data frame (or list), or a contingency table from whichthe variables in <code>formula</code> should be taken.
further arguments to be passed to or from methods.
an optional vector specifying a subset of observationsin the data frame to be used for plotting.
a function which indicates what should happenwhen the data contains variables to be cross-tabulated, and thesevariables contain <code>NA</code>s.  The default is to omit cases whichhave an <code>NA</code> in any variable.  Since the tabulation will omitall cases containing missing values, this will only be useful if the<code>na.action</code> function replaces missing values.
a character or expression vector specifyingthe <em>text</em> to be written.  Other objects are coerced by<code>as.graphicsAnnot</code>.
on which side of the plot (1=bottom, 2=left, 3=top, 4=right).
on which MARgin line, starting at 0 counting outwards.
use outer margins if available.
give location of each string in user coordinates.  If thecomponent of <code>at</code> corresponding to a particular text item isnot a finite value (the default), the location will be determinedby <code>adj</code>.
adjustment for each string in reading direction.  Forstrings parallel to the axes, <code>adj = 0</code> means left or bottomalignment, and <code>adj = 1</code> means right or top alignment.

If <code>adj</code> is not a finite value (the default), the value of<code>par("las")</code> determines the adjustment.  For strings plottedparallel to the axis the default is to centre the string.
adjustment for each string perpendicular to the readingdirection (which is controlled by <code>adj</code>).  For strings parallelto the axes, <code>padj = 0</code> means right or top alignment,and <code>padj = 1</code> means left or bottom alignment.

If <code>padj</code> is not a finite value (the default), the value of<code>par("las")</code> determines the adjustment.  For strings plottedperpendicular to the axis the default is to centre the string.
character expansion factor.  <code>NULL</code> and <code>NA</code>are equivalent to <code>1.0</code>.  This is an absolute measure, notscaled by <code>par("cex")</code> or by setting <code>par("mfrow")</code>or <code>par("mfcol")</code>.  Can be a vector.
color to use.  Can be a vector.  <code>NA</code> values (thedefault) mean use <code>par("col")</code>.
font for text.  Can be a vector.  <code>NA</code> values (thedefault) mean use <code>par("font")</code>.
Further graphical parameters (see <code>par</code>),including <code>family</code>, <code>las</code> and <code>xpd</code>. (The latterdefaults to the figure region unless <code>outer = TRUE</code>, otherwisethe device region.  It can only be increased.)
the coordinates of points given as numeric columns of amatrix or data frame.  Logical and factor columns are converted tonumeric in the same way that <code>data.matrix</code> does.
a formula, such as <code>~ x + y + z</code>.  Each term willgive a separate variable in the pairs plot, so terms should benumeric vectors.  (A response will be interpreted as anothervariable, but not treated specially, so it is confusing to use one.)
a data.frame (or list) from which the variables in<code>formula</code> should be taken.
an optional vector specifying a subset of observationsto be used for plotting.
a function which indicates what should happenwhen the data contain <code>NA</code>s.  The default is to pass missingvalues on to the panel functions, but <code>na.action = na.omit</code>will cause cases with missing values in any of the variables to beomitted entirely.
the names of the variables.
<code>function(x, y, ...)</code> which is used to plotthe contents of each panel of the display.
arguments to be passed to or from methods.

Also, graphical parameters can be given as can arguments to<code>plot</code> such as <code>main</code>.  <code>par("oma")</code> will be setappropriately unless specified.
The (numerical) indices of the variables to beplotted on the horizontal and vertical axes respectively.
separate panel functions (or<code>NULL</code>) to be used below and above the diagonal respectively.
optional <code>function(x, ...)</code> to beapplied on the diagonals.
optional <code>function(x, y, labels, cex,      font, ...)</code> to be applied on the diagonals.
<code>y</code> position of labels in the text panel.
if <code>main</code> is specified, <code>line.main</code> givesthe <code>line</code> argument to <code>mtext()</code> which draws thetitle.  You may want to specify <code>oma</code> when changing <code>line.main</code>.
graphics parameters for the text panel.
logical.  Should the layout be matrix-like with row 1at the top, or graph-like with row 1 at the bottom?  The latter (nondefault) leads to a basically symmetric scatterplot matrix.
distance between subplots, in margin lines.
a character string indicating if logarithmic axes are to beused, see <code>plot.default</code> <em>or</em> a numeric vector ofindices specifying the indices of those variables where logarithmicaxes should be used for both x and y.  <code>log = "xy"</code> specifieslogarithmic axes for all variables.
<code>logical</code> (or integer) determininghow the horizontal and vertical axis labeling happens.  If true, theaxis labelling starts at the first (from top left) row or column,respectively.
the coordinates of points given as numeric columns of amatrix or data frame.  Logical and factor columns are converted tonumeric in the same way that <code>data.matrix</code> does.
a formula, such as <code>~ x + y + z</code>.  Each term willgive a separate variable in the pairs plot, so terms should benumeric vectors.  (A response will be interpreted as anothervariable, but not treated specially, so it is confusing to use one.)
a data.frame (or list) from which the variables in<code>formula</code> should be taken.
an optional vector specifying a subset of observationsto be used for plotting.
a function which indicates what should happenwhen the data contain <code>NA</code>s.  The default is to pass missingvalues on to the panel functions, but <code>na.action = na.omit</code>will cause cases with missing values in any of the variables to beomitted entirely.
the names of the variables.
<code>function(x, y, ...)</code> which is used to plotthe contents of each panel of the display.
arguments to be passed to or from methods.

Also, graphical parameters can be given as can arguments to<code>plot</code> such as <code>main</code>.  <code>par("oma")</code> will be setappropriately unless specified.
The (numerical) indices of the variables to beplotted on the horizontal and vertical axes respectively.
separate panel functions (or<code>NULL</code>) to be used below and above the diagonal respectively.
optional <code>function(x, ...)</code> to beapplied on the diagonals.
optional <code>function(x, y, labels, cex,      font, ...)</code> to be applied on the diagonals.
<code>y</code> position of labels in the text panel.
if <code>main</code> is specified, <code>line.main</code> givesthe <code>line</code> argument to <code>mtext()</code> which draws thetitle.  You may want to specify <code>oma</code> when changing <code>line.main</code>.
graphics parameters for the text panel.
logical.  Should the layout be matrix-like with row 1at the top, or graph-like with row 1 at the bottom?  The latter (nondefault) leads to a basically symmetric scatterplot matrix.
distance between subplots, in margin lines.
a character string indicating if logarithmic axes are to beused, see <code>plot.default</code> <em>or</em> a numeric vector ofindices specifying the indices of those variables where logarithmicaxes should be used for both x and y.  <code>log = "xy"</code> specifieslogarithmic axes for all variables.
<code>logical</code> (or integer) determininghow the horizontal and vertical axis labeling happens.  If true, theaxis labelling starts at the first (from top left) row or column,respectively.
numeric vectors of the same length
numeric or character codes for the color(s),point type and size of <code>points</code>; see also<code>par</code>.
color to be used by <code>lines</code> for drawing thesmooths.
smoothing parameter <code>f</code> for <code>lowess</code>, seethere.
number of robustness iterations for <code>lowess</code>.
further arguments to <code>lines</code>.
arguments in <code>tag = value</code> form, or a list of taggedvalues.  The tags must come from the names of graphical parametersdescribed in the ‘Graphical Parameters’ section.
logical; if <code>TRUE</code> and there are no otherarguments, only parameters are returned which can be set by asubsequent <code>par()</code> call <em>on the same device</em>.
locations of grid lines at which the values in <code>z</code> aremeasured.  These must be in ascending order.  By default, equallyspaced values from 0 to 1 are used.  If <code>x</code> is a <code>list</code>,its components <code>x$x</code> and <code>x$y</code> are used for <code>x</code>and <code>y</code>, respectively.
a matrix containing the values to be plotted (<code>NA</code>s areallowed).  Note that <code>x</code> can be used instead of <code>z</code> forconvenience.
x-, y-  and z-limits.  These should be chosento cover the range of values of the surface: see ‘Details’.
titles for the axes.  N.B. These must becharacter strings; expressions are not accepted.  Numbers will becoerced to character strings.
main and sub title, as for <code>title</code>.
angles defining the viewing direction.<code>theta</code> gives the azimuthal direction and <code>phi</code>the colatitude.
the distance of the eyepoint from the centre of the plotting box.
a value which can be used to vary the strength ofthe perspective transformation.  Values of <code>d</code> greaterthan 1 will lessen the perspective effect and values lessand 1 will exaggerate it.
before viewing the x, y and z coordinates of thepoints defining the surface are transformed to the interval[0,1].  If <code>scale</code> is <code>TRUE</code> the x, y and z coordinatesare transformed separately.  If <code>scale</code> is <code>FALSE</code>the coordinates are scaled so that aspect ratios are retained.This is useful for rendering things like DEM information.
a expansion factor applied to the <code>z</code>coordinates. Often used with <code>0 &lt; expand &lt; 1</code> to shrink theplotting box in the <code>z</code> direction.
the color(s) of the surface facets.  Transparent colours areignored.  This is recycled to the <i>(nx-1)(ny-1)</i> facets.
the color of the line drawn around the surface facets.The default, <code>NULL</code>, corresponds to <code>par("fg")</code>.A value of <code>NA</code> will disable the drawing of borders: this issometimes useful when the surface is shaded.
if finite values are specified for <code>ltheta</code>and <code>lphi</code>, the surface is shaded as though it was beingilluminated from the direction specified by azimuth <code>ltheta</code>and colatitude <code>lphi</code>.
the shade at a surface facet is computed as<code>((1+d)/2)^shade</code>, where <code>d</code> is the dot product ofa unit vector normal to the facet and a unit vector in thedirection of a light source.  Values of <code>shade</code> closeto one yield shading similar to a point light source modeland values close to zero produce no shading.  Values in therange 0.5 to 0.75 provide an approximation to daylightillumination.
should the bounding box for the surface be displayed.The default is <code>TRUE</code>.
should ticks and labels be added to the box.  Thedefault is <code>TRUE</code>.  If <code>box</code> is <code>FALSE</code> then noticks or labels are drawn.
character: <code>"simple"</code> draws just an arrowparallel to the axis to indicate direction of increase;<code>"detailed"</code> draws normal ticks as per 2D plots.
the (approximate) number of tick marks to draw on theaxes.  Has no effect if <code>ticktype</code> is <code>"simple"</code>.
additional graphical parameters (see <code>par</code>).
a vector of non-negative numerical quantities.The values in <code>x</code> are displayed as the areas of pie slices.
one or more expressions or character strings givingnames for the slices.  Other objects are coerced by<code>as.graphicsAnnot</code>.  For empty or <code>NA</code>(after coercion to character) labels, no label nor pointing lineis drawn.
the circular outline of the pie is approximated by apolygon with this many edges.
the pie is drawn centered in a square box whose sidesrange from <i>-1</i> to <i>1</i>.  If the character strings labelingthe slices are long it may be necessary to use a smaller radius.
logical indicating if slices are drawn clockwise orcounter clockwise (i.e., mathematically positive direction), thelatter is default.
number specifying the <em>starting angle</em> (indegrees) for the slices. Defaults to 0 (i.e., ‘3 o'clock’)unless <code>clockwise</code> is true where <code>init.angle</code>defaults to 90 (degrees), (i.e., ‘12 o'clock’).
the density of shading lines, in lines per inch.The default value of <code>NULL</code> means that no shading linesare drawn. Non-positive values of <code>density</code> also inhibit thedrawing of shading lines.
the slope of shading lines, given as an angle indegrees (counter-clockwise).
a vector of colors to be used in filling or shadingthe slices. If missing a set of 6 pastel colours is used,unless <code>density</code> is specified when <code>par("fg")</code> is used.
(possibly vectors) arguments passed to<code>polygon</code> which draws each slice.
an overall title for the plot.
graphical parameters can be given as arguments to<code>pie</code>.  They will affect the main title and labels only.
the <code>x</code> and <code>y</code> arguments provide the x and ycoordinates for the plot.  Any reasonable way of defining thecoordinates is acceptable.  See the function <code>xy.coords</code>for details.  If supplied separately, they must be of the same length.
1-character string giving the type of plot desired.  Thefollowing values are possible, for details, see <code>plot</code>:<code>"p"</code> for points, <code>"l"</code> for lines,<code>"b"</code> for both points and lines,<code>"c"</code> for empty points joined by lines,<code>"o"</code> for overplotted points and lines,<code>"s"</code> and <code>"S"</code> for stair steps and<code>"h"</code> for histogram-like vertical lines.  Finally,<code>"n"</code> does not produce any points or lines.
the x limits (x1, x2) of the plot.  Note that <code>x1 &gt; x2</code>is allowed and leads to a ‘reversed axis’.

The default value, <code>NULL</code>, indicates that the range of thefinite values to be plotted should be used.
the y limits of the plot.
a character string which contains <code>"x"</code> if the x axisis to be logarithmic, <code>"y"</code> if the y axis is to be logarithmicand <code>"xy"</code> or <code>"yx"</code> if both axes are to be logarithmic.
a main title for the plot, see also <code>title</code>.
a sub title for the plot.
a label for the x axis, defaults to a description of <code>x</code>.
a label for the y axis, defaults to a description of <code>y</code>.
a logical value indicating whether the default annotation(title and x and y axis labels) should appear on the plot.
a logical value indicating whether both axes should be drawn onthe plot.  Use graphical parameter <code>"xaxt"</code> or <code>"yaxt"</code>to suppress just one of the axes.
a logical indicating whether a box should be drawnaround the plot.
an ‘expression’ to be evaluated after theplot axes are set up but before any plotting takes place.  This canbe useful for drawing background grids or scatterplot smooths.  Notethat this works by lazy evaluation: passing this argument from other<code>plot</code> methods may well not work since it may be evaluated tooearly.
an expression to be evaluated after plotting hastaken place but before the axes, title and box are added.  See thecomments about <code>panel.first</code>.
the <i>y/x</i> aspect ratio, see <code>plot.window</code>.
the <i>x/y</i> axis gap factors, passed as<code>gap.axis</code> to the two <code>axis()</code> calls (when<code>axes</code> is true, as per default).
other graphical parameters (see <code>par</code> andsection ‘Details’ below).
the <code>x</code> and <code>y</code> arguments provide the x and ycoordinates for the plot.  Any reasonable way of defining thecoordinates is acceptable.  See the function <code>xy.coords</code>for details.  If supplied separately, they must be of the same length.
1-character string giving the type of plot desired.  Thefollowing values are possible, for details, see <code>plot</code>:<code>"p"</code> for points, <code>"l"</code> for lines,<code>"b"</code> for both points and lines,<code>"c"</code> for empty points joined by lines,<code>"o"</code> for overplotted points and lines,<code>"s"</code> and <code>"S"</code> for stair steps and<code>"h"</code> for histogram-like vertical lines.  Finally,<code>"n"</code> does not produce any points or lines.
the x limits (x1, x2) of the plot.  Note that <code>x1 &gt; x2</code>is allowed and leads to a ‘reversed axis’.

The default value, <code>NULL</code>, indicates that the range of thefinite values to be plotted should be used.
the y limits of the plot.
a character string which contains <code>"x"</code> if the x axisis to be logarithmic, <code>"y"</code> if the y axis is to be logarithmicand <code>"xy"</code> or <code>"yx"</code> if both axes are to be logarithmic.
a main title for the plot, see also <code>title</code>.
a sub title for the plot.
a label for the x axis, defaults to a description of <code>x</code>.
a label for the y axis, defaults to a description of <code>y</code>.
a logical value indicating whether the default annotation(title and x and y axis labels) should appear on the plot.
a logical value indicating whether both axes should be drawn onthe plot.  Use graphical parameter <code>"xaxt"</code> or <code>"yaxt"</code>to suppress just one of the axes.
a logical indicating whether a box should be drawnaround the plot.
an ‘expression’ to be evaluated after theplot axes are set up but before any plotting takes place.  This canbe useful for drawing background grids or scatterplot smooths.  Notethat this works by lazy evaluation: passing this argument from other<code>plot</code> methods may well not work since it may be evaluated tooearly.
an expression to be evaluated after plotting hastaken place but before the axes, title and box are added.  See thecomments about <code>panel.first</code>.
the <i>y/x</i> aspect ratio, see <code>plot.window</code>.
the <i>x/y</i> axis gap factors, passed as<code>gap.axis</code> to the two <code>axis()</code> calls (when<code>axes</code> is true, as per default).
other graphical parameters (see <code>par</code> andsection ‘Details’ below).
either a data frame containing the design factors andoptionally the response, or a <code>formula</code> or<code>terms</code> object.
the response, if not given in x.
a function (or name of one) to be applied to eachsubset.  It must return one number for a numeric (vector) input.
data frame containing the variables referenced by <code>x</code>when that is formula-like.
graphical parameters such as <code>col</code>,see <code>par</code>.
range of y values, as in <code>plot.default</code>.
x axis label, see <code>title</code>.
y axis label with a ‘smart’ default.
main title, see <code>title</code>.
logical indicating if the user should be asked before a newpage is started – in the case of multiple y's.
character giving the type of x axis.
logical indicating if axes should be drawn.
logical indicating if ticks (one per factor) shouldbe drawn on the x axis.
The name of a function, or a call or anexpression written as a function of <code>x</code> which willevaluate to an object of the same length as <code>x</code>.
a ‘vectorizing’ numeric <span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> function.
alias for <code>from</code> for compatibility with <code>plot</code>
the range over which the function will be plotted.
integer; the number of x values at which to evaluate.
logical; if <code>TRUE</code> add to an already existing plot; if<code>NA</code> start a new plot taking the defaults for the limits andlog-scaling of the x-axis from the previous plot.  Taken as<code>FALSE</code> (with a warning if a different value is supplied) if nographics device is open.
<code>NULL</code> or a numeric vector of length 2;if non-<code>NULL</code> it provides the defaults for <code>c(from, to)</code>and, unless <code>add = TRUE</code>, selects the x-limits of the plot – see<code>plot.window</code>.
plot type: see <code>plot.default</code>.
character string giving the name to be used for the x axis.
labels and graphical parameterscan also be specified as arguments.  See ‘Details’ for theinterpretation of the default for <code>log</code>.

For the <code>"function"</code> method of <code>plot</code>, <code>...</code> caninclude any of the other arguments of <code>curve</code>, except<code>expr</code>.
numeric vectors of length 2, giving the x and ycoordinates ranges.
character; indicating which axes should be in log scale.
numeric, giving the <b>asp</b>ect ratio y/x,see ‘Details’.
further graphical parameters as in <code>par</code>.The relevant ones are <code>xaxs</code>, <code>yaxs</code> and <code>lab</code>.
A four-element list as results from<code>xy.coords</code>.
1 character code: see <code>plot.default</code>.<code>NULL</code> is accepted as a synonym for <code>"p"</code>.
character or integer code for kind of points, see<code>points.default</code>.
line type code, see <code>lines</code>.
color code or name, see <code>colors</code>,<code>palette</code>.  Here <code>NULL</code> means colour 0.
background (fill) color for the open plot symbols 21:25:see <code>points.default</code>.
character expansion.
line width, also used for (non-filled) plot symbols, see<code>lines</code> and <code>points</code>.
further graphical parameters such as <code>xpd</code>,<code>lend</code>, <code>ljoin</code> and <code>lmitre</code>.
coordinate vectors of points to plot.
character indicating the type of plotting; actually any ofthe <code>type</code>s as in <code>plot.default</code>.
Further graphical parameters may also be supplied asarguments.  See ‘Details’.
coordinate vectors of points to plot.
character indicating the type of plotting; actually any ofthe <code>type</code>s as in <code>plot.default</code>.
Further graphical parameters may also be supplied asarguments.  See ‘Details’.
vectors containing the coordinates of the verticesof the polygon.
the density of shading lines, in lines per inch.  Thedefault value of <code>NULL</code> means that no shading lines are drawn.A zero value of <code>density</code> means no shading nor filling whereasnegative values and <code>NA</code> suppress shading (and so allowcolor filling).
the slope of shading lines, given as an anglein degrees (counter-clockwise).
the color for filling the polygon. The default,<code>NA</code>, is to leave polygons unfilled, unless <code>density</code> isspecified.  (For back-compatibility, <code>NULL</code> is equivalent to<code>NA</code>.)  If <code>density</code> is specified with a positive valuethis gives the color of the shading lines.
the color to draw the border.  The default, <code>NULL</code>,means to use <code>par("fg")</code>.  Use <code>border = NA</code> toomit borders.

For compatibility with S, <code>border</code> can also be logical, inwhich case <code>FALSE</code> is equivalent to <code>NA</code> (borders omitted)and <code>TRUE</code> is equivalent to <code>NULL</code> (use the foreground colour),
the line type to be used, as in <code>par</code>.
graphical parameters such as <code>xpd</code>, <code>lend</code>,<code>ljoin</code> and <code>lmitre</code> can be given as arguments.
logical controlling the polygon shading mode:  seebelow for details.  Default <code>FALSE</code>.
vectors containing the coordinates of the verticesof the path.
the color for filling the path. The default,<code>NA</code>, is to leave paths unfilled.
the color to draw the border.  The default, <code>NULL</code>,means to use <code>par("fg")</code>.  Use <code>border = NA</code> toomit borders.

For compatibility with S, <code>border</code> can also be logical, inwhich case <code>FALSE</code> is equivalent to <code>NA</code> (borders omitted)and <code>TRUE</code> is equivalent to <code>NULL</code> (use the foreground colour),
the line type to be used, as in <code>par</code>.
character value specifying the path fill mode: either<code>"winding"</code> or <code>"evenodd"</code>.
graphical parameters such as <code>xpd</code>, <code>lend</code>,<code>ljoin</code> and <code>lmitre</code> can be given as arguments.
a <code>raster</code> object, or an object that can becoerced to one by <code>as.raster</code>.
a vector (or scalar) of left x positions.
a vector (or scalar) of bottom y positions.
a vector (or scalar) of right x positions.
a vector (or scalar) of top y positions.
angle of rotation (in degrees, anti-clockwisefrom positive x-axis, about the bottom-left corner).
a logical vector (or scalar) indicatingwhether to apply linear interpolation to the image when drawing. 
graphical parameters.
a vector (or scalar) of left x positions.
a vector (or scalar) of bottom y positions.
a vector (or scalar) of right x positions.
a vector (or scalar) of top y positions.
the density of shading lines, in lines per inch.The default value of <code>NULL</code> means that no shading lines are drawn.A zero value of <code>density</code> means no shading lines whereasnegative values (and <code>NA</code>) suppress shading (and so allowcolor filling).
angle (in degrees) of the shading lines.
color(s) to fill or shade the rectangle(s) with.The default <code>NA</code> (or also <code>NULL</code>) means do not fill,i.e., draw transparent rectangles, unless <code>density</code> is specified.
color for rectangle border(s).  The default means<code>par("fg")</code>.  Use <code>border = NA</code> to omit borders.If there are shadinglines, <code>border = TRUE</code> means use the same colour forthe border as for the shading lines.
line type for borders and shading; defaults to <code>"solid"</code>.
line width for borders and shading.  Note that the use of<code>lwd = 0</code> (as in the examples) is device-dependent.
graphical parameters such as <code>xpd</code>, <code>lend</code>,<code>ljoin</code> and <code>lmitre</code> can be given asarguments.
A numeric vector
The length of the ticks making up the ‘rug’.Positive lengths give inwards ticks.
On which side of the plot box the rug will beplotted. Normally 1 (bottom) or 3 (top).
The line width of the ticks.  Some devices will round thedefault width up to <code>1</code>.
The colour the ticks are plotted in.
logical indicating if there should be a warning aboutclipped values.
further arguments, passed to <code>axis</code>, suchas <code>line</code> or <code>pos</code> for specifying the location of the rug.
a two-element vector describing the number of rows and thenumber of columns in a screen matrix <em>or</em> a matrix with 4 columns.If a matrix, then each row describes a screen with values for the left,right, bottom, and top of the screen (in that order) in NDC units,that is 0 at the lower left corner of the device surface, and 1 atthe upper right corner.
a number giving the screen to be split.  It defaults tothe current screen if there is one, otherwise the whole device region.
logical: should the selected screen be cleared?
a number indicating which screen to prepare for drawing(<code>screen</code>), erase (<code>erase.screen</code>), or close(<code>close.screen</code>).  (<code>close.screen</code> will accept a vector ofscreen numbers.)
logical value indicating whether the screen should beerased as part of the preparation for drawing in the screen.
logical value indicating whether all of thescreens should be closed.
coordinates of points <b>from</b> which to draw.
coordinates of points <b>to</b> which to draw.  At leastone must be supplied.
graphical parameters as in<code>par</code>, possibly vectors.  <code>NA</code> values in <code>col</code>cause the segment to be omitted.
further graphical parameters (from <code>par</code>),such as <code>xpd</code> and the line characteristics <code>lend</code>, <code>ljoin</code>and <code>lmitre</code>.
the <code>x</code> and <code>y</code> arguments provide the x and ycoordinates for the plot.  Any reasonable way of defining thecoordinates is acceptable.  See the function <code>xy.coords</code>for details.  If supplied separately, they must be of the same length.
numeric vector of length one (for both directions) or two(for x and y separately) specifying the number of equally spacedgrid points for the density estimation; directly used as<code>gridsize</code> in <code>bkde2D()</code>.
numeric vector (length 1 or 2) of smoothing bandwidth(s).If missing, a more or less useful default is used. <code>bandwidth</code>is subsequently passed to function<code>bkde2D</code>.
function accepting an integer <code>n</code> as an argument andreturning <code>n</code> colors.
number of points to be superimposed on the densityimage.  The first <code>nrpoints</code> points from those areas of lowestregional densities will be plotted.  Adding points to the plotallows for the identification of outliers.  If all points are to beplotted, choose <code>nrpoints = Inf</code>.
<code>logical</code> indicating to return theordered indices of “low density” points if <code>nrpoints &gt; 0</code>.
arguments passed to <code>points</code>,when <code>nrpoints &gt; 0</code>: point symbol, character expansion factorand color, see also <code>par</code>.
function mapping the density scale to the color scale.
either <code>NULL</code> or a function which will becalled (with no arguments) after <code>image</code>.
character strings to be used as axis labels, passedto <code>image</code>.
numeric vectors of length 2 specifying axis limits.
further arguments passed to <code>image</code>,e.g., <code>add=TRUE</code> or <code>useRaster=TRUE</code>.
an object, the default method expects either a single variable(interpreted to be the explanatory variable) or a 2-way table.  Seedetails.
a <code>"factor"</code> interpreted to be the dependent variable
a <code>"formula"</code> of type <code>y ~ x</code> with a singledependent <code>"factor"</code> and a single explanatory variable.
an optional data frame.
if the explanatory variable is numeric, this controls howit is discretized. <code>breaks</code> is passed to <code>hist</code> and canbe a list of arguments.
convenience tolerance parameter for y-axis annotation.If the distance between two labels drops under this threshold, they areplotted equidistantly.
vertical offset between the bars (in per cent). It is fixed to<code>0</code> for spinograms and defaults to <code>2</code> for spine plots.
a character or numeric vector specifying in which orderthe levels of the dependent variable should be plotted.
a vector of fill colors of the same length as <code>levels(y)</code>.The default is to call <code>gray.colors</code>.
character strings for annotation
character vectors for annotation of x and y axis.Default to <code>levels(y)</code> and <code>levels(x)</code>, respectively for thespine plot. For <code>xaxlabels</code> in the spinogram, the breaks areused.
the range of x and y values with sensible defaults.
logical.  If <code>FALSE</code> all axes (including those givinglevel names) are suppressed.
additional arguments passed to <code>rect</code>.
an optional vector specifying a subset of observationsto be used for plotting.
should factors have unused levels dropped?Defaults to <code>FALSE</code>.
a two-element vector describing the number of rows and thenumber of columns in a screen matrix <em>or</em> a matrix with 4 columns.If a matrix, then each row describes a screen with values for the left,right, bottom, and top of the screen (in that order) in NDC units,that is 0 at the lower left corner of the device surface, and 1 atthe upper right corner.
a number giving the screen to be split.  It defaults tothe current screen if there is one, otherwise the whole device region.
logical: should the selected screen be cleared?
a number indicating which screen to prepare for drawing(<code>screen</code>), erase (<code>erase.screen</code>), or close(<code>close.screen</code>).  (<code>close.screen</code> will accept a vector ofscreen numbers.)
logical value indicating whether the screen should beerased as part of the preparation for drawing in the screen.
logical value indicating whether all of thescreens should be closed.
matrix or data frame of data.One star or segment plot will be produced for each row of <code>x</code>.Missing values (<code>NA</code>) are allowed, but they are treated as ifthey were 0 (after scaling, if relevant).
logical flag: if <code>TRUE</code>, the segment plots willoccupy a full circle.  Otherwise, they occupy the (upper) semicircleonly.
logical flag: if <code>TRUE</code>, the columns of the datamatrix are scaled independently so that the maximum value in eachcolumn is 1 and the minimum is 0.  If <code>FALSE</code>, the presumptionis that the data have been scaled by some other algorithm to therange <i>[0, 1]</i>.
logical flag: in <code>TRUE</code>, the radii corresponding toeach variable in the data will be drawn.
vector of character strings for labeling the plots.Unlike the S function <code>stars</code>, no attempt is made to constructlabels if <code>labels = NULL</code>.
Either two column matrix with the x and y coordinates usedto place each of the segment plots; or numeric of length 2 when allplots should be superimposed (for a ‘spider plot’).By default, <code>locations = NULL</code>, the segment plots will beplaced in a rectangular grid.
integers giving the number of rows and columns to use when<code>locations</code> is <code>NULL</code>.  By default, <code>nrow == ncol</code>, a squarelayout will be used.
scale factor for the length of radii or segments.
vector with x and y coordinates of the unit key.
vector of character strings for labeling thesegments of the unit key.  If omitted, the second component of<code>dimnames(x)</code> is used, if available.
clipping switch for the unit key (drawing andlabeling), see <code>par("xpd")</code>.
vector with the range of x coordinates to plot. 
vector with the range of y coordinates to plot.
logical indicating if the label locations shouldflip up and down from diagram to diagram. Defaults to a somewhatsmart heuristic.
logical. If <code>TRUE</code> draw a segment diagram.
color vector (integer or character, see<code>par</code>), each specifying a color for one of the segments(variables).  Ignored if <code>draw.segments = FALSE</code>.
color vector (integer or character, see<code>par</code>), each specifying a color for one of the stars(cases).  Ignored if <code>draw.segments = TRUE</code>.
color vector (integer or character, see<code>par</code>), each specifying a color for one of the lines(cases).  Ignored if <code>draw.segments = TRUE</code>.
logical flag: if <code>TRUE</code> axes are added to the plot.
logical flag: if <code>TRUE</code>, the plot region is framed.
a main title for the plot.
a sub title for the plot.
a label for the x axis.
a label for the y axis.
character expansion factor for the labels.
line width used for drawing.
line type used for drawing.
logical or NA indicating if clipping should be done, see<code>par(xpd = .)</code>.
argument to <code>par(mar = *)</code>, typically choosingsmaller margins than by default.
further arguments, passed to the first call of<code>plot()</code>, see <code>plot.default</code> and to<code>box()</code> if <code>frame.plot</code> is true.
logical, if <code>TRUE</code> <em>add</em> stars to current plot.
logical, if <code>FALSE</code>, nothing is plotted.
a numeric vector.
This controls the plot length.
The desired width of plot.
a tolerance.
a character or expression vector whose dimensionsare to be determined.  Other objects are coerced by<code>as.graphicsAnnot</code>.
character indicating in which units <code>s</code> is measured;should be one of <code>"user"</code>, <code>"inches"</code>, <code>"figure"</code>;partial matching is performed.
numeric <b>c</b>haracter <b>ex</b>pansion factor; multipliedby <code>par("cex")</code> yields the final character size; thedefault <code>NULL</code> is equivalent to <code>1</code>.
additional information about the font,possibly including the graphics parameter <code>"family"</code>:see <code>text</code>.
the data from which the plots are to be produced.  In thedefault method the data can be specified as a single numericvector, or as list of numeric vectors, each corresponding toa component plot.  In the <code>formula</code> method, a symbolicspecification of the form <code>y ~ g</code> can be given,indicating the observations in the vector <code>y</code> are to begrouped according to the levels of the factor<code>g</code>.  <code>NA</code>s are allowed in the data.
a data.frame (or list) from which the variables in<code>x</code> should be taken.
an optional vector specifying a subset of observationsto be used for plotting.
a function which indicates what should happenwhen the data contain <code>NA</code>s.  The default is to ignore missingvalues in either the response or the group.
additional parameters passed to the default method, or byit to <code>plot.window</code>, <code>points</code>,<code>axis</code> and <code>title</code> to control the appearanceof the plot.
the method to be used to separate coincident points.The default method <code>"overplot"</code> causes such points to beoverplotted, but it is also possible to specify <code>"jitter"</code> tojitter the points, or <code>"stack"</code> have coincident pointsstacked.  The last method only makes sense for very granular data.
when <code>method = "jitter"</code> is used, <code>jitter</code>gives the amount of jittering applied.
when stacking is used, points are stacked this manyline-heights (symbol widths) apart.
when vertical is <code>TRUE</code> the plots are drawnvertically rather than the default horizontal.
group labels which will be printed alongside(or underneath) each plot.
logical, if true <em>add</em> the chart to the current plot.
numeric vector giving the locations where the charts shouldbe drawn, particularly when <code>add = TRUE</code>;defaults to <code>1:n</code> where <code>n</code> is the number of boxes.
labels: see <code>title</code>.
alternate way to specify axis labels: see ‘Details’.
plot limits: see <code>plot.window</code>.
on which axes to use a log scale:  see<code>plot.default</code>
Graphical parameters: see <code>par</code>.
Axis control:  see <code>plot.default</code>.
a character or expression vector whose dimensionsare to be determined.  Other objects are coerced by<code>as.graphicsAnnot</code>.
character indicating in which units <code>s</code> is measured;should be one of <code>"user"</code>, <code>"inches"</code>, <code>"figure"</code>;partial matching is performed.
numeric <b>c</b>haracter <b>ex</b>pansion factor; multipliedby <code>par("cex")</code> yields the final character size; thedefault <code>NULL</code> is equivalent to <code>1</code>.
additional information about the font,possibly including the graphics parameter <code>"family"</code>:see <code>text</code>.
numeric vector of <code>x</code>-coordinates of length <code>n</code>,say, or another valid plotting structure, as for<code>plot.default</code>, see also <code>xy.coords</code>.
numeric vector of <code>y</code>-coordinates of length <code>n</code>.
integer vector of length <code>n</code>. <code>number[i]</code> = numberof replicates for <code>(x[i], y[i])</code>, may be 0.<br>Default (<code>missing(number)</code>): compute the exact multiplicity ofthe points <code>x[], y[]</code>, via<code>xyTable()</code>.
character indicating log coordinate scale, see<code>plot.default</code>.
when <code>number</code> is computed (i.e., not specified),<code>x</code> and <code>y</code> are rounded to <code>digits</code> significantdigits before multiplicities are computed.
character label for x-, or y-axis, respectively.
<code>numeric(2)</code> limiting the extents of the x-,or y-axis.
logical; should the plot be added on a previous one ?Default is <code>FALSE</code>.
logical; if <code>TRUE</code>, randomly rotate thesunflowers (preventing artefacts).
plotting character to be used for points(<code>number[i]==1</code>) and center of sunflowers.
numeric; character size expansion of center points(s. <code>pch</code>).
numeric <em>shrinking</em> factor to be used for thecenter points <em>when there are flower leaves</em>,i.e., <code>cex / cex.fact</code> is used for these.
colors for the plot symbols, passed to<code>plot.default</code>.
of sunflower leaves in inches, 1[in] := 2.54[cm].Default: 1/8\", approximately 3.2mm.
color to be used for the <b>seg</b>ments which make thesunflowers leaves, see <code>par(col=)</code>;<code>col = "gold"</code> reminds of real sunflowers.
numeric; the line width for the leaves' segments.
further arguments to <code>plot</code> [if<code>add = FALSE</code>], or to be passed to or from another method.
a <code>formula</code>, such as <code>y ~ x</code>.
a data.frame (or list) from which the variables in<code>formula</code> should be taken.
an optional vector specifying a subset of observationsto be used in the fitting process.
a function which indicates what should happenwhen the data contain <code>NA</code>s.  The default is to ignore casewith missing values.
the x and y co-ordinates for the centres of the symbols.They can be specified in any way which is accepted by<code>xy.coords</code>.
a vector giving the radii of the circles.
a vector giving the length of the sides of the squares.
a matrix with two columns.  The first column giveswidths and the second the heights of rectangles.
a matrix with three or more columns giving the lengthsof the rays from the center of the stars.  <code>NA</code> valuesare replaced by zeroes.
a matrix with three or four columns.  The firsttwo columns give the width and height of the thermometer symbols. Ifthere are three columns, the third is taken as a proportion: thethermometers are filled (using colour <code>fg</code>) from their base tothis proportion of their height.  If there are four columns, thethird and fourth columns are taken as proportions and thethermometers are filled between these two proportions of theirheights.  The part of the box not filled in <code>fg</code> will be filledin the background colour (default transparent) given by <code>bg</code>.
a matrix with five columns.  The first two columnsgive the width and height of the boxes, the next two columnsgive the lengths of the lower and upper whiskers and the fifththe proportion (with a warning if not in [0,1]) of the way upthe box that the median line is drawn.
<code>TRUE</code>, <code>FALSE</code> or a positive number.See ‘Details’.
if <code>add</code> is <code>TRUE</code>, the symbols are added toan existing plot, otherwise a new plot is created.
colour(s) the symbols are to be drawn in.
if specified, the symbols are filled with colour(s), thevector <code>bg</code> being recycled to the number of symbols.The default is to leave the symbols unfilled.
the x label of the plot if <code>add</code> is not true.Defaults to the <code>deparse</code>d expression used for <code>x</code>.
the y label of the plot.  Unused if <code>add = TRUE</code>.
a main title for the plot.  Unused if <code>add = TRUE</code>.
numeric vector of length 2 giving the x limits for theplot.  Unused if <code>add = TRUE</code>.
numeric vector of length 2 giving the y limits for theplot.  Unused if <code>add = TRUE</code>.
graphics parameters can also be passed to this function,as can the plot aspect ratio <code>asp</code> (see <code>plot.window</code>).
numeric vectors of coordinates where the text<code>labels</code> should be written.  If the length of <code>x</code> and<code>y</code> differs, the shorter one is recycled.
a character vector or expression specifyingthe <em>text</em> to be written.  An attempt is made to coerce otherlanguage objects (names and calls) to expressions, and vectors andother classed objects to character vectors by <code>as.character</code>.If <code>labels</code> is longer than <code>x</code> and<code>y</code>, the coordinates are recycled to the length of <code>labels</code>.
one or two values in <i>[0, 1]</i> which specify the x(and optionally y) adjustment (‘justification’) of thelabels, with 0 for left/bottom, 1 for right/top, and 0.5 forcentered.  On most devices values outside <i>[0, 1]</i> will alsowork.  See below.
a position specifier for the text.  If specified thisoverrides any <code>adj</code> value given.  Values of <code>1</code>,<code>2</code>, <code>3</code> and <code>4</code>, respectively indicatepositions below, to the left of, above and to the right ofthe specified <code>(x,y)</code> coordinates.
when <code>pos</code> is specified, this value controls thedistance (‘offset’) of the text label from the specifiedcoordinate in fractions of a character width.
<code>NULL</code> for the current font family, or a charactervector of length 2 for Hershey vector fonts.  The first element ofthe vector selects a typeface and the second element selects astyle.  Ignored if <code>labels</code> is an expression.
numeric <b>c</b>haracter <b>ex</b>pansion factor; multipliedby <code>par("cex")</code> yields the final character size.<code>NULL</code> and <code>NA</code> are equivalent to <code>1.0</code>.
the color and (if <code>vfont = NULL</code>) font to beused, possibly vectors.  These default to the values of the globalgraphical parameters in <code>par()</code>.
further graphical parameters (from <code>par</code>),such as <code>srt</code>, <code>family</code> and <code>xpd</code>.
numeric vectors of coordinates where the text<code>labels</code> should be written.  If the length of <code>x</code> and<code>y</code> differs, the shorter one is recycled.
a character vector or expression specifyingthe <em>text</em> to be written.  An attempt is made to coerce otherlanguage objects (names and calls) to expressions, and vectors andother classed objects to character vectors by <code>as.character</code>.If <code>labels</code> is longer than <code>x</code> and<code>y</code>, the coordinates are recycled to the length of <code>labels</code>.
one or two values in <i>[0, 1]</i> which specify the x(and optionally y) adjustment (‘justification’) of thelabels, with 0 for left/bottom, 1 for right/top, and 0.5 forcentered.  On most devices values outside <i>[0, 1]</i> will alsowork.  See below.
a position specifier for the text.  If specified thisoverrides any <code>adj</code> value given.  Values of <code>1</code>,<code>2</code>, <code>3</code> and <code>4</code>, respectively indicatepositions below, to the left of, above and to the right ofthe specified <code>(x,y)</code> coordinates.
when <code>pos</code> is specified, this value controls thedistance (‘offset’) of the text label from the specifiedcoordinate in fractions of a character width.
<code>NULL</code> for the current font family, or a charactervector of length 2 for Hershey vector fonts.  The first element ofthe vector selects a typeface and the second element selects astyle.  Ignored if <code>labels</code> is an expression.
numeric <b>c</b>haracter <b>ex</b>pansion factor; multipliedby <code>par("cex")</code> yields the final character size.<code>NULL</code> and <code>NA</code> are equivalent to <code>1.0</code>.
the color and (if <code>vfont = NULL</code>) font to beused, possibly vectors.  These default to the values of the globalgraphical parameters in <code>par()</code>.
further graphical parameters (from <code>par</code>),such as <code>srt</code>, <code>family</code> and <code>xpd</code>.
The main title (on top) using font, size (characterexpansion) and color <code>par(c("font.main", "cex.main", "col.main"))</code>.
Sub-title (at bottom) using font, size and color <code>par(c("font.sub", "cex.sub", "col.sub"))</code>.
X axis label using font, size and color <code>par(c("font.lab", "cex.lab", "col.lab"))</code>.
Y axis label, same font attributes as <code>xlab</code>.
specifying a value for <code>line</code> overrides thedefault placement of labels, and places them this many linesoutwards from the plot edge.
a logical value.  If <code>TRUE</code>, the titles areplaced in the outer margins of the plot.
further graphical parameters from <code>par</code>.  Usee.g., <code>col.main</code> or <code>cex.sub</code> instead of just <code>col</code>or <code>cex</code>.  <code>adj</code> controls the justification of the titles.<code>xpd</code> can be used to set the clipping region:this defaults to the figure region unless <code>outer = TRUE</code>,otherwise the device region and can only be increased.  <code>mgp</code>controls the default placing of the axis titles.
numeric vector
numeric of length 1 or 2.
logical; if <code>TRUE</code>, a warning is printed in caseof active log scale.
vectors containing the coordinates of the verticesof the polygon. See <code>xy.coords</code> for alternatives.
A numeric vector of values between -1 and 1, whichcontrol the shape of the spline relative to the control points.
A logical value indicating whether the spline isan open or a closed shape.
For open X-splines, a logical value indicating whetherthe first and last control points should be replicated for drawingthe curve. Ignored for closed X-splines.
logical: should the X-spline be drawn?  If false, a set ofline segments to draw the curve is returned, and nothing is drawn.
the color to draw the curve.   Use <code>border = NA</code> toomit borders.
the color for filling the shape. The default,<code>NA</code>, is to leave unfilled.
graphical parameters such as <code>lty</code>, <code>xpd</code>,<code>lend</code>, <code>ljoin</code> and <code>lmitre</code> can be given as arguments.
numeric vector
numeric of length 1 or 2.
logical; if <code>TRUE</code>, a warning is printed in caseof active log scale.
numeric vector
numeric of length 1 or 2.
logical; if <code>TRUE</code>, a warning is printed in caseof active log scale.
 a n by m matrix (or vector if m= 1)
 a m by p matrix (or vector if m = 1)
A rectangular matrix or data frame (probably a correlation matrix)
A data matrix or data frame or a vector depending upon the function.
A data matrix or data frame or a vector
The object returned from either a factor analysis (fa) or a principal components analysis (principal) 
round to digits
Abbreviate to minlength in lowerCor
Should pairwise deletion be done, or one of the other options to cor
Should we check for NA on the diagonal of a correlation matices
"pearson", "kendall", "spearman"
the current value of some looping variable
The maximum value the loop will achieve
what function is looping
The factor or components to be reversed keyed (by factor number)
flag=TRUE in char2numeric will flag those variables that had been numeric
Correct for the maximum possible information in this item
What is the base for the log function (default=2, e implies base = exp(1))
The name of a package (or list of packages) to be activated and then have all      the examples tested.
Find the dependencies for this package, e.g., psych
Which type of dependency to examine?
Look up the dependencies, and then test all of their examples
Do not test these dependencies
A dataframe or matrix to choose from
select from column with name from to column with name to
select from column from to column to
Any string of legitimate objects
A data.frame or matrix of data, or a covariance or correlation matrix 
If some items are to be reversed keyed, then either specify the direction of all items or just a vector of which items to reverse 
Any text string to identify this run
should means reflect the sum of items or the mean of the items.  The default value is means.
the number of categories/item to consider if reporting category frequencies.  Defaults to 10, passed to <code>link{response.frequencies}</code> 
The default is to remove missing values and find pairwise correlations
if TRUE, then find the first principal component and reverse key items with negative loadings.  Give a warning if this happens. 
Number of iterations if bootstrapped confidence intervals are desired
Delete items with no variance and issue a warning
Options to pass to the cor function: "everything", "all.obs", "complete.obs", "na.or.complete", or "pairwise.complete.obs". The default is "pairwise"
By default print a warning and a message that items were reversed. Suppress the message if warnings = FALSE
The value to use for confidence intervals
If using correlation matrices as input, by specify the number of observations, we can find confidence intervals
How should we impute missing data? Not at all, medians, or means
Number of items in the scale (to find r.bar)
width of confidence interval (pval/2 to 1-p.val/2) 
How many digits to use for alpha.ci
A data.frame or matrix of data, or a covariance or correlation matrix 
If some items are to be reversed keyed, then either specify the direction of all items or just a vector of which items to reverse 
Any text string to identify this run
should means reflect the sum of items or the mean of the items.  The default value is means.
the number of categories/item to consider if reporting category frequencies.  Defaults to 10, passed to <code>link{response.frequencies}</code> 
The default is to remove missing values and find pairwise correlations
if TRUE, then find the first principal component and reverse key items with negative loadings.  Give a warning if this happens. 
Number of iterations if bootstrapped confidence intervals are desired
Delete items with no variance and issue a warning
Options to pass to the cor function: "everything", "all.obs", "complete.obs", "na.or.complete", or "pairwise.complete.obs". The default is "pairwise"
By default print a warning and a message that items were reversed. Suppress the message if warnings = FALSE
The value to use for confidence intervals
If using correlation matrices as input, by specify the number of observations, we can find confidence intervals
How should we impute missing data? Not at all, medians, or means
Number of items in the scale (to find r.bar)
width of confidence interval (pval/2 to 1-p.val/2) 
How many digits to use for alpha.ci
An object from <code>setCor</code>,  <code>mediate</code>, <code>omega</code>, or <code>fa</code>.
More objects of the same type may be supplied here
a 4 x 1 vector or a 2 x2 table of TP, FP, FN, TN values (see below) May be counts or proportions.
Base Rate of successful outcomes or actual symptom (if t is not specified)
Selection Rate for  candidates or diagnoses (if t is not specified)
The Phi correlation coefficient between the predictor and the outcome variable(if t is not specified)
The number of Valid Positives (selected applicants who succeed; correct diagnoses).(if t and Phi are not specified)
Names of variables  1 and 2
"b" (both), "d" (decision theory), "a" (auc), or "n" neither
If True, then the noise distribution is centered at zero
Cell values of 0 are replaced with correct. (See <code>tetrachoric</code> for a discussion of why this is needed.)
The color choice for the VP and FP, defaults to =c("blue","red") but could be c("grey","black") if we want to avoid colors 
a vector, data.frame or matrix
the lag to use when finding <code>diff</code>     
A column of the x data.frame to be used for grouping
Should missing data be removed?
How to handle missing data in autoR
.
A correlation matrix or a data matrix suitable for factoring
Factors from 1 to nfactors will be extracted. If nfactors is a a vector, then just the number of factors specified in the vector will be extracted. (See examples).
Factor method.  The default is 'minres' factoring.  Although to be consistent with the original Goldberg article, we can also do principal components (fm ="pca").
What type of rotation to apply.  The default for factors is oblimin.  Unlike the normal call to pca where the default is varimax, in bassAckward the default for pca is oblimin.
What factor scoring algorithm should be used. The default is "tenBerge", other possibilities include "regression", or "bartlett"
If using any other scoring proceure that "tenBerge" should we adjust the correlations for the lack of factor score fit?
By default draw a bassAckward diagram
How to treat missing data.  Use='pairwise" finds pairwise complete correlations.
What kind of correlation to find.  The default is Pearson.
Should cases be weighted?  Default, no.
If finding tetrachoric or polychoric correlations, what correction should be applied to empty cells (defaults to .5)
The object returned by bassAckward
Number of digits to display on each path
Values greater than the abs(cut) will be displayed in a path diagram.
Labels may be taken from the output of the bassAckward function or can be specified as a list.
Margins are set to be slightly bigger than normal to allow for a cleaner diagram
The main title for the figure
if TRUE, show the items associated with the factors
if TRUE, sort the items by factor loadings
Should the graphic be drawn left to right or top to bottom
Should we show the correlations between factors at the same level
Rename and sort the factors at two lowest levels for a more pleasing figure
If TRUE, then show the percent variance accounted for by this factor.
Other graphic parameters (e.g., cex)
A correlation matrix or a data matrix suitable for factoring
Factors from 1 to nfactors will be extracted. If nfactors is a a vector, then just the number of factors specified in the vector will be extracted. (See examples).
Factor method.  The default is 'minres' factoring.  Although to be consistent with the original Goldberg article, we can also do principal components (fm ="pca").
What type of rotation to apply.  The default for factors is oblimin.  Unlike the normal call to pca where the default is varimax, in bassAckward the default for pca is oblimin.
What factor scoring algorithm should be used. The default is "tenBerge", other possibilities include "regression", or "bartlett"
If using any other scoring proceure that "tenBerge" should we adjust the correlations for the lack of factor score fit?
By default draw a bassAckward diagram
How to treat missing data.  Use='pairwise" finds pairwise complete correlations.
What kind of correlation to find.  The default is Pearson.
Should cases be weighted?  Default, no.
If finding tetrachoric or polychoric correlations, what correction should be applied to empty cells (defaults to .5)
The object returned by bassAckward
Number of digits to display on each path
Values greater than the abs(cut) will be displayed in a path diagram.
Labels may be taken from the output of the bassAckward function or can be specified as a list.
Margins are set to be slightly bigger than normal to allow for a cleaner diagram
The main title for the figure
if TRUE, show the items associated with the factors
if TRUE, sort the items by factor loadings
Should the graphic be drawn left to right or top to bottom
Should we show the correlations between factors at the same level
Rename and sort the factors at two lowest levels for a more pleasing figure
If TRUE, then show the percent variance accounted for by this factor.
Other graphic parameters (e.g., cex)
A data matrix or data frame depending upon the function.
Which variables (by name or location) should be the empirical target for bestScales and bestItems.  May be a separate object. 
Find unit weighted and correlation weighted scales from min.item to max.item
These are all summarized in the final.multi.valid object
Return items where the predicted r + delta * se of r &lt; max value
Return all values in abs(x[,c1]) &gt; cut.
When finding the weighted scales, use all items with zero order correlations &gt; wtd.cut
When finding the weighted scales, use the  wtd.n items thatare &gt; than wtd.cut
Raw data (find the correlations) or a correlation matrix (raw=FALSE)
if TRUE, sort by absolute value in bestItems
a data.frame with rownames corresponding to rownames in the f$loadings matrix or colnames of the data matrix or correlation matrix, and entries (may be multiplecolumns) of item content.
if TRUE, delete items with no variance
How many items make up an empirical scale, or (bestItems, show the bestn.items) 
Are the correlations with other criteria fair game for bestScales
When finding the best scales, and thus the correlations with the criteria,  how should we handle missing data?  The default is to drop missing items. (That is to say, to use pairwise complete correlations.)
How many times to perform a bootstrap estimate. Replicate the best item function n.iter times, sampling roughly 1-1/e  of the cases each time, and validating on the remaining 1/e of the cases for each iteration.
If folds &gt; 1, this is k-folds validation.  Note, set  n.iter &gt; 1  to do bootstrap aggregation, or set folds &gt; 1  to do k-folds.   
The proportion of replications needed to include items in the final best keys.
Select items based upon the log of the probability of the correlations.  This will only have an effect if the number of pairwise cases differs drastically from pair to pair.  
round to digits when showing output.
A data matrix or data frame depending upon the function.
Which variables (by name or location) should be the empirical target for bestScales and bestItems.  May be a separate object. 
Find unit weighted and correlation weighted scales from min.item to max.item
These are all summarized in the final.multi.valid object
Return items where the predicted r + delta * se of r &lt; max value
Return all values in abs(x[,c1]) &gt; cut.
When finding the weighted scales, use all items with zero order correlations &gt; wtd.cut
When finding the weighted scales, use the  wtd.n items thatare &gt; than wtd.cut
Raw data (find the correlations) or a correlation matrix (raw=FALSE)
if TRUE, sort by absolute value in bestItems
a data.frame with rownames corresponding to rownames in the f$loadings matrix or colnames of the data matrix or correlation matrix, and entries (may be multiplecolumns) of item content.
if TRUE, delete items with no variance
How many items make up an empirical scale, or (bestItems, show the bestn.items) 
Are the correlations with other criteria fair game for bestScales
When finding the best scales, and thus the correlations with the criteria,  how should we handle missing data?  The default is to drop missing items. (That is to say, to use pairwise complete correlations.)
How many times to perform a bootstrap estimate. Replicate the best item function n.iter times, sampling roughly 1-1/e  of the cases each time, and validating on the remaining 1/e of the cases for each iteration.
If folds &gt; 1, this is k-folds validation.  Note, set  n.iter &gt; 1  to do bootstrap aggregation, or set folds &gt; 1  to do k-folds.   
The proportion of replications needed to include items in the final best keys.
Select items based upon the log of the probability of the correlations.  This will only have an effect if the number of pairwise cases differs drastically from pair to pair.  
round to digits when showing output.
The data frame or matrix from which we specify the data
The variable to plot
a grouping variable.
horizontal (default) or vertical bars
colors for the two groups – defaults to blue and red
If specified, labels  for the dependent axis 
If TRUE, subtract the minimum value to make the numbers range from 0 to max -min.  This is useful if  showing heights
xaxis label if appropriate
y axis label otherwise
Further parameters to pass to the graphing program
A loadings matrix
A loadings matrix
A loadings matrix
Which rotation should be used?
the power to which to raise the varimax loadings (for Promax)
the power to which to raise the various loadings in Promax.
An arbitrary target matrix, can be composed of  any weights, but probably -1,0, 1 weights.  If missing, the target is the independent cluster structure determined by assigning every item to it's highest loaded factor.
A matrix of values (mainly 0s, some 1s, some NAs) to which the matrix is transformed.
An initial rotation matrix
parameter passed to optimization routine (GPForth in the GPArotation package and Promax)
parameter passed to optimization routine (GPForth in the GPArotation package) 
parameter passed to optimization routine (GPForth in the GPArotation package)
Other parameters to pass (e.g. to faRotate) include a Target list or matrix
A data set of numeric variables
What should the size of the subsets be? Defaults to NCOL (x)/4  
The standard correlation option.  "pairwise" allows for missing data
Defaults to Pearson correlations, alterative is polychoric.  
The output from <code>fa</code>, <code>fa.poly</code> or <code>principal</code>  with the scores=TRUE option
if NULL, draw the points with the plot character (pch) specified. To identify the data points, specify labels= 1:n  where n is the number of observations, or labels =rownames(data) where data was the data set analyzedby the factor analysis.
A vector of plot sizes of the data labels and of the factor labels
A main title for a two factor biplot
If plotting more than two factors, the color of the histogram of the factor scores
x limits of the scores. Defaults to plus/minus three sigma
y limits of the scores.Defaults to plus/minus three sigma
x limits of the factor loadings.Defaults to plus/minus 1.0
y limits of the factor loadings.Defaults to plus/minus 1.0
When plotting 3 (or more) dimensions, at what size should we switch from plotting "o" to plotting "."
an adjustment factor in the histogram
a vector of colors for the data points and for the factor loading labels
If plotting labels, what position should they be in? 1=below, 2=left,3 top, 4 right.If missing, then the assumption is that labels should be printed instead of data points.
 the length of the arrow head
The plotting character to use.  pch=16 gives reasonable size dots.pch="." gives tiny points.  If adding colors, use pch between 21 and 25. (see examples).
Plot just the specified factors
Do not label cases with abs(factor scores) &lt; cuts) (Actually,the  distance of the x and y scores from 0) 
Do not label variables with communalities in the two space &lt; cutl
A vector of a grouping variable for the scores.  Show a different color and symbol for each group.
If TRUE then do a smooth scatter plot (which shows the density rather than the data points). Only useful for large data sets.
If TRUE, draw arrows for the variables, and plot the scores.  If FALSE, then draw arrows for the scores and plot the variables.
more options for graphics
A loadings matrix
A loadings matrix
A loadings matrix
Which rotation should be used?
the power to which to raise the varimax loadings (for Promax)
the power to which to raise the various loadings in Promax.
An arbitrary target matrix, can be composed of  any weights, but probably -1,0, 1 weights.  If missing, the target is the independent cluster structure determined by assigning every item to it's highest loaded factor.
A matrix of values (mainly 0s, some 1s, some NAs) to which the matrix is transformed.
An initial rotation matrix
parameter passed to optimization routine (GPForth in the GPArotation package and Promax)
parameter passed to optimization routine (GPForth in the GPArotation package) 
parameter passed to optimization routine (GPForth in the GPArotation package)
Other parameters to pass (e.g. to faRotate) include a Target list or matrix
The input may be in one of four forms:

a) a data frame or matrix of dichotmous data (e.g., the lsat6 from the bock data set) or discrete numerical (i.e., not too many levels, e.g., the big 5 data set, bfi) for polychoric, or continuous for the case of biserial and polyserial. 

b) a 2 x 2 table of cell counts or cell frequencies (for tetrachoric) or an n x m table of cell counts  (for both tetrachoric and polychoric). 

c) a vector with elements corresponding to the four cell frequencies (for tetrachoric)

d) a vector with elements of the two marginal frequencies (row and column) and the comorbidity (for tetrachoric)
A (matrix or dataframe) of discrete scores. In the case of tetrachoric, these should be dichotomous, for polychoric not too many levels, for biserial they should be discrete (e.g., item responses) with not too many (&lt;10?) categories.
Correction value to use to correct for continuity in the case of zero entry cell for tetrachoric, polychoric, polybi, and mixed.cor.  See the examples for the effect of correcting versus not correcting for continuity.
if TRUE and if the tetrachoric/polychoric matrix is not positive definite, then apply a simple smoothing algorithm using cor.smooth
When finding pairwise correlations, should we use the global values of the tau parameter (which is somewhat faster), or the local values (global=FALSE)?  The local option is equivalent to the polycor solution, or to doing one correlation at a time. global=TRUE borrows information for one item pair from the other pairs using those item's frequencies.   This will make a difference in the presence of lots of missing data. With very small sample sizes with global=FALSE and correct=TRUE, the function will fail (for as yet underdetermined reasons. 
A no longer used option, kept to stop other packages from breaking.
A vector of length of the number of observations that specifies the weights to apply to each case.  The NULL case is equivalent of weights of 1 for all cases.  
 short=TRUE, just show the correlations, short=FALSE give the full hetcor output from John Fox's hetcor function if installed and if doing polychoric  Deprecated
std.err=FALSE does not report the standard errors (faster)  deprecated
Show the progress bar (if  not doing multicores)
 ML=FALSE  do a quick two step procedure, ML=TRUE, do longer maximum likelihood — very slow! Deprecated
Should missing data be deleted
Cases with no variance are deleted with a warning before proceeding.
The maximum number of categories to bother with for polychoric.  
The polytomous input to polydi
The dichotomous input to polydi
The tau values for the polytomous variables – if global=TRUE
The tau values for the dichotomous variables – if globabl = TRUE
The number of subjects to randomize.  Must be a multiple of the number of experimental conditions
The number of conditions for each IV.  Defaults to 2 levels for one IV.  If more than one IV, specify as a vector. If names are provided, they are used, otherwise the IVs are labeled as IV1 ... IVn
A rectangular matrix or data frame (probably a correlation matrix)
A data matrix or data frame or a vector depending upon the function.
A data matrix or data frame or a vector
The object returned from either a factor analysis (fa) or a principal components analysis (principal) 
round to digits
Abbreviate to minlength in lowerCor
Should pairwise deletion be done, or one of the other options to cor
Should we check for NA on the diagonal of a correlation matices
"pearson", "kendall", "spearman"
the current value of some looping variable
The maximum value the loop will achieve
what function is looping
The factor or components to be reversed keyed (by factor number)
flag=TRUE in char2numeric will flag those variables that had been numeric
Correct for the maximum possible information in this item
What is the base for the log function (default=2, e implies base = exp(1))
The name of a package (or list of packages) to be activated and then have all      the examples tested.
Find the dependencies for this package, e.g., psych
Which type of dependency to examine?
Look up the dependencies, and then test all of their examples
Do not test these dependencies
A dataframe or matrix to choose from
select from column with name from to column with name to
select from column from to column to
Any string of legitimate objects
 a Pearson r 
A Fisher z
Sample size for confidence intervals
degrees of freedom for t, or g
Confidence interval
Treat p as twotailed p
An effect size (Hedge's g)
A student's t value
A chi square
a vector of standard deviations to be used to convert a correlation matrix to a covariance matrix
 Number of variables to simulate 
Number of subjects to simulate 
 circum=TRUE is circumplex structure, FALSE is simple structure
simple structure or spherical structure in sim.spherical
the average loading on the first dimension 
Average loading on the second dimension 
the average loading on the third dimension in sim.spherical
Average loading on a general factor (default=0)
To introduce skew, how far off center is the first dimension 
To introduce skew on the second dimension
To introduce skew on the third dimension – if using sim.spherical
 continuous or categorical variables.  
 values less than low are forced to low (or 0 in item.dichot)
 values greater than high are forced to high (or 1 in item.dichot) 
Change all values less than cutpoint to cutpoint. 
What is the cutpoint 
number of variables for the first factor in sim.spherical
number of variables for the second and third factors in sim.spherical
a matrix or data frame
Values of old to be used as cut points when converting continuous values to categorical values
Which columns of old should be converted to categorical variables.  If missing, then all columns are converted.
a vector of sample sizes to simulate 
vector of the number of variables to simulate 
A data frame resulting from <code>simulation.circ</code> 
a vector of sample sizes to simulate 
vector of the number of variables to simulate 
A data frame resulting from <code>simulation.circ</code> 
 A matrix of loadings <code>loads</code> here 
 Are these loadings or a correlation matrix <code>loading</code> 
 Should the variables be sorted <code>sorting</code> 
A data frame or matrix of observed values with the time of day as the first value (unless specified in code) angle can be specified either as hours or as radians)
A subject identification variable
A matrix or data frame of data.  If specified, then angle and code are variable names (or locations).  See examples.
If doing comparisons by groups, specify the group code
.

The minimum number of observations per subject to use when finding split half reliabilities.
Reliabilities are based upon odd and even items (TRUE) or first vs. last half (FALSE).  Default is first and last half.
Although time of day is assumed to have a 24 hour rhythm, other rhythms may be fit. If calling cosinor.period, a range may be specified.
Which column number is the ID field
What specific subject number should be plotted for one variable
if TRUE, then plot the first variable (angle)
opti=TRUE: iterative optimization (slow) or opti=FALSE: linear fitting (fast)
If TRUE, measures are in 24 hours to the day, otherwise, radians
A set of external variables to correlate with the phase angles
Should missing data be removed?
Specify the range of the y axis if the defaults don't work
The label of the yaxis
Labels for the x axis
the title of the graphic
If doing multiple (spagetti) plots, set add = TRUE for the second and beyond plots
If doing multiple (spagetti) plots, set multi=TRUE for the first and subsequent plots
Pass the line type to graphics
any other graphic parameters to pass
A data frame or matrix of observed values with the time of day as the first value (unless specified in code) angle can be specified either as hours or as radians)
A subject identification variable
A matrix or data frame of data.  If specified, then angle and code are variable names (or locations).  See examples.
If doing comparisons by groups, specify the group code
.

The minimum number of observations per subject to use when finding split half reliabilities.
Reliabilities are based upon odd and even items (TRUE) or first vs. last half (FALSE).  Default is first and last half.
Although time of day is assumed to have a 24 hour rhythm, other rhythms may be fit. If calling cosinor.period, a range may be specified.
Which column number is the ID field
What specific subject number should be plotted for one variable
if TRUE, then plot the first variable (angle)
opti=TRUE: iterative optimization (slow) or opti=FALSE: linear fitting (fast)
If TRUE, measures are in 24 hours to the day, otherwise, radians
A set of external variables to correlate with the phase angles
Should missing data be removed?
Specify the range of the y axis if the defaults don't work
The label of the yaxis
Labels for the x axis
the title of the graphic
If doing multiple (spagetti) plots, set add = TRUE for the second and beyond plots
If doing multiple (spagetti) plots, set multi=TRUE for the first and subsequent plots
Pass the line type to graphics
any other graphic parameters to pass
A data frame or matrix of observed values with the time of day as the first value (unless specified in code) angle can be specified either as hours or as radians)
A subject identification variable
A matrix or data frame of data.  If specified, then angle and code are variable names (or locations).  See examples.
If doing comparisons by groups, specify the group code
.

The minimum number of observations per subject to use when finding split half reliabilities.
Reliabilities are based upon odd and even items (TRUE) or first vs. last half (FALSE).  Default is first and last half.
Although time of day is assumed to have a 24 hour rhythm, other rhythms may be fit. If calling cosinor.period, a range may be specified.
Which column number is the ID field
What specific subject number should be plotted for one variable
if TRUE, then plot the first variable (angle)
opti=TRUE: iterative optimization (slow) or opti=FALSE: linear fitting (fast)
If TRUE, measures are in 24 hours to the day, otherwise, radians
A set of external variables to correlate with the phase angles
Should missing data be removed?
Specify the range of the y axis if the defaults don't work
The label of the yaxis
Labels for the x axis
the title of the graphic
If doing multiple (spagetti) plots, set add = TRUE for the second and beyond plots
If doing multiple (spagetti) plots, set multi=TRUE for the first and subsequent plots
Pass the line type to graphics
any other graphic parameters to pass
A data frame or matrix of observed values with the time of day as the first value (unless specified in code) angle can be specified either as hours or as radians)
A subject identification variable
A matrix or data frame of data.  If specified, then angle and code are variable names (or locations).  See examples.
If doing comparisons by groups, specify the group code
.

The minimum number of observations per subject to use when finding split half reliabilities.
Reliabilities are based upon odd and even items (TRUE) or first vs. last half (FALSE).  Default is first and last half.
Although time of day is assumed to have a 24 hour rhythm, other rhythms may be fit. If calling cosinor.period, a range may be specified.
Which column number is the ID field
What specific subject number should be plotted for one variable
if TRUE, then plot the first variable (angle)
opti=TRUE: iterative optimization (slow) or opti=FALSE: linear fitting (fast)
If TRUE, measures are in 24 hours to the day, otherwise, radians
A set of external variables to correlate with the phase angles
Should missing data be removed?
Specify the range of the y axis if the defaults don't work
The label of the yaxis
Labels for the x axis
the title of the graphic
If doing multiple (spagetti) plots, set add = TRUE for the second and beyond plots
If doing multiple (spagetti) plots, set multi=TRUE for the first and subsequent plots
Pass the line type to graphics
any other graphic parameters to pass
A data frame or matrix of observed values with the time of day as the first value (unless specified in code) angle can be specified either as hours or as radians)
A subject identification variable
A matrix or data frame of data.  If specified, then angle and code are variable names (or locations).  See examples.
If doing comparisons by groups, specify the group code
.

The minimum number of observations per subject to use when finding split half reliabilities.
Reliabilities are based upon odd and even items (TRUE) or first vs. last half (FALSE).  Default is first and last half.
Although time of day is assumed to have a 24 hour rhythm, other rhythms may be fit. If calling cosinor.period, a range may be specified.
Which column number is the ID field
What specific subject number should be plotted for one variable
if TRUE, then plot the first variable (angle)
opti=TRUE: iterative optimization (slow) or opti=FALSE: linear fitting (fast)
If TRUE, measures are in 24 hours to the day, otherwise, radians
A set of external variables to correlate with the phase angles
Should missing data be removed?
Specify the range of the y axis if the defaults don't work
The label of the yaxis
Labels for the x axis
the title of the graphic
If doing multiple (spagetti) plots, set add = TRUE for the second and beyond plots
If doing multiple (spagetti) plots, set multi=TRUE for the first and subsequent plots
Pass the line type to graphics
any other graphic parameters to pass
A data frame or matrix of observed values with the time of day as the first value (unless specified in code) angle can be specified either as hours or as radians)
A subject identification variable
A matrix or data frame of data.  If specified, then angle and code are variable names (or locations).  See examples.
If doing comparisons by groups, specify the group code
.

The minimum number of observations per subject to use when finding split half reliabilities.
Reliabilities are based upon odd and even items (TRUE) or first vs. last half (FALSE).  Default is first and last half.
Although time of day is assumed to have a 24 hour rhythm, other rhythms may be fit. If calling cosinor.period, a range may be specified.
Which column number is the ID field
What specific subject number should be plotted for one variable
if TRUE, then plot the first variable (angle)
opti=TRUE: iterative optimization (slow) or opti=FALSE: linear fitting (fast)
If TRUE, measures are in 24 hours to the day, otherwise, radians
A set of external variables to correlate with the phase angles
Should missing data be removed?
Specify the range of the y axis if the defaults don't work
The label of the yaxis
Labels for the x axis
the title of the graphic
If doing multiple (spagetti) plots, set add = TRUE for the second and beyond plots
If doing multiple (spagetti) plots, set multi=TRUE for the first and subsequent plots
Pass the line type to graphics
any other graphic parameters to pass
A data frame or matrix of observed values with the time of day as the first value (unless specified in code) angle can be specified either as hours or as radians)
A subject identification variable
A matrix or data frame of data.  If specified, then angle and code are variable names (or locations).  See examples.
If doing comparisons by groups, specify the group code
.

The minimum number of observations per subject to use when finding split half reliabilities.
Reliabilities are based upon odd and even items (TRUE) or first vs. last half (FALSE).  Default is first and last half.
Although time of day is assumed to have a 24 hour rhythm, other rhythms may be fit. If calling cosinor.period, a range may be specified.
Which column number is the ID field
What specific subject number should be plotted for one variable
if TRUE, then plot the first variable (angle)
opti=TRUE: iterative optimization (slow) or opti=FALSE: linear fitting (fast)
If TRUE, measures are in 24 hours to the day, otherwise, radians
A set of external variables to correlate with the phase angles
Should missing data be removed?
Specify the range of the y axis if the defaults don't work
The label of the yaxis
Labels for the x axis
the title of the graphic
If doing multiple (spagetti) plots, set add = TRUE for the second and beyond plots
If doing multiple (spagetti) plots, set multi=TRUE for the first and subsequent plots
Pass the line type to graphics
any other graphic parameters to pass
A data frame or matrix of observed values with the time of day as the first value (unless specified in code) angle can be specified either as hours or as radians)
A subject identification variable
A matrix or data frame of data.  If specified, then angle and code are variable names (or locations).  See examples.
If doing comparisons by groups, specify the group code
.

The minimum number of observations per subject to use when finding split half reliabilities.
Reliabilities are based upon odd and even items (TRUE) or first vs. last half (FALSE).  Default is first and last half.
Although time of day is assumed to have a 24 hour rhythm, other rhythms may be fit. If calling cosinor.period, a range may be specified.
Which column number is the ID field
What specific subject number should be plotted for one variable
if TRUE, then plot the first variable (angle)
opti=TRUE: iterative optimization (slow) or opti=FALSE: linear fitting (fast)
If TRUE, measures are in 24 hours to the day, otherwise, radians
A set of external variables to correlate with the phase angles
Should missing data be removed?
Specify the range of the y axis if the defaults don't work
The label of the yaxis
Labels for the x axis
the title of the graphic
If doing multiple (spagetti) plots, set add = TRUE for the second and beyond plots
If doing multiple (spagetti) plots, set multi=TRUE for the first and subsequent plots
Pass the line type to graphics
any other graphic parameters to pass
A data frame or matrix of observed values with the time of day as the first value (unless specified in code) angle can be specified either as hours or as radians)
A subject identification variable
A matrix or data frame of data.  If specified, then angle and code are variable names (or locations).  See examples.
If doing comparisons by groups, specify the group code
.

The minimum number of observations per subject to use when finding split half reliabilities.
Reliabilities are based upon odd and even items (TRUE) or first vs. last half (FALSE).  Default is first and last half.
Although time of day is assumed to have a 24 hour rhythm, other rhythms may be fit. If calling cosinor.period, a range may be specified.
Which column number is the ID field
What specific subject number should be plotted for one variable
if TRUE, then plot the first variable (angle)
opti=TRUE: iterative optimization (slow) or opti=FALSE: linear fitting (fast)
If TRUE, measures are in 24 hours to the day, otherwise, radians
A set of external variables to correlate with the phase angles
Should missing data be removed?
Specify the range of the y axis if the defaults don't work
The label of the yaxis
Labels for the x axis
the title of the graphic
If doing multiple (spagetti) plots, set add = TRUE for the second and beyond plots
If doing multiple (spagetti) plots, set multi=TRUE for the first and subsequent plots
Pass the line type to graphics
any other graphic parameters to pass
A data frame or matrix of observed values with the time of day as the first value (unless specified in code) angle can be specified either as hours or as radians)
A subject identification variable
A matrix or data frame of data.  If specified, then angle and code are variable names (or locations).  See examples.
If doing comparisons by groups, specify the group code
.

The minimum number of observations per subject to use when finding split half reliabilities.
Reliabilities are based upon odd and even items (TRUE) or first vs. last half (FALSE).  Default is first and last half.
Although time of day is assumed to have a 24 hour rhythm, other rhythms may be fit. If calling cosinor.period, a range may be specified.
Which column number is the ID field
What specific subject number should be plotted for one variable
if TRUE, then plot the first variable (angle)
opti=TRUE: iterative optimization (slow) or opti=FALSE: linear fitting (fast)
If TRUE, measures are in 24 hours to the day, otherwise, radians
A set of external variables to correlate with the phase angles
Should missing data be removed?
Specify the range of the y axis if the defaults don't work
The label of the yaxis
Labels for the x axis
the title of the graphic
If doing multiple (spagetti) plots, set add = TRUE for the second and beyond plots
If doing multiple (spagetti) plots, set multi=TRUE for the first and subsequent plots
Pass the line type to graphics
any other graphic parameters to pass
A list of scale/cluster keys, or a  matrix of cluster keys 
A correlation matrix 
Either a correlation matrix or a raw data matrix
The output from statsBy.  Needed for scoreBy.
 TRUE shows both raw and corrected for attenuation correlations
Should squared multiple correlations be used as communality estimates for the correlation matrix? 
the smcs of the items may be passed into the function for speed, or calculated if SMC=TRUE 
if TRUE, impute missing scale correlations based upon the average interitem correlation, otherwise return NA.
Should the average r be used in correcting for overlap? smcs otherwise.
By default, just find statistics for items included in the scoring keys. This allows for finding scores from matrices with bad items if they are not included in the set of scoring keys.
The minimum number of pairwise observations needed to define a correlation (in scoreBy)
If the matrices used in scoreBy are not positive semi-definite, should we smooth them?
The original correlation matrix being fit 
 Cluster loadings – that is, the correlation of individual items with the clusters, corrected for item overlap 
The cluster structure 
 Should we fit the diagonal as well?  
 Cluster keys: a matrix of -1,0,1 cluster weights
 A correlation matrix 
Correct for reliability
Use the squared multiple correlation as a communality estimate, otherwise use the greatest correlation for each variable
A factor analysis or cluster analysis output including the loadings, or a matrix of item by cluster correlations. Or the output from a kmeans cluster analysis. 
 A vector of cluster membership 
 Assign items to clusters if the absolute loadings are &gt; cut 
If row.names exist they will be added to the plot, or, if they don't, labels can be specified.  If labels =NULL, and there are no row names, then variables are labeled by row number.)
 Any title
When plotting with factor loadings that are almost identical, it is sometimes useful to "jiggle" the points by jittering them. The default is to not jiggle.
if jiggle=TRUE, then how much should the points be jittered?
factor and clusters are shown with different pch values, starting at pch+1
Position of the text for labels for two dimensional plots. 1=below, 2 = left, 3 = above, 4= right
When adding labels to the points, should we show the points as well as the labels.  For many points, better to not show them, just the labels.
Specify the factor/clusters to plot
Any title – redundant with title
Further options to plot
A vector of cluster assignments or an object of class “kmeans" that contains a vector of clusters. 
A data frame or matrix  (can be specified in formula mode) 
Some dichotomous grouping variable (may be specified using formula input (see example))
Apply cohen.d for each of the subgroups defined by group2 (may be specified by formula as well)
If using formula mode and specifying a particular variable (see example)
An effect size
The amount of trimming used in finding the means and sds in d.robust
Total sample size (of groups 1 and 2)
Sample size of group 1 (if only one group)
Sample size of group 2 
Pool the two variances
Student's t statistic
1-alpha is the width of the confidence interval
Find the correlation rather covariance matrix
A correlation to be converted to an effect size
Mean of group 1
Mean of group 2
Standard deviation of group 1
Standard deviation of group 2
Should we sort (and if so, in which direction), the results of cohen.d? Directions are "decreasing" or  "increasing".
What are the items being described?
Find Mahalanobis distance in cohen.d.
A data frame or matrix  (can be specified in formula mode) 
Some dichotomous grouping variable (may be specified using formula input (see example))
Apply cohen.d for each of the subgroups defined by group2 (may be specified by formula as well)
If using formula mode and specifying a particular variable (see example)
An effect size
The amount of trimming used in finding the means and sds in d.robust
Total sample size (of groups 1 and 2)
Sample size of group 1 (if only one group)
Sample size of group 2 
Pool the two variances
Student's t statistic
1-alpha is the width of the confidence interval
Find the correlation rather covariance matrix
A correlation to be converted to an effect size
Mean of group 1
Mean of group 2
Standard deviation of group 1
Standard deviation of group 2
Should we sort (and if so, in which direction), the results of cohen.d? Directions are "decreasing" or  "increasing".
What are the items being described?
Find Mahalanobis distance in cohen.d.
A data frame or matrix  (can be specified in formula mode) 
Some dichotomous grouping variable (may be specified using formula input (see example))
Apply cohen.d for each of the subgroups defined by group2 (may be specified by formula as well)
If using formula mode and specifying a particular variable (see example)
An effect size
The amount of trimming used in finding the means and sds in d.robust
Total sample size (of groups 1 and 2)
Sample size of group 1 (if only one group)
Sample size of group 2 
Pool the two variances
Student's t statistic
1-alpha is the width of the confidence interval
Find the correlation rather covariance matrix
A correlation to be converted to an effect size
Mean of group 1
Mean of group 2
Standard deviation of group 1
Standard deviation of group 2
Should we sort (and if so, in which direction), the results of cohen.d? Directions are "decreasing" or  "increasing".
What are the items being described?
Find Mahalanobis distance in cohen.d.
Either a two by n data with categorical values from 1 to p or a p x p table.  If a data array, a table will be found.
A p x p matrix of weights.  If not specified, they are set to be 0 (on the diagonal) and (distance from diagonal) off the diagonal)^2. 
Number of observations (if input is a square matrix.
Probability level for confidence intervals
Specify the levels if some levels of x or y are completely missing.  See Examples
 A matrix of factor loadings or a list of matrices of factor loadings
 A second matrix of factor loadings (if x is a list, then y may be empty)
The midpoint of the items which should be used for reflection. NULL if to be found from the data. 
The exponent for the generalized distance. (r=1 is city block, r=2 is euclidian, r=100 or larger emphasize the largest distance )
Proportion of diagnostic category 1
Proportion of diganostic category 2 
Proportion of comorbidity (diagnostic category 1 and 2) 
Names of categories 1 and 2
 Number of variables to simulate 
Number of subjects to simulate 
 circum=TRUE is circumplex structure, FALSE is simple structure
simple structure or spherical structure in sim.spherical
the average loading on the first dimension 
Average loading on the second dimension 
the average loading on the third dimension in sim.spherical
Average loading on a general factor (default=0)
To introduce skew, how far off center is the first dimension 
To introduce skew on the second dimension
To introduce skew on the third dimension – if using sim.spherical
 continuous or categorical variables.  
 values less than low are forced to low (or 0 in item.dichot)
 values greater than high are forced to high (or 1 in item.dichot) 
Change all values less than cutpoint to cutpoint. 
What is the cutpoint 
number of variables for the first factor in sim.spherical
number of variables for the second and third factors in sim.spherical
a matrix or data frame
Values of old to be used as cut points when converting continuous values to categorical values
Which columns of old should be converted to categorical variables.  If missing, then all columns are converted.
How many subjects to simulate. If NULL, return the population model 
 A vector of factor loadings for the tests  
A vector of error variances – if NULL then error = 1 - loading 2
short=TRUE: Just give the test correlations, short=FALSE, report observed test scores as well as the implied pattern matrix
 continuous or categorical (discrete) variables.  
 values less than low are forced to low 
 values greater than high are forced to high  
If specified, and categorical = TRUE, will cut the resulting continuous output at the value of cuts
 A matrix of factor loadings or a list of matrices of factor loadings
 A second matrix of factor loadings (if x is a list, then y may be empty)
The midpoint of the items which should be used for reflection. NULL if to be found from the data. 
The exponent for the generalized distance. (r=1 is city block, r=2 is euclidian, r=100 or larger emphasize the largest distance )
The raw data, or a correlation matrix if not doing bootstrapping
If NULL, then the confidence intervals of the raw correlations are found.  Otherwise, composite scales are formed from the keys applied to the correlation matrix (in a logic similar to <code>cluster.cor</code> but without the bells and whistles) and the confidence of those composite scales intercorrelations. 
The number of iterations to bootstrap over. This will be very slow if using tetrachoric/or polychoric correlations. 
The upper and lower confidence region will include 1-p of the distribution.
If true, the correlation between overlapping scales is corrected for item overlap.
if FALSE, then find the correlations using the method specified (defaults to Pearson).  If TRUE, the polychoric correlations will be found (slowly).  Because the polychoric function uses multicores (if available), and corCi does as well, the number of cores used is options("mc.cores")^2. 
"pearson","spearman", "kendall"
Show the correlation plot with correlations scaled by the probability values.  To show the matrix in terms of the confidence intervals, use <code>cor.plot.upperLowerCi</code>.
What is the minlength to use in abbreviations of the cis? Defaults to 5
If finding confidence intervals from a correlation matrix, specify the n
Other parameters for axis (e.g., cex.axis to change the font size, srt to rotate the numbers in the plot)
A correlation matrix or the output of  <code>fa</code>, <code>principal</code> or <code>omega</code>.  
The object returned from  <code>cor.ci</code>  
Display the numeric value of the correlations. (As of September, 2019)  Defaults to TRUE.
Defaults to TRUE and colors use colors from the colorRampPalette from red through white to blue, but colors=FALSE will use a grey scale
The number of levels of shading to use.  Defaults to 51
A title. Defaults to "correlation plot"
The range of values to color – defaults to -1 to 1.  If specified as NULL, then defaults to min and max observed correlation.
A legend (key) to the colors is shown on the right hand side
if NULL, use column and row names, otherwise use labels
How many categories should be labelled in the legend?
restore the graphic parameters when exiting
scale the numbers by their pvals, categorizing them based upon the values of cuts
Scale the numbers by the categories defined by pval &lt; cuts
Should the size of the numbers be scaled by the significance level?
Select the subset of variables to plot
Character size.  Should be reduced a bit for large numbers of variables.
Allows for adjustment of the margins if using really long labels or big fonts
Should the upper off diagonal matrix be drawn, or left blank?
Should we show the diagonal?
By default, if given a non-symmetric matrix, we find the correlations using pair.wise complete and then show them.  If wanting to display a non-symmetric matrix, then specify that symmetric is FALSE
For those people who like to show the 'significance' of correlations by using magic astricks, set stars=TRUE
If showing significance, should we adjust for multiple tests?  The default is to show zero order probabilities below the diagonal and adjust these using the 'holm' correction above the diagonal. Use adjust = "none" if no adjustment is desired.adjust is also used in corPlotUpperLowerCI to show the nominal alpha confidence intervals (adjust =FALSE) or the Bonferonni adjusted confidence intervals (adjust=TRUE).
Orientation of the x axis labels (1 = horizontal, 0, parallel to axis, 2 perpendicular to axis)
Orientation of the y axis labels (1 = horizontal, 0, parallel to axis, 2 perpendicular to axis)
By default, draw this below the figure.  If xaxis=3, then it wil be drawn above the figure
A color gradient: e.g.,  gr &lt;- colorRampPalette(c("#B52127", "white", "#2171B5"))  will produce slightly more pleasing (to some) colors. See next to last example.
The degree of transparency (0 = completely, 1= not). Default value of .75 makes somewhat moreor pleasing plots when using numbers.
If not NULL, then the maximum number of characters to use in row/column labels
Other parameters for axis (e.g., cex.axis to change the font size, srt to   rotate the numbers in the plot)
A correlation matrix or the output of  <code>fa</code>, <code>principal</code> or <code>omega</code>.  
The object returned from  <code>cor.ci</code>  
Display the numeric value of the correlations. (As of September, 2019)  Defaults to TRUE.
Defaults to TRUE and colors use colors from the colorRampPalette from red through white to blue, but colors=FALSE will use a grey scale
The number of levels of shading to use.  Defaults to 51
A title. Defaults to "correlation plot"
The range of values to color – defaults to -1 to 1.  If specified as NULL, then defaults to min and max observed correlation.
A legend (key) to the colors is shown on the right hand side
if NULL, use column and row names, otherwise use labels
How many categories should be labelled in the legend?
restore the graphic parameters when exiting
scale the numbers by their pvals, categorizing them based upon the values of cuts
Scale the numbers by the categories defined by pval &lt; cuts
Should the size of the numbers be scaled by the significance level?
Select the subset of variables to plot
Character size.  Should be reduced a bit for large numbers of variables.
Allows for adjustment of the margins if using really long labels or big fonts
Should the upper off diagonal matrix be drawn, or left blank?
Should we show the diagonal?
By default, if given a non-symmetric matrix, we find the correlations using pair.wise complete and then show them.  If wanting to display a non-symmetric matrix, then specify that symmetric is FALSE
For those people who like to show the 'significance' of correlations by using magic astricks, set stars=TRUE
If showing significance, should we adjust for multiple tests?  The default is to show zero order probabilities below the diagonal and adjust these using the 'holm' correction above the diagonal. Use adjust = "none" if no adjustment is desired.adjust is also used in corPlotUpperLowerCI to show the nominal alpha confidence intervals (adjust =FALSE) or the Bonferonni adjusted confidence intervals (adjust=TRUE).
Orientation of the x axis labels (1 = horizontal, 0, parallel to axis, 2 perpendicular to axis)
Orientation of the y axis labels (1 = horizontal, 0, parallel to axis, 2 perpendicular to axis)
By default, draw this below the figure.  If xaxis=3, then it wil be drawn above the figure
A color gradient: e.g.,  gr &lt;- colorRampPalette(c("#B52127", "white", "#2171B5"))  will produce slightly more pleasing (to some) colors. See next to last example.
The degree of transparency (0 = completely, 1= not). Default value of .75 makes somewhat moreor pleasing plots when using numbers.
If not NULL, then the maximum number of characters to use in row/column labels
Other parameters for axis (e.g., cex.axis to change the font size, srt to   rotate the numbers in the plot)
A correlation matrix or a raw data matrix.
the minimum acceptable eigenvalue
.

Report all abs(residuals)  &gt; cut
A correlation matrix or a raw data matrix.
the minimum acceptable eigenvalue
.

Report all abs(residuals)  &gt; cut
A matrix or data frame
Variables to analyze
A set of weights (e.g., the sample sizes)
Standard deviations of the samples (used if weighting by standard errors)
Report correlations (the default) or covariances
A rectangular matrix or data frame (probably a correlation matrix)
A data matrix or data frame or a vector depending upon the function.
A data matrix or data frame or a vector
The object returned from either a factor analysis (fa) or a principal components analysis (principal) 
round to digits
Abbreviate to minlength in lowerCor
Should pairwise deletion be done, or one of the other options to cor
Should we check for NA on the diagonal of a correlation matices
"pearson", "kendall", "spearman"
the current value of some looping variable
The maximum value the loop will achieve
what function is looping
The factor or components to be reversed keyed (by factor number)
flag=TRUE in char2numeric will flag those variables that had been numeric
Correct for the maximum possible information in this item
What is the base for the log function (default=2, e implies base = exp(1))
The name of a package (or list of packages) to be activated and then have all      the examples tested.
Find the dependencies for this package, e.g., psych
Which type of dependency to examine?
Look up the dependencies, and then test all of their examples
Do not test these dependencies
A dataframe or matrix to choose from
select from column with name from to column with name to
select from column from to column to
Any string of legitimate objects
 a Pearson r 
A Fisher z
Sample size for confidence intervals
degrees of freedom for t, or g
Confidence interval
Treat p as twotailed p
An effect size (Hedge's g)
A student's t value
A chi square
a vector of standard deviations to be used to convert a correlation matrix to a covariance matrix
If square, then assumed to be a correlation matrix, otherwise the correlations are found first.
The raw data, or a correlation matrix if not doing bootstrapping
If NULL, then the confidence intervals of the raw correlations are found.  Otherwise, composite scales are formed from the keys applied to the correlation matrix (in a logic similar to <code>cluster.cor</code> but without the bells and whistles) and the confidence of those composite scales intercorrelations. 
The number of iterations to bootstrap over. This will be very slow if using tetrachoric/or polychoric correlations. 
The upper and lower confidence region will include 1-p of the distribution.
If true, the correlation between overlapping scales is corrected for item overlap.
if FALSE, then find the correlations using the method specified (defaults to Pearson).  If TRUE, the polychoric correlations will be found (slowly).  Because the polychoric function uses multicores (if available), and corCi does as well, the number of cores used is options("mc.cores")^2. 
"pearson","spearman", "kendall"
Show the correlation plot with correlations scaled by the probability values.  To show the matrix in terms of the confidence intervals, use <code>cor.plot.upperLowerCi</code>.
What is the minlength to use in abbreviations of the cis? Defaults to 5
If finding confidence intervals from a correlation matrix, specify the n
Other parameters for axis (e.g., cex.axis to change the font size, srt to rotate the numbers in the plot)
A data.frame or data matrix
By default, just return the correlation matrix.  If covar is TRUE, return a list containing the covariance matrix and the ML fit function.
If show=TRUE, then just show the patterns of missingness, but don't do the FIML.  Useful for understanding the process of fiml.
A correlation matrix or the output of  <code>fa</code>, <code>principal</code> or <code>omega</code>.  
The object returned from  <code>cor.ci</code>  
Display the numeric value of the correlations. (As of September, 2019)  Defaults to TRUE.
Defaults to TRUE and colors use colors from the colorRampPalette from red through white to blue, but colors=FALSE will use a grey scale
The number of levels of shading to use.  Defaults to 51
A title. Defaults to "correlation plot"
The range of values to color – defaults to -1 to 1.  If specified as NULL, then defaults to min and max observed correlation.
A legend (key) to the colors is shown on the right hand side
if NULL, use column and row names, otherwise use labels
How many categories should be labelled in the legend?
restore the graphic parameters when exiting
scale the numbers by their pvals, categorizing them based upon the values of cuts
Scale the numbers by the categories defined by pval &lt; cuts
Should the size of the numbers be scaled by the significance level?
Select the subset of variables to plot
Character size.  Should be reduced a bit for large numbers of variables.
Allows for adjustment of the margins if using really long labels or big fonts
Should the upper off diagonal matrix be drawn, or left blank?
Should we show the diagonal?
By default, if given a non-symmetric matrix, we find the correlations using pair.wise complete and then show them.  If wanting to display a non-symmetric matrix, then specify that symmetric is FALSE
For those people who like to show the 'significance' of correlations by using magic astricks, set stars=TRUE
If showing significance, should we adjust for multiple tests?  The default is to show zero order probabilities below the diagonal and adjust these using the 'holm' correction above the diagonal. Use adjust = "none" if no adjustment is desired.adjust is also used in corPlotUpperLowerCI to show the nominal alpha confidence intervals (adjust =FALSE) or the Bonferonni adjusted confidence intervals (adjust=TRUE).
Orientation of the x axis labels (1 = horizontal, 0, parallel to axis, 2 perpendicular to axis)
Orientation of the y axis labels (1 = horizontal, 0, parallel to axis, 2 perpendicular to axis)
By default, draw this below the figure.  If xaxis=3, then it wil be drawn above the figure
A color gradient: e.g.,  gr &lt;- colorRampPalette(c("#B52127", "white", "#2171B5"))  will produce slightly more pleasing (to some) colors. See next to last example.
The degree of transparency (0 = completely, 1= not). Default value of .75 makes somewhat moreor pleasing plots when using numbers.
If not NULL, then the maximum number of characters to use in row/column labels
Other parameters for axis (e.g., cex.axis to change the font size, srt to   rotate the numbers in the plot)
A correlation matrix or the output of  <code>fa</code>, <code>principal</code> or <code>omega</code>.  
The object returned from  <code>cor.ci</code>  
Display the numeric value of the correlations. (As of September, 2019)  Defaults to TRUE.
Defaults to TRUE and colors use colors from the colorRampPalette from red through white to blue, but colors=FALSE will use a grey scale
The number of levels of shading to use.  Defaults to 51
A title. Defaults to "correlation plot"
The range of values to color – defaults to -1 to 1.  If specified as NULL, then defaults to min and max observed correlation.
A legend (key) to the colors is shown on the right hand side
if NULL, use column and row names, otherwise use labels
How many categories should be labelled in the legend?
restore the graphic parameters when exiting
scale the numbers by their pvals, categorizing them based upon the values of cuts
Scale the numbers by the categories defined by pval &lt; cuts
Should the size of the numbers be scaled by the significance level?
Select the subset of variables to plot
Character size.  Should be reduced a bit for large numbers of variables.
Allows for adjustment of the margins if using really long labels or big fonts
Should the upper off diagonal matrix be drawn, or left blank?
Should we show the diagonal?
By default, if given a non-symmetric matrix, we find the correlations using pair.wise complete and then show them.  If wanting to display a non-symmetric matrix, then specify that symmetric is FALSE
For those people who like to show the 'significance' of correlations by using magic astricks, set stars=TRUE
If showing significance, should we adjust for multiple tests?  The default is to show zero order probabilities below the diagonal and adjust these using the 'holm' correction above the diagonal. Use adjust = "none" if no adjustment is desired.adjust is also used in corPlotUpperLowerCI to show the nominal alpha confidence intervals (adjust =FALSE) or the Bonferonni adjusted confidence intervals (adjust=TRUE).
Orientation of the x axis labels (1 = horizontal, 0, parallel to axis, 2 perpendicular to axis)
Orientation of the y axis labels (1 = horizontal, 0, parallel to axis, 2 perpendicular to axis)
By default, draw this below the figure.  If xaxis=3, then it wil be drawn above the figure
A color gradient: e.g.,  gr &lt;- colorRampPalette(c("#B52127", "white", "#2171B5"))  will produce slightly more pleasing (to some) colors. See next to last example.
The degree of transparency (0 = completely, 1= not). Default value of .75 makes somewhat moreor pleasing plots when using numbers.
If not NULL, then the maximum number of characters to use in row/column labels
Other parameters for axis (e.g., cex.axis to change the font size, srt to   rotate the numbers in the plot)
A matrix or dataframe 
A second matrix or dataframe with the same number of rows as x 
use="pairwise" is the default value and will do pairwise deletion of cases. use="complete" will select just complete cases. 
method="pearson" is the default value.  The alternatives to be passed to cor are "spearman" and "kendall".  These last two are much slower, particularly for big data sets. 
What adjustment for multiple tests should be used? ("holm", "hochberg", "hommel", "bonferroni", "BH", "BY", "fdr", "none"). See <code>p.adjust</code> for details about why to use "holm" rather than "bonferroni"). 
alpha level of confidence intervals
A correlation matrix
Number of observations if using corr.p. May be either a matrix (as returned from corr.test, or a scaler. Set to n - np if finding the significance of partial correlations. (See below). 
By default, confidence intervals are found.  However, this leads to a noticable slowdown of speed, particularly for large problems.  So, for just the rs, ts and ps, set ci=FALSE
What is the minimum length for abbreviations.  Defaults to 5.
By default, probabilities for method="spearman" and method="kendall" are found by normal theory.  If normal=="FALSE", then repetitive calls are made to cor.test.  This is much slower, but gives more accurate p values. exact is set to be FALSE which means that exact p values for small samples are not found given the problem of ties. 
A matrix or dataframe 
A second matrix or dataframe with the same number of rows as x 
use="pairwise" is the default value and will do pairwise deletion of cases. use="complete" will select just complete cases. 
method="pearson" is the default value.  The alternatives to be passed to cor are "spearman" and "kendall".  These last two are much slower, particularly for big data sets. 
What adjustment for multiple tests should be used? ("holm", "hochberg", "hommel", "bonferroni", "BH", "BY", "fdr", "none"). See <code>p.adjust</code> for details about why to use "holm" rather than "bonferroni"). 
alpha level of confidence intervals
A correlation matrix
Number of observations if using corr.p. May be either a matrix (as returned from corr.test, or a scaler. Set to n - np if finding the significance of partial correlations. (See below). 
By default, confidence intervals are found.  However, this leads to a noticable slowdown of speed, particularly for large problems.  So, for just the rs, ts and ps, set ci=FALSE
What is the minimum length for abbreviations.  Defaults to 5.
By default, probabilities for method="spearman" and method="kendall" are found by normal theory.  If normal=="FALSE", then repetitive calls are made to cor.test.  This is much slower, but gives more accurate p values. exact is set to be FALSE which means that exact p values for small samples are not found given the problem of ties. 
 A raw correlation matrix 
 Vector of reliabilities 
A correlation matrix. (If R1 is not rectangular, and cor=TRUE, the correlations are found). 
A correlation matrix.  If R2 is not rectangular, and cor=TRUE, the correlations are found. If R2 is NULL, then the test is just whether R1 is an identity matrix. 
Sample size of R1 
Sample size of R2 
Fisher z transform the correlations? 
By default, if the input matrices are not symmetric, they are converted to correlation matrices.  That is, they are treated as if they were the raw data.  If cor=FALSE, then the input matrices are taken to be correlation matrices.
A correlation matrix. (If R is not square, correlations are found and a warning is issued. 
Sample size (if not specified, 100 is assumed).
Will replace the diagonal of the matrix with 1s to make it a correlation matrix.
A correlation matrix. (If R1 is not rectangular, and cor=TRUE, the correlations are found). 
A correlation matrix.  If R2 is not rectangular, and cor=TRUE, the correlations are found. If R2 is NULL, then the test is just whether R1 is an identity matrix. 
Sample size of R1 
Sample size of R2 
Fisher z transform the correlations? 
By default, if the input matrices are not symmetric, they are converted to correlation matrices.  That is, they are treated as if they were the raw data.  If cor=FALSE, then the input matrices are taken to be correlation matrices.
A correlation matrix. (If R1 is not rectangular, and cor=TRUE, the correlations are found). 
A correlation matrix.  If R2 is not rectangular, and cor=TRUE, the correlations are found. If R2 is NULL, then the test is just whether R1 is an identity matrix. 
Sample size of R1 
Sample size of R2 
Fisher z transform the correlations? 
By default, if the input matrices are not symmetric, they are converted to correlation matrices.  That is, they are treated as if they were the raw data.  If cor=FALSE, then the input matrices are taken to be correlation matrices.
A correlation matrix. (If R1 is not rectangular, and cor=TRUE, the correlations are found). 
A correlation matrix.  If R2 is not rectangular, and cor=TRUE, the correlations are found. If R2 is NULL, then the test is just whether R1 is an identity matrix. 
Sample size of R1 
Sample size of R2 
Fisher z transform the correlations? 
By default, if the input matrices are not symmetric, they are converted to correlation matrices.  That is, they are treated as if they were the raw data.  If cor=FALSE, then the input matrices are taken to be correlation matrices.
A data frame or matrix of observed values with the time of day as the first value (unless specified in code) angle can be specified either as hours or as radians)
A subject identification variable
A matrix or data frame of data.  If specified, then angle and code are variable names (or locations).  See examples.
If doing comparisons by groups, specify the group code
.

The minimum number of observations per subject to use when finding split half reliabilities.
Reliabilities are based upon odd and even items (TRUE) or first vs. last half (FALSE).  Default is first and last half.
Although time of day is assumed to have a 24 hour rhythm, other rhythms may be fit. If calling cosinor.period, a range may be specified.
Which column number is the ID field
What specific subject number should be plotted for one variable
if TRUE, then plot the first variable (angle)
opti=TRUE: iterative optimization (slow) or opti=FALSE: linear fitting (fast)
If TRUE, measures are in 24 hours to the day, otherwise, radians
A set of external variables to correlate with the phase angles
Should missing data be removed?
Specify the range of the y axis if the defaults don't work
The label of the yaxis
Labels for the x axis
the title of the graphic
If doing multiple (spagetti) plots, set add = TRUE for the second and beyond plots
If doing multiple (spagetti) plots, set multi=TRUE for the first and subsequent plots
Pass the line type to graphics
any other graphic parameters to pass
A data frame or matrix of observed values with the time of day as the first value (unless specified in code) angle can be specified either as hours or as radians)
A subject identification variable
A matrix or data frame of data.  If specified, then angle and code are variable names (or locations).  See examples.
If doing comparisons by groups, specify the group code
.

The minimum number of observations per subject to use when finding split half reliabilities.
Reliabilities are based upon odd and even items (TRUE) or first vs. last half (FALSE).  Default is first and last half.
Although time of day is assumed to have a 24 hour rhythm, other rhythms may be fit. If calling cosinor.period, a range may be specified.
Which column number is the ID field
What specific subject number should be plotted for one variable
if TRUE, then plot the first variable (angle)
opti=TRUE: iterative optimization (slow) or opti=FALSE: linear fitting (fast)
If TRUE, measures are in 24 hours to the day, otherwise, radians
A set of external variables to correlate with the phase angles
Should missing data be removed?
Specify the range of the y axis if the defaults don't work
The label of the yaxis
Labels for the x axis
the title of the graphic
If doing multiple (spagetti) plots, set add = TRUE for the second and beyond plots
If doing multiple (spagetti) plots, set multi=TRUE for the first and subsequent plots
Pass the line type to graphics
any other graphic parameters to pass
A data frame or matrix of observed values with the time of day as the first value (unless specified in code) angle can be specified either as hours or as radians)
A subject identification variable
A matrix or data frame of data.  If specified, then angle and code are variable names (or locations).  See examples.
If doing comparisons by groups, specify the group code
.

The minimum number of observations per subject to use when finding split half reliabilities.
Reliabilities are based upon odd and even items (TRUE) or first vs. last half (FALSE).  Default is first and last half.
Although time of day is assumed to have a 24 hour rhythm, other rhythms may be fit. If calling cosinor.period, a range may be specified.
Which column number is the ID field
What specific subject number should be plotted for one variable
if TRUE, then plot the first variable (angle)
opti=TRUE: iterative optimization (slow) or opti=FALSE: linear fitting (fast)
If TRUE, measures are in 24 hours to the day, otherwise, radians
A set of external variables to correlate with the phase angles
Should missing data be removed?
Specify the range of the y axis if the defaults don't work
The label of the yaxis
Labels for the x axis
the title of the graphic
If doing multiple (spagetti) plots, set add = TRUE for the second and beyond plots
If doing multiple (spagetti) plots, set multi=TRUE for the first and subsequent plots
Pass the line type to graphics
any other graphic parameters to pass
 An input matrix, typically a data matrix ready to be correlated. 
 An optional second input matrix 
if TRUE, then report the diagonal, else fill the diagonals with NA
Other parameters to pass to describe
Count the number of item pairs with &lt;= min entries
Show the table of the item pairs that have entries &lt;= min
A keys.list specifying which items belong to which scale.
A correlation matrix to be described or imputed
Report the item pairs and numbers with cell sizes less than cut
If TRUE, then replace all NA correlations with the mean correlation for that  within or between scale
Should the upper off diagonal matrix be drawn, or left blank?
if NULL, use column and row names, otherwise use labels
A legend (key) to the colors is shown on the right hand side
How many categories should be labelled in the legend?
Defaults to FALSE and  will use a grey scale. colors=TRUE use colors \from the colorRampPalette from red through white to blue
If not NULL, then the maximum number of characters to use in row/column labels
Orientation of the x axis labels (1 = horizontal, 0, parallel to axis, 2 perpendicular to axis)
Orientation of the y axis labels (1 = horizontal, 0, parallel to axis, 2 perpendicular to axis)
A title. Defaults to "Relative Frequencies"
A color gradient: e.g.,  gr &lt;- colorRampPalette(c("#B52127", "white", "#2171B5"))  will produce slightly more pleasing (to some) colors. See next to last example of <code>corPlot</code>.  
Should we count the number of pairwise observations using pairwiseCount, or just plot the counts for a matrix?
Sample size of the number of variables to sample in pairwiseSample
Three options: 'formula' form (similar to lm) or either  the column numbers of the y set  (e.g., c(2,4,6) or the column names of the y set (e.g., c("Flags","Addition"). See notes and examples for each.
 either the column numbers of the x set (e.g., c(1,3,5) or the column names of the x set (e.g. c("Cubes","PaperFormBoard").  x and y may also be set by use of the formula style of lm.
A matrix or data.frame of correlations or, if not square, of raw data
A variance/covariance matrix, or a correlation matrix
The column name or numbers of the set of mediating variables (see <code>mediate</code>).
the column names or numbers of the set of covariates. 
If specified, then confidence intervals, etc. are calculated, not needed if raw data are given.
find the correlations using "pairwise" (default) or just use "complete" cases (to match the lm function)
Report standardized betas (based upon the correlations) or raw bs (based upon covariances)
z is specified should part (TRUE) or partial (default) correlations be found.
Are data from a correlation matrix or data matrix?
A vector of means for the data in matReg if giving matrix input
The title for setCor.diagram
if FALSE, then square matrices are treated as correlation matrices not as data matrices. In the rare case that one has as many cases as variables, then set square=TRUE.
The output of setCor may be used for drawing diagrams
How many digits should be displayed in the setCor.diagram?
Show the unweighted matrix correlation between the x and y sets?
zero center the x variables before finding the interaction terms.
p value of the confidence intervals for the beta coefficients
By default, setCor makes a plot of the results, set to FALSE to suppress the plot
Text size of boxes displaying the variables in the diagram
Text size of numbers in arrows, defaults to cex
Additional graphical parameters for setCor.diagram
The resulting object from setCor or bestScales
If using a bestScales object, which set of keys to use ("best.key","weights","optimal.key","optimal.weights")
Not yet implemented option to crossValidation
type="b" draws both lines and points
Orientation of the x labels (3 to make vertical)
When abbreviating x labels how many characters as a minimum
If not NULL, the draw a legend at the appropriate location
What plot character(s) to use in matPlot
colors to use in matPlot
line types to use in matPlot
What labels should be supplied to the lines in matPlot.  (Defaults to colnames of the variables.)
A rectangular matrix or data frame (probably a correlation matrix)
A data matrix or data frame or a vector depending upon the function.
A data matrix or data frame or a vector
The object returned from either a factor analysis (fa) or a principal components analysis (principal) 
round to digits
Abbreviate to minlength in lowerCor
Should pairwise deletion be done, or one of the other options to cor
Should we check for NA on the diagonal of a correlation matices
"pearson", "kendall", "spearman"
the current value of some looping variable
The maximum value the loop will achieve
what function is looping
The factor or components to be reversed keyed (by factor number)
flag=TRUE in char2numeric will flag those variables that had been numeric
Correct for the maximum possible information in this item
What is the base for the log function (default=2, e implies base = exp(1))
The name of a package (or list of packages) to be activated and then have all      the examples tested.
Find the dependencies for this package, e.g., psych
Which type of dependency to examine?
Look up the dependencies, and then test all of their examples
Do not test these dependencies
A dataframe or matrix to choose from
select from column with name from to column with name to
select from column from to column to
Any string of legitimate objects
number of actions to simuate 
length of time to simulate
a vector of cue strengths
matrix of associations between cues and action tendencies
inhibition matrix 
 Consummation matrix 
Initial values of action tendencies 
show actions, tendencies, both, or state diagrams 
display every fast time (skips  
A matrix of expectations
starting values of tendencies
a vector of starting value of tendencies
Allows a two x two graph to compare two plots
Allow the system to learn (self reinforce) over time
The strength of the reward for doing an action
number of actions to simuate 
length of time to simulate
a vector of cue strengths
matrix of associations between cues and action tendencies
inhibition matrix 
 Consummation matrix 
Initial values of action tendencies 
show actions, tendencies, both, or state diagrams 
display every fast time (skips  
A matrix of expectations
starting values of tendencies
a vector of starting value of tendencies
Allows a two x two graph to compare two plots
Allow the system to learn (self reinforce) over time
The strength of the reward for doing an action
A data frame or matrix  (can be specified in formula mode) 
Some dichotomous grouping variable (may be specified using formula input (see example))
Apply cohen.d for each of the subgroups defined by group2 (may be specified by formula as well)
If using formula mode and specifying a particular variable (see example)
An effect size
The amount of trimming used in finding the means and sds in d.robust
Total sample size (of groups 1 and 2)
Sample size of group 1 (if only one group)
Sample size of group 2 
Pool the two variances
