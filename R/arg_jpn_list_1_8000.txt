x
1,数値または複素数ベクトル、またはそのようなベクトルになることができるオブジェクト、またはメソッドが書かれている他のオブジェクト。
2,日付オブジェクト
3,日付オブジェクトまたは文字ベクトル。  (文字ベクトルは<code>as.Date</code>で変換されます。)
4,数値ベクトル（日単位）<em>または</em>クラス<code>"difftime"</code>のオブジェクトで、最も近い整数日に丸められる。
5,<code>==</code>、<code>!=</code>、<code>&lt;=</code>、<code>&gt;=</code>または<code>&gt;=</code>から一つ。
6,date-timeクラスの一つから、印刷または要約されるオブジェクトを指定する。
7,タイムゾーンフォーマットのために、<code>format.POSIXct</code>に渡されます。
8,数値または<code>NULL</code>で、印刷するエントリの最大数を指定する。  デフォルトでは、<code>NULL</code>の時、<code>getOption("max.print")</code>が使われます。
9,計算の有効桁数：最も重要な時間単位を正確に表現するのに十分な桁数でなければならない。
10,他のメソッドから、または他のメソッドに渡される更なる引数。
11,日付-時間オブジェクト
12,日付時刻オブジェクトまたは文字ベクトル。  (文字ベクトルは<code>as.POSIXct</code>で変換されます)。
13,数値ベクトル(秒単位)
14,<code>==</code>、<code>!=</code>、<code>&lt;</code>、<code>&lt;=</code>、<code>&gt;</code>または<code>&gt;=</code>から一つを選んでください。
15,シーケンスの開始値。
16,（最大）シーケンスの終了値。
17,同じ長さの<code>factor</code>s。
18,パッケージ名: シンボルまたはリテラル文字列.
19,変数名: シンボルまたはリテラル文字列。
20,パッケージ名: シンボルまたはリテラル文字列。
21,変数名: シンボルまたはリテラル文字列。
22,<code>raw</code>、<code>logical</code>または'数的'なベクトル（すなわち、<code>double</code>（クラス<code>numeric</code>）、<code>integer</code>および<code>complex</code>）、またはメソッドが書かれた対象。
23,クラス<code>"hexmode"</code>から継承したメソッドのためのオブジェクトです。
24,<code>NULL</code>または、使用する最小フィールド幅を指定する正の整数で、先頭のゼロでパディングする。
25,大文字と小文字のどちらを使用するかを示す論理（デフォルト）。
26,他のメソッドに渡される、または他のメソッドから渡される更なる引数。
27,クラス<code>"octmode"</code>を継承するメソッドのためのオブジェクトです。
28,<code>NULL</code>または、使用する最小フィールド幅を指定する正の整数で、先頭のゼロでパディングする。
29,他のメソッドに渡される、または他のメソッドから渡される更なる引数。
30,アトミックベクトル、シンボル、コール、またはメソッドが書かれた他のオブジェクト。
31,要素を抽出する、または要素を置き換えるためのオブジェクト。
32,抽出または置換する要素を指定する添字。  インデックスは<code>numeric</code>または<code>character</code>ベクトル、または空（欠損）または<code>NULL</code>である．  文字ベクトルは、オブジェクトの<code>names</code>（行列/配列の場合は<code>dimnames</code>）にマッチします。

33,<code>[</code>-indexing onlyの場合：<code>i</code>, <code>j</code>, <code>...</code>は，選択する要素／スライスを示す論理ベクトルであってよい。  <code>i</code>, <code>j</code>, <code>...</code>は、選択から外す要素/スライスを示す負の整数であることもできます。

34,<code>[</code> によって配列をインデックスするとき、単一の引数 <code>i</code> は <code>x</code> の次元と同じ数の列を持つ行列とすることができる。その結果は <code>i</code> の各行におけるインデックスの集合に対応する要素を持つベクトルとする。

35,インデックス値が<code>NULL</code>の場合、<code>integer(0)</code>であるかのように扱われます。
36,リテラル文字列または名前(バックティクォートされることもある)。  抽出の場合、これは通常(「環境」の項を参照)、オブジェクトの<code>names</code>と部分的に一致する。
37,Matrices and Arraysの場合。  <code>TRUE</code>の場合、結果は可能な限り低い次元に強制されます（例を参照してください）。  これは要素の抽出にのみ機能し、置換には機能しない。  詳細は<code>drop</code>を参照してください。
38,文字ベクトルによる抽出の際に、<code>[[</code>の部分一致の可能性を制御します（ほとんどのオブジェクトについて、ただし「環境」の項を参照）。  デフォルトは、部分マッチングなしです。  値<code>NA</code>は部分マッチングを許可するが、発生した場合は警告を発する。  値<code>FALSE</code>は、警告なしで部分マッチングを許可する。
39,一般的には配列のような<span style="font-family：クーリエニュー、クーリエ; color：#"><b>R</b></span>オブジェクトで、<code>x</code>と同様のクラスである。
40,あるオブジェクト
41,データフレーム
42,抽出または置換する要素。  <code>[</code>と<code>[[</code>では、これらは<code>numeric</code>または<code>character</code>、<code>[</code>のみでは、空または<code>logical</code>である。  数値は、<code>as.integer</code>により、ifとして整数に強制される。  <code>[</code>による置換の場合、logicalmatrixが許される。
43,リテラル文字列または名前(場合によってはバックティッククォート)。
44,論理的である。  <code>TRUE</code>の場合、結果は可能な限り低い次元に強制されます。  デフォルトは、onecolumnだけが残っている場合はドロップするが、1行だけが残っている場合は<b>ドロップしない</b>である。
45,適切な置換値: 必要であれば何度でも繰り返され、強制されることもある: Coercionセクションを参照のこと。  <code>NULL</code>の場合、singlecolumnが選択された場合、その列を削除する。
46,logical：<code>[</code>を参照し、カラム名にも適用される。
47,要約または印刷される<code>Date</code>オブジェクト。
48,計算のための有効桁数。
49,数値または<code>NULL</code>で、印刷されるエントリの最大数を指定する。  デフォルトでは、<code>NULL</code>の場合、<code>getOption("max.print")</code>が使われます。
50,他のメソッドから、または他のメソッドに渡される更なる引数。
51,date-timeまたはdateオブジェクト。
52,変換に使用されるオプションのタイムゾーン指定、主に<code>"POSIXlt"</code>オブジェクトの場合。
53,文字列。  結果の単位を指定します。  省略可能です。
54,文字列.  <code>units</code>と同様であるが、省略は不可である。
55,時間間隔を指定する文字列または数値。
56,文字 <code>tim</code> の形式を指定する: <code>strptime</code> を参照のこと。  デフォルトはロケール固有の時間フォーマットである。
57,クラス<code>"difftime"</code>を継承したオブジェクトです。
58,他のメソッドに渡す、または他のメソッドから渡される引数。
59,要素を抽出する、または要素を置換するオブジェクト。
60,抽出または置換される要素を指定する添字。  インデックスは<code>numeric</code>または<code>character</code>ベクトル、または空（欠損）または<code>NULL</code>である。  文字ベクトルは、オブジェクトの<code>names</code>（行列/配列の場合は<code>dimnames</code>）に一致します。

61,<code>[</code>-indexing onlyの場合：<code>i</code>, <code>j</code>, <code>...</code>は、選択する要素/スライスを示す論理ベクトルであることができます。  <code>i</code>, <code>j</code>, <code>...</code>は、選択から外す要素/スライスを示す負の整数であることもできます。

62,<code>[</code> によって配列をインデックスするとき、単一の引数 <code>i</code> は <code>x</code> の次元と同じ数の列を持つ行列とすることができる。その結果は <code>i</code> の各行におけるインデックスの集合に対応する要素を持つベクトルとする。

63,インデックス値が<code>NULL</code>の場合、<code>integer(0)</code>であるかのように扱われます。
64,リテラル文字列または名前(バックティクォートされることもある)。  抽出の場合、これは通常(「環境」の項を参照)、オブジェクトの<code>names</code>と部分的に一致する。
65,マトリックスとアレイの場合。  <code>TRUE</code>の場合、結果は可能な限り低い次元に強制されます（例を参照してください）。  これは要素の抽出にのみ機能し、置換には機能しない。  詳細は<code>drop</code>を参照してください。
66,文字ベクトルによる抽出の際に、<code>[[</code>の部分一致の可能性を制御します（ほとんどのオブジェクトについて、ただし「環境」の項を参照）。  デフォルトは、部分マッチングなしです。  値<code>NA</code>は部分マッチングを許可するが、発生した場合は警告を発する。  値<code>FALSE</code>は、警告なしで部分マッチングを許可する。
67,通常は配列のような<span style="font-family：クーリエニュー、クーリエ; color：#"><b>R</b></span>オブジェクトで、<code>x</code>と同様のクラスである。
68,係数
69,インデックスの指定 - <code>Extract</code>を参照してください。
70,論理的である。  真の場合、未使用のレベルはドロップされる。
71,character：レベルのセット。  ファクター値はcharacterに強制される。
72,オブジェクト、クラス<code>"hexmode"</code>から継承するメソッドのためのものです。
73,<code>NULL</code>または、使用する最小フィールド幅を指定する正の整数で、先頭のゼロでパディングする。
74,大文字と小文字のどちらを使用するかを示す論理（デフォルト）。
75,他のメソッドに渡される、または他のメソッドから渡される更なる引数。
76,要素を抽出する、または要素を置換するためのオブジェクト。
77,抽出または置換される要素を指定する添字。  インデックスは<code>numeric</code>または<code>character</code>ベクトル、または空（欠損）または<code>NULL</code>である。  文字ベクトルは、オブジェクトの<code>names</code>（行列/配列の場合は<code>dimnames</code>）に一致します。

78,<code>[</code>-indexing onlyの場合：<code>i</code>, <code>j</code>, <code>...</code>は，選択する要素／スライスを示す論理ベクトルであってよい。  <code>i</code>, <code>j</code>, <code>...</code>は、選択から外す要素/スライスを示す負の整数であることもできます。

79,<code>[</code> によって配列にインデックスを付ける場合、単一の引数 <code>i</code> は <code>x</code> の次元と同じ数の列を持つ行列とすることができる。その結果は <code>i</code> の各行におけるインデックスの集合に対応する要素を持つベクトルとする。

80,インデックス値が<code>NULL</code>の場合、<code>integer(0)</code>であるかのように扱われます。
81,リテラル文字列または名前(バックティクォートされることもある)。  抽出の場合、これは通常(「環境」の項を参照)、オブジェクトの<code>names</code>と部分的に一致する。
82,マトリックスとアレイの場合。  <code>TRUE</code>の場合、結果は可能な限り低い次元に強制されます(例を参照ください)。  これは要素の抽出にのみ機能し、置換には機能しない。  詳細は<code>drop</code>を参照してください。
83,文字ベクトルによる抽出の際に、<code>[[</code>の部分一致の可能性を制御します（ほとんどのオブジェクトについて、ただし「環境」の項を参照）。  デフォルトは、部分マッチングなしです。  値<code>NA</code>は部分マッチングを許可するが、発生した場合は警告を発する。  値<code>FALSE</code>は、警告なしで部分マッチングを許可する。
84,典型的には配列のような<span style="font-family：クーリエニュー、クーリエ; color：<code>x</code>と同様のクラスの<b>R</b></span>オブジェクトです。
85,任意の<span style="font-family：Courier New, Courier; color：<b>R</b></span> オブジェクト、典型的には<code>character</code>文字列のベクトルである。
86,オプションの<code>logical</code>は、<code>print()</code>に渡され、<code>print.default()</code>で使用され、右寄せされるべきかどうかを示しています。
87,クラス<code>"noquote"</code>のオブジェクトです。
88,次のメソッド、例えば<code>print</code>に渡される更なるオプション。
89,一般的な<code>c</code>関数との互換性のため。
90,適切な数値バージョン文字列を持つ文字ベクトル(「詳細」参照); <code>package_version</code>の場合、代わりに<code>R.version</code>によって得られるRversionオブジェクト。
91,無効な数値バージョンはエラーになるか(デフォルト)、ならないかを示す論理です。
92,クラス<code>"octmode"</code>を継承するメソッドのためのオブジェクトです。
93,<code>NULL</code>または、使用する最小フィールド幅を指定する正の整数で、先頭のゼロでパディングします。
94,他のメソッドに渡される、または他のメソッドから渡される追加の引数。
95,date-timeクラスの1つから、印刷または要約されるオブジェクトを指定します。
96,タイムゾーンフォーマットのために、<code>format.POSIXct</code>に渡される。
97,数値または<code>NULL</code>で、印刷されるエントリの最大数を指定します。  デフォルトでは、<code>NULL</code>の時、<code>getOption("max.print")</code>が使われます。
98,計算の有効桁数：最も重要でない時間単位を正確に表すのに十分な桁数であるべきです。
99,他のメソッドから、または他のメソッドに渡される更なる引数。
100,日付-時間オブジェクト
101,日付時間オブジェクトまたは文字ベクトル。  (文字ベクトルは<code>as.POSIXct</code>で変換されます)。
102,数値ベクトル(秒単位)
103,<code>==</code>、<code>!=</code>、<code>&lt;</code>、<code>&lt;=</code>、<code>&gt;</code>または<code>&gt;=</code>から一つを選ぶ。
104,date-timeクラスの1つから印刷または要約されるオブジェクト。
105,タイムゾーンフォーマットのために、<code>format.POSIXct</code>に渡されます。
106,数値または<code>NULL</code>で、印刷されるエントリの最大数を指定します。  デフォルトでは、<code>NULL</code>の時、<code>getOption("max.print")</code>が使われます。
107,計算の有効桁数：最も重要でない時間単位を正確に表現するのに十分な桁数でなければならない。
108,他のメソッドから、または他のメソッドに渡される更なる引数。
109,日付-時間オブジェクト
110,日付時間オブジェクトまたは文字ベクトル。  (文字ベクトルは<code>as.POSIXct</code>で変換されます)。
111,数値ベクトル(秒単位)
112,<code>==</code>、<code>!=</code>、<code>&lt;</code>、<code>&lt;=</code>、<code>&gt;</code>、<code>&gt;=</code>のいずれか一つ。
113,要素を抽出する、または要素を置換するためのオブジェクト。
114,抽出または置換される要素を指定する添字。  インデックスは<code>数値</code>または<code>文字</code>のベクトル、または空（欠損）または<code>NULL</code>である。  文字ベクトルは、オブジェクトの<code>names</code>（行列/配列の場合は<code>dimnames</code>）にマッチします。

115,<code>[</code>-indexing onlyの場合：<code>i</code>, <code>j</code>, <code>...</code>は、選択する要素/スライスを示す論理ベクトルであることができます。  <code>i</code>, <code>j</code>, <code>...</code>は、選択から外す要素/スライスを示す負の整数であることもできます。

116,配列を<code>[</code>でインデックスする場合、単一の引数<code>i</code>は<code>x</code>の次元と同じ数の列を持つ行列とすることができる。その結果は<code>i</code>の各行におけるインデックスの集合に対応する要素を持つベクトルとする。

117,インデックス値が<code>NULL</code>の場合、<code>integer(0)</code>であるかのように扱われます。
118,リテラル文字列または名前(バックティクォートされることもある)。  抽出の場合、これは通常(「環境」の項を参照)、オブジェクトの<code>names</code>と部分的に一致する。
119,マトリックスとアレイの場合。  <code>TRUE</code>の場合、結果は可能な限り低い次元に強制されます(例を参照ください)。  これは要素の抽出にのみ機能し、置換には機能しない。  詳細は<code>drop</code>を参照してください。
120,文字ベクトルによる抽出の際に、<code>[[</code>の部分一致を制御します(ほとんどのオブジェクトに対して。ただし、「環境」の項を参照)。  デフォルトは、部分マッチングなしです。  値<code>NA</code>は部分マッチングを許可するが、発生した場合は警告を発する。  値<code>FALSE</code>は、警告なしで部分マッチングを許可する。
121は、通常、配列のような<span style="font-family：クーリエニュー、クーリエ; color：#"><b>R</b></span>オブジェクトで、<code>x</code>と同様のクラスである。
122,因子（文字列を含む）として解釈できる1つまたは複数のオブジェクト、または構成要素がそのように解釈できるリスト（またはデータフレーム）。  (<code>as.table</code>では、特定のメソッドに渡される引数; <code>as.data.frame</code>では、未使用.)
123,<code>...</code>のすべての要因について削除するレベル.  itが<code>NA</code>を含まず、<code>useNA</code>が指定されていない場合、<code>useNA = "ifany"</code> を意味する。  非要素引数に対する解釈は'Details'を参照。
124,テーブルに<code>NA</code>の値を含めるかどうか。  省略可能です。
125,結果の次元に与える名前（<em>dimnames names</em>）を指定します。
126,デフォルトの<code>dnn</code>がどのように構成されるかを制御します。  詳細'を参照。
127,任意の<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>オブジェクト、または<code>as.data.frame</code>メソッドのクラス<code>"table"<code>を継承したオブジェクト。なお、<code>as.data.frame.table(x, *)</code> は、<code>array</code>を「整形する」ためにテーブル以外の <code>x</code> に対して明示的に呼ばれることがある。
128,データフレームの行名を与える文字ベクトル。
129,テーブルエントリーの列に使用される名前、通常はカウントである。
130,論理：分類因子は、因子（デフォルト）または文字ベクトルとして返されるべきか？
131,<code>provideDimnames</code>に渡される。
132,<code>cat</code>に渡される引数(<code>warnings()</code>用).
133,<code>warnings()</code>が返す<code>"warnings"</code>オブジェクト.
134,<code>"warnings"</code>または<code>"summary.warnings"</code>オブジェクト.
135,もし<code>missing</code>でなければ、<code>x</code>と同じ<code>length</code>で、メッセージに「ラベル」を付けるための<code>character</code>ベクタを指定します.  デフォルトは <code>paste0(seq_len(n), ": ")</code> for<i>n &gt;= 2</i> (<code>n &lt;- length(x)</code>) です。
136,メッセージが印刷される前に表示される文字列<code>cat()</code>。
137,要素を抽出する、または要素を置換するオブジェクト。
138,抽出または置換される要素を指定する添字。  インデックスは<code>numeric</code>または<code>character</code>ベクター、または空（欠損）または<code>NULL</code>である。  文字ベクトルは、オブジェクトの<code>names</code>（行列/配列の場合は<code>dimnames</code>）に一致します。

139,<code>[</code>-indexingの場合のみ：<code>i</code>, <code>j</code>, <code>...</code>は、選択する要素/スライスを示す論理ベクトルとすることができます。  <code>i</code>, <code>j</code>, <code>...</code>は、選択から外す要素/スライスを示す負の整数であることもできます。

140,<code>[</code> によって配列にインデックスを付ける場合、単一の引数 <code>i</code> は <code>x</code> の次元と同じ数の列を持つ行列とすることができる。その結果は <code>i</code> の各行におけるインデックスの集合に対応する要素を持つベクトルとする。

141,インデックス値が<code>NULL</code>の場合、<code>integer(0)</code>であるかのように扱われます。
142,リテラル文字列または名前(バックティクォートされることもある)。  抽出の場合、これは通常(「環境」の項を参照)、オブジェクトの<code>names</code>と部分的に一致する。
143,Matrices and Arraysの場合。  <code>TRUE</code>の場合、結果は可能な限り低い次元に強制されます（例参照）。  これは、要素の抽出にのみ機能し、置換には機能しません。  詳細は<code>drop</code>を参照してください。
144,文字ベクトルによる抽出の際に、<code>[[</code>の部分一致の可能性を制御します（ほとんどのオブジェクトについて、ただし「環境」の項を参照）。  デフォルトは、部分マッチングなしです。  値<code>NA</code>は部分マッチングを許可するが、発生した場合は警告を発する。  値<code>FALSE</code>は、警告なしで部分マッチングを許可する。
145は、通常、配列のような<span style="font-family：クーリエニュー、クーリエ; color：#"><b>R</b></span>オブジェクトで、<code>x</code>と同様のクラスである。
146,データフレーム。
147,抽出または置換する要素。  <code>[</code>と<code>[[</code>の場合、これらは<code>numeric</code>または<code>character</code>、<code>[</code>のみの場合、空または<code>logical</code>である。  数値は、<code>as.integer</code>により、ifとして整数に強制される。  <code>[</code>による置換の場合、logicalmatrixが許される。
148,リテラル文字列または名前(バックティッククォートの可能性もある)。
149,論理的なもの。  <code>TRUE</code>の場合、結果は可能な限り低い次元に強制されます。  デフォルトは、onecolumnだけが残っている場合はドロップするが、1行だけが残っている場合は<b>ドロップしない</b>である。
150,適切な置換値: 必要であれば何度でも繰り返され、強制されるかもしれない: Coercionセクションを参照のこと。  <code>NULL</code>の場合、singlecolumnが選択された場合、その列を削除する。
151,logical: <code>[</code>を参照、カラム名にも適用される。
152,要約または印刷される<code>Date</code>オブジェクト。
153,計算のための有効桁数。
154,数値または<code>NULL</code>で、印刷されるエントリーの最大数を指定する。  デフォルトでは、<code>NULL</code>の場合、<code>getOption("max.print")</code>が使われます。
155,他のメソッドから、または他のメソッドに渡される更なる引数。
156,係数
157,インデックスの指定 - <code>Extract</code>を参照してください。
158,論理的である。  真の場合、未使用のレベルはドロップされる。
159,character：レベルのセット。  ファクター値はcharacterに強制される。
160,a character vector with suitable numeric version strings (see'Details'); <code>package_version</code> の場合、代わりに <code>R.version</code> によって得られる Rversion オブジェクトがあります。
161,無効な数値バージョンはエラーになるか(デフォルト)、ならないかを示す論理です。
162,date-timeクラスの1つから、印刷または要約されるオブジェクト。
163,タイムゾーンフォーマットのために、<code>format.POSIXct</code>に渡される。
164,数値または<code>NULL</code>で、印刷されるエントリの最大数を指定します。  デフォルトでは、<code>NULL</code>の時、<code>getOption("max.print")</code>が使われます。
165,計算の有効桁数：最も重要でない時間単位を正確に表すのに十分な桁数であるべきです。
166,他のメソッドから、または他のメソッドに渡される更なる引数。
167,日付-時間オブジェクト
168,日付時間オブジェクトまたは文字ベクトル。  (文字ベクトルは<code>as.POSIXct</code>で変換されます)。
169,数値ベクトル(秒単位)
170,<code>==</code>、<code>!=</code>、<code>&lt;=</code>、<code>&gt;</code>または<code>&gt;=</code>から1つ。
171,date-timeクラスの一つから、印刷または要約されるオブジェクト。
172,タイムゾーンフォーマットのために、<code>format.POSIXct</code>に渡されます。
173,数値または<code>NULL</code>で、印刷されるエントリの最大数を指定します。  デフォルトでは、<code>NULL</code>の時、<code>getOption("max.print")</code>が使われます。
174,計算の有効桁数:最も重要でない時間単位を正確に表すのに十分な桁数であるべきです。
175,他のメソッドから、または他のメソッドに渡される更なる引数。
176,日付-時間オブジェクト
177,日付-時間オブジェクトまたは文字ベクトル。  (文字ベクトルは<code>as.POSIXct</code>で変換されます)。
178,数値ベクトル(秒単位)
179,<code>==</code>、<code>!=</code>、<code>&lt;=</code>、<code>&gt;</code>または<code>&gt;=</code>のいずれか1つ。
180,要素を抽出する、または要素を置換するためのオブジェクト。
181,抽出または置換される要素を指定する添字。  インデックスは、<code>数値</code>または<code>文字</code>ベクトル、または空（欠損）または<code>NULL</code>です。  文字ベクトルは、オブジェクトの<code>names</code>（行列/配列の場合は<code>dimnames</code>）にマッチします。

182,<code>[</code>-indexingの場合のみ：<code>i</code>, <code>j</code>, <code>...</code>は、選択する要素/スライスを示す論理ベクトルであることができます。  <code>i</code>, <code>j</code>, <code>...</code>は、選択から外す要素/スライスを示す負の整数であることもできます。

183,配列を<code>[</code>でインデックスする場合、単一の引数<code>i</code>は<code>x</code>の次元と同じ数の列を持つ行列とすることができる。その結果は<code>i</code>の各行におけるインデックスの集合に対応する要素を持つベクトルとする。

184,インデックス値が<code>NULL</code>の場合、<code>integer(0)</code>であるかのように扱われます。
185,リテラル文字列または名前(バックティクォートされることもある)。  抽出の場合、これは通常(「環境」の項を参照)、オブジェクトの<code>names</code>と部分的に一致する。
186,マトリックスとアレイの場合。  <code>TRUE</code>の場合、結果は可能な限り低い次元に強制されます（例を参照してください）。  これは要素の抽出にのみ機能し、置換には機能しない。  詳細は<code>drop</code>を参照してください。
187,文字ベクトルによる抽出の際に、<code>[[</code>の部分一致の可能性を制御します（ほとんどのオブジェクトに対して、ただし「環境」の項を参照）。  デフォルトは、部分マッチングなしです。  値<code>NA</code>は部分マッチングを許可するが、発生した場合は警告を発する。  値<code>FALSE</code>は、警告なしで部分マッチングを許可する。
188は、通常、配列のような<span style="font-family：クーリエニュー、クーリエ; color：#"><b>R</b></span>オブジェクトで、<code>x</code>と同様のクラスである。
189,データフレーム。
190,抽出または置換する要素。  <code>[</code>と<code>[[</code>では、これらは<code>numeric</code>または<code>character</code>、<code>[</code>のみでは、空または<code>logical</code>である。  数値は、<code>as.integer</code>により、ifとして整数に強制される。  <code>[</code>による置換の場合、logicalmatrixが許可される。
191,リテラル文字列または名前(バックティッククォートされている場合もある)。
192,論理的なもの。  <code>TRUE</code>の場合、結果は可能な限り低い次元に強制されます。  デフォルトは、onecolumnだけが残っている場合はドロップするが、1行だけが残っている場合は<b>ドロップしない</b>である。
193,適切な置換値: 必要なら何度でも繰り返され、強制されるかもしれない: Coercionセクションを参照のこと。  <code>NULL</code>の場合、singlecolumnが選択された場合、その列を削除する。
194,論理：<code>[</code>を参照し、カラム名に適用される。
195,係数
196,インデックスの指定 - <code>Extract</code>を参照してください。
197,論理的です。  真の場合、未使用のレベルはドロップされます。
198,character：レベルのセット。  ファクター値はcharacterに強制される。
199,適切な数値バージョン文字列を持つ文字ベクトル(「詳細」参照); <code>package_version</code> の場合、代わりに <code>R.version</code> によって得られる Rversion オブジェクト。
200,無効な数値バージョンはエラーになるか(デフォルト)、ならないかを示す論理。
201,date-timeクラスの1つから印刷または要約されるオブジェクトを指定します。
202,タイムゾーンフォーマットのために、<code>format.POSIXct</code>に渡される。
203,数値または<code>NULL</code>で、印刷するエントリの最大数を指定する。  デフォルトでは、<code>NULL</code>の時、<code>getOption("max.print")</code>が使われます。
204,計算の有効桁数:最も重要でない時間単位を正確に表すのに十分な桁数であるべきです。
205,他のメソッドから、または他のメソッドに渡される更なる引数。
206,日付-時間オブジェクト
207,日付-時間オブジェクトまたは文字ベクトル。  (文字ベクトルは<code>as.POSIXct</code>で変換されます)。
208,数値ベクトル(秒単位)
209,<code>==</code>、<code>!=</code>、<code>&lt;=</code>、<code>&gt;</code>または<code>&gt;=</code>のいずれか1つ。
210,要素を抽出する、または要素を置換するオブジェクト。
211,抽出または置換される要素を指定する添字。  インデックスは、<code>数値</code>または<code>文字</code>ベクトル、または空（欠損）または<code>NULL</code>です。  文字ベクトルは、オブジェクトの<code>names</code>（行列/配列の場合は<code>dimnames</code>）に一致します。

212,<code>[</code>-indexingの場合のみ：<code>i</code>，<code>j</code>，<code>...</code>は，選択する要素／スライスを示す論理ベクトルであってよい。  <code>i</code>, <code>j</code>, <code>...</code>は、選択から外す要素/スライスを示す負の整数であることもできます。

213,配列を<code>[</code>でインデックスする場合、単一の引数<code>i</code>は<code>x</code>の次元と同じ数の列を持つ行列とすることができる。その結果は<code>i</code>の各行におけるインデックスの集合に対応する要素を持つベクトルとする。

214,インデックス値が<code>NULL</code>の場合、<code>integer(0)</code>であるかのように扱われます。
215,リテラル文字列または名前(バックティクォートされることもある)。  抽出の場合、これは通常(「環境」の項を参照)、オブジェクトの<code>names</code>と部分的に一致する。
216,マトリックスとアレイの場合。  <code>TRUE</code>の場合、結果は可能な限り低い次元に強制されます(例を参照ください)。  これは要素の抽出にのみ機能し、置換には機能しない。  詳細は<code>drop</code>を参照してください。
217,文字ベクトルによる抽出の際に、<code>[[</code>の部分一致の可能性を制御します（ほとんどのオブジェクトに対して、ただし「環境」の項を参照）。  デフォルトは、部分マッチングなしです。  値<code>NA</code>は部分マッチングを許可するが、発生した場合は警告を発する。  値<code>FALSE</code>は、警告なしで部分マッチングを許可する。
218は、通常、配列のような<span style="font-family：クーリエニュー、クーリエ; color：#"><b>R</b></span>オブジェクトで、<code>x</code>と同様のクラスである。
219,データフレーム。
220,抽出または置換する要素。  <code>[</code>と<code>[[</code>では、これらは<code>numeric</code>または<code>character</code>、<code>[</code>のみでは、空または<code>logical</code>である。  数値は、<code>as.integer</code>により、ifとして整数に強制される。  <code>[</code>による置換の場合、logicalmatrixが許可される。
221,リテラル文字列または名前(バックティッククォートされている場合もある)。
222,論理的なもの。  <code>TRUE</code>の場合、結果は可能な限り低い次元に強制されます。  デフォルトは、onecolumnだけが残っている場合はドロップするが、1行だけが残っている場合は<b>not</b>ドロップしない。
223,適切な置換値: 必要なら何度でも繰り返され、強制されるかもしれない: Coercionセクションを参照のこと。  <code>NULL</code>の場合、singlecolumnが選択された場合、その列を削除する。
224,logical：<code>[</code>を参照し、カラム名に適用される。
225,要約または印刷される<code>Date</code>オブジェクト。
226,計算のための有効桁数。
227,数値または<code>NULL</code>で、印刷されるエントリの最大数を指定する。  デフォルトでは、<code>NULL</code>の場合、<code>getOption("max.print")</code>が使われます。
228,他のメソッドから、または他のメソッドに渡される更なる引数。
229,date-timeまたはdateオブジェクト。
230,変換に使用されるオプションのタイムゾーン指定、主に<code>"POSIXlt"</code>オブジェクトの場合。
231,文字列。  結果の単位を指定します。  省略可能です。
232,文字列.  <code>units</code>と同様であるが、省略は不可である。
233,時間間隔を指定する文字列または数値。
234,<code>tim</code>のフォーマットを指定する文字：<code>strptime</code>を参照して下さい。  デフォルトはロケール固有の時間フォーマットである。
235,クラス<code>"difftime"</code>を継承したオブジェクトです。
236,他のメソッドに渡す、または他のメソッドから渡される引数。
237,係数
238,インデックスの指定 - <code>Extract</code>を参照して下さい。
239,論理的。  真の場合、未使用のレベルはドロップされる。
240,character：レベルのセット。  ファクター値はcharacterに強制される。
241,適切な数値バージョン文字列を持つ文字ベクトル(「詳細」参照); <code>package_version</code> の場合、代わりに <code>R.version</code> によって得られる Rversion オブジェクト。
242,無効な数値バージョンはエラーになるか(デフォルト)、ならないかを示す論理です。
243,date-timeクラスの1つから、印刷または要約されるオブジェクト。
244,タイムゾーンフォーマットのために、<code>format.POSIXct</code>に渡される。
245,数値または<code>NULL</code>で、印刷されるエントリの最大数を指定します。  デフォルトでは、<code>NULL</code>の時、<code>getOption("max.print")</code>が使われます。
246,計算の有効桁数:最も重要でない時間単位を正確に表すのに十分な桁数であるべきである。
247,他のメソッドから、または他のメソッドに渡される更なる引数。
248,日付-時間オブジェクト
249,日付時間オブジェクトまたは文字ベクトル。  (文字ベクトルは<code>as.POSIXct</code>で変換されます)。
250,数値ベクトル(秒単位)
251,<code>==</code>、<code>!=</code>、<code>&lt;</code>、<code>&lt;=</code>、<code>&gt;</code>または<code>&gt;=</code>から一つを選んでください。
252,date-timeクラスの1つから印刷または要約されるオブジェクトを指定します。
253,タイムゾーンフォーマットのために、<code>format.POSIXct</code>に渡されます。
254,数値または<code>NULL</code>で、印刷されるエントリの最大数を指定します。  デフォルトでは、<code>NULL</code>の場合、<code>getOption("max.print")</code>が使われます。
255,計算の有効桁数:最も重要でない時間単位を正確に表すのに十分な桁数であるべきです。
256,他のメソッドから、または他のメソッドに渡される更なる引数。
257,日付-時間オブジェクト
258,日付時間オブジェクトまたは文字ベクトル。  (文字ベクトルは<code>as.POSIXct</code>で変換されます)。
259,数値ベクトル(秒単位)
260,<code>==</code>、<code>!=</code>、<code>&lt;=</code>、<code>&gt;</code>、<code>&gt;=</code>のいずれか1つ。
261,正式に定義された（S4）クラスからのオブジェクトです。
262,スロットの文字列名(引用符で囲むかどうか)です。  classof <code>object</code>の定義にあるスロットの名前でなければならない。
263,スロットの代替値で、<code>object</code>のクラスの定義でこのスロットに対して定義されたクラスと互換性があるクラスからのものでなければならない。
264,正式に定義された(S4)クラスからのオブジェクト。
265,スロットの文字列名、引用符で囲むかどうか。  <code>object</code>のクラスの定義にあるスロットの名前でなければならない。
266,スロットの置換値で、<code>object</code>のクラスの定義でこのスロットに対して定義されたクラスと互換性のあるクラスからのものでなければならない。
267,数値または複素数ベクトル、またはそのようなものになることができるオブジェクト、またはメソッドが書かれた他のオブジェクト。
268,date-timeまたはdateオブジェクト。
269,変換に使用されるオプションのタイムゾーン指定、主に<code>"POSIXlt"</code>オブジェクトの場合。
270,文字列。  結果の単位を指定します。  省略可能です。
271,文字列.  <code>units</code>と同様ですが、省略は不可です。
272,時間間隔を指定する文字列または数値。
273,<code>tim</code>のフォーマットを指定する文字：<code>strptime</code>を参照。  デフォルトは、ロケール固有の時間フォーマットである。
274,クラス<code>"difftime"</code>から継承したオブジェクト。
275,他のメソッドに渡す、または他のメソッドから渡される引数。
276,数値または複雑なベクトル、またはそのようになることができるオブジェクト、またはメソッドが書かれた他のオブジェクト。
277,date-timeまたはdateオブジェクト。
278,変換に使用されるオプションのタイムゾーン指定、主に<code>"POSIXlt"</code>オブジェクトのためのものです。
279,文字列。  結果の単位を指定します。  省略可能です。
280,文字列.  <code>units</code>と同様だが、省略はできない。
281,時間間隔を指定する文字列または数値。
282,character <code>tim</code>のフォーマットを指定する：<code>strptime</code>を参照。  デフォルトはロケール固有の時間フォーマットである。
283,クラス<code>"difftime"</code>を継承したオブジェクトです。
284,他のメソッドに渡す、または他のメソッドから渡される引数。
285,<code>raw</code>、<code>logical</code>または'number-like'ベクター（すなわち、<code>double</code>（クラス<code>numeric</code>）、<code>integer</code>、<code>complex</code>）、またはメソッドが書かれた対象。
286,クラス<code>"hexmode"</code>から継承したメソッドのためのオブジェクト。
287,<code>NULL</code>または、使用する最小フィールド幅を指定する正の整数で、先頭のゼロでパディングする。
288,大文字と小文字のどちらを使用するかを示す論理(デフォルト)。
289,他のメソッドに渡される、または他のメソッドから渡される更なる引数。
290,クラス<code>"octmode"</code>を継承するメソッドのための、オブジェクトです。
291,<code>NULL</code>または、使用する最小フィールド幅を指定する正の整数で、先頭のゼロでパディングします。
292,他のメソッドに渡される、または他のメソッドから渡される更なる引数。
293,<code>raw</code>、<code>logical</code> または 'number-like' ベクトル（すなわち、タイプ <code>double</code> (class <code>numeric</code>), <code>integer</code> and <code>complex</code>） またはメソッドが書かれているオブジェクトです。
294,数値または複素数の行列またはベクトル。
295,数値または複素数ベクトル、またはそのようなものになることができるオブジェクト、またはメソッドが書かれている他のオブジェクト。
296,数値または複素数ベクトルまたはそのようなものに変換することができるオブジェクト、またはそのためのメソッドが書かれている他のオブジェクト。
297,vectorまたは<code>NULL</code>：マッチングされる値。
298,vectorまたは<code>NULL</code>：マッチングされる値.ロングベクターはサポートされていません。
299,一致しない場合に返される値です。  これは<code>integer</code>に強制されることに注意してください。
300,マッチングできない値のベクトル。  このベクトル内の値と一致する<code>x</code>の値は、<code>nomatch</code>値が割り当てられます。  歴史的な理由から、<code>FALSE</code>は<code>NULL</code>と等価である。
301,関数<code>FUN</code>の第1引数と第2引数。
302,外側の製品に使用する関数で、<em>経由</em><code>match.fun</code>で見つかります(特別な場合<code>"*"<code>を除く).
303,<code>FUN</code>に渡されるオプションの引数。
304,ベクトルまたは配列。
305,ベクトルまたは配列.
306,関数。引用符で囲まれた文字列であることもある。
307,<code>X</code>と<code>Y</code>のdimnamesの積であるdimnamesを提供する。
308,<code>FUN</code>に渡されるオプションの引数。
309,数値または複素数ベクトル、またはそのようなものになることができるオブジェクト、またはメソッドが書かれた他のオブジェクト。
310,数値または複雑なベクトルまたはそのようなものに強制できるオブジェクト、またはそのためのメソッドが書かれた他のオブジェクト。
311,日付オブジェクト
312,日付オブジェクトまたは文字ベクトル。  (文字ベクトルは<code>as.Date</code>で変換されます)。
313,数値ベクトル（日単位）<em>または</em>クラス<code>"difftime"</code>のオブジェクトで、最も近い整数日に丸められる。
314,<code>==</code>、<code>!=</code>、<code>&lt;</code>、<code>&lt;=</code>、<code>&gt;</code>または<code>&gt;=</code>のいずれかである.
315,date-timeクラスの1つから印刷または要約されるオブジェクト。
316,タイムゾーンフォーマットのために、<code>format.POSIXct</code>に渡されます。
317,数値または<code>NULL</code>で、印刷されるエントリの最大数を指定します。  デフォルトでは、<code>NULL</code>の時、<code>getOption("max.print")</code>が使われます。
318,計算の有効桁数：最も重要でない時間単位を正確に表すのに十分な桁数であるべきです。
319,他のメソッドから、または他のメソッドに渡される更なる引数。
320,日付-時間オブジェクト
321,日付-時間オブジェクトまたは文字ベクトル。  (文字ベクトルは<code>as.POSIXct</code>で変換されます)。
322,数値ベクトル(秒単位)
323,<code>==</code>、<code>!=</code>、<code>&lt;</code>、<code>&lt;=</code>または<code>&gt;=</code>から一つ。
324,メソッドが書かれたアトミックベクトル、シンボル、コール、または他のオブジェクト。
325,変数名(引用されることもある)。
326,<code>x</code>に割り当てられる値。
327,変数名(引用されることもある).
328,<code>x</code>に代入される値.
329,メソッドが書かれたアトミックベクトル、シンボル、コール、または他のオブジェクト。
330,変数名(引用されることもある)。
331,<code>x</code>に代入される値。
332,アトミックベクトル、シンボル、コール、またはメソッドが書き込まれた他のオブジェクト。
333,アトミックベクター、シンボル、コール、またはメソッドの他のオブジェクトが書き込まれました。
334,原子ベクトル、シンボル、コール、またはその他のメソッド用のオブジェクトが書かれています。
335,<code>raw</code>、<code>logical</code>または'数的'ベクター（すなわち、<code>double</code>（クラス<code>numeric</code>）、<code>integer</code>、<code>complex</code>）またはメソッドを書いたオブジェクトがある。
336,クラス<code>"hexmode"</code>から継承したメソッドのための、オブジェクトです。
337,<code>NULL</code>または、使用される最小フィールド幅を指定する正の整数で、先頭のゼロでパディングする。
338,大文字と小文字のどちらを使用するかを示す論理(デフォルト)。
339,他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
340,クラス<code>"octmode"</code>を継承するメソッドのための、オブジェクトです。
341,<code>NULL</code>または、使用される最小フィールド幅を指定する正の整数で、先頭のゼロによってパディングされます。
342,他のメソッドに渡される、または他のメソッドから渡される更なる引数。
343,<code>raw</code>、<code>logical</code>または'数的'ベクター（すなわち、<code>double</code>（クラス<code>numeric</code>）、<code>integer</code>、<code>complex</code>）またはメソッドが書かれたオブジェクトのタイプです。
344,シンボリック表現。
345,要素を抽出する、または要素を置換するためのオブジェクト。
346,抽出または置換する要素を指定する添字。  インデックスは<code>numeric</code>または<code>character</code>ベクトル、または空（欠損）または<code>NULL</code>である．  文字ベクトルは、オブジェクトの<code>names</code>（行列/配列の場合は<code>dimnames</code>）にマッチします。

347,<code>[</code>-indexingの場合のみ：<code>i</code>, <code>j</code>, <code>...</code>は、選択する要素/スライスを示す論理ベクトルであることができます。  <code>i</code>, <code>j</code>, <code>...</code>は、選択から外す要素/スライスを示す負の整数であることもできます。

348,配列を<code>[</code>でインデックスする場合、単一の引数<code>i</code>は<code>x</code>の次元と同じ数の列を持つ行列とすることができる。その結果は<code>i</code>の各行におけるインデックスの集合に対応する要素を持つベクトルとする。

349,インデックス値が<code>NULL</code>の場合、<code>integer(0)</code>であるかのように扱われます。
350,リテラル文字列または名前(バックティクォートされることもある)。  抽出の場合、これは通常（「環境」の項を参照）オブジェクトの<code>names</code>と部分的に一致するものである。
351,マトリックスとアレイの場合。  <code>TRUE</code>の場合、結果は可能な限り低い次元に強制されます（例参照）。  これは、要素の抽出にのみ機能し、置換には機能しません。  詳細は<code>drop</code>を参照してください。
352,文字ベクトルによる抽出の際に、<code>[[</code>の部分一致の可能性を制御します（ほとんどのオブジェクトについて、ただし「環境」の項を参照）。  デフォルトは、部分マッチングなしです。  値<code>NA</code>は部分マッチングを許可するが、発生した場合は警告を発する。  値<code>FALSE</code>は、警告なしで部分マッチングを許可する。
353,典型的には配列のような<span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクトで、<code>x</code>と同様のクラスである。
354,a character vector with suitable numeric version strings (see'Details'); <code>package_version</code> for alternatively a Rversion object as obtained by <code>R.version</code>.
355,無効な数値バージョンはエラーになるか(デフォルト)、ならないかを示す論理です。
356,要素を抽出する、または要素を置換するためのオブジェクト。
357,抽出または置換する要素を指定する添字。  インデックスは<code>numeric</code>または<code>character</code>ベクトル、または空（欠損）または<code>NULL</code>である。  文字ベクトルは、オブジェクトの<code>names</code>（行列/配列の場合は<code>dimnames</code>）に一致します。

358,<code>[</code>-indexingの場合のみ：<code>i</code>, <code>j</code>, <code>...</code>は、選択する要素/スライスを示す論理ベクトルであることができます。  <code>i</code>, <code>j</code>, <code>...</code>は、選択から外す要素/スライスを示す負の整数であることもできます。

359,配列を<code>[</code>でインデックスする場合、単一の引数<code>i</code>は<code>x</code>の次元と同じ数の列を持つ行列とすることができます。その結果は<code>i</code>の各行におけるインデックスの集合に対応する要素を持つベクトルとなります。

360,インデックス値が<code>NULL</code>の場合、<code>integer(0)</code>であるかのように扱われます。
361,リテラル文字列または名前(バックティクォートされることもある)。  抽出の場合、これは通常(「環境」の項を参照)、オブジェクトの<code>names</code>と部分的に一致する。
362,マトリックスとアレイの場合。  <code>TRUE</code>の場合、結果は可能な限り低い次元に強制されます（例参照）。  これは、要素の抽出にのみ機能し、置換には機能しません。  詳細は<code>drop</code>を参照してください。
363,文字ベクトルによる抽出の際に、<code>[[</code>の部分一致の可能性を制御します（ほとんどのオブジェクトに対して、ただし「環境」の項を参照）。  デフォルトは、部分マッチングなしです。  値<code>NA</code>は部分マッチングを許可するが、発生した場合は警告を発する。  値<code>FALSE</code>は、警告なしで部分マッチングを許可します。
364,典型的には配列のような<span style="font-family：クーリエニュー、クーリエ; color：#"><b>R</b></span>オブジェクトで、<code>x</code>と同様のクラスである。
365,データフレーム。
366,抽出または置換する要素。  <code>[</code>と<code>[[</code>では、これらは<code>numeric</code>または<code>character</code>、<code>[</code>のみでは、空または<code>logical</code>である。  数値は、<code>as.integer</code>により、ifとして整数に強制される。  <code>[</code>による置換の場合、logicalmatrixが許可される。
367,リテラル文字列または名前(バックティッククォートの可能性もある)。
368,論理的なもの。  <code>TRUE</code>の場合、結果は可能な限り低い次元に強制されます。  デフォルトは、onecolumnだけが残っている場合はドロップするが、1行だけが残っている場合は<b>ドロップしない</b>というものである。
369,適切な置換値: 必要なら何度でも繰り返され、強制されるかもしれない: Coercionセクションを参照のこと。  <code>NULL</code>の場合、singlecolumnが選択された場合、その列を削除する。
370,論理：<code>[</code>を参照し、カラム名に適用される。
371,省略される名前の文字ベクトル、または<code>as.character</code>によって文字ベクトルに強制されるオブジェクトです。
372,略語の最小の長さを指定します。
373,論理的：小文字は最初に削除されるべきか？
374,論理的：ドット（<code>"."</code>）が付加されるべきか？
375,logical: <code>minlength</code>を厳密に守るべきか？ <code>strict = TRUE</code>とすると、<em>non</em>-uniquestringsを返すことがあるので注意する。
376,デフォルト<code>"left.keep"</code>で使われる方法を指定する文字列、下記の「詳細」参照。  部分的なマッチングを許可する。
377,論理：<code>names</code>（元のベクトルを含む）を返すべきか。
378,数値または<code>複素数</code>ベクトルまたは配列。
379,数値ベクトルまたは複素数ベクトル。
380,数値または複素数ベクトル
381,環境。
382,バインディングがロックされるべきかどうかを指定する論理。
383,名前オブジェクトまたは文字列。
384,0または1の引数をとる関数。
385,データのベクトルで、通常は少数の異なる値をとります。
386,オプションとして、<code>x</code>が取ったかもしれないユニークな値(文字列として)のベクトル。  デフォルトは、<code>as.character(x)</code>が取った値のユニークなセットで、<em>の昇順にソートされます。  なお、この集合は<code>sort(unique(x))</code>より小さいものとして指定できる。
387,<em>either</em>レベルのラベルのオプションの文字ベクトル(<code>exclude</code>のものを削除した後の<code>levels</code>と同じ順序で)、<em>or</em>長さ 1の文字列。 <code>labels</code>の重複する値は、同じ因子レベルに異なる<code>x</code>の値をマッピングするのによいです。
388,レベルのセットを形成するときに除外される値のベクトル。  これは、<code>x</code>と同じレベルセットを持つ因子であってもよいし、<code>文字</code>であるべきです。
389,レベルが（与えられた順序で）順序付けられたとみなされるべきかどうかを決定するための論理フラグ。
390,レベル数の上限; '詳細'を参照のこと。
391,(<code>ordered(.)</code>内)：<code>ordered</code>自身を除いた上記のいずれかである。
392,<code>NA</code>レベルが使用される場合のみ、すなわち<code>any(is.na(x))</code>の場合のみ追加されます.
393,トップレベルのタスクが成功裏に完了するたびに呼び出される関数です。  これは、<code>data</code>が指定されているかどうかによって、それぞれ5つまたは4つの引数で呼び出される。戻り値は、アクティブなコールバックのリストにコールバックを保持するか、それを破棄するかを示す論理値でなければならない。
394,指定された場合、これはコールバック関数<code>f</code>の呼び出しにおける5番目の引数である。
395,削除される内部コールバックリストの要素を特定する文字列または整数。整数インデックスは1ベース、すなわち最初の要素は1です。現在登録されているハンドラの名前は、<code>getTaskCallbackNames</code>を使って入手でき、また<code>addTaskCallback</code>へのコールで返されます。
396,文字：使用される名前。
397,マッチングされる空でない文字列。  <code>fixed = FALSE</code>の場合、これは拡張正規表現を含むべきである。可能であれば、<code>as.character</code>によって文字列に強制されます(Coerced)。
398,マッチを求める文字ベクトル.可能であれば、<code>as.character</code>によって文字ベクトルに強制されます。
399,マッチに許される最大距離。  整数、または<em>パターン</em>の長さに最大変換コストをかけた分数(対応する分数より小さくない最も小さい整数に置き換えられる)、または可能な構成要素のリストとして表現される。

400,マッチングコスト（一般化レーベンシュタイン距離）の最大数/端数
401,全変換（挿入、欠失、置換）の最大数/分率
402,挿入の最大数/分率
403,欠失の最大数/割合
404,置換の最大数/最小数
405,<code>cost</code>が与えられない場合、<code>all</code>は10%がデフォルトとなり、その他の変換数境界は<code>all</code>がデフォルトとなる。
406,a numeric vector or list with names partially matching<span class="samp">insertions</span>, <span class="samp">deletions</span> and <span class="samp">substitutions</span> gives the respective cost for computing the generalized Levenshteindistance, or <code>NULL</code> (default) indicating using unit cost for all 3 possible transformations.可能であれば、<code>as.integer</code>で整数に強制されます。
407,もし<code>FALSE</code>なら、パターンマッチは<em>casesensitive</em>で、もし<code>TRUE</code>なら、マッチング中に大文字小文字は無視される。
408,もし<code>FALSE</code>なら、決定されたマッチの（整数）インデックスを含むベクトルを返し、もし<code>TRUE</code>なら、マッチ要素自体を含むavectorを返す。
409,論理的である。  <code>TRUE</code> (デフォルト)の場合、パターンは文字通り(そのまま)マッチングされます。  それ以外の場合は、正規表現としてマッチングされます。
410,論理。マルチバイトロケールの場合、比較は文字単位（デフォルト）かバイト単位か。
411,マッチングされる空でない文字列。  <code>fixed=FALSE</code>の場合、これは拡張正規表現を含む必要があります。可能であれば、<code>as.character</code>によって文字列に強制されます。
412,マッチを求める文字ベクトル.可能であれば、<code>as.character</code>によって文字ベクトルに強制される(Coerced by <code>as.character</code> to a character vector to possible).
413,マッチに許される最大距離。  整数、または<em>パターン</em>の長さに最大変換コストをかけた分数(対応する分数より小さくない最も小さい整数に置き換えられる)、または可能な成分を含むリストとして表現される。

414,一致コスト(一般化レーベンシュタイン距離)の最大数/端数
415,全変換(挿入、削除、置換)の最大数/百分率
416,挿入の最大数/百分率
417,欠失の最大数/割合
418,置換の最大数/分数
419,<code>cost</code>が与えられない場合、<code>all</code>は10%がデフォルトで、他の変換数境界は<code>all</code>がデフォルトとなる.コンポーネント名は省略することができる。
420,一般化レーベンシュテ距離を計算するためのそれぞれのコストを与える<span class="samp">挿入</span>、<span class="samp">削除</span>、<span class="samp">置換</span>と一部一致する名前の数値ベクトルまたはリスト、または<code>NULL</code>（デフォルト）3つすべての可能な変換に対してユニットコストを使うことを示します。可能であれば、<code>as.integer</code>で整数に強制されます。
421,もし<code>FALSE</code>なら、パターンマッチは<em>casesensitive</em>で、もし<code>TRUE</code>なら、マッチング中に大文字小文字は無視される。
422,もし<code>FALSE</code>なら、決定されたマッチの（整数）インデックスを含むベクトルが返され、もし<code>TRUE</code>なら、マッチ要素自体を含むアベクターが返される。
423,論理的である。  <code>TRUE</code> (デフォルト)の場合、パターンは文字通り(そのまま)マッチングされます。  それ以外の場合は、正規表現としてマッチングされます。
424,論理。マルチバイトロケールでは、比較は文字単位（デフォルト）かバイト単位か。
425,オブジェクト、場合によっては名前付き。
426,強制またはテストされるオブジェクト。
427,すべての値をコピーするか（デフォルト）名前がドットで始まらないものだけをコピーするかを示す論理。
428,結果のリストの<code>names</code>がソートされるべきかどうかを示す論理です（ますます）。  これはややコストがかかるが、環境の比較には有用であることに注意されたい。
429,0個以上の論理ベクトル。  長さがゼロの他のオブジェクトは無視され、残りはどんなクラスも無視した論理に強制される。
430,論理的。  真の場合、<code>NA</code>値は、結果が計算される前に削除されます。
431,<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>オブジェクトです。
432,他の<span style="font-family：Courier New, Courier; color：<code>target</code>と比較される、<b>R</b></span>オブジェクト。
433,数値比較のための異なる方法、特に次の2つの引数をさらに指定します：
434,numeric <i>≥</i> 0. <code>tolerance</code>より小さい差は報告されません.  デフォルト値は<code>1.5e-8</code>に近い値である。
435,<code>NULL</code> または数値 &gt; 0, 典型的には長さ1または<code>length(target)</code>のものです。  詳細'を参照。
436,平均（絶対または相対）差を計算するときに、<code>target == current</code>cases をカウントすべきかどうかを示す論理。  デフォルトの<code>FALSE</code>は、<code>target</code>と<code>current</code>が数カ所でしか違わない場合、誤解を招く恐れがあります; 豊富な例を参照してください。
437,2つの引数、<code>err</code>、相対エラー、絶対エラー、または拡大縮小エラー、および<code>what</code>、エラーの<em>種類</em>を示す文字列の<code>function</code>;例えば、相対エラーと絶対エラーを異なるフォーマットするために使用することができる。
438,論理的には、<code>target</code>と<code>current</code>の<code>attributes</code>（名前以外）が比較されるべきかどうか示すものです。
439,logical <code>list</code> 比較が、整数インデックスではなく、名前によって（一致する場合）異なるコンポーネントを報告すべきかどうかを示すものです。  これは<code>...</code>の後に来るので、フルネームで指定されなければならないことに注意してください。
440,<code>ls</code>に渡される論理で、「隠された」オブジェクトも環境で考慮されるべきかどうかを示します。
441,<code>environment</code>メソッドの場合：<code>logical</code>は、「約束が強制されるべきか」、すなわち、典型的な形式的な関数引数が比較のために評価されるかを示す。  false の場合、2つの環境のオブジェクトの <code>names</code> だけが等しいかどうかチェックされます。
442,関数の<code>environment()</code>も比較することを要求する論理。2つの<code>nls()</code>フィットを比較するときなど、予期しないケースで<code>check.environment=FALSE<code>にする必要があるかもしれません。
443,論理的には、<code>target</code> と <code>current</code> の <code>"tzone"</code> 属性が比較されるべきかどうかを示します。
444,<code>target</code>と<code>current</code>の<code>names(.)</code>を比較するかどうかを論理的に示す。
445,<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>オブジェクトである。
446,他の<span style="font-family：Courier New, Courier; color：<code>ターゲット</code>と比較される、<b>R</b></span>オブジェクト。
447,数値比較のための異なる方法、特に以下の2つの引数をさらに指定します：
448,数値 <i>≥</i> 0. <code>tolerance</code>より小さい差は報告されない。  デフォルト値は<code>1.5e-8</code>に近い値である。
449,<code>NULL</code>または数値 &gt; 0、典型的には長さ1または<code>length(target)</code>である。  詳細'を参照。
450,平均（絶対または相対）差を計算するときに、<code>target == current</code>ケースをカウントすべきかどうかを示す論理。  デフォルトの<code>FALSE</code>は、<code>target</code>と<code>current</code>が数カ所でしか違わない場合、誤解を招く恐れがあります; 詳細な例を参照して下さい。
451,2つの引数、<code>err</code>、相対エラー、絶対エラー、または拡大縮小エラー、および<code>what</code>、エラーの<em>種類</em>を示す文字列の<code>function</code>;例えば、相対エラーと絶対エラーを異なるフォーマットするために使用することができる。
<code>target</code>と<code>current</code>の<code>attributes</code>(名前以外)を比較するかどうかを示す452,logical。
453,logical <code>list</code> 比較が、整数インデックスではなく、名前によって（一致する場合）異なるコンポーネントを報告すべきかどうかを示すものです。  これは<code>...</code>の後に来るので、フルネームで指定されなければならないことに注意してください。
454,<code>ls</code>に渡される論理は、「隠された」オブジェクトも環境において考慮されるべきかどうかを示します。
455,<code>environment</code>メソッドに渡されます：<code>logical</code>は、"約束が強制されるべきかどうか"、すなわち、典型的な形式的な関数引数が比較のために評価されるかを示す。  false の場合、2つの環境のオブジェクトの <code>names</code> だけが等しいかどうかチェックされます。
456,関数の<code>environment()</code>も比較することを要求する論理。2つの<code>nls()</code>フィットを比較するときなど、予期しないケースで<code>check.environment=FALSE</code>とする必要があるかもしれません。
457,logical <code>target</code> と <code>current</code> の <code>"tzone"</code> 属性が比較されるべきかどうかを指定します。
458,<code>target</code>と<code>current</code>の<code>names(.)</code>を比較するかどうかを論理的に示す。
459,<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>オブジェクトです。
460,他の<span style="font-family：Courier New, Courier; color：<code>target</code>と比較される<b>R</b></span>オブジェクト。
461,数値比較のための異なる方法、特に以下の2つの引数をさらに指定します：
462,numeric <i>≥</i> 0. <code>tolerance</code>より小さい差は報告されない。  デフォルト値は<code>1.5e-8</code>に近い値である。
463,<code>NULL</code>または数値 &gt; 0、典型的には長さ1または<code>length(target)</code>である。  詳細'を参照。
464,平均（絶対または相対）差を計算するときに、<code>target == current</code>ケースをカウントすべきかどうかを示す論理。  デフォルトの<code>FALSE</code>は、<code>target</code>と<code>current</code>が数カ所でしか違わない場合、誤解を招く可能性があります; 広範な例を参照してください。
465,2つの引数、<code>err</code>、相対エラー、絶対エラー、または拡大縮小エラー、および<code>what</code>、エラーの<em>種類</em>を示す文字列の<code>function</code>;例えば、相対エラーと絶対エラーを異なるフォーマットするために使用することができる。
466,論理的には、<code>target</code>と<code>current</code>の<code>attributes</code>（名前以外）を比較すべきかどうかを示します。
467,<code>list</code> 比較が、整数インデックスではなく、名前によって（一致する場合）異なるコンポーネントを報告すべきかどうかを示す論理。  これは<code>...</code>の後に来るので、フルネームで指定されなければならないことに注意してください。
468,<code>ls</code>に渡される論理は、「隠された」オブジェクトも環境において考慮されるべきかどうかを示します。
469,<code>environment</code>メソッドの場合：<code>logical</code>は、"約束が強制されるべきか"、すなわち、典型的な形式的な関数引数が比較のために評価されるかを示す。  false の場合、2 つの環境のオブジェクトの <code>names</code> だけが等しいかどうかチェックされます。
470,logical 関数の<code>environment()</code>も比較する必要があります。2つの<code>nls()</code>フィットを比較するときなど、予期しないケースで<code>check.environment=FALSE<code>を設定する必要があるかもしれません。
471,logical <code>target</code> と <code>current</code> の <code>"tzone"</code> 属性が比較されるべきかどうかを指定します。
472,<code>target</code>と<code>current</code>の<code>names(.)</code>を比較するかどうかを論理的に示す。
473,<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトである。
474,他の<span style="font-family：Courier New, Courier; color：<code>target</code>と比較される、<b>R</b></span>オブジェクト。
475,数値比較のための異なる方法（特に次の2つ）のさらなる引数：
476,numeric <i>≥</i> 0. <code>tolerance</code>より小さい差は報告されない。  デフォルト値は<code>1.5e-8</code>に近い値である。
477,<code>NULL</code>または数値 &gt; 0、典型的には長さ1または<code>length(target)</code>である。  詳細'を参照。
478,平均（絶対または相対）差を計算するときに、<code>target == current</code>cases を数えるべきかどうかを示す論理。  デフォルトの <code>FALSE</code> は、<code>target</code> と <code>current</code> が数カ所でしか違わないような場合、誤解を招く恐れがあります; 広範な例を参照してください。
479,2つの引数、<code>err</code>、相対、絶対、または拡大縮小されたエラー、および<code>what</code>、エラーの<em>種類</em>を示す文字列の<code>function</code>;例えば、相対エラーと絶対エラーを異なるフォーマットするために使用することができる。
480,論理的には、<code>target</code>と<code>current</code>の<code>attributes</code>（名前以外）を比較すべきかどうかを示す。
481,<code>list</code> 比較が、整数インデックスではなく、名前によって（一致する場合）異なるコンポーネントを報告すべきかを示す論理。  これは<code>...</code>の後に来るので、フルネームで指定されなければならないことに注意してください。
482,<code>ls</code>に渡される論理は、「隠された」オブジェクトも環境において考慮されるべきかどうかを示します。
483,<code>environment</code>メソッドに渡されます：<code>logical</code>は、"約束が強制されるべきか"、すなわち、典型的な正式な関数引数が比較のために評価されるかを示します。  false の場合、2つの環境のオブジェクトの <code>names</code> だけが等しいかどうかチェックされます。
484,logical 関数の<code>environment()</code>も比較する必要があります。2つの<code>nls()</code>フィットを比較するときなど、予期しないケースで<code>check.environment=FALSE<code>にする必要があるかもしれません。
485,logical <code>target</code> と <code>current</code> の <code>"tzone"</code> 属性が比較されるべきかどうかを示しています。
486,<code>target</code> と <code>current</code> の <code>names(.)</code> が比較されるべきかどうかを示す論理的なものです。
487,<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>オブジェクトです。
488,他の<span style="font-family：Courier New, Courier; color：<code>target</code>と比較される、<b>R</b></span>オブジェクト。
489,数値比較のための以下の2つのメソッドの引数を追加します：
490,numeric <i>≥</i> 0. <code>tolerance</code>より小さい差は報告されない。  デフォルト値は<code>1.5e-8</code>に近い値である。
491,<code>NULL</code>または数値 &gt; 0、典型的には長さ1または<code>length(target)</code>である。  詳細'を参照。
492,平均（絶対または相対）差を計算するときに、<code>target == current</code>cases をカウントすべきかどうかを示す論理。  デフォルトの<code>FALSE</code>は、<code>target</code>と<code>current</code>が数カ所でしか違わない場合、誤解を招く恐れがあります; 豊富な例を参照してください。
493,2つの引数、<code>err</code>、相対エラー、絶対エラー、または拡大縮小エラー、および<code>what</code>、エラーの<em>種類</em>を示す文字列の<code>function</code>;例えば、相対エラーと絶対エラーを異なるフォーマットするために使用することができる。
<code>target</code>と<code>current</code>の<code>attributes</code>(名前以外)を比較するかどうかを示す494,logical。
495,<code>list</code> 比較が、整数インデックスではなく、名前によって（一致する場合）異なるコンポーネントを報告すべきかを示す論理。  これは<code>...</code>の後に来るので、フルネームで指定しなければならないことに注意してください。
496,<code>ls</code>に渡される論理は、「隠された」オブジェクトも環境において考慮されるべきかどうかを示します。
497,<code>environment</code>メソッドに渡されます：<code>logical</code>は、"約束が強制されるべきか"、すなわち、典型的な正式な関数引数が比較のために評価されるかを示します。  false の場合、2つの環境のオブジェクトの <code>names</code> だけが等しいかどうかチェックされます。
498,関数の<code>environment()</code>も比較することを要求する論理。2つの<code>nls()</code>フィットを比較するときなど、予期しないケースで<code>check.environment=FALSE<code>にする必要があるかもしれません。
499,logical <code>target</code> と <code>current</code> の <code>"tzone"</code> 属性が比較されるべきかどうかを指定します。
500,<code>target</code> と <code>current</code> の <code>names(.)</code> が比較されるべきかどうかを示す論理的なものです。
501,<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>オブジェクトです。
502,他の<span style="font-family：Courier New, Courier; color：<code>target</code>と比較される、<b>R</b></span>オブジェクト。
503,数値比較のための異なる方法(特に次の2つ)のさらなる引数：
504,数値 <i>≥</i> 0. <code>tolerance</code>より小さい差は報告されない。  デフォルト値は<code>1.5e-8</code>に近い値である。
505,<code>NULL</code>または数値 &gt; 0、典型的には長さ1または<code>length(target)</code>である。  詳細'を参照。
506,平均（絶対または相対）差を計算するときに、<code>target == current</code>cases をカウントすべきかどうかを示す論理。  デフォルトの<code>FALSE</code>は、<code>target</code>と<code>current</code>が数カ所でしか違わない場合、誤解を招く恐れがあります; 豊富な例を参照してください。
507,2つの引数、<code>err</code>、相対エラー、絶対エラー、または拡大縮小エラー、および<code>what</code>、エラーの<em>種類</em>を示す文字列の<code>function</code>;例えば、相対エラーと絶対エラーを異なるフォーマットするために使用できるであろう。
508,論理的には、<code>target</code>と<code>current</code>の<code>attributes</code>（名前以外）を比較するかどうかを指定する。
509,<code>list</code> 比較が、整数インデックスではなく、名前によって（一致する場合）異なるコンポーネントを報告すべきかどうかを示す論理。  これは<code>...</code>の後に来るので、フルネームで指定されなければならないことに注意してください。
510,<code>ls</code>に渡される論理で、「隠された」オブジェクトも環境で考慮されるべきかどうかを示します。
511,<code>environment</code>メソッドの場合：<code>logical</code>は、"約束が強制されるべき "かどうか、すなわち、典型的な形式的な関数引数が比較のために評価されるかを示します。  false の場合、2つの環境のオブジェクトの <code>names</code> だけが等しいかどうかチェックされます。
512,logical 関数の<code>environment()</code>も比較する必要があります。2つの<code>nls()</code>フィットを比較するときなど、予期しないケースで<code>check.environment=FALSE<code>を設定する必要があるかもしれません。
513,logical <code>target</code> と <code>current</code> の <code>"tzone"</code> 属性が比較されるべきかどうかを指定します。
514,<code>target</code>と<code>current</code>の<code>names(.)</code>を比較するかどうかを論理的に示す。
515,<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトである。
516,他の<span style="font-family：Courier New, Courier; color：<code>target</code>と比較される、<b>R</b></span>オブジェクト。
517,数値比較のための異なる方法(特に次の2つ)のさらなる引数：
518,numeric <i>≥</i> 0. <code>tolerance</code>より小さい差は報告されません.  デフォルト値は<code>1.5e-8</code>に近い値である。
519,<code>NULL</code>または数値 &gt; 0、典型的には長さ1または<code>length(target)</code>である。  詳細'を参照。
520,平均（絶対または相対）差を計算するときに、<code>target == current</code>ケースをカウントすべきかどうかを示す論理。  デフォルトの<code>FALSE</code>は、<code>target</code>と<code>current</code>が数カ所でしか違わない場合に、誤解を招く恐れがあります; 豊富な例を参照してください。
521,2つの引数、<code>err</code>、相対エラー、絶対エラー、または拡大縮小エラー、および<code>what</code>、エラーの<em>種類</em>を示す文字列の<code>function</code>;例えば、相対エラーと絶対エラーを異なるフォーマットするために使用することができる。
522,論理的には、<code>target</code>と<code>current</code>の<code>attributes</code>（名前以外）を比較するかどうかを指定する。
523,logical <code>list</code> 比較が、整数インデックスではなく、名前によって（一致する場合）異なるコンポーネントを報告すべきかどうかを示します。  これは<code>...</code>の後に来るので、フルネームで指定しなければならないことに注意してください。
524,<code>ls</code>に渡される論理は、「隠された」オブジェクトも環境において考慮されるべきかどうかを示します。
525,<code>environment</code>メソッドの場合：<code>logical</code>は、"約束が強制されるべきかどうか"、すなわち、典型的な形式的な関数引数が比較のために評価されるかを示す。  falseの場合、2つの環境のオブジェクトの<code>names</code>だけが等しいかどうかチェックされる。
526,logical 関数の<code>environment()</code>も比較する必要があります。2つの<code>nls()</code>フィットを比較するときなど、予期しないケースで<code>check.environment=FALSE<code>にする必要があるかもしれません。
527,logical <code>target</code> と <code>current</code> の <code>"tzone"</code> 属性が比較されるべきかどうかを指定します。
528,<code>target</code> と <code>current</code> の <code>names(.)</code> が比較されるべきかどうかを示す論理的。
529,<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>オブジェクトです。
530,他の<span style="font-family：Courier New, Courier; color：<code>target</code>と比較される<b>R</b></span>オブジェクト。
531,数値比較のための異なる方法(特に次の2つ)のさらなる引数：
532,numeric <i>≥</i> 0. <code>tolerance</code>より小さい差は報告されません.  デフォルト値は<code>1.5e-8</code>に近い値である。
533,<code>NULL</code>または数値 &gt; 0、典型的には長さ1または<code>length(target)</code>である。  詳細'を参照。
534,平均（絶対または相対）差を計算するときに、<code>target == current</code>ケースをカウントすべきかどうかを示す論理。  デフォルトの<code>FALSE</code>は、<code>target</code>と<code>current</code>が数カ所でしか違わない場合、誤解を招く恐れがあります; 豊富な例を参照してください。
535,2つの引数、<code>err</code>、相対エラー、絶対エラー、拡大縮小エラー、<code>what</code>、エラーの<em>種類</em>を示す文字列の<code>function</code>は、例えば、相対エラーと絶対エラーを異なるフォーマットにするために使われることがある。
536,logical <code>target</code>と<code>current</code>の<code>attributes</code>(名前以外)を比較するかどうかを指定する.
537,<code>list</code> 比較が、整数インデックスではなく、名前によって（一致する場合）異なるコンポーネントを報告すべきかどうかを示す論理。  これは<code>...</code>の後に来るので、フルネームで指定されなければならないことに注意してください。
538,<code>ls</code>に渡される論理は、「隠された」オブジェクトも環境において考慮されるべきかどうかを示します。
539,<code>environment</code>メソッドに渡されます：<code>logical</code>は、"約束が強制されるべきか"、すなわち、典型的な形式的な関数引数が比較のために評価されるかを示す。  false の場合、2 つの環境のオブジェクトの <code>names</code> だけが等しいかどうかチェックされます。
540,logical 関数の<code>environment()</code>も比較する必要があります。2つの<code>nls()</code>フィットを比較するときなど、予期しないケースで<code>check.environment=FALSE<code>を設定する必要があるかもしれません。
541,logical <code>target</code> と <code>current</code> の <code>"tzone"</code> 属性が比較されるべきかどうかを指定します。
542,<code>target</code>と<code>current</code>の<code>names(.)</code>を比較するかどうかを論理的に示す。
543,<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトを使用する。
544,他の<span style="font-family：Courier New, Courier; color：<code>target</code>と比較される、<b>R</b></span>オブジェクト。
545,数値比較のための異なる方法、特に以下の2つの引数をさらに指定します：
546,numeric <i>≥</i> 0. <code>tolerance</code>より小さい差は報告されない。  デフォルト値は<code>1.5e-8</code>に近い値である。
547,<code>NULL</code>または数値 &gt; 0、典型的には長さ1または<code>length(target)</code>である。  詳細'を参照。
548,平均（絶対または相対）差を計算するときに、<code>target == current</code>cases をカウントすべきかどうかを示す論理。  デフォルトの <code>FALSE</code> は、<code>target</code> と <code>current</code> が数カ所でしか違わないような場合、誤解を招く恐れがあります。
549,2つの引数、<code>err</code>、相対、絶対、または拡大縮小されたエラー、および<code>what</code>、エラーの<em>種類</em>を示す文字列の<code>function</code>;例えば、相対エラーと絶対エラーを異なってフォーマットするために使用することができる。
550,logical <code>target</code>と<code>current</code>の<code>attributes</code>（名前以外）を比較するかどうかを指定する。
551,logical <code>list</code> 比較が、整数インデックスではなく、名前によって（一致する場合）異なるコンポーネントを報告すべきかどうかを示します。  これは<code>...</code>の後に来るので、フルネームで指定されなければならないことに注意してください。
552,<code>ls</code>に渡される論理は、「隠された」オブジェクトも環境において考慮されるべきかどうかを示します。
553,<code>environment</code>メソッドに渡されます：<code>logical</code>は、"約束が強制されるべきか"、すなわち、典型的な正式な関数引数が比較のために評価されるかを示します。  false の場合、2つの環境のオブジェクトの <code>names</code> だけが等しいかどうかチェックされます。
554,関数の<code>environment()</code>も比較することを要求する論理。2つの<code>nls()</code>フィットを比較するときなど、予期しないケースで<code>check.environment=FALSE</code>とする必要があるかもしれません。
555,logical <code>target</code> と <code>current</code> の <code>"tzone"</code> 属性が比較されるべきかどうかを示しています。
556,<code>target</code>と<code>current</code>の<code>names(.)</code>を比較するかどうかを論理的に示す。
557,<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトである。
558,他の<span style="font-family：Courier New, Courier; color：<code>target</code>と比較される、<b>R</b></span>オブジェクト。
559,数値比較のための以下の2つのメソッドの引数を追加します：
560,numeric <i>≥</i> 0. <code>tolerance</code>より小さい差は報告されない。  デフォルト値は<code>1.5e-8</code>に近い値である。
561,<code>NULL</code>または数値 &gt; 0、典型的には長さ1または<code>length(target)</code>である。  詳細'を参照。
562,平均（絶対または相対）差を計算するときに、<code>target == current</code>ケースをカウントすべきかどうかを示す論理。  デフォルトの<code>FALSE</code>は、<code>target</code>と<code>current</code>が数カ所でしか違わない場合、誤解を招く恐れがあります; 豊富な例を参照してください。
563,2つの引数、<code>err</code>、相対エラー、絶対エラー、または拡大縮小エラー、および<code>what</code>、エラーの<em>種類</em>を示す文字列の<code>function</code>;例えば、相対エラーと絶対エラーを異なるフォーマットするために使用することができる。
564,論理的には、<code>target</code>と<code>current</code>の<code>attributes</code>（名前以外）を比較するかどうかを指定する。
565,<code>list</code> 比較が、整数インデックスではなく、名前によって（一致する場合）異なるコンポーネントを報告すべきかどうかを示す論理です。  これは<code>...</code>の後に来るので、フルネームで指定しなければならないことに注意してください。
566,<code>ls</code>に渡される論理で、「隠された」オブジェクトも環境で考慮されるべきかどうかを示します。
567,<code>environment</code>メソッドに渡されます：<code>logical</code>は、"約束が強制されるべきか"、すなわち、典型的な形式的な関数引数が比較のために評価されるかを示します。  false の場合、2つの環境のオブジェクトの <code>names</code> だけが等しいかどうかチェックされます。
568,関数の<code>environment()</code>も比較することを要求する論理。2つの<code>nls()</code>フィットを比較するときなど、予期しないケースで<code>check.environment=FALSE<code>にする必要があるかもしれません。
569,logical <code>target</code> と <code>current</code> の <code>"tzone"</code> 属性が比較されるべきかどうかを指定します。
570,<code>target</code> と <code>current</code> の <code>names(.)</code> が比較されるべきかどうかを示す論理的。
571,<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトである。
572,他の<span style="font-family：Courier New, Courier; color：<code>target</code>と比較される、<b>R</b></span>オブジェクト。
573,数値比較のための異なる方法（特に次の2つ）のさらなる引数：
574,numeric <i>≥</i> 0. <code>tolerance</code>より小さい差は報告されない.  デフォルト値は<code>1.5e-8</code>に近い値である。
575,<code>NULL</code>または数値 &gt; 0、典型的には長さ1または<code>length(target)</code>である。  詳細'を参照してください。
576,平均（絶対または相対）差を計算するときに、<code>target == current</code>cases を数えるべきかどうかを示す論理。  デフォルトの<code>FALSE</code>は、<code>target</code>と<code>current</code>が数カ所でしか違わない場合、誤解を招く恐れがあります; 豊富な例を参照してください。
577,2つの引数、<code>err</code>、相対エラー、絶対エラー、または拡大縮小エラー、および<code>what</code>、エラーの<em>種類</em>を示す文字列の<code>function</code>;例えば、相対エラーと絶対エラーを異なるフォーマットするために使用することができる。
578,論理的には、<code>target</code>と<code>current</code>の<code>attributes</code>（名前以外）を比較するかどうかを指定する。
579,<code>list</code> 比較が、整数インデックスではなく、名前によって（一致する場合）異なるコンポーネントを報告すべきかどうかを示す論理です。  これは<code>...</code>の後に来るので、フルネームで指定しなければならないことに注意してください。
580,<code>ls</code>に渡される論理で、「隠された」オブジェクトも環境で考慮されるべきかどうかを示します。
581,<code>environment</code>メソッドに渡されます：<code>logical</code>は、"約束が強制されるべきか"、すなわち、典型的な正式な関数引数が比較のために評価されるかを示します。  false の場合、2つの環境のオブジェクトの <code>names</code> だけが等しいかどうかチェックされます。
582,logical 関数の<code>environment()</code>も比較する必要があります。2つの<code>nls()</code>フィットを比較するときなど、予期しないケースで<code>check.environment=FALSE</code>にする必要があるかもしれません。
583,logical <code>target</code> と <code>current</code> の <code>"tzone"</code> 属性が比較されるべきかどうかを指定します。
584,<code>target</code> と <code>current</code> の <code>names(.)</code> が比較されるべきかどうかを示す論理的なものです。
585,<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトを使用する。
586,他の<span style="font-family：Courier New, Courier; color：<code>target</code>と比較される、<b>R</b></span>オブジェクト。
587,数値比較のための以下の2つのメソッドの引数を追加します：
588,numeric <i>≥</i> 0. <code>tolerance</code>より小さい差は報告されない。  デフォルト値は<code>1.5e-8</code>に近い値である。
589,<code>NULL</code>または数値 &gt; 0、典型的には長さ1または<code>length(target)</code>である。  詳細'を参照。
590,平均（絶対または相対）差を計算するときに、<code>target == current</code>cases を数えるべきかどうかを示す論理。  デフォルトの <code>FALSE</code> は、<code>target</code> と <code>current</code> が数カ所でしか違わないような場合、誤解を招く恐れがあります。
591,2つの引数、<code>err</code>、相対エラー、絶対エラー、または拡大縮小エラー、および<code>what</code>、エラーの<em>種類</em>を示す文字列の<code>function</code>;例えば、相対エラーと絶対エラーを異なるフォーマットするために使用することができる。
592,論理的には、<code>target</code>と<code>current</code>の<code>attributes</code>（名前以外）を比較するかどうかを指定する。
593,<code>list</code> 比較が、整数インデックスではなく、名前によって（一致する場合）異なるコンポーネントを報告すべきかを示す論理。  これは<code>...</code>の後に来るので、フルネームで指定されなければならないことに注意してください。
594,<code>ls</code>に渡される論理で、「隠された」オブジェクトも環境で考慮されるべきかどうかを示します。
595,<code>environment</code>メソッドに渡されます：<code>logical</code>は、"約束が強制されるべきかどうか"、すなわち、典型的な形式的な関数引数が比較のために評価されるかを示す。  false の場合、2つの環境のオブジェクトの <code>names</code> だけが等しいかどうかチェックされます。
596,関数の<code>environment()</code>も比較することを要求する論理。2つの<code>nls()</code>フィットを比較するときなど、予期しないケースで<code>check.environment=FALSE<code>にする必要があるかもしれません。
597,logical <code>target</code> と <code>current</code> の <code>"tzone"</code> 属性が比較されるべきかどうかを示しています。
598,<code>target</code>と<code>current</code>の<code>names(.)</code>を比較するかどうかを論理的に示す。
599,<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>オブジェクトです。
600,その他の<span style="font-family：Courier New, Courier; color：<code>target</code> と比較される、<b>R</b></span>オブジェクト。
601,数値比較のための異なる方法(特に次の2つ)のさらなる引数：
602,数値 <i>≥</i> 0. <code>tolerance</code>より小さい差は報告されない.  デフォルト値は<code>1.5e-8</code>に近い値である。
603,<code>NULL</code>または数値 &gt; 0、典型的には長さ1または<code>length(target)</code>である。  詳細'を参照。
604,平均（絶対または相対）差を計算するときに、<code>target == current</code>cases を数えるべきかどうかを示す論理。  デフォルトの<code>FALSE</code>は、<code>target</code>と<code>current</code>が数カ所でしか違わない場合、誤解を招く恐れがあります; 豊富な例を参照してください。
605,2つの引数、<code>err</code>、相対エラー、絶対エラー、または拡大縮小エラー、および<code>what</code>、エラーの<em>種類</em>を示す文字列の<code>function</code>;例えば、相対エラーと絶対エラーを異なるフォーマットするために使用することができる。
<code>target</code>と<code>current</code>の<code>attributes</code>(名前以外)を比較するかどうかを指定する606,logical。
607,<code>list</code> 比較が、整数インデックスではなく、名前によって（一致する場合）異なるコンポーネントを報告すべきかどうかを示す論理。  これは<code>...</code>の後に来るので、フルネームで指定されなければならないことに注意してください。
608,<code>ls</code>に渡される論理は、「隠された」オブジェクトも環境において考慮されるべきかどうかを示します。
609,<code>environment</code>メソッドに渡されます：<code>logical</code>は、"約束が強制されるべきか"、すなわち、典型的な正式な関数引数が比較のために評価されるかを示します。  false の場合、2つの環境のオブジェクトの <code>names</code> だけが等しいかどうかチェックされます。
610,論理 関数の<code>environment()</code>も比較する必要があります。2つの<code>nls()</code>フィットを比較するときなど、予期しないケースで<code>check.environment=FALSE<code>にする必要があるかもしれません。
611,logical <code>target</code> と <code>current</code> の <code>"tzone"</code> 属性が比較されるべきかどうかを示しています。
612,<code>target</code>と<code>current</code>の<code>names(.)</code>を比較するかどうかを示す論理的なもの。
613,名前が抽出される式または呼び出し。
614,関数名を結果に含めるかどうかを示す論理値。
615,返される名前の最大数。  <code>-1</code>は制限なしを示します（ベクターサイズの制限を除きます）。
616,重複する名前を値から削除すべきかどうかを示す論理値。
617,名前が抽出される式または呼び出し。
618,関数名を結果に含めるかどうかを示す論理値。
619,返される名前の最大数。  <code>-1</code>は制限なしを示します（ベクターサイズの制限を除きます）。
620,重複する名前を値から削除すべきかどうかを示す論理値。
621,条件オブジェクト。
622、呼び出し式。
623、条件オブジェクト。
624,評価される式。
625、戻りまたは終了する前に評価される式。
626、関数
627、文字列
628、文字列
629,再始動に名前を付ける文字列。
630,再始動オブジェクト
631,オブジェクト。
632,条件クラスの名前を指定する文字列。
633,追加引数; 以下の詳細を参照。
634,0個以上の論理ベクター。  長さゼロの他のオブジェクトは無視され、残りは任意のクラスを無視した論理に強制される。
635,論理的。  真の場合、<code>NA</code>値は、結果が計算される前に取り除かれます。
636,ベクトル、データフレーム、配列、または<code>NULL</code>。
<code>FALSE</code>は特別な値で、全ての値が比較できることを意味し、デフォルト以外のメソッドで受け入れられる唯一の値である可能性があります。  これは、<code>x</code>と同じ型に内部で強制されます。
638,重複が裏側から考慮されるべきかどうかを示す論理、すなわち、同一要素の最後(または右端)は<code>duplicated = FALSE</code>に対応することになる。
639,予想されるユニークなアイテムの最大数(1より大きい)。
640,特定のメソッドのための引数。
641,固定される配列のマージン：<code>apply</code>を参照し、<code>MARGIN = 0</code>が有用であることに注意してください。
642,ベクトルまたはデータフレームまたは配列または<code>NULL</code>です。
643,比較できない値のベクトル。<code>FALSE</code>は特別な値で、全ての値が比較できることを意味し、デフォルト以外の方法で受け入れられる唯一の値かもしれません。  これは、<code>x</code>と同じ型に内部で強制されます。
644,重複が裏側から考慮されるべきかどうかを示す論理、すなわち、同一要素の最後（または右端）は<code>duplicated = FALSE</code>に対応することになる。
645,予想されるユニークなアイテムの最大数(1より大きい)。
646,特定のメソッドのための引数。
647,固定される配列のマージン：<code>apply</code>を参照し、<code>MARGIN = 0</code>が有用であることに注意してください。
648,ベクトル、データフレーム、配列、または<code>NULL</code>を指定します。
649,比較できない値のベクトル。<code>FALSE</code>は特別な値で、すべての値が比較できることを意味し、デフォルト以外のメソッドで受け入れられる唯一の値である可能性があります。  これは、<code>x</code>と同じ型に内部で強制されます。
650,重複が裏側から考慮されるべきかどうかを示す論理。すなわち、同一要素の最後（または右端）は<code>duplicated = FALSE</code>に対応することになる。
651,予想されるユニークなアイテムの最大数(1より大きい)。
652,特定のメソッドのための引数。
653,固定される配列のマージン：<code>apply</code>を参照し、<code>MARGIN = 0</code>が有用であることに注意されたい。
654,ベクトルまたはデータフレームまたは配列または<code>NULL</code>です。
<code>FALSE</code>は特別な値で、すべての値が比較できることを意味し、デフォルト以外のメソッドで受け入れられる唯一の値である可能性があります。  これは、<code>x</code>と同じ型に内部で強制されます。
656,重複が裏側から考慮されるべきかどうかを示す論理、すなわち、同一要素の最後（または右端）は<code>duplicated = FALSE</code>に対応するだろう。
657,予想されるユニークなアイテムの最大数(1より大きい)。
658,特定のメソッドのための引数。
659,固定される配列のマージン：<code>apply</code>を参照し、<code>MARGIN = 0</code>が有用であることに注意されたい。
660,ベクトルまたはデータフレームまたは配列または<code>NULL</code>.
<code>FALSE</code>は特別な値で、すべての値が比較できることを意味し、デフォルト以外のメソッドで受け入れられる唯一の値である可能性があります。  これは、<code>x</code>と同じ型に内部で強制されます。
662,重複が裏側から考慮されるべきかどうかを示す論理、すなわち、同一要素の最後(または右端)は<code>duplicated = FALSE</code>に対応することになる。
663,予想されるユニークなアイテムの最大数(1より大きい)。
664,特定のメソッドのための引数。
665,固定される配列のマージン：<code>apply</code>を参照し、<code>MARGIN = 0</code>が有用であることに注意してください。
666,配列のマージンを固定するための<span style="font-family：Courier New, Courier; color：#テストするオブジェクト：<code>is.na</code> と <code>anyNA</code> のデフォルトメソッドは、アトミックベクトル、リスト、ペアリスト、および <code>NULL</code> を扱います。
667,論理的：<code>anyNA</code>はリストとペアリストに再帰的に適用されるべきか？
668,<code>x</code>で使用するための適切なインデックスベクタです。
669,an <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトをテストする: <code>is.na</code> と <code>anyNA</code> のデフォルトメソッドは、原子ベクトル、リスト、ペアリスト、および <code>NULL</code> を処理します。
670,論理的：<code>anyNA</code>はリストとペアリストに再帰的に適用されるべきか？
671,<code>x</code>で使用するための適切なインデックス・ベクトルです。
672,a character vector with suitable numeric version strings (see'Details'); <code>package_version</code> for alternatively a Rversion object as obtained by <code>R.version</code>.
673,無効な数値バージョンはエラーになるか(デフォルト)、ならないかを示す論理です。
674,date-timeクラスの1つから印刷または要約されるオブジェクトを指定します。
675,タイムゾーンフォーマットのために、<code>format.POSIXct</code>に渡される。
676,数値または<code>NULL</code>で、印刷されるエントリの最大数を指定する。  デフォルトでは、<code>NULL</code>の時、<code>getOption("max.print")</code>が使われます。
677,計算の有効桁数:最も重要な時間単位を正確に表すのに十分な桁数であるべきです。
678,他のメソッドから、または他のメソッドに渡される更なる引数。
679,日付-時間オブジェクト
680,日付-時間オブジェクトまたは文字ベクトル。  (文字ベクトルは<code>as.POSIXct</code>で変換されます)。
681,数値ベクトル(秒単位)
682,<code>==</code>、<code>!=</code>、<code>&lt;</code>、<code>&lt;=</code>または<code>&gt;=</code>のいずれか一つ。
683,転置される配列。
684,添え字順列ベクトル, 通常は整数 <code>1:n</code> の順列で, <code>n</code> は <code>a</code> の次元数である.  <code>a</code> が dimnames という名前を持つ場合、その名前の順列を与える長さ <code>n</code> の文字ベクトルとすることができます。デフォルト（<code>perm</code>の長さがゼロの場合は常に使用される）は、次元の順序を逆にすることです。
685,ベクトルがその要素の並び替えと同様にサイズ変更されるべきかどうかを示すフラグ (デフォルト <code>TRUE</code>).
686,結果が<code>a</code>と同じクラスであるべきであるかどうかを示す論理。
687,メソッドの更なる引数の可能性。
688,転置される配列。
689,添え字順列ベクトル、通常は整数<code>1:n</code>の順列で、<code>n<code>は<code>a</code>の次元数である。  <code>a</code> が dimnames という名前を持つ場合、その名前の順列を与える長さ <code>n</code> の文字ベクトルとすることができます。デフォルト（<code>perm</code>の長さがゼロの場合は常に使用される）は、次元の順序を逆にすることである。
690,ベクトルがその要素の並び替えと同様にサイズ変更されるべきかどうかを示すフラグ (デフォルト <code>TRUE</code>).
691,結果が<code>a</code>と同じクラスであるべきであるかどうかを示す論理。
692,メソッドの更なる引数の可能性。
693,転置される配列。
694,添え字順列ベクトル、通常は整数<code>1:n</code>の順列で、<code>n<code>は<code>a</code>の次元数である。  <code>a</code> が dimnames という名前を持つ場合、その名前の順列を与える長さ <code>n</code> の文字ベクトルとすることができます。デフォルト（<code>perm</code>の長さがゼロの場合は常に使用される）は、次元の順序を逆にすることです。
695,ベクトルがその要素の並び替えと同様にサイズ変更されるべきかどうかを示すフラグ (デフォルト <code>TRUE</code>).
696,結果が<code>a</code>と同じクラスであるべきであるかどうかを示す論理。
697,メソッドの更なる引数の可能性。
698,値が追加されるベクトル。
699,修正されたベクターに含まれるもの。
700,値が追加される添え字。
701,行列を含む配列。
702,関数が適用される添え字を示すベクトル。  例えば、行列の場合、<code>1</code>は行、<code>2</code>は列、<code>c（1，2）</code>は行と列を示す。<code>X</code>がdimnamesという名前を持つ場合、次元名を選択する文字ベクトルとすることができる。
703,適用される関数：「詳細」を参照。<code>+</code>、<code>%*%</code>等の関数の場合、関数名はバッククォートまたはクォートでなければならない。
704,<code>FUN</code>のオプション引数。
705,可能であれば、結果を簡略化するかどうかを示す論理である。
706,数値。  出力ベクトルの希望する長さ。入力は必要に応じて再利用される。
707,数値ベクトル。
708,数値ベクトル.
709,数値ベクトル
710,数値ベクトル.
711,オブジェクト、おそらくモード<code>complex</code>の。
712,モード<code>complex</code>のオブジェクト、またはメソッドが定義されているクラスの1つです。
713,他のメソッドに渡される、または他のメソッドから渡される更なる引数。
714,関数（クロージャまたはプリミティブ）。<code>name</code>が文字列の場合、その名前を持つ関数が見つかり使用されます。
715,配列を埋めるデータを与えるベクトル（リストまたは<code>expression</code>ベクトルを含む）。  原子クラスでないオブジェクトは、<code>as.vector</code>で強制される。
716,作成される配列のdim属性、つまり、各次元の最大インデックスを与える長さ1以上の整数ベクトル。
717,<code>NULL</code>または次元の名前。これは、<code>NULL</code>またはその次元の<code>dim</code>で与えられた長さの文字ベクトルで、各次元に1つの要素を持つリスト（またはそれが無視されます）でなければなりません。  リストには名前を付けることができ、リスト名は次元の名前として使用されます。  リストが次元の数より短い場合は、<code>NULL</code>sによって必要な長さまで拡張されます。
718,an <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトです。
719,メソッドに渡す、またはメソッドから渡される追加の引数。
720,<code>論理</code>ベクトルまたは配列。  <code>NA</code>は許可され、省略される（<code>FALSE</code>と同様に扱われる）。
721,論理; <code>x</code>が配列のとき、<b>arr</b>ay <b>ind</b>ices を返すべきか。
722,整数値のインデックス・ベクトル、<code>which(x)</code>から得られるように。
723,<code>dim(.)</code>整数ベクトル
724,オプションの文字リスト <code>dimnames(.)</code>.If <code>useNames</code> is true, for<code>arrayInd()</code> (and therefore, <code>which(*, arr.ind=TRUE)</code>), to construct dimnames to be used for <code>names(.dimnames)</code> is empty, these are used asolumn names.  <code>.dimnames[[1]]</code>は行名として使用されます。
725,<code>arrayInd()</code>の値が（非NULLの）dimnamesを全く持つべきかを示す論理。
726,配列を埋めるデータを与えるベクトル（リストまたは<code>expression</code>ベクトルを含む）。  非原子のクラス化されたオブジェクトは、<code>as.vector</code>で強制される。
727,作成される配列のdim属性、つまり各次元の最大インデックスを与える1以上の長さの整数ベクトル。
728,<code>NULL</code>または次元の名前。これは、<code>NULL</code>またはその次元の<code>dim</code>で与えられた長さの文字ベクトルで、各次元に1つの要素を持つリスト（またはそれが無視されます）でなければなりません。  リストには名前を付けることができ、リスト名は次元の名前として使用されます。  リストが次元の数より短い場合は、<code>NULL</code>sによって必要な長さまで拡張されます。
729,an <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトです。
730,メソッドに渡される、またはメソッドから渡される追加の引数。
731,配列を埋めるデータを与えるベクトル（リストまたは<code>expression</code>ベクトルを含む）。  非原子のクラス化されたオブジェクトは、<code>as.vector</code>で強制される。
732,作成される配列のdim属性、つまり各次元の最大インデックスを与える長さ1以上の整数ベクトルです。
733,<code>NULL</code>または次元の名前。これは、<code>NULL</code>またはその次元の<code>dim</code>で与えられた長さの文字ベクトルで、各次元に1つの要素を持つリスト（またはそれが無視されます）でなければなりません。  リストには名前を付けることができ、リスト名は次元の名前として使用されます。  リストが次元数より短い場合は、<code>NULL</code>sで必要な長さまで拡張されます。
734,an <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトです。
735,メソッドに渡される、またはメソッドから渡される追加の引数。
736,呼び出される関数を命名する空でない文字列。
737,呼び出しの一部となる引数。
738,任意の<span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクト。
739,希望する長さを指定する非負の整数。2倍値は整数に強制される。1以外の長さの引数を与えるとエラーになる。
740,強制される、またはテストされるオブジェクト。
741,他のメソッドに渡される、または他のメソッドから渡される更なる引数。
742,条件オブジェクト。
743,呼び出し式。
744,条件オブジェクト。
745,評価される式。
746,リターンまたは終了する前に評価される式。
747、関数
748,文字列.
749,文字列。
750,再始動に名前を付ける文字列。
751,再起動オブジェクト。
752,オブジェクト。
753,条件クラスの名前を指定する文字列。
754,追加引数; 以下の詳細を参照してください。
755,変換されるオブジェクト.
756,<code>文字</code>列。  指定がない場合、最初の<code>NA</code>以外の要素に対して<code>tryFormats</code>を1つずつ試し、どれもうまくいかない場合はエラーを出します。  それ以外の場合は、<code>strptime()</code>で処理され、そのヘルプページには利用可能な変換仕様が記述されています。
757,<code>character</code> vector of <code>format</code> strings to try if <code>format</code> is not specified.
758,<code>論理</code>は、フォーマット推測が成功しない場合、<code>NA</code>を返すことを示します(エラーを知らせる代わりに)。
759,<code>Date</code>オブジェクト、または<code>as.Date(origin, ...)</code>によってそのようなオブジェクトに強制できる何かである。
760,タイムゾーン名。
761,他のメソッドから、または他のメソッドに渡される更なる引数。<code>as.character</code>および<code>as.Date</code>メソッド用の<code>format</code>を含む。
762,希望する長さを指定する非負の整数。ダブル値は、整数に強制されます：1以外の長さの引数を供給することはエラーです。
763,強制される、またはテストされるオブジェクト。
764,他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
765,条件オブジェクト。
766,呼び出し式。
767,条件オブジェクト。
768,評価される式。
769,リターンまたは終了する前に評価されるべき式。
770、関数
771、文字列
772,文字列。
773,再始動に名前を付ける文字列。
774,再始動オブジェクト
775,オブジェクト。
776,条件クラスの名前を指定する文字列。
777,追加引数; 以下の詳細を参照。
778,希望する長さを指定する非負の整数。ダブル値は、整数に強制される。
779,強制される、またはテストされるオブジェクト。
780,他のメソッドに渡される、または他のメソッドから渡される更なる引数。
781,クラス<code>"hexmode"</code>を継承するメソッドのための、オブジェクトです。
782,<code>NULL</code>または、使用される最小フィールド幅を指定する正の整数で、先頭のゼロによってパディングされる。
783,大文字と小文字のどちらを使用するかを示す論理（デフォルト）。
784,他のメソッドに渡される、または他のメソッドから渡される追加の引数。
785,適切な数値バージョン文字列を持つ文字ベクトル(「詳細」参照); <code>package_version</code>の場合、代わりに<code>R.version</code>によって得られるRversionオブジェクト。
786,無効な数値バージョンはエラーになるか(デフォルト)、ならないかを示す論理です。
787,クラス<code>"octmode"</code>を継承するメソッドのためのオブジェクトです。
788,<code>NULL</code>または、使用される最小フィールド幅を指定する正の整数で、先頭のゼロでパディングされます。
789,他のメソッドに渡される、または他のメソッドから渡される更なる引数。
790,変換されるオブジェクト：<code>strptime</code>では文字ベクトル、<code>strftime</code>では<code>"POSIXlt"</code>に変換されるオブジェクトを指定します。
791,変換に使用されるタイムゾーンを指定する文字列。  システム固有(<code>as.POSIXlt</code>を参照)ですが、<code>""<code>は現在のタイムゾーン、<code>"GMT"<code>はUTCです。無効な値はUTCとして扱われ、いくつかのプラットフォームでは警告が出されることがほとんどです。
792,文字列。  <code>format</code>メソッドのデフォルトは、<code>"%Y-%m-%d %H:%M:%S"</code> で、いずれかの要素が深夜でないタイムコンポーネントを持つ場合、<code>"%Y-%m-%d"</code> それ以外の場合。  <code>options("digits.secs")</code> が設定されている場合、指定された桁数までが秒単位で表示されます。
793,他のメソッドから、または他のメソッドに渡される追加の引数。
794,論理的です。  タイムゾーンの略号を出力に付加しますか？  これは、時刻の印刷に使われ、<code>"%Z"</code>を使うより信頼性が高い。
795、ファイル名。
796、ファイルに対して仮定する文字エンコーディング。
797、文字列を作るためのエンコーディング：<code>parse</code>の<code>encoding</code>引数を参照してください。
798、ソース行の文字ベクトル。  その他、<span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクトは、文字に強制されます。
799、ファイルのコピーに使用するタイムスタンプ。
800、この<code>srcfilecopy</code>はファイルシステム・ファイルから来たと知られているか？
801, <code>srcfile</code>オブジェクト。
802、行番号。
803, ソースの位置を示す4、6、8個の値のベクトル。
804, 適切なクラスのオブジェクト。
805, <code>srcref</code> のテキストを取得するために <code>srcfile</code> を読むかどうか。
806, 文字範囲の終わりを示すためのオプションの2番目の<code>srcref</code>オブジェクト。
807,メソッドへの追加引数。これらは無視される。
808,数値。  入力は必要に応じて再利用されます.
809,数値ベクトル.
810,数値ベクトル.
811,数値ベクトル
812,数値ベクトル.
813,オブジェクト、おそらくモード<code>complex</code>の。
814,モード<code>complex</code>のオブジェクト、またはメソッドが定義されているクラスの1つです。
815,他のメソッドに渡される、または他のメソッドから渡される更なる引数。
816,任意の<span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクト。
817,<code>NULL</code>またはデータフレームのrownamesを与える文字ベクトル.  欠落値は許されない。
818,論理的である。<code>TRUE</code>の場合、行名の設定と列名の変換（構文名への変換：<code>make.names</code>参照）はオプションです。  なお、<span style="font-family：Courier New, Courier; color：<br>R</b></span> の<span class="pkg">base</span> パッケージの <code>as.data.frame()</code> メソッドは、基本的に <code>data.frame(*, check.names = !optional)</code> のテーマ化で列名の処理にのみ <code>optional</code> を使用するので、注意してください。また <code>matrix</code> メソッドの <code>make.names</code> 引数を参照してください。
819,メソッドに渡す、またはメソッドから渡される追加の引数。
820,論理: 文字ベクトルは係数に変換されるべきか？
821,論理または整数; 256文字(数値の場合は<code>cut.names</code>)以上の列名を短くするか(そして最後の6文字を<code>" ..."</code> で置き換える)を指定します．
822,(オプション)列名の文字ベクトル.
823,空の列名、すなわち<code>""</code>が(<code>data.frame</code>内で)修正されるべきか否かを示す論理.
824,logical; <code>data.frame()</code>の呼び出しに渡されます。
825,<code>論理</code>、すなわち<code>FALSE, NA, TRUE</code>のうちの1つで、（行列<code>x</code>の）行名が無効な場合にどうすべきかを示すものです。  もし無効であれば、デフォルトの<code>TRUE</code>は <code>make.names(*, unique=TRUE)</code> を呼び出します; <code>make.names=NA</code> は「自動」行名を使い、<code>FALSE</code> は無効行名に対するエラーを通知します。
826,any <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトです。
827,<code>NULL</code>またはデータフレームのrownamesを与える文字ベクトル.  欠落値は許されない。
828,論理的である。<code>TRUE</code>の場合、行名の設定と列名の変換（構文名への変換：<code>make.names</code>参照）はオプションです。  なお、<span style="font-family：Courier New, Courier; color：<br>R</b></span> の<span class="pkg">base</span> パッケージの <code>as.data.frame()</code> メソッドは、基本的に <code>data.frame(*, check.names = !optional)</code> のテーマ化で列名の処理にのみ <code>optional</code> を使用するので、注意してください。また <code>matrix</code> メソッドの引数に <code>make.names</code> を参照してください。
829,メソッドに渡される、またはメソッドから渡される追加の引数。
830,論理: 文字ベクトルは係数に変換されるべきか？
831,論理または整数; 256文字以上(数値の場合は<code>cut.names</code>)の列名を短くするか(そして最後の6文字を<code>" ..."</code> で置き換える)を指定します．
832,(オプション)列名の文字ベクトル.
833,空の列名、すなわち<code>""</code>が(<code>data.frame</code>内で)修正されるべきか否かを示す論理.
834,logical; <code>data.frame()</code>の呼び出しに渡されます。
835,<code>論理</code>、すなわち<code>FALSE, NA, TRUE</code>のうちの1つで、（行列<code>x</code>の）行名が無効な場合にどうすべきかを示すものです。  もし無効であれば、デフォルトの <code>TRUE</code> は <code>make.names(*, unique=TRUE)</code> を呼び出します; <code>make.names=NA</code> は「自動」行名を使い、<code>FALSE</code> は無効行名に対するエラーを通知します。
836,any <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトです。
837,<code>NULL</code>またはデータフレームのrownamesを与える文字ベクトル.  欠落値は許されない。
838,論理的である。<code>TRUE</code>の場合、行名の設定と列名の変換（構文名への変換：<code>make.names</code>参照）はオプションです。  なお、<span style="font-family：Courier New, Courier; color：<br>R</b></span> の<span class="pkg">base</span> パッケージの <code>as.data.frame()</code> メソッドは、基本的に <code>data.frame(*, check.names = !optional)</code> のテーマ化で列名の処理にのみ <code>optional</code> を使用するので、注意してください。また <code>matrix</code> メソッドの引数に <code>make.names</code> を参照してください。
839,メソッドに渡す、またはメソッドから渡される追加の引数。
840,論理: 文字ベクトルは係数に変換されるべきか？
841,論理または整数; 256文字(または数値の場合は<code>cut.names</code>)以上の列名を短縮すべきかどうかを示す(そして最後の6文字は<code>" ..."</code> で置き換えられる).
842,(オプション)列名の文字ベクトル.
843,空の列名、すなわち<code>""</code>が(<code>data.frame</code>内で)修正されるべきか否かを示す論理.
844,logical; <code>data.frame()</code>の呼び出しに渡されます。
845,<code>論理</code>、すなわち<code>FALSE, NA, TRUE</code>のうちの1つで、（行列<code>x</code>の）行名が無効な場合にどうすべきかを示すものです。  もし無効であれば、デフォルトの<code>TRUE</code>は <code>make.names(*, unique=TRUE)</code> を呼び出します; <code>make.names=NA</code> は「自動」行名を使い、<code>FALSE</code> は無効行名に対するエラーを通知します。
846,any <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトです。
847,<code>NULL</code>またはデータフレームのrownamesを与える文字ベクトル。  欠落値は許されない。
848,論理的である。<code>TRUE</code>の場合、行名の設定と列名の変換（構文名への変換：<code>make.names</code>参照）はオプションです。  なお、<span style="font-family：Courier New, Courier; color：<br>R</b></span> の<span class="pkg">base</span> パッケージの <code>as.data.frame()</code> メソッドは、基本的に <code>data.frame(*, check.names = !optional)</code> のテーマ化で列名の処理にのみ <code>optional</code> を使用するので、注意してください。また <code>matrix</code> メソッドの引数に <code>make.names</code> を参照してください。
849,メソッドに渡す、またはメソッドから渡される追加の引数。
850,論理：文字ベクトルは係数に変換されるべきか？
851,logical or integer; 256文字(数値の場合は<code>cut.names</code>)以上の列名を短くするか(そして最後の6文字を<code>" ..."</code> で置き換える)を指定します.
852,(オプション)列名の文字ベクトル.
853,空の列名、すなわち<code>""</code>が(<code>data.frame</code>内で)修正されるべきか否かを示す論理.
854,logical; <code>data.frame()</code>の呼び出しに渡されます。
855,<code>論理</code>、すなわち<code>FALSE, NA, TRUE</code>のうちの1つで、（行列<code>x</code>の）行名が無効な場合にどうすべきかを示す。  もし無効であれば、デフォルトの<code>TRUE</code>は <code>make.names(*, unique=TRUE)</code> を呼び出します; <code>make.names=NA</code> は「自動」行名を使い、<code>FALSE</code> は無効行名に対するエラーを通知します。
856,any <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトです。
857,<code>NULL</code>またはデータフレームのrownamesを与える文字ベクトル。  欠落値は許されない。
858,論理的である。<code>TRUE</code>の場合、行名の設定と列名の変換（構文名への変換：<code>make.names</code>参照）はオプションです。  なお、<span style="font-family：Courier New, Courier; color：<br>R</b></span> の<span class="pkg">base</span> パッケージの <code>as.data.frame()</code> メソッドは、基本的に <code>data.frame(*, check.names = !optional)</code> のテーマ化で列名の処理にのみ <code>optional</code> を使用するので、注意してください。また <code>matrix</code> メソッドの引数に <code>make.names</code> を参照してください。
859,メソッドに渡す、またはメソッドから渡される追加の引数。
860,論理: 文字ベクトルは係数に変換されるべきか？
861,論理または整数; 256文字(または数値の場合は<code>cut.names</code>)以上の列名を短くするか(そして最後の6文字を<code>" ..."</code> で置き換える)を指定します．
862,(オプション)列名の文字ベクトル.
863,空の列名、すなわち<code>""</code>が(<code>data.frame</code>内で)修正されるべきか否かを示す論理.
864,logical; <code>data.frame()</code>の呼び出しに渡されます。
865,<code>論理</code>、すなわち<code>FALSE, NA, TRUE</code>のうちの1つは、（行列<code>x</code>の）行名が無効な場合にどうすべきかを示すものです。  もし無効であれば、デフォルトの<code>TRUE</code>は <code>make.names(*, unique=TRUE)</code> を呼び出します; <code>make.names=NA</code> は「自動」行名を使い、<code>FALSE</code> は無効行名に対するエラーを通知します。
866,any <span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクトです。
867,<code>NULL</code>またはデータフレームのローネームを示す文字ベクトル.  欠落値は許されない。
868,論理的である。<code>TRUE</code>の場合、行名の設定と列名の変換（構文名への変換：<code>make.names</code>参照）はオプションです。  なお、<span style="font-family：Courier New, Courier; color：<br>R</b></span> の<span class="pkg">base</span> パッケージの <code>as.data.frame()</code> メソッドは、基本的に <code>data.frame(*, check.names = !optional)</code> のテーマ化で列名の処理にのみ <code>optional</code> を使用するので、注意してください。また <code>matrix</code> メソッドの引数に <code>make.names</code> を参照してください。
869,メソッドに渡す、またはメソッドから渡される追加の引数。
870,論理：文字ベクトルは係数に変換されるべきか？
871,論理または整数; 256文字(または数値の場合は<code>cut.names</code>)以上の列名を短くするか(そして最後の6文字を<code>" ..."</code> で置き換える)を指定します．
872,(オプション)列名の文字ベクトル.
873,空の列名、すなわち<code>""</code>が(<code>data.frame</code>内で)修正されるべきか否かを示す論理.
874,logical; <code>data.frame()</code>の呼び出しに渡されます。
875,<code>論理</code>、すなわち<code>FALSE, NA, TRUE</code>のうちの1つは、（行列<code>x</code>の）行名が無効な場合にどうすべきかを示すものです。  もし無効であれば、デフォルトの <code>TRUE</code> は <code>make.names(*, unique=TRUE)</code> を呼び出し、<code>make.names=NA</code> は「自動」行名を使い、<code>FALSE</code> は無効行名に対するエラーを通知します。
876,要約または印刷される<code>Date</code>オブジェクト。
877,計算のための有効桁数。
878,数値または<code>NULL</code>で、印刷されるエントリの最大数を指定する。  デフォルトでは、<code>NULL</code>の場合、<code>getOption("max.print")</code>が使われます。
879,他のメソッドから、または他のメソッドに渡される更なる引数。
880,任意の<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクト。
881,<code>NULL</code>またはデータフレームのrownamesを示す文字ベクトル。  欠落値は許されない。
882,論理的である。<code>TRUE</code>の場合、行名の設定と列名の変換（構文名への変換：<code>make.names</code>参照）はオプションです。  なお、<span style="font-family：Courier New, Courier; color：<br>R</b></span> の<span class="pkg">base</span> パッケージの <code>as.data.frame()</code> メソッドは、基本的に <code>data.frame(*, check.names = !optional)</code> のテーマ化で列名の処理にのみ <code>optional</code> を使用するので、注意してください。また <code>matrix</code> メソッドの引数に <code>make.names</code> を参照してください。
883,メソッドに渡す、またはメソッドから渡される追加の引数。
884,論理: 文字ベクトルは係数に変換されるべきか？
885,論理または整数; 256文字以上(数値の場合は<code>cut.names</code>)の列名を短くするか(そして最後の6文字を<code>" ..."</code> で置き換える)を指定します．
886,(オプション)列名の文字ベクトル.
887,空の列名、すなわち<code>""</code>が(<code>data.frame</code>内で)修正されるべきか否かを示す論理値.
888,logical; <code>data.frame()</code>の呼び出しに渡される。
889,<code>論理</code>、すなわち<code>FALSE, NA, TRUE</code>のうちの一つで、（行列<code>x</code>の）行名が無効な場合にどうすべきかを示す。  もし無効であれば、デフォルトの<code>TRUE</code>は <code>make.names(*, unique=TRUE)</code> を呼び出します; <code>make.names=NA</code> は「自動」行名を使い、<code>FALSE</code> は無効行名に対するエラーを通知します。
890,any <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトです。
891,<code>NULL</code>またはデータフレームのrownamesを与える文字ベクトル。  欠落値は許されない。
892,論理的である。<code>TRUE</code>の場合、行名の設定と列名の変換（構文名への変換：<code>make.names</code>参照）はオプションです。  なお、<span style="font-family：Courier New, Courier; color：<br>R</b></span> の<span class="pkg">base</span> パッケージの <code>as.data.frame()</code> メソッドは、基本的に <code>data.frame(*, check.names = !optional)</code> のテーマ化で列名の処理にのみ <code>optional</code> を使用するので、注意してください。また <code>matrix</code> メソッドの引数に <code>make.names</code> を参照してください。
893,メソッドに渡す、またはメソッドから渡される追加の引数。
894,論理: 文字ベクトルは係数に変換されるべきか？
895,論理または整数; 256文字(または数値の場合は<code>cut.names</code>)以上の列名を短くするか(そして最後の6文字を<code>" ..."</code> で置き換える)を指定します．
896,(オプション) 列名の文字ベクトル.
897,空の列名、すなわち<code>""</code>が(<code>data.frame</code>内で)修正されるべきか否かを示す論理.
898,logical; <code>data.frame()</code>の呼び出しに渡されます。
899,<code>論理</code>、すなわち<code>FALSE, NA, TRUE</code>のうちの1つは、（行列<code>x</code>の）行名が無効な場合にどうすべきかを示すものです。  もし無効であれば、デフォルトの<code>TRUE</code>は <code>make.names(*, unique=TRUE)</code> を呼び出します; <code>make.names=NA</code> は「自動」行名を使い、<code>FALSE</code> は無効行名に対するエラーを通知します。
900,any <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトです。
901,<code>NULL</code>またはデータフレームのrownamesを与える文字ベクトル。  欠落値は許されない。
902,論理的である。<code>TRUE</code>の場合、行名の設定と列名の変換（構文名への変換：<code>make.names</code>参照）はオプションとなります.  なお、<span style="font-family：Courier New, Courier; color：<br>R</b></span> の<span class="pkg">base</span> パッケージの <code>as.data.frame()</code> メソッドは、基本的に <code>data.frame(*, check.names = !optional)</code> のテーマ化で列名の処理にのみ <code>optional</code> を使用しますので、ご注意ください。また <code>matrix</code> メソッドの引数に <code>make.names</code> を指定していることも参照してください。
903,メソッドに渡す、またはメソッドから渡される追加の引数。
904,論理: 文字ベクトルは係数に変換されるべきか？
905,論理または整数; 256文字以上(数値の場合は<code>cut.names</code>)の列名を短くするか(そして最後の6文字を<code>" ..."</code> で置き換える)を指定します.
906,(オプション)列名の文字ベクトル.
907,空の列名、すなわち<code>""</code>が(<code>data.frame</code>内で)修正されるべきか否かを示す論理.
908,logical; <code>data.frame()</code>の呼び出しに渡されます。
909,<code>論理</code>、すなわち<code>FALSE, NA, TRUE</code>のうちの1つで、（行列<code>x</code>の）行名が無効な場合にどうすべきかを示す。  もし無効であれば、デフォルトの<code>TRUE</code>は <code>make.names(*, unique=TRUE)</code> を呼び出します; <code>make.names=NA</code> は「自動」行名を使い、<code>FALSE</code> は無効行名に対するエラーを通知します。
910,any <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトです。
911,<code>NULL</code>またはデータフレームのローネームを示す文字ベクトル.  欠落値は許されない。
912,論理的である。<code>TRUE</code>の場合、行名の設定と列名の変換（構文名への変換：<code>make.names</code>参照）はオプションです。  なお、<span style="font-family：Courier New, Courier; color：<br>R</b></span> の<span class="pkg">base</span> パッケージの <code>as.data.frame()</code> メソッドは、基本的に <code>data.frame(*, check.names = !optional)</code> のテーマ化で列名の処理にのみ <code>optional</code> を使用するので、ご注意ください。また <code>matrix</code> メソッドの引数に <code>make.names</code> を指定していることも参照してください。
913,メソッドに渡す、またはメソッドから渡される追加の引数。
914,論理: 文字ベクトルは係数に変換されるべきか？
915,論理または整数; 256文字以上(数値の場合は<code>cut.names</code>)の列名を短くするか(そして最後の6文字を<code>" ..."</code> で置き換える)を指定します.
916,(オプション)列名の文字ベクトル.
917,空の列名、すなわち<code>""</code>が(<code>data.frame</code>内で)修正されるべきか否かを示す論理.
918,logical; <code>data.frame()</code>の呼び出しに渡されます。
919,<code>論理</code>、すなわち<code>FALSE, NA, TRUE</code>のうちの1つで、（行列<code>x</code>の）行名が無効な場合にどうすべきかを示すものです。  もし無効であれば、デフォルトの<code>TRUE</code>は <code>make.names(*, unique=TRUE)</code> を呼び出します; <code>make.names=NA</code> は「自動」行名を使い、<code>FALSE</code> は無効行名に対するエラーを通知します。
920,任意の<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトです。
921,<code>NULL</code>またはデータフレームのrownamesを与える文字ベクトル。  欠落値は許されない。
922,論理的である。<code>TRUE</code>の場合、行名の設定と列名の変換（構文名への変換：<code>make.names</code>参照）はオプションです。  なお、<span style="font-family：Courier New, Courier; color：<br>R</b></span> の<span class="pkg">base</span> パッケージの <code>as.data.frame()</code> メソッドは、基本的に <code>data.frame(*, check.names = !optional)</code> のテーマ化で列名の処理にのみ <code>optional</code> を使用するので、注意してください。また <code>matrix</code> メソッドの引数に <code>make.names</code> を参照してください。
923,メソッドに渡す、またはメソッドから渡される追加の引数。
924,論理: 文字ベクトルは係数に変換されるべきか？
925,論理または整数; 256文字以上(数値の場合は<code>cut.names</code>)の列名を短縮すべきかどうかを示す(そして最後の6文字は<code>" ..."</code> で置き換える).
926,(オプション) 列名の文字ベクトル。
927,空の列名、すなわち<code>""</code>が(<code>data.frame</code>内で)修正されるべきか否かを示す論理.
928,logical; <code>data.frame()</code>の呼び出しに渡されます。
929,<code>論理</code>、すなわち<code>FALSE, NA, TRUE</code>のうちの1つで、（行列<code>x</code>の）行名が無効な場合にどうすべきかを示す。  もし無効であれば、デフォルトの<code>TRUE</code>は <code>make.names(*, unique=TRUE)</code> を呼び出します; <code>make.names=NA</code> は「自動」行名を使い、<code>FALSE</code> は無効行名に対するエラーを通知します。
930,any <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトです。
931,<code>NULL</code>またはデータフレームのrownamesを与える文字ベクトル.  欠落値は許されない。
932,論理的である。<code>TRUE</code>の場合、行名の設定と列名の変換（構文名への変換：<code>make.names</code>参照）はオプションとなります.  なお、<span style="font-family：Courier New, Courier; color：<br>R</b></span> の<span class="pkg">base</span> パッケージの <code>as.data.frame()</code> メソッドは、基本的に <code>data.frame(*, check.names = !optional)</code> のテーマ化で列名の処理にのみ <code>optional</code> を使用するので、注意してください。また <code>matrix</code> メソッドの <code>make.names</code> 引数を参照してください。
933,メソッドに渡す、またはメソッドから渡される追加の引数。
934,論理: 文字ベクトルは係数に変換されるべきか？
935,論理または整数; 256文字以上(数値の場合は<code>cut.names</code>)の列名を短くするか(そして最後の6文字を<code>" ..."</code> で置き換える)を指定します．
936,(オプション)カラム名の文字ベクトル.
937,空の列名、すなわち<code>""</code>が(<code>data.frame</code>内で)修正されるべきか否かを示す論理.
938,logical; <code>data.frame()</code>の呼び出しに渡されます。
939,<code>論理</code>、すなわち<code>FALSE, NA, TRUE</code>のうちの一つで、（行列<code>x</code>の）行名が無効な場合にどうすべきかを示す。  もし無効であれば、デフォルトの<code>TRUE</code>は <code>make.names(*, unique=TRUE)</code> を呼び出します; <code>make.names=NA</code> は「自動」行名を使い、<code>FALSE</code> は無効行名に対するエラーを通知します。
940,any <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトです。
941,<code>NULL</code>またはデータフレームのrownamesを与える文字ベクトル.  欠落値は許されない。
942,論理的である。<code>TRUE</code>の場合、行名の設定と列名の変換（構文名への変換：<code>make.names</code>参照）はオプションとなります.  なお、<span style="font-family：Courier New, Courier; color：<br>R</b></span> の<span class="pkg">base</span> パッケージの <code>as.data.frame()</code> メソッドは、基本的に <code>data.frame(*, check.names = !optional)</code> のテーマ化で列名の処理にのみ <code>optional</code> を使用するので、注意してください。また <code>matrix</code> メソッドの引数に <code>make.names</code> を参照してください。
943,メソッドに渡す、またはメソッドから渡される追加の引数。
944,論理: 文字ベクトルは係数に変換されるべきか？
945,論理または整数; 256文字(または数値の場合は<code>cut.names</code>)以上の列名を短くするか(そして最後の6文字を<code>" ..."</code> で置き換える)を指定します．
946,(オプション)カラム名の文字ベクトル.
947,空の列名、すなわち<code>""</code>が(<code>data.frame</code>内で)修正されるべきか否かを示す論理.
948,logical; <code>data.frame()</code>の呼び出しに渡されます。
949,<code>論理</code>、すなわち<code>FALSE, NA, TRUE</code>のうちの1つは、（行列<code>x</code>の）行名が無効な場合にどうすべきかを示すものです。  もし無効であれば、デフォルトの<code>TRUE</code>は <code>make.names(*, unique=TRUE)</code> を呼び出します; <code>make.names=NA</code> は「自動」行名を使い、<code>FALSE</code> は無効行名に対するエラーを通知します。
950,任意の<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトです。
951,<code>NULL</code>またはデータフレームのrownamesを与える文字ベクトル。  欠落値は許されない。
952,論理的である。<code>TRUE</code>の場合、行名の設定と列名の変換（構文名への変換：<code>make.names</code>参照）はオプションです。  なお、<span style="font-family：Courier New, Courier; color：<br>R</b></span> の<span class="pkg">base</span> パッケージの <code>as.data.frame()</code> メソッドは、基本的に <code>data.frame(*, check.names = !optional)</code> のテーマ化で列名の処理にのみ <code>optional</code> を使用するので、注意してください。また <code>matrix</code> メソッドの引数に <code>make.names</code> を参照してください。
953,メソッドに渡す、またはメソッドから渡される追加の引数。
954,論理: 文字ベクトルは係数に変換されるべきか？
955,論理または整数; 256文字以上(数値の場合は<code>cut.names</code>)の列名を短くするか(そして最後の6文字を<code>" ..."</code> で置き換える)を指定します.
956,(オプション)カラム名の文字ベクトル。
957,空の列名、すなわち<code>""</code>が(<code>data.frame</code>内で)修正されるべきか否かを示す論理.
958,logical; <code>data.frame()</code>の呼び出しに渡されます。
959,<code>論理</code>、すなわち<code>FALSE, NA, TRUE</code>のうちの1つで、（行列<code>x</code>の）行名が無効な場合にどうすべきかを示す。  もし無効であれば、デフォルトの<code>TRUE</code>は <code>make.names(*, unique=TRUE)</code> を呼び出します; <code>make.names=NA</code> は「自動」行名を使い、<code>FALSE</code> は無効行名に対するエラーを通知します。
960,any <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトです。
961,<code>NULL</code>またはデータフレームのrownamesを与える文字ベクトル.  欠落値は許されない。
962,論理的である。<code>TRUE</code>の場合、行名の設定と列名の変換（構文名への変換：<code>make.names</code>参照）はオプションとなります.  なお、<span style="font-family：Courier New, Courier; color：<br>R</b></span> の<span class="pkg">base</span> パッケージの <code>as.data.frame()</code> メソッドは、基本的に <code>data.frame(*, check.names = !optional)</code> のテーマ化で列名の処理にのみ <code>optional</code> を使用するので、注意してください。また <code>matrix</code> メソッドの引数に <code>make.names</code> を参照してください。
963,メソッドに渡す、またはメソッドから渡される追加の引数。
964,論理: 文字ベクトルは係数に変換されるべきか？
965,論理または整数; 256文字以上(数値の場合は<code>cut.names</code>)の列名を短くするか(そして最後の6文字を<code>" ..."</code> で置き換える)を指定します.
966,(オプション)列名の文字ベクトル.
967,空の列名、すなわち<code>""</code>が(<code>data.frame</code>内で)修正されるべきか否かを示す論理.
968,logical; <code>data.frame()</code>の呼び出しに渡されます。
969,a <code>logical</code>, すなわち <code>FALSE, NA, TRUE</code> のうちの1つで、（行列<code>x</code>の）行名が無効な場合にどうすべきかを示す.  もし無効であれば、デフォルトの<code>TRUE</code>は <code>make.names(*, unique=TRUE)</code> を呼び出します; <code>make.names=NA</code> は「自動」行名を使い、<code>FALSE</code> は無効行名に対するエラーを通知します。
970,any <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトです。
971,<code>NULL</code>またはデータフレームのローネームを指定する文字ベクトル.  欠落値は許されない。
972,論理的である。<code>TRUE</code>の場合、行名の設定と列名の変換（構文名への変換：<code>make.names</code>参照）はオプションとなります。  なお、<span style="font-family：Courier New, Courier; color：<br>R</b></span> の<span class="pkg">base</span> パッケージの <code>as.data.frame()</code> メソッドは、基本的に <code>data.frame(*, check.names = !optional)</code> のテーマ化で列名の処理にのみ <code>optional</code> を使用するので、注意してください。また <code>matrix</code> メソッドの引数に <code>make.names</code> を参照してください。
973,メソッドに渡す、またはメソッドから渡される追加の引数。
974,論理: 文字ベクトルは係数に変換されるべきか？
975,論理または整数; 256文字(または数値の場合は<code>cut.names</code>)以上の列名を短縮すべきかどうかを示す(そして最後の6文字は<code>" ..."</code> で置き換える).
976,(オプション)列名の文字ベクトル.
977,空の列名、すなわち<code>""</code>が(<code>data.frame</code>内で)修正されるべきか否かを示す論理.
978,論理; <code>data.frame()</code>呼び出しに渡されます.
979,<code>論理</code>、すなわち<code>FALSE, NA, TRUE</code>のうちの一つで、（行列<code>x</code>の）行名が無効な場合にどうすべきかを示すものです。  もし無効であれば、デフォルトの<code>TRUE</code>は <code>make.names(*, unique=TRUE)</code> を呼び出します; <code>make.names=NA</code> は「自動」行名を使い、 <code>FALSE</code> は無効行名に対するエラーを通知します.
<code>package_version</code>の場合は、<code>R.version</code>で得られるRversionオブジェクトの代わりとなる。
981,無効な数値バージョンはエラーになるか(デフォルト)、ならないかを示す論理。
982,任意の<span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクト。
983,<code>NULL</code>またはデータフレームのrownamesを与える文字ベクトル.  欠落値は許されない。
984,論理的である。<code>TRUE</code>の場合、行名の設定と列名の変換（構文名への変換：<code>make.names</code>参照）はオプションです。  なお、<span style="font-family：Courier New, Courier; color：<br>R</b></span> の<span class="pkg">base</span> パッケージの <code>as.data.frame()</code> メソッドは、基本的に <code>data.frame(*, check.names = !optional)</code> のテーマ化で列名の処理にのみ <code>optional</code> を使用するので、ご注意下さい。<code>matrix</code> の <code>make.names</code> 引き数も参照して下さい。
985,メソッドに渡す、またはメソッドから渡される追加の引数。
986,論理: 文字ベクトルを係数に変換するか？
987,論理または整数; 256文字(数値の場合は<code>cut.names</code>)以上の列名を短くするか(そして最後の6文字を<code>" ..."</code> で置き換える)を指定します。
988,(オプション)カラム名の文字ベクトル.
989,空の列名、すなわち<code>""</code>が(<code>data.frame</code>内で)修正されるべきか否かを示す論理.
990,logical;<code>data.frame()</code>呼び出しに渡される。
991,<code>論理</code>、すなわち<code>FALSE, NA, TRUE</code>のうちの1つは、（行列<code>x</code>の）行名が無効な場合にどうすべきかを示すものです。  もし無効であれば、デフォルトの<code>TRUE</code>は <code>make.names(*, unique=TRUE)</code> を呼び出します; <code>make.names=NA</code> は「自動」行名を使い、 <code>FALSE</code> は無効行名に対するエラーを通知します.
992,date-timeクラスの1つから印刷または要約されるオブジェクトを指定します。
993,タイムゾーンフォーマットのために、<code>format.POSIXct</code>に渡されます。
994,数値または<code>NULL</code>で、印刷されるエントリの最大数を指定します。  デフォルトでは、<code>NULL</code>の時、<code>getOption("max.print")</code>が使われます。
995,計算の有効桁数:最も重要な時間単位を正確に表現するのに十分な桁数でなければならない。
996,他のメソッドから、または他のメソッドに渡される更なる引数。
997,日付-時間オブジェクト
998,日付-時間オブジェクトまたは文字ベクトル。  (文字ベクトルは<code>as.POSIXct</code>で変換されます)。
999,数値ベクトル(秒単位)
1000,<code>==</code>、<code>!=</code>、<code>&lt;</code>、<code>&lt;=</code>、<code>&gt;</code>または<code>&gt;=</code>から一つを選ぶ。
1001,date-timeクラスの1つから印刷または要約されるオブジェクト。
1002,タイムゾーンフォーマットのために、<code>format.POSIXct</code>に渡されます。
1003,数値または<code>NULL</code>で、印刷されるエントリの最大数を指定します。  デフォルトでは、<code>NULL</code>の時、<code>getOption("max.print")</code>が使用されます。
1004,計算の有効桁数：最も重要な時間単位を正確に表現するのに十分な桁数でなければならない。
1005,他のメソッドから、または他のメソッドに渡される更なる引数。
1006,日付時刻オブジェクト
1007,日付時刻オブジェクトまたは文字ベクトル。  (文字ベクトルは<code>as.POSIXct</code>で変換されます)。
1008,数値ベクトル(秒単位)
1009,<code>==</code>、<code>!=</code>、<code>&lt;</code>、<code>&lt;=</code>または<code>&gt;=</code>から一つを選ぶ。
1010,任意の<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトです。
1011,<code>NULL</code>またはデータフレームのrownamesを与える文字ベクトル.  欠落値は許されない。
1012,論理的である。<code>TRUE</code>の場合、行名の設定と列名の変換（構文名への変換：<code>make.names</code>参照）はオプションとなります.  なお、<span style="font-family：Courier New, Courier; color：<br>R</b></span> の<span class="pkg">base</span> パッケージの <code>as.data.frame()</code> メソッドは、基本的に <code>data.frame(*, check.names = !optional)</code> のテーマ化で列名の処理にのみ <code>optional</code> を使用するので、注意してください。また <code>matrix</code> の引数に <code>make.names</code> を指定していることも見て下さい。
1013,メソッドに渡す、またはメソッドから渡される追加の引数。
1014,論理: 文字ベクトルを係数に変換するか？
1015,logical or integer; 256文字(数値の場合は<code>cut.names</code>)以上の列名を短くするか(そして最後の6文字を<code>" ..."</code> で置き換える)を指定します.
1016,(オプション)列名の文字ベクトル。
1017,空の列名、すなわち<code>""</code>が(<code>data.frame</code>内で)修正されるべきか否かを示す論理.
1018,論理; <code>data.frame()</code>呼び出しに渡される。
1019,<code>論理</code>、すなわち<code>FALSE, NA, TRUE</code>のうちの1つは、（行列<code>x</code>の）行名が無効な場合にどうすべきかを示すものです。  もし無効であれば、デフォルトの<code>TRUE</code>は<code>make.names(*, unique=TRUE)</code> を呼び出します。<code>make.names=NA</code>は「自動」行名を使い、<code>FALSE</code>値は無効行名に対するエラーを通知するでしょう。
1020,因子（文字列を含む）として解釈できる1つ以上のオブジェクト、またはその構成要素がそのように解釈できるリスト（またはデータフレーム）。  (<code>as.table</code>では、特定のメソッドに渡される引数、<code>as.data.frame</code>では、未使用。)
1021,<code>...</code>の全ての要因について除去するレベル.  itが<code>NA</code>を含まず、<code>useNA</code>が指定されていない場合、<code>useNA = "ifany"</code> を意味する。  非要素引数に対する解釈は、'Details'を参照。
1022,表に<code>NA</code>の値を含めるかどうか.詳細'を参照。  省略することができる。
1023,結果の次元に与える名前（<em>dimnames names</em>）を指定します。
1024,デフォルトの<code>dnn</code>がどのように構成されるかを制御します。  詳細'を参照して下さい。
1025,任意の<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>オブジェクト、または<code>as.data.frame</code>メソッドのクラス<code>"table"<code>を継承したオブジェクト。なお、<code>as.data.frame.table(x, *)</code> は、<code>array</code>を「リシェイプ」するためにテーブル以外の <code>x</code> に対して明示的に呼ばれることがある。
1026,データフレームの行名を与える文字ベクトル。
1027,テーブルエントリーの列に使用される名前、通常はカウントである。
1028,論理：分類因子は、因子（デフォルト）または文字ベクトルとして返されるべきか？
1029,<code>provideDimnames</code>に渡されます。
1030,任意の<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトです。
1031,<code>NULL</code>またはデータフレームのrownamesを与える文字ベクトル.  欠落値は許されない。
1032,論理的である。<code>TRUE</code>の場合、行名の設定と列名の変換（構文名への変換：<code>make.names</code>参照）はオプションです。  なお、<span style="font-family：Courier New, Courier; color：<br>R</b></span> の<span class="pkg">base</span> パッケージの <code>as.data.frame()</code> メソッドは、基本的に <code>data.frame(*, check.names = !optional)</code> のテーマ化で列名の処理にのみ <code>optional</code> を使用するので、注意してください。また <code>matrix</code> メソッドの <code>make.names</code> 引数を参照してください。
1033,メソッドに渡す、またはメソッドから渡される追加の引数。
1034,論理: 文字ベクトルは係数に変換されるべきか？
1035,論理または整数; 256文字以上(数値の場合は<code>cut.names</code>)の列名を短くするか(そして最後の6文字を<code>" ..."</code> で置き換える)を指定します．
1036,(オプション)カラム名の文字ベクトル。
1037,空の列名、すなわち<code>""</code>が(<code>data.frame</code>内で)修正されるべきか否かを示す論理.
1038,logical; <code>data.frame()</code>の呼び出しに渡されます。
1039,<code>論理</code>、すなわち<code>FALSE, NA, TRUE</code>のうちの一つで、（行列<code>x</code>の）行名が無効な場合にどうすべきかを示すものです。  もし無効であれば、デフォルトの<code>TRUE</code>は <code>make.names(*, unique=TRUE)</code> を呼び出します; <code>make.names=NA</code> は「自動」行名を使い、<code>FALSE</code> は無効行名に対するエラーを通知します。
1040,any <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトです。
1041,<code>NULL</code>またはデータフレームのrownamesを与える文字ベクトル.  欠落値は許されない。
1042,論理的である。<code>TRUE</code>の場合、行名の設定と列名の変換（構文名への変換：<code>make.names</code>参照）はオプションとなります.  なお、<span style="font-family：Courier New, Courier; color：<br>R</b></span> の<span class="pkg">base</span> パッケージの <code>as.data.frame()</code> メソッドは、基本的に <code>data.frame(*, check.names = !optional)</code> のテーマ化で列名の処理にのみ <code>optional</code> を使用するので、注意してください。また <code>matrix</code> メソッドの引数に <code>make.names</code> を参照してください。
1043,メソッドに渡す、またはメソッドから渡される追加の引数。
1044,論理: 文字ベクトルは係数に変換されるべきか？
1045,論理または整数; 256文字(または数値の場合は<code>cut.names</code>)以上の列名を短くするか(そして最後の6文字を<code>" ..."</code> で置き換える)を指定します．
1046,(オプション)列名の文字ベクトル。
1047,空の列名、すなわち<code>""</code>が(<code>data.frame</code>内で)修正されるべきか否かを示す論理である。
1048,論理; <code>data.frame()</code>の呼び出しに渡されます。
1049,<code>論理</code>、すなわち<code>FALSE, NA, TRUE</code>のうちの1つは、（行列<code>x</code>の）行名が無効な場合にどうすべきかを示すものです。  もし無効であれば、デフォルトの<code>TRUE</code>は <code>make.names(*, unique=TRUE)</code> を呼び出します; <code>make.names=NA</code> は「自動」行名を使い、<code>FALSE</code> は無効行名に対するエラーを通知します。
1050,変換されるオブジェクト。
1051,<code>文字</code>列。  指定されない場合、最初の非<code>NA</code>要素に対して<code>tryFormats</code>を1つずつ試し、どれもうまくいかない場合はエラーを出すことになる。  それ以外の場合は、<code>strptime()</code>で処理され、そのヘルプページには利用可能な変換仕様が記述されています。
1052,<code>character</code> vector of <code>format</code> strings if <code>format</code> is not specified to try.
1053,<code>論理</code>は、フォーマット推測が成功しなかった場合、<code>NA</code>を(エラーを通知する代わりに)返すことを示します。
1054,<code>Date</code>オブジェクト、または<code>as.Date(origin, ...)</code> によってそのようなオブジェクトに強制されることができる何かである。
1055,タイムゾーン名。
1056,他のメソッドから、または他のメソッドに渡される追加の引数。<code>as.character</code>および<code>as.Date</code>メソッド用の<code>format</code>を含む。
1057,変換されるオブジェクト。
1058,<code>character</code>文字列を指定します。  指定されない場合、最初の非<code>NA</code>要素に対して<code>tryFormats</code>を1つずつ試し、どれもうまくいかない場合はエラーを出すことになる。  それ以外の場合は、<code>strptime()</code>で処理され、そのヘルプページには利用可能な変換仕様が記述されています。
1059,<code>character</code> vector of <code>format</code> strings to try if <code>format</code> is not specified.
1060,<code>論理</code>は、フォーマット推測が成功しない場合、<code>NA</code>を(エラーを通知する代わりに)返すことを示します。
1061,<code>Date</code>オブジェクト、または<code>as.Date(origin, ...)</code> によってそのようなオブジェクトに強制されることができる何かである。
1062,タイムゾーン名。
1063,他のメソッドから、または他のメソッドに渡される更なる引数。<code>as.character</code>および<code>as.Date</code>メソッド用の<code>format</code>を含む。
1064,変換されるオブジェクト。
1065,<code>character</code>文字列を指定します。  指定されない場合、最初の非<code>NA</code>要素に対して<code>tryFormats</code>を1つずつ試し、どれもうまくいかない場合はエラーを出すことになる。  それ以外の場合は、<code>strptime()</code>で処理され、ヘルプページに利用可能な変換仕様が記述されています。
1066,<code>character</code> vector of <code>format</code> strings if <code>format</code> is not specified to try.
1067,<code>論理</code>は、フォーマット推測が成功しない場合、<code>NA</code>を(エラーを通知する代わりに)返すことを示します。
1068,<code>Date</code>オブジェクト、または<code>as.Date(origin, ...)</code> によってそのようなオブジェクトに強制されることができる何かである。
1069,タイムゾーン名。
1070,他のメソッドから、または他のメソッドに渡される更なる引数。<code>as.character</code>および<code>as.Date</code>メソッド用の<code>format</code>を含む。
1071,変換されるオブジェクト。
1072,<code>character</code>文字列を指定します。  指定されない場合、最初の非<code>NA</code>要素に対して<code>tryFormats</code>を1つずつ試し、どれもうまくいかない場合はエラーを出すことになる。  それ以外の場合は、<code>strptime()</code>で処理され、そのヘルプページには利用可能な変換仕様が記述されています。
1073,<code>character</code> vector of <code>format</code> strings to try if <code>format</code> is not specified.
1074,<code>論理</code>は、フォーマット推測が成功しなかった場合、<code>NA</code>を(エラーを通知する代わりに)返すことを示します。
1075,<code>Date</code>オブジェクト、または<code>as.Date(origin, ...)</code> によってそのようなオブジェクトに強制されることができる何かである。
1076,タイムゾーン名。
1077,他のメソッドから、または他のメソッドに渡される更なる引数。<code>as.character</code>および<code>as.Date</code>メソッド用の<code>format</code>を含む。
1078,変換されるオブジェクト。
1079,<code>character</code>文字列を指定します。  指定されない場合、最初の非<code>NA</code>要素に対して<code>tryFormats</code>を1つずつ試し、どれもうまくいかない場合はエラーを出すことになります。  それ以外の場合は、<code>strptime()</code>で処理され、ヘルプページに利用可能な変換仕様が記述されています。
1080,<code>character</code> vector of <code>format</code> strings to try if <code>format</code> is not specified.
1081,<code>論理</code>は、フォーマット推測が成功しなかった場合、<code>NA</code>を(エラーを通知する代わりに)返すことを示します。
1082,<code>Date</code>オブジェクト、または<code>as.Date(origin, ...)</code> によってそのようなオブジェクトに強制されることができる何かである。
1083,タイムゾーン名.
1084,他のメソッドから、または他のメソッドに渡される更なる引数。<code>as.character</code>および<code>as.Date</code>メソッド用の<code>format</code>を含む。
1085,変換されるオブジェクト。
1086,<code>character</code>文字列を指定します。  指定されない場合、最初の非<code>NA</code>要素に対して<code>tryFormats</code>を1つずつ試し、どれもうまくいかない場合はエラーを出すことになる。  それ以外の場合は、<code>strptime()</code>で処理され、そのヘルプページには利用可能な変換仕様が記述されています。
1087,<code>character</code> vector of <code>format</code> strings if <code>format</code> is not specified if try to try.
1088,<code>論理</code>は、フォーマット推測が成功しない場合、<code>NA</code>を返すことを示します(エラーを知らせる代わりに).
1089,<code>Date</code>オブジェクト、または<code>as.Date(origin, ...)</code> によってそのようなオブジェクトに強制されることができる何かである。
1090,タイムゾーン名。
1091,他のメソッドから、または他のメソッドに渡される更なる引数。<code>as.character</code>および<code>as.Date</code>メソッド用の<code>format</code>を含む。
1092,変換されるオブジェクト。
1093,<code>character</code>文字列を指定します。  指定されない場合、最初の非<code>NA</code>要素に対して<code>tryFormats</code>を1つずつ試し、どれもうまくいかない場合はエラーを出すことになります。  それ以外の場合は、<code>strptime()</code>で処理され、そのヘルプページには利用可能な変換仕様が記述されています。
1094,<code>character</code> vector of <code>format</code> strings to try if <code>format</code> is not specified.
1095,<code>論理</code>は、フォーマット推測が成功しない場合、<code>NA</code>を(エラーを通知する代わりに)返すことを示します。
1096,<code>Date</code>オブジェクト、または<code>as.Date(origin, ...)</code> によってそのようなオブジェクトに強制されることができる何か。
1097,タイムゾーン名.
1098,他のメソッドから、または他のメソッドに渡される更なる引数。<code>as.character</code>および<code>as.Date</code>メソッド用の<code>format</code>を含む。
1099,date-timeまたはdateオブジェクト。
1100,変換に使用されるオプションのタイムゾーン指定、主に<code>"POSIXlt"</code>オブジェクトの場合。
1101,文字列。  結果の単位を指定します。  省略可能です。
1102,文字列.  <code>units</code>と同様であるが、省略はできない。
1103,時間間隔を指定する文字列または数値。
1104,<code>tim</code>のフォーマットを指定する文字：<code>strptime</code>を参照。  デフォルトは、ロケール固有の時間フォーマットである。
1105,クラス<code>"difftime"</code>を継承したオブジェクトです。
1106,他のメソッドに渡す、または他のメソッドから渡される引数。
1107,希望する長さを指定する非負の整数。2倍値は整数に強制されます：1以外の長さの引数を与えるとエラーになります。
1108,強制される、またはテストされるオブジェクト。
1109,他のメソッドに渡される、または他のメソッドから渡される追加の引数。
1110,date-timeまたはdateオブジェクト。
1111,変換に使用されるオプションのタイムゾーン指定、主に<code>"POSIXlt"</code>オブジェクトの場合。
1112,文字列。  変換結果の単位を指定します。  省略可能です。
1113,文字列.  <code>units</code>と同様ですが、省略はできません。
1114,時間間隔を指定する文字列または数値。
1115,<code>tim</code>のフォーマットを指定する文字：<code>strptime</code>を参照。  デフォルトはロケール固有の時間フォーマットである。
1116,クラス<code>"difftime"</code>を継承したオブジェクトです。
1117,他のメソッドに渡す、または他のメソッドから渡される引数。
1118,<span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクトに変換されます。
1119,変換に使用されるタイムゾーン指定（<em>必要な場合</em>）。  システム固有（タイムゾーンを参照）ですが、<code>""</code>は現在のタイムゾーンで、<code>"GMT"</code>はUTC（協定世界時）です。  無効な値は、最も一般的にはUTCとして扱われ、いくつかのプラットフォームでは警告が表示されます。
1120,他のメソッドに渡す、または他のメソッドから渡される追加の引数。
1121,<code>strptime</code>で使用される日付-時間形式を示す文字列。
1122,<code>format</code>が指定されない場合に試す<code>format</code>文字列の<code>character</code>ベクトル.
1123,<code>論理</code>は、フォーマット推測が成功しなかった場合、<code>NA</code>を（エラーを知らせる代わりに）返すことを示します。
1124,日付-時間オブジェクト、または<code>as.POSIXct(tz = "GMT") </code> によってそのようなオブジェクトに強制できる何かである。
1125,an <span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクトに変換する。  すでに環境である場合は、それを返すだけでよい。  もしそれが正の数であれば、検索リストのその位置に対応する環境を返します。それが<code>-1</code>の場合、呼び出された環境を返します。  文字列の場合は，その文字列を検索リストの名前にマッチさせる。

1126,リストであれば、<code>list2env(x, parent = emptyenv())</code> と同等のものが返されます。

1127,<code>is.object(x)</code>が真で、<code>as.environment</code>メソッドが見つかった<code>class</code>がある場合、それが使われます。
1128,<code>expression</code>がある：<span style="font-family：Courier New, Courier; color：<br><code>as.expression</code>: メソッドに渡される引数。
1129,任意の<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトです。
1130,<code>expression</code>：<span style="font-family：Courier New, Courier; color：<br><code>as.expression</code>: メソッドに渡される引数。
1131,任意の<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトです。
1132,データのベクトルで、通常は少数の異なる値をとります。
1133,オプションとして、<code>x</code>が取ったかもしれないユニークな値(文字列として)のベクトルを指定します。  デフォルトは、<code>as.character(x)</code>が取った値のユニークなセットで、<em>の昇順にソートされます。  なお、この集合は<code>sort(unique(x))</code>より小さく指定することができる。
1134,<em>either</em>レベルのラベルのオプションの文字ベクトル(<code>exclude</code>内のものを削除した後の<code>levels</code>と同じ順序で)、<em>or</em>長さ 1の文字列。 <code>labels</code>内の重複値は同じ要因レベルに<code>x</code>の異なる値をマップするのに使うことが出来ます。
1135,レベルのセットを形成するときに除外される値のベクトル。  これは、<code>x</code>と同じレベルセットを持つ因子であってもよいし、<code>文字</code>であるべきである。
1136,レベルが（与えられた順序で）順序付けられたとみなされるべきかどうかを決定するための論理フラグ。
1137,レベル数の上限; '詳細'を参照のこと。
1138,(<code>ordered(.)</code>内)：<code>ordered</code>自身を除いた上記のいずれかを指定します。
1139,<code>NA</code>レベルが使用される場合のみ、すなわち<code>any(is.na(x))</code>の場合のみ追加されます.
1140,変換するオブジェクト、デフォルトのメソッドのためのリスト。
1141,追加引数、オブジェクトに依存する
1142,関数が定義されるべき環境
1143,変換するオブジェクト、デフォルトのメソッドのためのリスト。
1144,追加引数、オブジェクトに依存
1145,関数が定義されるべき環境
1146,オブジェクト、クラス<code>"hexmode"</code>から継承されるメソッドのためのもの。
1147,<code>NULL</code>または、使用される最小フィールド幅を指定する正の整数、先行ゼロによるパディング。
1148,大文字と小文字のどちらを使うかを示す論理(デフォルト)。
1149,他のメソッドに渡される、または他のメソッドから渡される追加の引数。
1150,希望する長さを指定する非負の整数。2倍値は、整数に強制されます。
1151，強制される、またはテストされるオブジェクト。
1152,他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
1153,オブジェクト、おそらく名前付き。
1154,強制されるかテストされるオブジェクト。
1155,全ての値をコピーするか、(デフォルト)名前がドットで始まらないものだけをコピーするかを示す論理です。
1156,結果のリストの<code>names</code>がソートされるべきかどうかを示す論理です（ますます）。  これはややコストがかかるが、環境の比較には有用であることに注意されたい。
1157,オブジェクト、おそらく名前付き。
1158,強制されるかテストされるオブジェクト。
1159,すべての値をコピーするか、（デフォルトで）名前がドットで始まらないものだけをコピーするかを示す論理。
1160,結果のリストの<code>names</code>がソートされるべきかどうかを示す論理です（ますます）。  これはややコストがかかるが、環境の比較には有用であることに注意されたい。
1161,要約または印刷される<code>Date</code>オブジェクト。
1162,計算のための有効桁数。
1163,数値または<code>NULL</code>で、印刷されるエントリの最大数を指定する。  デフォルトでは、<code>NULL</code>の場合、<code>getOption("max.print")</code>が使用されます.
1164,他のメソッドから、または他のメソッドに渡される更なる引数。
1165,オブジェクト、おそらく名前付き。
1166,強制されるかテストされるオブジェクト。
1167,すべての値をコピーするか（デフォルト）、名前がドットで始まらないものだけをコピーするかを示す論理です。
1168,結果のリストの<code>names</code>がソートされるべきかどうかを示す論理です（ますます）。  これは多少コストがかかるが、環境の比較には有用であることに注意されたい。
1169,date-timeまたはdateオブジェクト。
1170,主に<code>"POSIXlt"</code>オブジェクトの変換に使用されるオプションのタイムゾーン指定です。
1171,文字列。  結果の単位を指定します。  省略可能です。
1172,文字列.  <code>units</code>と同様ですが、省略はできません。
1173,時間間隔を指定する文字列または数値。
1174,<code>tim</code>のフォーマットを指定する文字：<code>strptime</code>を参照。  デフォルトは、ロケール固有の時間フォーマットである。
1175,クラス<code>"difftime"</code>を継承したオブジェクトです。
1176,他のメソッドに渡される、または他のメソッドから渡される引数。
1177,オブジェクト、おそらく名前付き。
1178,強制されるかテストされるオブジェクト。
1179,全ての値をコピーするか(デフォルト)名前がドットで始まらないものだけをコピーするかを示す論理です。
1180,結果のリストの<code>names</code>がソートされるべきかどうかを示す論理です（ますます）。  これはややコストがかかるが、環境の比較には有用であることに注意されたい。
1181,オブジェクト、おそらく名前付き。
1182,強制される、またはテストされるオブジェクト。
1183,すべての値をコピーするか、（デフォルトで）名前がドットで始まらないものだけをコピーするかを示す論理。
1184,結果のリストの<code>names</code>がソートされるべきかどうかを示す論理です（ますます）。  これはややコストがかかるが、環境の比較には有用であることに注意されたい。
1185,オブジェクト(名前付きもあり)
1186,強制されるかテストされるオブジェクト。
1187,すべての値をコピーするか、（デフォルトで）名前がドットで始まらないものだけをコピーするかを示す論理。
1188,結果のリストの<code>names</code>がソートされるべきかどうかを示す論理です（ますます）。  これはややコストがかかるが、環境の比較には有用であることに注意されたい。
<code>package_version</code>の場合は、<code>R.version</code>で取得したRversionオブジェクトの代わりになります。
1190,無効な数値バージョンはエラーになるか(デフォルト)、ならないかを示す論理です。
1191,date-timeクラスの1つから印刷または要約されるオブジェクトを指定します。
1192,タイムゾーンフォーマットのために、<code>format.POSIXct</code>に渡されます。
1193,数値または<code>NULL</code>で、印刷されるエントリの最大数を指定します。  デフォルトでは、<code>NULL</code>の時、<code>getOption("max.print")</code>が使われます。
1194,計算の有効桁数:最も重要な時間単位を正確に表すのに十分な桁数であるべきです。
1195,他のメソッドから、または他のメソッドに渡される更なる引数。
1196,日付-時間オブジェクト
1197,日付-時間オブジェクトまたは文字ベクトル。  (文字ベクトルは<code>as.POSIXct</code>で変換されます)。
1198,数値ベクトル(秒単位)
1199,<code>==</code>、<code>!=</code>、<code>&lt;=</code>、<code>&gt;</code>または<code>&gt;=</code>のいずれか一つ。
1200,date-timeクラスの1つから、印刷または要約されるオブジェクトを指定します。
1201,タイムゾーンフォーマットのために、<code>format.POSIXct</code>に渡されます。
1202,数値または<code>NULL</code>で、印刷されるエントリの最大数を指定します。  デフォルトでは、<code>NULL</code>の時、<code>getOption("max.print")</code>が使われます。
1203,計算の有効桁数:最も重要な時間単位を正確に表すのに十分な桁数であるべきです。
1204,他のメソッドから、または他のメソッドに渡される更なる引数。
1205,日付-時間オブジェクト
1206,日付時間オブジェクトまたは文字ベクトル。  (文字ベクトルは<code>as.POSIXct</code>で変換されます)。
1207,数値ベクトル(秒単位)
1208,<code>==</code>、<code>!=</code>、<code>&lt;</code>、<code>&lt;=</code>、<code>&gt;</code>または<code>&gt;=</code>から一つを選ぶ。
1209,希望する長さを指定する非負の整数.ダブル値は整数に強制される:1以外の長さの引数を供給することはエラーである。
1210,強制される、またはテストされるオブジェクト。
1211,他のメソッドに渡される、または他のメソッドから渡される更なる引数。
1212,希望する長さを指定する非負整数。2倍値はintegerに強制されます。
1213,強制される、またはテストされるオブジェクト。
1214,他のメソッドに渡される、または他のメソッドから渡される追加の引数。
1215,オプションのデータベクタ（リストまたは<code>式</code>ベクタを含む）です。  非アトミッククラスの<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトは <code>as.vector</code> によって強制され、すべての属性は破棄されます。
1216,希望する行の数。
1217,希望する列の数。
1218,論理的である。<code>FALSE</code> (デフォルト)の場合、行列は列で埋められ、それ以外の場合、行列は行で埋められる。
1219,行列の<code>dimnames</code>属性:<code>NULL</code>または長さ2の<code>list</code>で、行と列の名前をそれぞれ指定します。  空のリストは <code>NULL</code> として扱われ、長さ 1 のリストは行の名前として扱われます。  リストには名前を付けることができ、リスト名は次元の名前として使用されます。
1220,an <span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクトです。
1221,メソッドに渡される、またはメソッドから渡される追加の引数。
1222,結果の行列が(<code>NULL</code>ではなく)<code>rownames</code>の文字を持つべきかどうかを示す論理です。  デフォルトの <code>NA</code> は、データフレームが '自動' 行名を持っている場合、または0行データフレームに対して <code>NULL</code>rownames を使用します。
1223,オプションのデータベクタ（リストまたは<code>式</code>ベクタを含む）です。  非アトミッククラスの<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトは <code>as.vector</code> によって強制され、すべての属性は破棄されます。
1224,希望する行の数。
1225,希望する列の数。
1226,論理的である。<code>FALSE</code> (デフォルト)の場合、行列は列で埋められ、それ以外の場合、行列は行で埋められる。
1227,行列の<code>dimnames</code>属性:<code>NULL</code>または長さ2の<code>list</code>で、行と列の名前をそれぞれ指定します。  空のリストは <code>NULL</code> として扱われ、長さ 1 のリストは行の名前として扱われます。  リストには名前を付けることができ、リスト名は次元の名前として使用されます。
1228,an <span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクトです。
1229,メソッドに渡される、またはメソッドから渡される追加の引数。
1230,結果の行列が(<code>NULL</code>ではなく)<code>rownames</code>の文字を持つべきかどうかを示す論理です。  デフォルトの <code>NA</code> は、データフレームが '自動' 行名を持っている場合、または0行データフレームに対して <code>NULL</code>rownames を使用します。
1231,オプションのデータベクタ（リストまたは<code>式</code>ベクタを含む）です。  非アトミッククラスの<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトは <code>as.vector</code> によって強制され、すべての属性は破棄されます。
1232,希望する行の数。
1233,希望する列の数.
1234,論理的である。<code>FALSE</code> (デフォルト)の場合、行列は列で埋められ、それ以外の場合、行列は行で埋められる。
1235,行列の<code>dimnames</code>属性:<code>NULL</code>または長さ2の<code>list</code>で、行と列の名前をそれぞれ指定します。  空のリストは <code>NULL</code> として扱われ、長さ 1 のリストは行の名前として扱われます。  リストには名前を付けることができ、リスト名は次元の名前として使用されます。
1236,an <span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクトです。
1237,メソッドに渡される、またはメソッドから渡される追加の引数。
1238,結果の行列が(<code>NULL</code>ではなく)<code>rownames</code>の文字を持つべきかどうかを示す論理です。  デフォルトの <code>NA</code> は、データフレームが '自動' 行名を持っている場合、または0行データフレームに対して <code>NULL</code>rownames を使用します。
1239,any <span style="font-family：Courier New, Courier; color：<b>R</b></span> オブジェクト、典型的には<code>character</code>文字列のベクトルです。
1240,オプションの<code>logical</code>は、<code>print()</code>に渡され、<code>print.default()</code>で使用され、右寄せされるべきかどうかを示している。
1241,クラス<code>"noquote"</code>のオブジェクトです。
1242,<code>print</code>のような次のメソッドに渡されるさらなるオプション。
1243,汎用<code>c</code>関数との互換性のため。
1244,date-timeクラスの1つから、印刷または要約されるオブジェクトを指定します。
1245,タイムゾーンフォーマットのために、<code>format.POSIXct</code>に渡される。
1246,数値または<code>NULL</code>で、印刷されるエントリの最大数を指定します。  デフォルトでは、<code>NULL</code>の時、<code>getOption("max.print")</code>が使われます。
1247,計算の有効桁数:最も重要な時間単位を正確に表すのに十分な桁数であるべきです。
1248,他のメソッドから、または他のメソッドに渡される更なる引数。
1249,日付-時間オブジェクト
1250、日付-時間オブジェクトまたは文字ベクトル。  (文字ベクトルは<code>as.POSIXct</code>で変換されます)。
1251,数値ベクトル(秒単位)
1252,<code>==</code>、<code>!=</code>、<code>&lt;</code>、<code>&lt;=</code>、<code>&gt;</code>、<code>&gt;=</code>のいずれか一つ。
1253,強要されるかテストされるオブジェクト。
1254,テストされるか、または強要されるオブジェクト。
1255,無視される。
1256,テストされるか、または強要される目的語。
1257,無視される。
1258,希望する長さを指定する非負の整数。2倍値は整数に強制されます。
1259,強制される、またはテストされるオブジェクト。
1260,他のメソッドに渡される、または他のメソッドから渡される更なる引数。
1261,適切な数値バージョン文字列を持つ文字ベクトル(「詳細」参照); <code>package_version</code> の場合、代わりに <code>R.version</code> によって得られる Rversion オブジェクトがある。
1262,無効な数値バージョンはエラーになるか(デフォルト)、ならないかを示す論理です。
1263,クラス<code>"octmode"</code>を継承するメソッドのためのオブジェクトです。
1264,<code>NULL</code>または、使用される最小フィールド幅を指定する正の整数で、先頭のゼロによってパディングされる。
1265,他のメソッドに渡される、または他のメソッドから渡される追加の引数。
1266,データのベクトルで、通常、少数の異なる値をとります。
1267,オプションとして、<code>x</code>が取ったかもしれないユニークな値(文字列として)のベクトル。  デフォルトは、<code>as.character(x)</code>が取った値のユニークなセットで、<em><code>x</code></em>の昇順にソートされています。  なお、この集合は<code>sort(unique(x))</code>より小さいと指定することができる。
1268,<em>either</em>レベルのラベルのオプションの文字ベクトル(<code>exclude</code>のものを削除した後の<code>levels</code>と同じ順序で)、<em>or</em>長さ 1の文字列。 <code>labels</code>の重複した値は、同じ因子レベルに<code>x</code>の異なる値マッピングに用いることができます。
1269,レベルのセットを形成するときに除外される値のベクトルである。  これは、<code>x</code>と同じレベルセットを持つ因子であってもよいし、<code>文字</code>であるべきである。
1270,レベルが（与えられた順序で）順序付けられたとみなされるべきかどうかを決定するための論理フラグ。
1271,レベル数の上限; '詳細'を参照のこと。
1272,(<code>ordered(.)</code>内)：<code>ordered</code>自身を除けば、上記のいずれか。
1273,<code>NA</code>レベルが使用される場合のみ、すなわち<code>any(is.na(x))</code>の場合のみ追加されます.
1274,適切な数値バージョン文字列を持つ文字ベクトル(「詳細」参照); <code>package_version</code> の場合、代わりに <code>R.version</code> によって得られる Rversion オブジェクト。
1275,無効な数値バージョンはエラーになるか(デフォルト)、ならないかを示す論理です。
1276,オブジェクト（名前付きも可）。
1277,強制されるかテストされるオブジェクト。
1278,すべての値をコピーするか（デフォルト）名前がドットで始まらないものだけをコピーするかを示す論理。
1279,結果のリストの<code>names</code>がソートされるべきかどうかを示す論理です（ますます）。  これはややコストがかかるが、環境の比較には有用であることに注意されたい。
1280,<span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクトに変換されます。
1281,変換に使用されるタイムゾーンの指定。  システム固有（タイムゾーンを参照）ですが、<code>""</code>は現在のタイムゾーンで、<code>"GMT"</code>はUTC（協定世界時）です。  無効な値は、最も一般的にはUTCとして扱われ、いくつかのプラットフォームでは警告が表示されます。
1282,他のメソッドに渡す、または他のメソッドから渡される追加の引数。
1283,<code>strptime</code>で使用される日付-時間形式を示す文字列。
1284,<code>format</code>が指定されない場合に試される<code>format</code>文字列の<code>character</code>ベクトルです.
1285,<code>論理</code>は、フォーマット推測が成功しなかった場合、<code>NA</code>を(エラーを通知する代わりに)返すことを示します。
1286,日時オブジェクト、または<code>as.POSIXct(tz = "GMT")</code> によってそのようなオブジェクトに強制できる何か。
1287,<span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクトに変換されます。
1288,変換に使用されるタイムゾーンの指定。  システム固有（タイムゾーンを参照）ですが、<code>""</code>は現在のタイムゾーンで、<code>"GMT"</code>はUTC（協定世界時）です。  無効な値は、最も一般的にはUTCとして扱われ、いくつかのプラットフォームでは、警告が表示されます。
1289,他のメソッドに渡す、または他のメソッドから渡される追加の引数。
1290,<code>strptime</code>で使用される日付-時間形式を示す文字列。
1291,<code>format</code>が指定されない場合に試される<code>format</code>文字列の<code>character</code>ベクトルです.
1292,<code>論理</code>は、フォーマット推測が成功しない場合、<code>NA</code>を(エラーを通知する代わりに)返すことを示します。
1293,日付時間オブジェクト、または<code>as.POSIXct(tz = "GMT") </code> によってそのようなオブジェクトに強制されることができる何かである。
1294,<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトに変換されます。
1295,変換に使用されるタイムゾーン指定、<em>1つが必要な場合</em>。  システム固有（タイムゾーンを参照）ですが、<code>""</code>は現在のタイムゾーンで、<code>"GMT"</code>はUTC（協定世界時）です。  無効な値は、最も一般的にはUTCとして扱われ、いくつかのプラットフォームでは警告が表示されます。
1296,他のメソッドに渡す、または他のメソッドから渡される追加の引数。
1297,<code>strptime</code>で使用される日付-時間形式を与える文字列。
1298,<code>format</code>が指定されない場合に試される<code>format</code>文字列の<code>character</code>ベクトルです.
1299,<code>論理</code>は、フォーマット推測が成功しない場合、<code>NA</code>を(エラーを通知する代わりに)返すことを示します。
1300,日付時間オブジェクト、または<code>as.POSIXct(tz = "GMT") </code> によってそのようなオブジェクトに強制されることができる何か。
1301,<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトに変換される。
1302,変換に使用されるタイムゾーン指定（<em>必要な場合</em>）。  システム固有（タイムゾーンを参照）ですが、<code>""</code>は現在のタイムゾーンで、<code>"GMT"</code>はUTC（協定世界時）です。  無効な値は、最も一般的にはUTCとして扱われ、いくつかのプラットフォームでは、警告が表示されます。
1303,他のメソッドに渡す、または他のメソッドから渡される追加の引数。
1304,<code>strptime</code>で使用される日付-時間形式を示す文字列。
1305,<code>format</code>が指定されない場合に試す<code>format</code>文字列の<code>character</code>ベクトル.
1306,<code>論理</code>は、フォーマット推測が成功しなかった場合、<code>NA</code>を(エラーを通知する代わりに)返すことを示します.
1307,日時オブジェクト、または<code>as.POSIXct(tz = "GMT") </code>によってそのようなオブジェクトに強制できる何か。
1308,<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトに変換される。
1309,変換に使用されるタイムゾーン指定（<em>必要な場合</em>）。  システム固有（タイムゾーンを参照）ですが、<code>""</code>は現在のタイムゾーンで、<code>"GMT"</code>はUTC（協定世界時）です。  無効な値は、最も一般的にはUTCとして扱われ、いくつかのプラットフォームでは警告が表示されます。
1310,他のメソッドに渡す、または他のメソッドから渡される追加の引数。
1311,<code>strptime</code>で使用される日付-時間形式を与える文字列。
1312,<code>format</code>が指定されない場合に試す<code>format</code>文字列の<code>character</code>ベクトル.
1313,<code>論理</code>は、フォーマット推測が成功しない場合、<code>NA</code>を(エラーを通知する代わりに)返すことを示します。
1314,日付時間オブジェクト、または<code>as.POSIXct(tz = "GMT") </code> によってそのようなオブジェクトに強制されることができる何かである。
1315,<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトに変換されます。
1316,変換に使用されるタイムゾーン指定(<em>必要な場合</em>)。  システム固有（タイムゾーンを参照）ですが、<code>""</code>は現在のタイムゾーンで、<code>"GMT"</code>はUTC（協定世界時）です。  無効な値は、最も一般的にはUTCとして扱われ、いくつかのプラットフォームでは警告が表示されます。
1317,他のメソッドに渡す、または他のメソッドから渡される追加の引数。
1318,<code>strptime</code>で使用される日付-時間形式を与える文字列。
1319,<code>format</code>が指定されない場合に試す<code>format</code>文字列の<code>character</code>ベクトル.
1320,<code>論理</code>は、フォーマット推測が成功しない場合、<code>NA</code>を(エラーを通知する代わりに)返すことを示します。
1321,日付時間オブジェクト、または<code>as.POSIXct(tz = "GMT") </code> によってそのようなオブジェクトに強制されることができる何かである。
1322,<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトに変換されます。
1323,変換に使用されるタイムゾーン指定（<em>必要な場合</em>）。  システム固有（タイムゾーンを参照）ですが、<code>""</code>は現在のタイムゾーンで、<code>"GMT"</code>はUTC（協定世界時）です。  無効な値は、最も一般的にはUTCとして扱われ、いくつかのプラットフォームでは警告が表示されます。
1324,他のメソッドに渡す、または他のメソッドから渡される追加の引数。
1325,<code>strptime</code>で使用される日付-時間形式を示す文字列。
1326,<code>format</code>が指定されない場合に試す<code>format</code>文字列の<code>character</code>ベクトル.
1327,<code>論理</code>は、フォーマット推測が成功しない場合、<code>NA</code>を(エラーを通知する代わりに)返すことを示します。
1328,日付時間オブジェクト、または<code>as.POSIXct(tz = "GMT") </code> によってそのようなオブジェクトに強制されることができる何かである。
1329,<span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクトに変換されます。
1330,変換に使用されるタイムゾーンの指定。  システム固有（タイムゾーンを参照）ですが、<code>""</code>は現在のタイムゾーンで、<code>"GMT"</code>はUTC（協定世界時）です。  無効な値は、最も一般的にはUTCとして扱われ、いくつかのプラットフォームでは警告が表示されます。
1331,他のメソッドに渡す、または他のメソッドから渡される追加の引数。
1332,<code>strptime</code>で使用される日付-時間形式を示す文字列。
1333,<code>format</code>が指定されない場合に試す<code>format</code>文字列の<code>character</code>ベクトル.
1334,<code>論理</code>は、フォーマット推測が成功しない場合、<code>NA</code>を(エラーを通知する代わりに)返すことを示します。
1335,日付時間オブジェクト、または<code>as.POSIXct(tz = "GMT") </code> によってそのようなオブジェクトに強制されることができる何かである。
1336,<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトに変換されます。
1337,変換に使用されるタイムゾーン指定（<em>1つが必要な場合</em>）。  システム固有（タイムゾーンを参照）ですが、<code>""</code>は現在のタイムゾーンで、<code>"GMT"</code>はUTC（協定世界時）です。  無効な値は、最も一般的にはUTCとして扱われ、いくつかのプラットフォームでは警告が表示されます。
1338,他のメソッドに渡す、または他のメソッドから渡される追加の引数。
1339,<code>strptime</code>で使用される日付-時間形式を与える文字列。
1340,<code>format</code>が指定されない場合に試される<code>format</code>文字列の<code>character</code>ベクトルです.
1341,<code>論理</code>は、フォーマット推測が成功しない場合、<code>NA</code>を(エラーを通知する代わりに)返すことを示します。
1342,日付時間オブジェクト、または<code>as.POSIXct(tz = "GMT") </code> によってそのようなオブジェクトに強制されることができる何かである。
1343,<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトに変換されます。
1344,変換に使用されるタイムゾーン指定（<em>必要であれば</em>）。  システム固有（タイムゾーンを参照）ですが、<code>""</code>は現在のタイムゾーンで、<code>"GMT"</code>はUTC（協定世界時）です。  無効な値は、最も一般的にはUTCとして扱われ、いくつかのプラットフォームでは警告が表示されます。
1345,他のメソッドに渡す、または他のメソッドから渡される追加の引数。
1346,<code>strptime</code>で使用される日付-時間形式を与える文字列。
1347,<code>format</code>が指定されない場合に試される<code>format</code>文字列の<code>character</code>ベクトルです.
1348,<code>論理</code>は、フォーマット推測が成功しない場合、<code>NA</code>を(エラーを通知する代わりに)返すことを示します。
1349,日時オブジェクト、または<code>as.POSIXct(tz = "GMT") </code>によってそのようなオブジェクトに強制できる何か。
1350,<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトに変換されます。
1351,変換に使用されるタイムゾーンの指定。  システム固有（タイムゾーンを参照）ですが、<code>""</code>は現在のタイムゾーンで、<code>"GMT"</code>はUTC（協定世界時）です。  無効な値は、最も一般的にはUTCとして扱われ、いくつかのプラットフォームでは警告が表示されます。
1352,他のメソッドに渡す、または他のメソッドから渡される追加の引数。
1353,<code>strptime</code>で使用される日付-時間形式を示す文字列。
1354,<code>format</code>が指定されない場合に試される<code>format</code>文字列の<code>character</code>ベクトルです.
1355,<code>論理</code>は、フォーマット推測が成功しなかった場合、<code>NA</code>を(エラーを通知する代わりに)返すことを示します.
1356,日時オブジェクト、または<code>as.POSIXct(tz = "GMT") </code> によってそのようなオブジェクトに強制されることができる何かである。
1357,<span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクトに変換されます。
1358,変換に使用されるタイムゾーン指定（<em>必要であれば</em>）。  システム固有（タイムゾーンを参照）ですが、<code>""</code>は現在のタイムゾーンで、<code>"GMT"</code>はUTC（協定世界時）です。  無効な値は、最も一般的にはUTCとして扱われ、いくつかのプラットフォームでは警告が表示されます。
1359,他のメソッドに渡す、または他のメソッドから渡される追加の引数。
1360,<code>strptime</code>で使用される日付-時間形式を示す文字列。
1361,<code>format</code>が指定されない場合に試される<code>format</code>文字列の<code>character</code>ベクトルです.
1362,<code>論理</code>は、フォーマット推測が成功しない場合、<code>NA</code>を(エラーを通知する代わりに)返すことを示します。
1363,日付-時間オブジェクト、または<code>as.POSIXct(tz = "GMT")</code> によってそのようなオブジェクトに強制できる何か。
1364,QR分解が計算される数値行列または複素行列。  論理行列は、数値に強制される。
1365,<code>x</code>の列の線形依存性を検出するための許容範囲です.<code>LAPACK</code> が偽で<code>x</code>が実数の場合のみ使用されます.
1366,<code>qr</code>で計算されるタイプのQR分解です。
1367,方程式の右辺のベクトルまたはマトリックス。
1368,QR分解または(<code>qr.solve</code>のみ)直交行列.
1369,有効ランク.
1370,論理的である。  実数<code>x</code>の場合、trueならLAPACKを、そうでなければLINPACK（デフォルト）を使用します。
1371,他のメソッドに渡される、または他のメソッドから渡される追加の引数
1372,希望する長さ。
1373,強制されるオブジェクト。
1374,希望する長さを指定する非負の整数。2倍値は、整数に強制されます。
1375,強制される、またはテストされるオブジェクト。
1376,他のメソッドに、または他のメソッドから渡される更なる引数。
1377,希望する長さを指定する非負の整数。2倍値は、整数に強制されます。
1378,強制される、またはテストされるオブジェクト。
1379,他のメソッドに、または他のメソッドから渡される追加の引数。
1380,強制されるかテストされるオブジェクト。
1381,因子（文字列を含む）として解釈できる1つ以上のオブジェクト、またはその構成要素がそのように解釈できるリスト（またはデータフレーム）。  (<code>as.table</code>では、特定のメソッドに渡される引数; <code>as.data.frame</code>では、未使用。)
1382,<code>...</code>のすべての要因について除去するレベル。  itが<code>NA</code>を含まず、<code>useNA</code>が指定されていない場合、<code>useNA = "ifany"</code> を意味する。  非要素引数に対する解釈は'Details'を参照。
1383,表に<code>NA</code>の値を含めるかどうか。  省略することができる。
1384,結果の次元に与える名前（<em>dimnames names</em>）を指定します。
1385,デフォルトの<code>dnn</code>がどのように構築されるかを制御します。  詳細'を参照。
1386,任意の<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>オブジェクト、または<code>as.data.frame</code>メソッドのクラス<code>"table"<code>を継承したオブジェクト。なお、<code>as.data.frame.table(x, *)</code> は、<code>array</code>を「整形」するためにテーブル以外の <code>x</code> に対して明示的に呼ばれることがある。
1387,データフレームの行名を与える文字ベクトル。
1388,テーブルエントリーの列に使用される名前、通常はカウントである。
1389,論理：分類因子は因子（デフォルト）または文字ベクトルとして返されるべきか？
1390,<code>provideDimnames</code>に渡されます。
1391,因子(文字列を含む)として解釈できる1つ以上のオブジェクト、またはその構成要素がそう解釈できるリスト(またはデータフレーム)。  (<code>as.table</code>では、特定のメソッドに渡される引数; <code>as.data.frame</code>では、未使用。)
1392,<code>...</code>のすべての要因について除去するレベル。  itが<code>NA</code>を含まず、<code>useNA</code>が指定されていない場合、<code>useNA = "ifany"</code> を意味する。  非要素引数に対する解釈は'Details'を参照。
1393,表に<code>NA</code>の値を含めるかどうか'Details'を参照。  省略することができる。
1394,結果の次元に与える名前（<em>dimnames names</em>）を指定します。
1395,デフォルトの<code>dnn</code>がどのように構築されるかを制御します。  詳細'を参照。
1396,任意の<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>オブジェクト、または<code>as.data.frame</code>メソッドのクラス<code>"table"<code>を継承したオブジェクト。なお、<code>as.data.frame.table(x, *)</code> は、<code>array</code>を「整形」するためにテーブル以外の <code>x</code> に対して明示的に呼ばれることがある。
1397,データフレームの行名を与える文字ベクトル。
1398,テーブルエントリーの列に使用される名前、通常はカウントである。
1399,論理：分類因子は、因子（デフォルト）または文字ベクトルとして返されるべきか？
1400,<code>provideDimnames</code>に渡されます。
1401,原子モード、または<code>"list"</code>、<code>"expression"</code>、または（<code>vector</code>を除く）<code>"any"</code>を名付ける文字列。  現在、<code>is.vector()</code>は<code>mode</code>に対して任意の型（<code>typeof</code>参照）を許可し、modeが<code>"any"</code>ではない場合、 <code>is.vector(x, mode)</code> は <code>typeof(x) == mode</code> とほぼ同じになる。
1402,希望する長さを指定する非負の整数です。  長いベクトル、すなわち<code>length &gt; .Machine$integer.max</code>の場合、<code>"double"</code>型でなければならない。  1以外の長さの引数を与えるとエラーになります。
1403,an <span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクトです。
1404,アトミックモード、<code>"list"</code>、<code>"expression"</code>、(<code>vector</code>を除く) <code>"any"</code> を指定する文字列.  現在、<code>is.vector()</code>は<code>mode</code>に対して任意の型（<code>typeof</code>参照）を許可し、modeが<code>"any"</code>ではない場合、 <code>is.vector(x, mode)</code> は <code>typeof(x) == mode</code> とほぼ同じになる。
1405,希望する長さを指定する非負の整数です。  長いベクトル、すなわち<code>length &gt; .Machine$integer.max</code>の場合、<code>"double"</code>型でなければならない。  1以外の長さの引数を与えるとエラーになります。
1406,an <span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクトです。
1407,数値または複素数ベクトル。
1408,数値または複素数ベクトル
1409,文字列または名前空間環境。
1410,論理。
1411,環境。
1412,名前空間環境。
1413,文字ベクトル。
1414,オプションの文字ベクトル。
1415,名前空間環境。
1416,ロードするパッケージ/名前空間の名前を示す文字列。
1417,<code>generics</code>と並列するパッケージ名のベクトル。
1418,ライブラリを指定する文字ベクトル.
1419,論理.
1420,文字.
1421,character。
1422,環境.
1423,3列の文字行列.
1424,文字.
1425,任意のオブジェクト。
1426,character引数。
1427,メソッドテーブル名。
1428,シンボル：ネームスペースの名前
1429,importから除外するシンボルを命名する文字ベクトル、特に<code>vars</code>がない場合に有用です。
1430,行列を含む配列。
例えば、行列の場合、<code>1</code>は行、<code>2</code>は列、<code>c（1、2）</code>は行と列を示します。<code>x</code>がdimnamesという名前を持つ場合、それは次元名を選択するキャラクターベクトルになりえます.
1432,任意のRオブジェクト。
1433,任意、論理：変換の方向を示す。
1434,オプション,論理：S3への変換が完了したかどうか。  通常は必要ありませんが、詳細セクションを参照してください。
1435,任意のRオブジェクト。
1436,オプション、論理：変換の方向を示す。
1437,オプション、論理：S3への変換が完了したかどうか。  通常は必要ありませんが、詳細セクションを参照してください。
1438,変数名、文字列として与えられる。  強制は行われず、警告とともに、長さが1より大きい文字ベクトルの最初の要素が使用されます。
1439,<code>x</code>に代入される値。
1440,割り当てを行う場所。  デフォルトでは、現在の環境に代入されます。  他の可能性については、'詳細'を参照してください。
1441,使用する<code>environment</code>を指定します。  詳細'を参照して下さい。
1442,環境を囲むフレームは検査されるべきか？
1443,無視される互換性機能。
1444,数値または複素数ベクトル。
1445,数値ベクトルまたは複素数ベクトル。
1446,数値または複素数ベクトル
1447,'データベース'.  これは、<code>data.frame</code>、<code>list</code>、<span style="font-family：Courier New, Courier; color：<code>save</code>、<code>NULL</code>で作成されたデータファイル、または環境です。  Details'も参照してください。
1448,アタッチする<code>search()</code>内の位置を指定する整数値。
1449,アタッチするデータベースに使用する名前。<code>package:</code>で始まる名前は<code>library</code>のために予約されています。
1450,論理的である。  <code>TRUE</code>の場合、データベースに<code>.conflict.OK</code>オブジェクトが含まれていない限り、データベースをアタッチすることによる<code>conflict</code>について警告が表示されます。  コンフリクトとは、関数をマスクする関数、または、非関数をマスクする非関数のことです。
1451,文字列または名前空間オブジェクト。
1452,アタッチする位置を指定する整数.
1453,<code>NULL</code>またはパッケージのオブジェクト<code>.Depend</code>に記録される依存関係の文字ベクトル。
1454,ロードするパッケージ/名前空間の名前を指定する文字列。
1455,ライブラリ検索パスを指定する文字ベクトル。
1456,パッケージのインストール時以外は無視されます。
1457,パッケージのインストール中以外は無視されます。
1458,論理; もし真なら、コードをロードした直後に停止する。
1459,<code>NULL</code>またはバージョン指定(<code>op</code>と<code>version</code>を成分とするリスト).
1460,logical:進捗状況やエラーメッセージを抑制するか。
1461,文字列または'名前'、パッケージの<code>as.symbol</code>を参照、例えば、<code>"stats"</code>のように。
1462,文字ベクトル; <code>library</code>を参照して下さい.
1463,<code>loadNamespace</code>に渡される更なる引数です。
1464,アクセスされる属性を持つオブジェクト。
1465,どの属性にアクセスするかを指定する空でない文字列。
1466,論理的：<code>which</code>は正確に一致させるべきですか？
1467,オブジェクト、属性の新しい値、または属性を削除するために<code>NULL</code>を指定します。
1468,<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトです。
1469,その他<span style="font-family：Courier New, Courier; color：<code>target</code>と比較される、<b>R</b></span>オブジェクト。
1470,数値比較のための異なる方法、特に以下の2つの引数を追加します：
1471,numeric <i>≥</i> 0. <code>tolerance</code>より小さい差は報告されない.  デフォルト値は<code>1.5e-8</code>に近い値である。
1472,<code>NULL</code>または数値 &gt; 0、典型的には長さ1または<code>length(target)</code>である。  詳細'を参照。
1473,平均（絶対または相対）差を計算するときに、<code>target == current</code>cases をカウントすべきかどうかを示す論理。  デフォルトの<code>FALSE</code>は、<code>target</code>と<code>current</code>が数カ所でしか違わない場合、誤解を招く恐れがあります; 豊富な例を参照してください。
1474,2つの引数、<code>err</code>、相対エラー、絶対エラー、または拡大縮小エラー、および<code>what</code>、エラーの<em>種類</em>を示す文字列の<code>function</code>;例えば、相対エラーと絶対エラーを異なるフォーマットするために使用することができる。
1475,論理的には、<code>target</code>と<code>current</code>の<code>attributes</code>（名前以外）を比較するかどうかを指定する。
1476,<code>list</code> 比較が、整数インデックスではなく、名前によって（一致する場合）異なるコンポーネントを報告すべきかどうかを示す論理。  これは<code>...</code>の後に来るので、フルネームで指定されなければならないことに注意してください。
1477,<code>ls</code>に渡される論理は、「隠された」オブジェクトも環境において考慮されるべきかどうかを示します。
1478,<code>environment</code>メソッドに渡されます：<code>logical</code>は、「約束が強制されるべきか」、すなわち、典型的な形式的な関数引数が比較のために評価されるかを示す。  false の場合、2つの環境のオブジェクトの <code>names</code> だけが等しいかどうかチェックされます。
1479,関数の<code>environment()</code>も比較することを要求する論理。2つの<code>nls()</code>フィットを比較するときなど、予期しないケースで<code>check.environment=FALSE<code>にする必要があるかもしれません。
1480,logical <code>target</code> と <code>current</code> の <code>"tzone"</code> 属性が比較されるべきかどうかを指定します。
1481,<code>target</code>と<code>current</code>の<code>names(.)</code>を比較するかどうかを示す論理。
1482,アクセスされる属性を持つオブジェクト。
1483,どの属性がアクセスされるかを指定する空でない文字列である。
1484,論理：<code>which</code>は正確に一致させるべきですか？
1485,オブジェクト、属性の新しい値、または属性を削除するには<code>NULL</code>を指定します。
1486,任意の<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>オブジェクト。
1487,属性の適切な名前の<code>リスト</code>、または<code>NULL</code>を指定します。
1488,任意の<span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクト。
1489,属性の適切な名前の<code>リスト</code>、または<code>NULL</code>。
1490,オブジェクトの名前を与える文字列。
1491,オブジェクトを含むパッケージの名前を与える文字列。
1492,logical：<code>autoloader</code>が内部で使用します。
1493,<code>library</code>の他の引数。
1494,オブジェクトの名前を与える文字列。
1495,オブジェクトを含むパッケージの名前を与える文字列。
1496,logical：<code>autoloader</code>が内部で使用します。
1497,<code>library</code>の他の引数。
1498,解くべきシステムの係数を与える上（または下）三角行列。  対角線より下(上)の値は無視されます.
1499,方程式の右辺を表す列を持つ行列.
1500,使用する<code>r</code>の列と<code>x</code>の行の数.
1501,論理; もし <code>TRUE</code> (デフォルト) なら、<code>r</code> の <em>upper</em><em>tri</em>angular part が使用される.  そうでない場合は、下側のものを使用する。
1502,logical; もし<code>TRUE</code>なら、<i>r' * y = x</i> for<i>y</i> を解く、つまり<code>t(r) %*% y == x</code>.
1503,デフォルトである<code>function</code>、<code>formula</code>、または<code>NULL</code>である。
1504,関数と関連付ける環境
1505,任意の<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトです。
1506,論理。もし<code>TRUE</code>なら、環境はハッシュテーブルを使用します。
1507,作成されたenvironmentのエンクロージャーとして使用されるenvironmentです。
1508,環境
1509,ハッシュドエンバイロメントの初期サイズを指定する整数値。  <code>size</code>が<code>NA</code>またはゼロの場合、内部デフォルト値が使用されます。  この引数は、<code>hash</code>が<code>FALSE</code>の場合は無視される。
1510,文字ベクトル、パス名を含む。
1511,数値, <i>≥ 0</i>.
1512,numeric; 対応するBessel関数の<em>次数</em>(多分分数で負)である。
1513,logical; <code>TRUE</code>の場合、オーバーフロー(<i>I(nu)</i>)、アンダーフロー(<i>K(nu)</i>)を避けるため、結果はそれぞれ指数関数的にスケーリングされます.
1514,numeric; <i>≥ 0</i>.
1515,numeric; 対応するBessel関数の<em>次数</em>(多分分数で負)である。
1516,logical; <code>TRUE</code>の場合、オーバーフロー(<i>I(nu)</i>)、アンダーフロー(<i>K(nu)</i>)を避けるため、結果はそれぞれ指数関数的にスケーリングされる.
1517,numeric; <i>≥ 0</i>.
1518,numeric; 対応するBessel関数の<em>次数</em>(多分分数で負)を指定する。
1519,logical; <code>TRUE</code> の場合、オーバーフロー (<i>I(nu)</i>) またはアンダーフロー (<i>K(nu)</i>) を避けるため、結果はそれぞれ指数関数的にスケーリングされます。
1520,numeric; <i>≥ 0</i>.
1521,numeric; 対応するBessel関数の<em>次数</em>(多分分数で負)である。
1522,論理; <code>TRUE</code>の場合、オーバーフロー(<i>I(nu)</i>)、アンダーフロー(<i>K(nu)</i>)を避けるため、結果はそれぞれ指数的にスケーリングされる.
1523,非負の数値ベクトル.
1524,数値ベクトル.
1525,整数ベクトル.
1526,環境(environment).
1527,バインディングがロックされるべきかどうかを指定する論理。
1528,名前オブジェクトまたは文字列。
1529,0個または1個の引数を取る関数。
1530,環境。
1531,バインディングがロックされるべきかどうかを指定する論理。
1532,名前オブジェクトまたは文字列。
1533,0個または1個の引数を取る関数。
1534,1つまたは複数の文字ベクトル。
1535,変換のための「ドメイン」です。
1536,非負の整数。
1537,英語で<code>n = 1</code>の場合に使用されるメッセージです。
1538,英語で<code>n = 0, 2, 3, ...</code>のために使用されるメッセージ.
1539,ドメインの翻訳されたメッセージカタログを見つけるためのディレクトリです。
1540,整数ベクトル;数値ベクトルは整数ベクトルに強制される。
1541,31までの値を持つ非負の整数ベクトル。
1542,整数ベクトル；数値ベクトルは、整数ベクトルに強制されます。
1543,31までの値の非負の整数ベクトル。
1544,整数ベクトル;数値ベクトルは整数ベクトルに強制的に変換されます。
1545,31までの値を持つ非負の整数ベクトル。
1546,整数ベクトル;数値ベクトルは整数ベクトルに強制的に変換されます。
1547,31までの値を持つ非負の整数ベクトル。
1548,整数ベクトル;数値ベクトルは整数ベクトルに強制的に変換されます。
1549,31までの値を持つ非負の整数ベクトル。
1550,整数ベクトル；数値ベクトルは整数ベクトルに強制されます。
1551,31までの値の非負整数ベクトル。
1552,関数オブジェクト、又は、「詳細」を参照。
1553,関数が定義されるべき環境。
1554,オブジェクト、通常は言語オブジェクト：「値」の項を参照のこと。
1555,関数オブジェクト、または「詳細」を参照して下さい。
1556,関数が定義されるべき環境。
1557,オブジェクト、通常は言語オブジェクト：section'Value'を参照してください。
1558,言語オブジェクト。
1559,環境(environment)
1560,論理; <code>TRUE</code>スプライシングが有効である場合。
1561,長さ1の論理ベクトルで、<code>NA</code>でないもの。長さが1より大きい条件は、現在、警告で受け入れられるが、最初の要素だけが使用される。  環境変数<span class="env">_R_CHECK_LENGTH_1_CONDITION_</span> が true に設定されている場合、代わりにエラーが通知されます。  その他の型は、可能であれば論理型に強制され、いかなるクラスも無視される。
1562,変数の構文上の名前。
1563,ベクトル(リストと式を含む)、ペアリスト、<code>NULL</code>に評価される式。  Afactorの値は、文字ベクトルに強制されます。  <span style="font-family：Courier New, Courier; color：<br>R</b></span>4.0.0 からは、これは長いベクトルである可能性があります。
1564,形式的な意味での<em>式</em>である。  これは単純な式か、いわゆる<em>複合式</em>で、通常は<code>{ expr1 ; expr2 }</code> という形式である。
1565,ブラウザが起動されたときに取得できるテキスト文字列です。
1566,ブラウザが起動された時点で取得可能な条件。
1567,「条件」です。  デフォルトでは、<code>logical</code>に強制された後、falseでない場合は、デバッガが起動され、それ以外の場合は、制御が直接返されます。
1568,呼び出しコンテキストを報告する際にスキップする前の呼び出しの数。
1569,スキップするコンテキストの数、これは非負でなければならない。
1570,スキップするコンテキストの数、それは非負でなければならない。
1571,スキップオーバーするコンテキストの数は、非負でなければならない。
1572,内部関数（<code>.Internal</code>で呼び出すことができる）のみを返すかどうかを示す論理です。
1573,<span style="font-family：Courier New, Courier; color：<br>R</b></span> オブジェクト、通常はデータフレーム、場合によってはマトリックスです。
1574,長さ<code>nrow(data)</code>の因子または因子のリスト.
1575,<code>data</code>の（通常はデータフレームの）サブセットに適用される関数.
1576,<code>FUN</code>への更なる引数。
1577,論理的：<code>tapply</code>を参照して下さい。
1578,an <span style="font-family：Courier New, Courier; color：1578,an <span style="font: Courier New, Courier; color: #666666;"><b>R</b></span> object, normally a data frame, may a matrix.
1579,長さ<code>nrow(data)</code>の因子または因子のリスト.
1580,<code>data</code>の（通常はデータフレームの）サブセットに適用される関数です。
1581,<code>FUN</code>への更なる引数。
1582,論理：<code>tapply</code>を参照。
1583,an <span style="font-family：Courier New, Courier; color：<br>R</b></span> オブジェクトで、通常はデータフレーム、場合によってはマトリックス。
1584,長さ<code>nrow(data)</code>の因子または因子のリスト.
1585,<code>data</code>の（通常はデータフレームの）サブセットに適用される関数です.
1586,<code>FUN</code>への更なる引数。
1587,論理: <code>tapply</code>を参照。
1588,文字列。  接続の説明：'詳細'を参照。
1589,文字列。  接続を開く方法(最初に開くべき場合)の説明。  可能な値については、「モード」セクションを参照してください。
1590,論理。  ブロッキング」セクションを参照してください。
1591,想定されるエンコーディングの名前です。  エンコーディング'セクションを参照してください。
1592,論理的なもの。  trueを指定すると、通常のファイルではない引数(例えば、キャラクタデバイス)に適した「raw」インターフェースが使用されます。  これは、テキストモードの読書用に開く際に圧縮ファイルのチェックを抑制し、「ファイル」がシーク可能でない可能性があることを表明する。
1593,文字列、<code>c("default", "internal", "wininet", "libcurl")</code> に部分的にマッチします:「詳細」参照。
1594,HTTPrequestsで使用するHTTPヘッダーの名前付き文字ベクトルです。  非HTTP URLの場合は無視されます。  <code>HTTPUserAgent</code> オプション (<code>options</code> を参照) から来る <code>User-Agent</code> ヘッダーは、自動的に最初のヘッダーとして使われます。
1595,0-9の整数値。  書き込み時に適用される圧縮の量を、なしから利用可能な最大値まで指定します。  <code>xzfile</code>の場合、負の値も可能です：'Compression'セクションを参照してください。
1596,数値：この接続に使用されるタイムアウト（秒単位）です。  OSによっては、非常に大きな値をゼロとして扱うことがあるので注意してください：しかし、POSIX標準では、31日までの値をサポートすることを要求しています。
1597,オプションの文字ベクトル。現在、TCPソケットでは<code>"no-delay"</code>のみがサポートされています。
1598,ZIPファイル内のファイル名。
1599,文字列。  ポートのホスト名。
1600,整数。  TCPポート番号。
1601,論理。  ソケットはクライアントかサーバーのどちらであるか？
1602,接続を待つサーバー・ソケット。
1603,コネクション。
1604,文字列。  現在、無視されている。
1605,文字列。  空または<code>"read"</code>または<code>"write"</code>、部分一致が許されます。
1606,他のメソッドに渡される、または他のメソッドから渡される引数。
1607,連結されるオブジェクト。  すべての<code>NULL</code>エントリは、引数リストの一番最初にない限り、メソッドディスパッチの前にドロップされます。
1608,論理的。  <code>recursive = TRUE</code> の場合、関数はリスト(およびペアリスト)を再帰的に下降し、そのすべての要素をベクトルに結合します。
1609,<code>names</code>が保存されるべきかどうかを示す論理。
1610,要約または印刷される<code>Date</code>オブジェクト。
1611,計算のための有効桁数。
1612,数値または<code>NULL</code>で、印刷されるエントリの最大数を指定する。  デフォルトでは、<code>NULL</code>の場合、<code>getOption("max.print")</code>が使用されます.
1613,他のメソッドから、または他のメソッドに渡される更なる引数。
1614,date-timeまたはdateオブジェクト。
1615,変換に使用されるオプションのタイムゾーン指定、主に<code>"POSIXlt"</code>オブジェクトの場合。
1616,文字列。  結果の単位を指定します。  省略可能です。
1617,文字列.  <code>units</code>と同様であるが、省略は不可である。
1618,時間間隔を指定する文字列または数値。
1619,<code>tim</code>のフォーマットを指定する文字：<code>strptime</code>を参照。  デフォルトは、ロケール固有の時間フォーマットである。
1620,クラス<code>"difftime"</code>を継承したオブジェクトです。
1621,他のメソッドに渡す、または他のメソッドから渡される引数。
1622,データのベクトルで、通常、少数の異なる値を取る。
1623,オプションで、<code>x</code>が取ったかもしれないユニークな値(文字列として)のベクトルを指定します。  デフォルトは、<code>as.character(x)</code>が取った値のユニークなセットで、<em>の昇順にソートされます。  なお、この集合は<code>sort(unique(x))</code>より小さく指定することができる。
1624,<em>either</em>レベル(<code>exclude</code>内のものを取り除いた後の<code>levels</code>と同じ順序で)のラベルのオプション文字ベクトル、<em>or</em>長さ 1の文字列。 <code>labels</code>内の重複する値は、同じ因子レベルに<code>x</code>の異なる値マッピングに使うことが出来ます。
1625,レベルのセットを形成するときに除外される値のベクトル。  これは、<code>x</code>と同じレベルセットを持つ因子であってもよいし、<code>文字</code>であるべきである。
1626,レベルが（与えられた順序で）順序付けられたとみなされるべきかどうかを決定するための論理フラグ。
1627,レベル数の上限; '詳細'を参照のこと。
1628,(<code>ordered(.)</code>内): <code>ordered</code>自身を除いた、上記のいずれか.
1629,<code>NA</code>レベルが使用される場合のみ、すなわち<code>any(is.na(x))</code>の場合のみ追加されます.
1630,どんな<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクト、典型的には<code>character</code>文字列のベクトルです.
1631,オプションの<code>logical</code>は、<code>print()</code>に渡され、<code>print.default()</code>が使用し、右寄せされるべきかどうかを示すものである。
1632,クラス<code>"noquote"</code>のオブジェクトです。
1633,次のメソッド（<code>print</code>など）に渡されるさらなるオプション。
1634,一般的な<code>c</code>関数との互換性のため。
1635,バージョン文字列を数値で表した文字ベクトル(「詳細」参照); <code>package_version</code>の場合、代わりに<code>R.version</code>によって得られるRversionオブジェクトを指定します。
1636,無効な数値バージョンはエラーになるか(デフォルト)、ならないかを示す論理です。
1637,date-timeクラスの1つから、印刷または要約されるオブジェクトを指定します。
1638,タイムゾーンフォーマットのために、<code>format.POSIXct</code>に渡される。
1639,数値または<code>NULL</code>で、印刷されるエントリの最大数を指定します。  デフォルトでは、<code>NULL</code>の時、<code>getOption("max.print")</code>が使われます。
1640,計算の有効桁数：最も重要な時間単位を正確に表現するのに十分な桁数でなければならない。
1641,他のメソッドから、または他のメソッドに渡される更なる引数。
1642,日付-時間オブジェクト
1643,日付時刻オブジェクトまたは文字ベクトル。  (文字ベクトルは<code>as.POSIXct</code>で変換されます)。
1644,数値ベクトル(秒単位)
1645,<code>==</code>、<code>!=</code>、<code>&lt;</code>、<code>&lt;=</code>または<code>&gt;=</code>のいずれか一つ。
1646,date-timeクラスの1つから印刷または要約されるオブジェクトを指定する。
1647,タイムゾーンフォーマットのために、<code>format.POSIXct</code>に渡されます。
1648,数値または<code>NULL</code>で、印刷されるエントリの最大数を指定します。  デフォルトでは、<code>NULL</code>の時、<code>getOption("max.print")</code>が使われます。
1649,計算の有効桁数:最も重要な時間単位を正確に表現するのに十分な桁数でなければならない。
1650,他のメソッドから、または他のメソッドに渡される更なる引数。
1651,日付-時間オブジェクト
1652,日付時間オブジェクトまたは文字ベクトル。  (文字ベクトルは<code>as.POSIXct</code>で変換されます)。
1653,数値ベクトル(秒単位)
1654,<code>==</code>、<code>!=</code>、<code>&lt;</code>、<code>&lt;=</code>または<code>&gt;=</code>のいずれか一つ。
1655,<code>cat</code>に渡す引数（<code>warnings()</code>の場合）。
1656,<code>warnings()</code>が返す<code>"warnings"</code>オブジェクトです.
1657,<code>"warnings"</code>または<code>"summary.warnings"</code>オブジェクトを指定します。
1658,もし<code>missing</code>でなければ、<code>x</code>と同じ<code>長さの<code>文字</code>ベクトルで、メッセージを「ラベル」する。  デフォルトは <code>paste0(seq_len(n), ": ")</code> for<i>n &gt;= 2</i> where <code>n &lt;- length(x)</code>.
1659,メッセージが印刷される前に表示される文字列<code>cat()</code>。
1660,呼び出される関数の名前を示す空でない文字列.
1661,呼び出しの一部となる引数。
1662,任意の<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクト。
1663,1つの引数の関数、終了手続き。
1664,必要な構成要素を指定する文字ベクトルまたは<code>NULL</code>。  <code>NULL</code>は、すべてが必要であることを意味する。
1665,<code>logical</code>はスマートなデフォルトで、特にmacOSでX11関連の能力を完全にチェックすべきかどうかを示す。falseに設定すると、「No protocol specified」の警告を避けることができ、例えば、「X11」能力は<code>NA</code>として返すことができる。
1666,文字ベクトル、または<code>as.character</code>によって文字に強制することができるオブジェクト。
1667,翻訳される文字を指定する文字列。  長さ2以上の文字ベクトルが与えられた場合、警告とともに最初の要素が使用されます。
1668,翻訳を指定する文字列。長さが2以上の文字ベクトルが供給された場合、最初の要素は警告とともに使用される。
1669,論理：大文字か小文字に変換しますか？
1670,<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクト（許可されるオブジェクトの種類は「詳細」を参照）。
1671,接続、または印刷するファイルの名前を指定する文字列。  <code>""</code> (デフォルト)の場合、<code>cat</code>は、<code>sink</code>によってリダイレクトされない限り、標準の出力接続、コンソールにプリントします。 <code>"|cmd"</code> の場合、パイプ接続を開いて、出力は '<span class="file">cmd</span>' によって与えられたコマンドに送られます。
1672,各要素の後に追加される文字列の文字ベクトル.
1673,出力を連続した行に分割する方法を制御する論理または（正の）数値.  <code>FALSE</code> (デフォルト)の場合、<span class="samp">"\n"</span> によって明示的に作成された改行のみが出力されます。  それ以外の場合は、<code>fill</code>が<code>TRUE</code>の場合はオプション<code>width</code>、数値の場合は<code>fill</code>の値と同じ印字幅の行に分割して出力します。  改行は<em>要素間にのみ挿入され、<code>fill</code>より広い文字列は折り返されない。  正でない<code>fill</code>の値は無視され、警告が表示される。
1674,印字される行のラベルの文字ベクトル。<code>fill</code>が<code>FALSE</code>であれば無視される。
1675,論理。引数<code>file</code>がファイル名（接続や<code>"|cmd"</code>ではない）の場合のみ使用されます。<code>TRUE</code>なら出力は<code>file</code>に追加され、それ以外なら<code>file</code>の内容は上書きされるでしょう。
1676,(一般化された)ベクトルまたはマトリックス。  これらはnamedargumentsとして与えることができる。  その他、<span style="font-family：Courier New, Courier; color：他の<span style="font: Courier New, Courier; color: #666666;"><b>R</b></span> オブジェクトは適切に強制されるか、S4methodsが使われるかもしれません：「詳細」「値」セクションを参照してください。  (<code>cbind</code>の<code>"data.frame"</code>メソッドでは、<code>stringsAsFactors</code>のような<code>data.frame</code> へのさらなる引数を使用できる).
1677,integer control the construction of labels in the case of non-matrix-like arguments (for the default method): <br><code>deparse.level = 0</code> construct no labels; the default, <br><code>deparse.level = 1 or 2</code> construct labels from the argumentnames, See the 'Value' section below.
1678,(データフレームメソッドのみ:)引数からユニークで有効な<code>row.names</code>が構築されるべきかどうかを示す論理値です。
1679,論理、<code>as.data.frame</code>に渡され、<code>...</code>引数が(非<code>data.frame</code>)<code>文字</code>を含む時のみ効果があります。
1680,データフレームが因子を含む場合、デフォルトの<code>TRUE</code>は、<code>NA</code>レベルの因子を確実に保持する。<a href="https://bugs.R-project.org/show_bug.cgi?id=17562">PR#17562</a> および「データフレーム法」参照。  で、<span style="font-family：Courier New, Courier; color：#3.6.x までの <b>R</b></span> バージョンでは、<code>factor.exclude = NA</code> が暗黙のうちにハードコードされています (<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> &lt;= 3.6.0) またはデフォルト (<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> = 3.6.x, x &gt;= 1）です。
1681、(一般化された)ベクトルまたはマトリックス。  これらはnamedargumentsとして与えることができる。  その他、<span style="font-family：Courier New, Courier; color：他の<span style="font family: Courier New, Courier; color: #666666;"><b>R</b></span> オブジェクトは適切に強制されるか、S4methodsが使われるかもしれません：「詳細」「値」セクションを参照して下さい。  (<code>cbind</code>の<code>"data.frame"</code>メソッドでは、<code>stringsAsFactors</code>のような<code>data.frame</code> へのさらなる引数を使用できる).
1682,integer control the construction of labels in the case of non-matrix-like arguments (for the default method): <br><code>deparse.level = 0</code> construct no labels; the default, <br><code>deparse.level = 1 or 2</code> construct labels from the argumentnames, See the 'Value' section below.
1683,(データフレームメソッドのみ:)引数からユニークで有効な<code>row.names</code>を構築するかどうかを示す論理値です。
1684,論理、<code>as.data.frame</code>に渡され、<code>...</code>引数が(非<code>data.frame</code>)<code>文字</code>を含む時のみ効果があります。
1685,データフレームが因子を含む場合、デフォルトの<code>TRUE</code>は、<code>NA</code>レベルの因子を確実に保持します。<a href="https://bugs.R-project.org/show_bug.cgi?id=17562">PR#17562</a> と 'Data frame methods' を参照して下さい。  で、<span style="font-family：Courier New, Courier; color：#3.6.x までの <b>R</b></span> バージョンでは、<code>factor.exclude = NA</code> が暗黙のうちにハードコードされています (<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> &lt;= 3.6.0) またはデフォルト (<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> = 3.6.x, x &gt;= 1）です。
1686,数値ベクトルです。  または、<code>round</code>と<code>signif</code>の場合は、複素数ベクトル(acomplex vector).
1687,小数点以下の桁数(<code>round</code>)または有効桁数(<code>signif</code>)を示す整数.負の値も許される(「詳細」参照)。
1688,メソッドに渡される引数。
1689,展開される文字列。
1690,マッチングされる値を持つ文字ベクトル。
1691，<span style="font-family：Courier New, Courier; color：展開できなかった場合に評価される<span style="font family: Courier New, Courier; color: #666666;"><b>R</b></span> 式。
1692,希望する長さを指定する非負の整数。2倍値は整数に強制されます：1以外の長さの引数を供給することはエラーです。
1693,強制される、またはテストされるオブジェクト。
1694、他のメソッドに渡される、または他のメソッドから渡される追加の引数。
1695,マッチする値：<code>as.character</code>によって文字ベクトルに変換されます。  長いベクターもサポートされる。
1696,マッチングされる値：charactervectorに変換されます。  ロングベクターはサポートされていません。
1697,マッチングしない位置で返される(整数の)値。
1698,変換またはシフトされるオブジェクト。
1699,論理：変換は、単一文字列または複数の個々の文字にする必要がありますか？
1700,シフトするビットの数。  正の数は右に、負の数は左にシフトします: 許容値は <code>-8 ... 8</code> です.
1701,結果のタイプ、部分的に一致する。
1702,文字ベクトル、または<code>as.character</code>でcharacterに強制することができるオブジェクト。
1703,翻訳される文字を指定する文字列。  長さ2以上の文字ベクトルが与えられた場合、警告とともに最初の要素が使用される。
1704,翻訳を指定する文字列。長さ2以上の文字ベクトルが供給された場合、最初の要素は警告とともに使用される。
1705,論理：大文字か小文字に変換しますか？
1706,date-timeクラスの1つから、印刷または要約されるオブジェクトを指定します。
1707,タイムゾーンフォーマットのために、<code>format.POSIXct</code>に渡されます。
1708,数値または<code>NULL</code>で、印刷するエントリの最大数を指定する。  デフォルトでは、<code>NULL</code>の場合、<code>getOption("max.print")</code>が使われます。
1709,計算の有効桁数:最も重要な時間単位を正確に表現するのに十分な桁数でなければならない。
1710,他のメソッドから、または他のメソッドに渡される更なる引数。
1711,日付-時間オブジェクト
1712,日付-時間オブジェクトまたは文字ベクトル。  (文字ベクトルは<code>as.POSIXct</code>で変換されます)。
1713,数値ベクトル(秒単位)
1714,<code>==</code>、<code>!=</code>、<code>&lt;</code>、<code>&lt;=</code>、<code>&gt;</code>または<code>&gt;=</code>から一つを選ぶ。
1715, "点 "は、呼び出し元から渡されたものである。
1716,<code>sys.call()</code>に渡されます。  メッセージが<em>その</em>呼び出し元を言及すべき場合、呼び出し元は-2を使用することができる。
1717,未実装: <code>...</code>内の<em>名前付き</em>要素のうち、「許可」され、それゆえ警告されない要素の文字ベクトル。
1718,メソッドが存在するオブジェクト。  デフォルトのメソッドは、数値（または論理）対称の正定値の行列に適用されます。
1719,メソッドへの、またはメソッドからの引数。
1720,ピボットを使用するか？
1721,論理的である。  LINPACKを使用すべきか(現在はエラー)？
1722,<code>pivot=TRUE</code>で使用するための数値許容範囲です。
1723,メソッドが存在するオブジェクトです。  デフォルトのメソッドは、数値（または論理）対称、正定値の行列に適用されます。
1724,メソッドに、またはメソッドから基づく引数。
1725,ピボットを使用するか？
1726,論理的である。  LINPACKを使用すべきか(現在はエラー)？
1727,<code>pivot=TRUE</code>で使用するための数値許容範囲です。
1728,行列です。  上の三角形の最初の<code>size</code>列は、反転される行列のコレスキー分解を含んでいます。
1729,コレスキー分解を含む<code>x</code>の列の数.
1730,論理的である。  無効であり、エラーを与える。
1731,非負の数値ベクトル。
1732,数値ベクトル。
1733,整数ベクトル。
1734,a <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>オブジェクト。
1735,文字ベクトルの命名クラス。  <code>value</code>は<code>NULL</code>も可能です。
1736,戻り値に影響を与える論理: '詳細'を参照してください。
1737,a <span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクト。
1738,クラスを命名する文字ベクトル。  <code>value</code>は、<code>NULL</code>でもよい。
1739,戻り値に影響を与える論理: '詳細'を参照して下さい。
1740,文字ベクトル。
1741,接続。
1742,論理。  1742,論理的。trueの場合、押し戻された各文字列に改行が追加される。
1743,文字列、部分的に一致する。  詳細を参照してください。
1744,文字列。  接続の説明：「詳細」を参照してください。
1745,文字列。  接続を開く方法(最初に開くべき場合)の説明。  可能な値については、「モード」のセクションを参照してください。
1746,論理。  ブロッキング」セクションを参照してください。
1747,想定されるエンコーディングの名前です。  エンコード'セクションを参照。
1748,論理。  trueを指定すると、通常のファイルではない引数(キャラクタデバイスなど)に適した「raw」インターフェイスが使用されます。  これは、テキストモードの読書用に開くときに圧縮ファイルのチェックを抑制し、「ファイル」がシーク可能でない可能性があることを表明する。
1749,文字列、<code>c("default", "internal", "wininet", "libcurl")</code> に部分的にマッチします:「詳細」参照。
1750,HTTPrequestsで使用するHTTPヘッダーの名前付き文字ベクトルです。  非HTTPのURLの場合は無視されます。  <code>HTTPUserAgent</code> オプション (<code>options</code> を参照) から得られる <code>User-Agent</code> ヘッダーは、自動的に最初のヘッダーとして使われます。
1751,0-9の整数値。  書き込み時に適用される圧縮の量を、なしから利用可能な最大値まで指定します。  <code>xzfile</code>の場合は、負の値も可能です。「圧縮」セクションを参照してください。
1752,数値：この接続に使用されるタイムアウト（秒単位）です。  OSによっては、非常に大きな値をゼロとして扱う場合があることに注意してください：しかし、POSIX標準では、31日までの値をサポートすることを要求しています。
1753,オプションで指定された文字ベクトル。現在、TCPソケットでは<code>"no-delay"</code>のみがサポートされています。
1754,ZIPファイル内のファイル名。
1755,文字列。  ポートのホスト名。
1756,整数。  TCPポート番号。
1757,論理。  ソケットはクライアントかサーバーか？
1758,コネクションをリッスンするサーバー・ソケット。
1759,コネクションです。
1760,文字列。  現在、無視されています。
1761,文字列。  空または<code>"read"</code>または<code>"write"</code>、部分一致が許可されています。
1762,他のメソッドに渡される、または他のメソッドから渡される引数。
1763,文字列。  接続の説明： '詳細'を参照してください。
1764,文字列。  接続を開く方法(最初に開くべき場合)の説明。  可能な値については、「モード」のセクションを参照してください。
1765,論理。  ブロッキング」セクションを参照してください。
1766,想定されるエンコーディングの名前です。  エンコード」セクションを参照してください。
1767,論理。  trueを指定すると、通常のファイルではない引数(キャラクタデバイスなど)に適した「raw」インターフェイスが使用されます。  これは、テキストモードの読書用に開くときに圧縮ファイルのチェックを抑制し、「ファイル」がシーク可能でない可能性があることを表明する。
1768,文字列、<code>c("default", "internal", "wininet", "libcurl")</code> に部分的に一致します:「詳細」参照。
1769,HTTPrequestsで使用するHTTPヘッダーの名前付き文字ベクトルです。  非HTTPのURLの場合は無視されます。  <code>HTTPUserAgent</code> オプション (<code>options</code> を参照) から得られる <code>User-Agent</code> ヘッダーは、自動的に最初のヘッダーとして使われます。
1770,0-9の整数値。  書き込み時に適用される圧縮の量を、なしから利用可能な最大値まで指定します。  <code>xzfile</code>の場合、負の値も指定可能です：「圧縮」セクションを参照してください。
1771,数値：この接続に使用されるタイムアウト（秒単位）。  OSによっては、非常に大きな値をゼロとして扱うことがあるので注意してください：しかし、POSIX標準では、31日までの値をサポートすることを要求しています。
1772,オプションで指定された文字ベクトル。現在、TCPソケットでは<code>"no-delay"</code>のみがサポートされています。
1773,ZIPファイル内のファイル名。
1774,文字列。  ポートのホスト名。
1775,整数。  TCPポート番号。
1776,論理。  ソケットはクライアントかサーバーのどちらであるか？
1777,接続をリッスンしているサーバーソケットです。
1778,接続。
1779,文字列。  現在、無視されています。
1780,文字列。  空白または<code>"read"</code>または<code>"write"</code>、部分一致が許可されています。
1781,他のメソッドに渡される、または他のメソッドから渡される引数。
1782,ファイル名。
1783、ファイルに対して仮定する文字符号化方式。
1784、文字列を作るためのエンコーディング：<code>parse</code>の<code>encoding</code>引数を参照して下さい。
1785、ソース行の文字ベクトル。  その他、<span style="font-family：Courier New, Courier; color：<b>R</b></span> オブジェクトは文字に強制されます。
1786、ファイルのコピーで使用するタイムスタンプ。
1787、この<code>srcfilecopy</code>は、ファイルシステムファイルから来たと知られているか？
1788、<code>srcfile</code>オブジェクト。
1789、行番号。
1790, ソース位置を示す4、6、または8個の値のベクトル; '詳細'を参照。
1791, 適切なクラスのオブジェクト。
1792, <code>srcref</code>のテキストを得るために<code>srcfile</code>を読み込むかどうか。
1793, 文字範囲の終わりを示すためのオプションの2番目の<code>srcref</code>オブジェクト。
1794、メソッドへの追加引数、これらは無視されます。
1795、ファイル名。
1796、ファイルに対して仮定する文字エンコーディング。
1797、文字列を作るためのエンコーディング：<code>parse</code>の<code>encoding</code>引数を参照して下さい。
1798, ソース行の文字ベクトル。  その他、<span style="font-family：Courier New, Courier; color：<b>R</b></span> オブジェクトは文字に強制されます。
1799、ファイルのコピーに使用するタイムスタンプ。
1800、この<code>srcfilecopy</code>は、ファイルシステムファイルから来たと知られているか？
1801, <code>srcfile</code>オブジェクト。
1802、行番号。
1803, ソース位置を示す4、6、または8つの値のベクトル; '詳細'を参照。
1804, 適切なクラスのオブジェクト。
1805, <code>srcref</code> のテキストを取得するために <code>srcfile</code> を読むかどうか。
1806、文字範囲の終わりを示すための、オプションの2番目の<code>srcref</code>オブジェクト。
1807,メソッドへの追加の引数、これらは無視されます。
1808,logical：trueの場合、閉じた接続と標準的な接続を含むすべての接続が表示されます。  falseの場合、開いているユーザー作成コネクションのみが含まれます。
1809,integer：<code>showConnections</code>で与えられたテーブルの行番号です。
1810,コネクション(接続)
1811,行列のようなオブジェクト、つまり2次元の<code>dim</code>を持つもの。
1812,行列の次元、すなわち、長さ2の整数値数値ベクトル（非負のエントリを持つ）。
1813,値を数値としてではなく、列ラベルの係数(必要に応じて作成)として返すべきかどうかを示す論理値。
1814,数値、複素数、整数、論理値を含む2次元以上の配列、または数値データフレーム。  <code>.colSums()</code>などでは、数値、整数または論理行列（または長さ<code>m * n</code>のベクトル）である。
1815,論理。  欠損値（<code>NaN</code>を含む）は計算から省略されるべきか？
1816,integer：どの次元を「行」または「列」とみなして合計するか。  <code>row*</code> の場合、和または平均は次元 <code>dims+1, ...</code> の上にあり、<code>col*</code> の場合は次元 <code>1:dims</code> の上にあります。
1817,行列の寸法 <code>x</code> for<code>.colSums()</code> など。
1818,行列のような<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>オブジェクトで、<code>colnames</code>のために少なくとも2次元を持つ。
1819,論理的である。<code>FALSE</code>でnamesが<code>NULL</code>の場合、namesは作成されます。
1820,作成された名前に対して。
1821,<code>dimnames(x)</code>のその構成要素に対して有効な値です。  行列や配列の場合、これは<code>NULL</code>か、適切な次元に等しい非ゼロの長さの文字ベクトルのいずれかである。
1822,行列のような<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトで、<code>colnames</code>のために少なくとも2つの次元を持つ。
1823,論理的である。<code>FALSE</code>でnamesが<code>NULL</code>の場合、namesは作成されます。
1824,作成された名前に対して。
1825,<code>dimnames(x)</code>のその構成要素に対して有効な値です。  行列または配列の場合、これは<code>NULL</code>または適切な次元に等しい非ゼロの長さの文字ベクトルのいずれかです。
1826,数値、複素数、整数、論理値を含む、2次元以上の配列、または数値データフレーム。  <code>.colSums()</code>などでは、数値、整数または論理行列（または長さ<code>m * n</code>のベクトル）。
1827,論理。  欠損値（<code>NaN</code>を含む）は計算から省略されるべきですか？
1828,integer：どの次元を「行」または「列」とみなして合計するか。  <code>row*</code>の場合、和または平均は次元<code>dims+1, ...</code>の上にあり、<code>col*</code>の場合は次元<code>1：dims</code>上のものである。
1829,行列の次元<code>x</code> for<code>.colSums()</code> など。
1830,論理的である。  <span class="option">--args</span> の後の引数だけを返すべきか？
1831,任意の<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>オブジェクト。
1832,<code>文字</code>ベクトル、または<code>NULL<code>。
1833,任意の<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>オブジェクト。
1834,<code>文字</code>ベクトル、または<code>NULL<code>.
1835,数値.  出力ベクトルの希望する長さ、入力は必要に応じてリサイクルされます。
1836,数値ベクトル.
1837,数値ベクトル.
1838,数値ベクトル。
1839,数値ベクトル.
1840,オブジェクト、おそらくモード<code>complex</code>の。
1841,モード<code>complex</code>のオブジェクト、またはメソッドが定義されているクラスの1つです。
1842,他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
1843,条件オブジェクト。
1844,呼び出し式。
1845,条件オブジェクト。
1846,評価される式。
1847,リターンまたは終了する前に評価される式。
1848、関数。
1849,文字列。
1850、文字列。
1851,再始動に名前を付ける文字列。
1852,再始動オブジェクト。
1853,オブジェクト。
1854,条件クラスの名前を指定する文字列。
1855,追加引数; 詳細は下記を参照してください。
1856,条件オブジェクト。
1857、呼び出し式。
1858、条件オブジェクト。
1859,評価される式。
1860,リターンまたは終了する前に評価される式。
1861、関数。
1862、文字列。
1863、文字列。
1864,再始動に名前を付ける文字列。
1865,再始動オブジェクト。
1866,オブジェクト。
1867,条件クラスの名前を指定する文字列。
1868,追加引数; 以下の詳細を参照してください。
1869、条件オブジェクト。
1870、呼び出し式。
1871、条件オブジェクト。
1872、評価される式。
1873,リターンまたは終了する前に評価される式。
1874年、関数。
1875,文字列
1876,文字列
1877,再始動に名前を付ける文字列。
1878,再始動オブジェクト
1879,オブジェクト。
1880,条件クラス名を指定する文字列。
1881,追加の引数、詳細は後述。
1882,条件オブジェクト。
1883、呼び出し式。
1884、条件オブジェクト。
1885,評価される式。
1886,リターンまたは終了する前に評価される式。
1887、関数
1888、文字列。
1889、文字列。
1890,再始動に名前を付ける文字列。
1891,再始動オブジェクト。
1892,オブジェクト。
1893,条件クラスの名前を指定する文字列。
1894,追加引数;以下の詳細を参照。
1895,条件オブジェクト。
1896,呼び出し式。
1897,条件オブジェクト。
1898,評価される式。
1899,リターンまたは終了する前に評価される式。
1900、関数
1901、文字列
1902、文字列。
1903,再始動に名前を付ける文字列。
1904,再始動オブジェクト。
1905,オブジェクト。
1906,条件クラスの名前を指定する文字列。
1907,追加の引数、詳細は以下を参照。
1908,パッケージの名前。<code>character.only</code>が<code>FALSE</code>（デフォルト）か<code>TRUE</code>かによって、名前かリテラル文字列か文字列として与えられる。
1909,ロードされた名前空間を付ける検索リスト上の位置。  <code>search()</code>によって与えられる現在の検索リスト上の位置の名前でもよい。
1910,a character vector describing the location of <span style="font-family：Courier New, Courier; color：<br>R</b></span>Library Treeを検索する場所を記述する文字ベクトル、または<code>NULL</code>です。  デフォルトの<code>NULL</code>は、<code>.libPaths()</code>で現在知られているすべてのライブラリに対応します。
1911,<code>package</code>または<code>help</code>が文字列であると仮定することができるかどうかを示す論理である。
1912,論理的である。  <code>TRUE</code>であれば<code>FALSE</code>、<code>TRUE</code>であれば成功を表す値が返却される。
1913,論理的である。  <code>TRUE</code>の場合、newpackageのアタッチによる<code>conflicts</code>について警告がプリントされる。  衝突とは、関数をマスクする関数、または非関数をマスクする非関数のことです。デフォルトは、<code>conflicts.policy</code>オプションで<code>FALSE</code>と指定されていない限り、<code>TRUE</code>です。
1914年、論理的である。  <code>TRUE</code>の場合、追加の診断が印刷されます。
1915,aの論理。  <code>TRUE</code>の場合、パッケージの取り付けを確認するメッセージは表示されず、ほとんどの場合、パッケージの取り付けに失敗してもエラーや警告は表示されない。
1916,パッケージの名前を示す文字列。
1917,ストリクトコンフリクトチェックが有効な場合に、エラーを出さずにサーチパス上のオブジェクトをマスクできるオブジェクトの名前の文字ベクトルです。
1918,添付フレームに除外または含めるオブジェクトの名前の文字ベクトル。これらの引数は、<code>library</code>または<code>require</code>の呼び出しで1つだけ使用することができる。
1919,<code>DESCRIPTION</code>ファイルの<code>Depends</code>句にリストされた必須パッケージが自動的に添付されるべきかを指定する論理。
1920,検索パスのサブセット、デフォルトでは検索パス全体。
1921,<code>TRUE</code>の場合、検索パスの全てのメンバーに対してマスクされた、またはマスクする関数を与える。
1922,数値.  出力ベクトルの希望する長さ,入力は必要に応じて再利用される.
1923,数値ベクトル.
1924,数値ベクトル
1925,数値ベクトル
1926,数値ベクトル.
1927,オブジェクト、おそらくモード<code>complex</code>の。
1928,モード<code>complex</code>のオブジェクト、またはメソッドが定義されているクラスの1つです。
1929,他のメソッドに、または他のメソッドから渡される更なる引数。
1930,数値または複素数ベクトル。
1931,数値または複素数ベクトル
1932,数値または複素数ベクトル。
1933,数値または複素行列(またはベクトル)：<code>y = NULL</code>は<code>x</code>と同じ行列とみなされます.  ベクトルは、文脈に応じて、トシングルカラムまたはシングルローマトリックスに昇格する。
1934,数値または複素数（<code>cummin</code>または<code>cummax</code>ではない）オブジェクト、またはこれらのいずれかに強制されることが可能なオブジェクトです。
1935,数値または複合（<code>cummin</code>または<code>cummax</code>ではない）オブジェクト、またはこれらのいずれかに強制されることができるオブジェクトです。
1936,数値または複素数（<code>cummin</code>または<code>cummax</code>ではない）オブジェクト、またはこれらのいずれかに強制することが可能なオブジェクトです。
1937,数値または複合（<code>cummin</code>または<code>cummax</code>ではない）オブジェクト、またはこれらのいずれかに強制されることが可能なオブジェクト。
1938,URLを指定する文字列。
1939,論理的：リダイレクトに従うべきか？
1940,論理：証明書は、有効でそのホストに適用されるものとして検証されるべきか？
1941,integer：リクエストが許可される最大時間（秒）です。  正でない値や無効な値は無視されます（デフォルトを含む）。  (追加：<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> 4.1.0.)
1942,character: <code>https://</code> URLに使用するTLSプロトコルの最小バージョン: デフォルト(<code>""</code>) は、基礎となる <code>libcurl</code>(usually 1.0) を超える制限はないです。  その他の有効な値は、<code>"1.1"</code>、<code>"1.2"</code>（ともに<code>libcurl</code>7.34.0以降）、<code>"1.3"</code>（7.52.0以降）です（もし<code>libcurl</code>とそれが使用している SSLライブラリが対応していたら、そのバージョンで使用する）。
1943,切断によって係数に変換される数値ベクトル.
1944,2つ以上のユニークなカットポイントの数値ベクトル、または<code>x</code>がカットされる区間の数を与える単一の数値(2以上)のどちらか。
1945,結果のカテゴリのレベルに対するラベル.  デフォルトでは、ラベルは<code>"(a,b)"</code>区間表記を使用して構築されます.  もし<code>labels = FALSE</code> ならば、因子の代わりに単純な整数コードが返されます。
1946,logical,最低(<code>right = FALSE</code> の場合は最高)の 'breaks' 値に等しい 'x[i]' が含まれるべきかどうかを示す.
1947,論理的で、区間を右で閉じ(左で開き)、またはその逆とするかどうかを指定する。
1948,ラベルが与えられない場合に使用される整数です。  これは、ブレークナンバーをフォーマットする際に使用される桁数を決定するものである。
1949,論理：結果は順序付き係数であるべきか？
1950,他のメソッドに渡される、または他のメソッドから渡される更なる引数。
1951,クラス<code>"POSIXt"</code>または<code>"Date"</code>を継承したオブジェクトです.
1952,カットポイントのベクトル <em>or</em> <code>x</code>がカットされる区間の数を与える数 <em>or</em> 区間指定 <code>"sec"</code>, <code>"min"</code>, <code>"hour"</code> のうちの一つ、<code>"day"</code>, <code>"DSTday"</code>, <code>"week"</code>, <code>"month"</code>, <code>"quarter"</code> or <code>"year"</code>, オプションで整数とスペースが先行するか、 <code>"s"</code> が先行する。(<code>"Date"</code>オブジェクトでは、<code>"day"</code>, <code>"week"</code>, <code>"month"</code>, <code>"quarter"</code> and<code>"year"</code> による間隔指定のみが許されます.)
1953年、結果のカテゴリのレベルのためのラベル。  デフォルトでは、ラベルは区間の左端から作られる(デフォルトの<code>right</code>の値も含まれる)。  もし<code>labels = FALSE</code> ならば、因子の代わりに単純な整数コードが返されます。
1954,論理。  <code>breaks = "weeks"</code> の場合、週は月曜日と日曜日のどちらから始まるべきでしょうか？
1955,他のメソッドに渡す、または他のメソッドから渡される引数。
1956,切断によって係数に変換される数値ベクトル。
1957,2つ以上のユニークなカットポイントの数値ベクトル、または<code>x</code>がカットされる区間の数を与える単一の数値（2以上）のいずれか.
1958,結果のカテゴリのレベルに対するラベル.  デフォルトでは、ラベルは<code>"(a,b)"</code>区間表記を使用して構築されます.  もし<code>labels = FALSE</code> ならば、因子の代わりに単純な整数コードが返される。
1959,logical,最低(<code>right = FALSE</code> の場合は最高)の 'breaks' 値に等しい 'x[i]' が含まれるべきかどうかを指定する.
1960,論理的で、区間を右で閉じ(左で開き)、またはその逆にするかどうかを示す。
1961,ラベルが与えられていない場合に使用される整数です。  これは、区切り番号の書式設定に使用される桁数を決定する。
1962,論理：結果は順序付き係数であるべきか？
1963,他のメソッドに渡される、または他のメソッドから渡される更なる引数。
1964,クラス<code>"POSIXt"</code>または<code>"Date"</code>を継承したオブジェクトです.
1965,カットポイントのベクトル <em>or</em> <code>x</code>がカットされる区間の数を与える数 <em>or</em> 区間指定 <code>"sec"</code>, <code>"min"</code>, <code>"hour"</code> のうちの一つ、<code>"day"</code>, <code>"DSTday"</code>, <code>"week"</code>, <code>"month"</code>, <code>"quarter"</code> or <code>"year"</code>, オプションで整数とスペースが先行するか、<code> "s"</code> が先行する。(<code>"Date"</code>オブジェクトでは、<code>"day"</code>, <code>"week"</code>, <code>"month"</code>、<code>"quarter"</code>及び<code>"year"</code>による間隔指定のみが許されます。)
1966,結果のカテゴリのレベルを表すラベルを指定します。  デフォルトでは、ラベルは区間の左端から作成されます（デフォルトの<code>right</code>の値も含まれます）。  もし<code>labels = FALSE</code> ならば、因子の代わりに単純な整数コードが返される。
1967,論理。  <code>breaks = "weeks"</code> の場合、週は月曜と日曜のどちらから始まるべきか？
1968,他のメソッドに渡す、または他のメソッドから渡される引数。
1969,an <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトです。
1970,これらの引数は<code>value</code>または<code>tag = value</code>のいずれかの形式である。  コンポーネント名は、タグ（存在する場合）またはdeparsed引数そのものに基づいて作成されます。
1971,<code>NULL</code>または行名として使用される列を指定する単一の整数または文字列、またはデータフレームの行名を与える文字または整数ベクトルを指定します。
1972,もし<code>TRUE</code>なら、行の長さと名前の一貫性をチェックする(Check forconsistency).
1973,論理的である。  もし<code>TRUE</code>なら、データフレーム内の変数名が合成的に有効な変数名であるか、重複していないかをチェックします。もし必要なら、（<code>make.names</code>によって）そうなるように調整されます。
1974年、「名前なし」（<code>someName = arg</code>として正式に呼び出されないという意味で）引数が、自動的に構築された名前、またはむしろ名前<code>""</code>を得るかどうかを示す論理。  <code>""</code> の名前を保持したい場合は、<code>check.names</code> が false の場合でも <code>FALSE</code> に設定する必要があるようです。
1975,logical: 文字ベクトルは係数に変換されるべきか？  工場出荷時のデフォルトは、以前は <code>TRUE</code> だったのですが、<span style="font-family：クーリエニュー、クーリエ、カラー：#666666;"><b>R</b></span> 4.0.0.
1976,論理ベクトル、因子、数値ベクトル、文字ベクトルを構成要素とするデータフレーム。
1977,結果の行列が文字（<code>NULL</code>ではなく）<code>rownames</code>を持つべきかを示す論理。  デフォルトの <code>NA</code> は、データフレームが '自動' 行名を持っている場合、またはゼロ行データフレームに対して <code>NULL</code>rowames を使用します。
1978年、任意の解釈された<span style="font-family：Courier New, Courier; color：#"><b>R</b></span>関数。
1979,ブラウザが入力された時に取得できるテキスト文字列。
1980,ブラウザが入力された時に取得可能な条件。
1981,オプションのメソッドシグネチャです。指定された場合、そのメソッドは、ジェネリックではなく、デバッグされます。
1982,論理; サポート関数<code>debuggingState</code>の呼び出しは、デバッグがグローバルにオンになっていれば<code>TRUE</code>、そうでなければ<code>FALSE</code>を返す.  引数にこれらの値のいずれか、または両方を指定すると、状態が設定されます。  デバッグ状態が<code>FALSE</code>の場合、デバッグ動作は行われません（ただし、関数内の明示的な<code>browser</code>呼び出しは引き続き機能します）。
1983年、解釈されたすべての<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> 関数。
1984,ブラウザが入力された時に取得できるテキスト文字列です。
1985,ブラウザが入力された時に取得可能な条件。
1986,オプションのメソッドシグネチャです。指定された場合、そのメソッドは、ジェネリックではなく、デバッグされます。
1987,論理。サポート関数<code>debuggingState</code>の呼び出しは、デバッグがグローバルにオンになっていれば<code>TRUE</code>、それ以外は<code>FALSE</code>を返す。  引数にこれらの値のいずれか、または両方を指定すると、状態が設定されます。  デバッグ状態が<code>FALSE</code>の場合、デバッグ動作は行われません（ただし、関数内の明示的な<code>browser</code>呼び出しは引き続き機能します）。
1988年、解釈されたすべての<span style="font-family：Courier New, Courier; color：#"><b>R</b></span>関数。
1989,ブラウザが入力されたときに取得できるテキスト文字列。
1990,ブラウザが入力された時に取得可能な条件。
1991,オプションのメソッドシグネチャです。指定された場合、そのメソッドは、ジェネリックではなく、デバッグされます。
1992,論理; サポート関数<code>debuggingState</code>の呼び出しは、デバッグがグローバルにオンになっていれば<code>TRUE</code>、そうでなければ<code>FALSE</code>を返す.  引数にこれらの値のいずれか、または両方を指定すると、状態が設定されます。  デバッグ状態が<code>FALSE</code>の場合、デバッグ動作は行われません（ただし、関数内の明示的な<code>browser</code>呼び出しは引き続き機能します）。
1993年、これらの引数は<code>value</code>または<code>tag = value</code>のどちらかの形式です。  コンポーネント名は、タグ（存在する場合）またはdeparsed引数そのものに基づいて作成されます。
1994,<code>NULL</code> または行名として使用する列を指定する単一の整数または文字列、またはデータフレームの行名を与える文字または整数のベクトル。
1995,もし<code>TRUE</code>なら、行の長さと名前の一貫性をチェックする(Check forconsistency).
1996年、論理的である。  もし<code>TRUE</code>なら、データフレーム内の変数名が合成的に有効な変数名であるか、重複していないかをチェックします。もし必要なら、（<code>make.names</code>によって）そうなるように調整されます。
1997年、「名前なし」（<code>someName = arg</code>として正式に呼び出されないという意味で）引数が、自動的に構築された名前、あるいはむしろ名前<code>""</code>を得るかを示す論理。  <code>""</code> の名前を保持したい場合は、<code>check.names</code> が false のときでも <code>FALSE</code> に設定する必要があるようです。
1998,logical: 文字ベクトルは係数に変換されるべきか？  工場出荷時のデフォルトは、以前は <code>TRUE</code> でしたが、<span style="font-family.Courier New, Courier; color="> <code>FALSE</code> に変更されました：クーリエニュー、クーリエ、カラー：#666666;"><b>R</b></span> 4.0.0.
1999,変数名(関数呼び出しの際に引用符で囲まれた文字列として与えられる)
2000年、<code>x</code>に代入される式
2001年、<code>value</code>を評価する環境。
2002年、<code>x</code>を代入する環境。
2003年、任意の<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> 式。
2004,<i>[20,500]</i>の整数で、改行が試みられるカットオフ(バイト数)を決定します。
2005,シンボル名が標準的な構文に従わない場合、バックティックで閉じるべきかどうかを示す論理。
2006,deparsingオプションの文字ベクトル(または<code>NULL</code>)。<code>.deparseOpts</code>を参照してください。
2007,integer:生成する行数の最大値です。
2008,文字列。<code>paste()</code>に渡されます。
2009,<code>deparse()</code>に渡される更なる引数。
2010年、任意の<span style="font-family：Courier New, Courier; color：<b>R</b></span> 式。
2011,<i>[20,500]</i>の整数で、改行を試みるカットオフ(バイト単位)を決定します.
2012,シンボル名が標準的な構文に従わない場合、バックティックで閉じるべきかどうかを示す論理。
2013,deparsingオプションの文字ベクトル(または<code>NULL</code>)。<code>.deparseOpts</code>を参照してください。
2014,integer:生成する最大行数。負の値は制限なしを示す。
2015,文字列、<code>paste()</code>に渡されます。
2016,さらに<code>deparse()</code>に渡される引数。
2017,数値行列：論理行列は数値に強制される。
2018,logical;もし<code>TRUE</code>（デフォルト）なら、行列式のモジュラスのthelogarithmを返す。
2019,オプションの引数。  現在のところ、何も使用されていない。  以前のバージョンの<code>det</code>では、オプションの<code>method</code>引数を指定することができました。この引数は無視されますが、エラーは発生しません。
2020,デタッチするオブジェクト。  デフォルトは <code>search()[pos]</code> です。これは引用符で囲まれていない名前か文字列ですが、<em>文字ベクトルではありません。  数値が与えられた場合、これは<code>pos</code>として扱われます。
2021,検索するデータベースの<code>search()</code>内のインデックス位置。  <code>name</code>が数値の場合、<code>pos = name</code>が使用されます。
2022,パッケージがデタッチされるときに、名前空間を読み込むことを試みるかどうかを示す論理値です。  パッケージが名前空間を持ち、<code>unload</code>が<code>TRUE</code>の場合、<code>detach</code>は<em>via</em><code>unloadNamespace</code>で名前空間をアンロードしようとします：名前空間が他の名前空間によってインポートされているか、<code>unload</code>が<code>FALSE</code>ならアンロードは発生しないでしょう。
2023,<code>name</code>が文字列であると仮定できるかどうかを示す論理である。
2024,論理：あるパッケージは、他の付属パッケージがそれに依存しているにもかかわらず、切り離されるべきか？
2025,数値行列：論理行列は、数値に強制される。
2026,logical;もし<code>TRUE</code>（デフォルト）なら、行列式のモジュラスのlogarithmを返す。
2027,オプションの引数。  現在のところ、何も使用されていない。  以前のバージョンの<code>det</code>では、オプションの<code>method</code>引数を指定することができました。この引数は無視されますが、エラーは発生しません。
2028,数値行列：論理行列は数値に強制される。
2029,logical;もし<code>TRUE</code>（デフォルト）なら、行列式のモジュラスのlogarithmを返す。
2030,オプションの引数。  現在のところ、何も使用されていない。  この引数は無視されますが、エラーを発生させることはありません。
2031,オブジェクト。
2032,ファイルまたは接続を指定する文字列です。<code>""</code>はコンソールへの出力を表します。
2033,deparsingオプションを示す文字ベクトル。その説明については<code>.deparseOpts</code>を参照して下さい。
2034,論理：可能であれば、関数を解析するとき、ソースのフォーマットを保持すべきか？
2035,行列、ベクトル、1次元の<code>array</code>、または欠損しています。
2036,<code>x</code>が行列でない場合、結果の寸法は任意である。
2037,(<code>x</code> が行列の場合) 結果のベクトル、<code>x</code> の対角線が、もし利用可能なら <code>dimnames(x)</code> から <code>names</code> を継承すべきかを示す論理です.
2038,単一の値または現在の対角線の長さに等しい長さのベクトルのいずれかである。  <code>x</code>のモードに強制することができるものでなければなりません.
2039,行列、ベクトル、1次元の<code>array</code>、または欠損。
2040,<code>x</code>が行列でない場合の結果の寸法は任意である.
2041,(<code>x</code>が行列の場合) 結果のベクトル、<code>x</code>の対角線が、利用可能であれば<code>dimnames(x)</code>から<code>names</code>を継承すべきかを示す論理です.
2042,単一の値または現在の対角線の長さに等しい長さのベクトルのいずれか。  <code>x</code>のモードに強制することができるものでなければなりません.
2043,対角化される値を含む数値ベクトルまたは行列.
2044,どのラグを使用するかを示す整数.
2045,差分の順序を示す整数.
2046,メソッドに渡す、またはメソッドから渡す追加の引数。
2047,差分する値を含む数値ベクトルまたは行列。
2048,どのラグを使用するかを示す整数。
2049,差分の順序を示す整数。
2050,メソッドに渡す、またはメソッドから渡される追加の引数。
2051,ベディフィレンシングされる値を含む数値ベクトルまたは行列。
2052,どのラグを使用するかを示す整数。
2053,差分の順序を示す整数。
2054,メソッドに渡す、またはメソッドから渡す追加の引数。
2055,date-timeまたはdateオブジェクト。
2056,変換に使用されるオプションのタイムゾーン指定、主に<code>"POSIXlt"</code>オブジェクトに使用されます。
2057,文字列。  結果の単位を指定します。  省略可能です。
2058,文字列.  <code>units</code>と同様ですが、省略は不可です。
2059,時間間隔を指定する文字列または数値。
2060,<code>tim</code>のフォーマットを指定する文字：<code>strptime</code>を参照。  デフォルトは、ロケール固有の時間フォーマットである。
2061,クラス<code>"difftime"</code>を継承したオブジェクトです。
2062,他のメソッドに渡す、または他のメソッドから渡される引数。
2063,差分化される値を含む数値ベクトルまたは行列。
2064,どのラグを使用するかを示す整数。
2065,差分の順序を示す整数。
2066,メソッドに、またはメソッドから渡される追加の引数。
2067,date-timeまたはdateオブジェクト。
2068,変換に使用されるオプションのタイムゾーン指定、主に<code>"POSIXlt"</code>オブジェクトに使用されます。
2069,文字列。  結果の単位を指定します。  省略可能です。
2070,文字列.  <code>units</code>と同様ですが、省略はできません。
2071,時間間隔を指定する文字列または数値。
2072,<code>tim</code>のフォーマットを指定する文字：<code>strptime</code>を参照。  デフォルトは、ロケール固有の時間フォーマットである。
2073,クラス<code>"difftime"</code>を継承したオブジェクトです。
2074,他のメソッドに渡す、または他のメソッドから渡される引数。
2075,非負の数値ベクトル。
2076,数値ベクトル。
2077,整数ベクトル。
2078,アン<span style="font-family：Courier New, Courier; color：<b>R</b></span>オブジェクト、例えば、行列、配列、データフレームなど。
2079,デフォルトのメソッドでは、<code>NULL</code>または数値ベクトル（切り捨てにより整数に強制される）のいずれか。
2080,an <span style="font-family：Courier New, Courier; color：<b>R</b></span>オブジェクト、例えば、行列、配列、データフレームなどです。
2081,デフォルトのメソッドでは、<code>NULL</code>または数値ベクトル（切り捨てにより整数に強制される）。
2082,an <span style="font-family：Courier New, Courier; color：<b>R</b></span>オブジェクト、例えば行列、配列、データフレームなどです。
2083,デフォルトのメソッドでは、<code>NULL</code>か、(切り捨てによって)整数に強制される数値ベクトルのどちらかです。
2084,an <span style="font-family：Courier New, Courier; color：<b>R</b></span>オブジェクト、例えば行列、配列、データフレームなど。
2085,<code>dimnames(x)</code>の可能な値: '値'のセクションを参照してください。
2086,構築されたdimnamesの<code>base</code>記号と数字を分離するために使用される文字列です。
2087,文字ベクトルの空でない<code>list</code>です。  list成分は、空のdimnames成分の代替を構築するために順番に使用されます（必要な場合はリサイクルされます）。  例題も参照してください。
2088,構築されたdimnamesが<code>make.unique</code>の意味で各次元内で一意であることを示す論理です。
2089,an <span style="font-family：Courier New, Courier; color：<br>R</b></span> オブジェクト（例：行列、配列、データフレーム）。
2090,<code>dimnames(x)</code>の可能な値: '値'のセクションを参照してください。
2091,構築されたdimnamesの<code>base</code>記号と数字を分離するために使用される文字列です.
2092,文字ベクトルの空でない<code>list</code>である。  list成分は、空のdimnames成分の代替を構築するために順番に使用されます（必要な場合はリサイクルされます）。  例題も参照してください。
2093,構築されたdimnamesが<code>make.unique</code>の意味で各次元内で一意であることを示す論理です。
2094,an <span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクト、例えば、行列、配列、データフレームなどです。
2095,<code>dimnames(x)</code>の可能な値: '値'のセクションを参照して下さい。
2096,構築されたdimnamesの<code>base</code>記号と数字を分離するために使用される文字列.
2097,文字ベクトルの空でない<code>list</code>です。  list成分は、空のdimnames成分の代替を構築するために順番に使用されます（必要な場合はリサイクルされます）。  例題も参照してください。
2098,構築されたdimnamesが<code>make.unique</code>の意味で各次元内で一意であることを示す論理です。
2099,an <span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクト、例えば、行列、配列、データフレームなどです。
2100,<code>dimnames(x)</code>の可能な値: '値'のセクションを参照してください。
2101,文字列で、構築されたdimnamesの<code>base</code>記号と数字を分離するために使用されます。
2102,文字ベクトルの空でない<code>list</code>である。  list成分は、空のdimnames成分の代替を構築するために順番に使用されます（必要な場合はリサイクルされます）。  例題も参照してください。
2103,構築されたdimnamesが<code>make.unique</code>の意味で各次元内で一意であることを示す論理です.
2104,フルパス名の文字ベクトル; デフォルトは作業ディレクトリに対応する <code>getwd()</code>.  チルド展開（<code>path.expand</code>参照）が実行されます。  欠落した値は無視されます。  マークされたエンコーディングの要素は、ネイティブエンコーディングに変換されます（変換に失敗した場合は、非存在とみなされます）。
2105,オプションの正規表現です。  正規表現に一致するファイル名のみが返されます。
2106,論理値。  <code>FALSE</code>の場合、可視ファイルの名前のみが返されます（Unixスタイルの可視性に従って、名前がドットで始まらないファイルです）。  <code>TRUE</code>の場合、すべてのファイル名が返されます。
2107,論理値です。  <code>TRUE</code>の場合、ファイル名の前にdirectorypathが付加され、相対ファイルパスが与えられる。<code>FALSE</code>の場合、（パスではなく）ファイル名が返される。
2108,論理的です。  リストがディレクトリに再帰するか？
2109,論理的。  パターン・マッチは大文字と小文字を区別しないようにする必要がありますか？
2110,論理  再帰的なリストにはサブディレクトリ名を含めるべきか？  (再帰的でないリストでは常に含まれる)。
2111,論理的。  <code>"."</code>と<code>"."</code>の両方は、非再帰的なリストからも除外されるべきか？
2112,1つのパス名を含む文字ベクトル。  Tildeexpansion（<code>path.expand</code>を参照）が行われます。
2113,ファイルまたはディレクトリのパスを含む文字ベクトル。  Tildeexpansion（<code>path.expand</code>を参照）が行われる。
2114,logical;失敗時の警告は表示されるべきか？
2115,logicalです。last以外のパスの要素は作成されるべきか？  もし真なら、Unixコマンド<code>mkdir -p</code>のようにします。
2116,Unix-alikeで使用するモード: <code>as.octmode</code> によって強制されます.  <code>Sys.chmod</code> では、<code>paths</code> に沿ってリサイクルされます。
2117,論理：モードは<code>umask</code>設定によって制限されるべきか？
2118,1つのパス名を含む文字ベクトル。  Tildeexpansion（<code>path.expand</code>を参照）が行われます。
2119,ファイルまたはディレクトリのパスを含む文字ベクトル。  Tildeexpansion(<code>path.expand</code>を参照)が実行されます。
2120,logical;失敗時の警告は表示されるべきか？
2121,論理的です。last以外のパスの要素は作成されるべきか？  もし真なら、Unixコマンド<code>mkdir -p</code>のようになります。
2122,Unix-alikeで使用するモード: <code>as.octmode</code> によって強制されます.  <code>Sys.chmod</code> では、<code>paths</code> に沿ってリサイクルされます。
2123,論理：モードは<code>umask</code>設定によって制限されるべきか？
2124,文字ベクトル、パス名を含む。
2125,関数または呼び出される関数の名前を示す空でない文字列のいずれか。
2126,関数呼び出しのための引数の<em>リスト</em>です。  <code>args</code>の<code>names</code>属性は、引数名を与える。
2127,引数を引用するかどうかを示す論理値。
2128,呼び出しを評価するための環境。  これは、<code>what</code>が文字列で、引数がシンボルまたは引用式である場合に最も有用であろう。
2129,<span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクトです。
2130,希望する長さを指定する非負の整数。二重の値は整数に強制される。
2131,強制されるかテストされるオブジェクト。
2132,他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
2133,オブジェクト。
2134,ファイルまたは接続を指定する文字列。<code>""</code>は、コンソールへの出力を示します。
2135,deparsingオプションを示す文字ベクトル。その説明については<code>.deparseOpts</code>を参照。
2136,論理：可能であれば、関数を解析するとき、ソースフォーマットを保持すべきか？
2137,an <span style="font-family：Courier New, Courier; color：#文字ベクトルに強制するために、<b>R</b></span>オブジェクトを使用します。
2138,使用される引用符の種類、「詳細」を参照。
2139,配列(行列を含む)。
2140,未使用の因子レベルをドロップするためのオブジェクトです。
2141,<code>factor()</code>に渡される; 存在しても結果から除外されるべき因子レベル。  なお、これは<span style="font-family.Courier New, Courier; color "の<code>NA</code>の<em>implicitly</em>だった：Courier New, Courier; color：<br>R</b></span> &lt;= 3.3.1 では、ドキュメントに反して <code>x</code> に存在しても <code>NA</code> レベルを落としてしまうことがありました。  現在のデフォルトは<code>x[ , drop=TRUE]</code>と互換性があります。
2142,メソッドに渡される更なる引数
2143,レベルを落とす<em>ない</em>カラムのインデックス
2144,未使用の因子レベルをドロップするためのオブジェクト。
2145,<code>factor()</code>に渡される; 存在しても結果から除外されるべき因子レベル(factor levels).  なお、これは<span style="font-family.Courier New, Courier; color "の<code>NA</code>の<em>implicitly</em>だった：Courier New, Courier; color：<br>R</b></span> &lt;= 3.3.1 では、ドキュメントに反して <code>x</code> に存在しても <code>NA</code> レベルを落としてしまうことがありました。  現在のデフォルトは<code>x[ , drop=TRUE]</code>と互換性があります。
2146,メソッドに渡される更なる引数
2147,レベルを落とす<em>ない</em>カラムのインデックス
2148,未使用の因子レベルをドロップするためのオブジェクト。
2149,<code>factor()</code>に渡される; 存在しても結果から除外されるべき因子レベル(factor levels).  なお、これは<span style="font-family.Courier New, Courier; color "の<code>NA</code>の<em>implicitly</em>だった：Courier New, Courier; color：<br>R</b></span> &lt;= 3.3.1 では、ドキュメントに反して <code>x</code> に存在しても <code>NA</code> レベルを落としてしまうことがありました。  現在のデフォルトは<code>x[ , drop=TRUE]</code>と互換性があります。
2150,メソッドに渡される更なる引数
2151,レベルを落とす<em>not</em>元の列のインデックス。
2152,文字ベクトル。  1つまたは複数の<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトをダンプする。
2153,ファイルまたはコネクションを指定する文字列。  <code>""</code>はコンソールへの出力を示す。
2154,<code>TRUE</code>で<code>file</code>が文字列の場合、出力は<code>file</code>に追加され、それ以外の場合は<code>file</code>の内容が上書きされます.
2155,deparsingのオプションを示す文字ベクトル.
2156,オブジェクトを検索するための環境。
2157,論理的である。  約束は評価されるべきか？
2158,ベクトルかデータフレームか配列か<code>NULL</code>か。
<code>FALSE</code>は特別な値で、全ての値が比較できることを意味し、デフォルト以外のメソッドで受け入れられる唯一の値である可能性があります。  これは、<code>x</code>と同じ型に内部で強制されます。
2160,重複が裏側から考慮されるべきかどうかを示す論理。すなわち、同一要素の最後(または右端)は<code>duplicated = FALSE</code> に対応する。
2161,予想されるユニークなアイテムの最大数(1より大きい)。
2162,特定のメソッドのための引数。
2163,固定される配列のマージン：<code>apply</code>を参照し、<code>MARGIN = 0</code>が有用であることに注意してください。
2164,ベクトルまたはデータフレームまたは配列または<code>NULL</code>。
<code>FALSE</code>は特別な値で、全ての値が比較できることを意味し、デフォルト以外のメソッドで受け入れられる唯一の値である可能性があります。  これは、<code>x</code>と同じ型に内部で強制されます。
2166,重複が裏側から考慮されるべきかどうかを示す論理、すなわち、同一要素の最後(または右端)は<code>duplicated = FALSE</code>に対応することになる。
2167,予想されるユニークなアイテムの最大数(1より大きい)。
2168,特定のメソッドのための引数。
2169,固定される配列のマージン：<code>apply</code>を参照し、<code>MARGIN = 0</code>が有用であることに注意してください。
2170,ベクトルまたはデータフレームまたは配列または<code>NULL</code>.
2171,比較できない値のベクトル。<code>FALSE</code>は特別な値で、全ての値が比較できることを意味し、デフォルト以外のメソッドで受け入れられる唯一の値である可能性があります。  これは、<code>x</code>と同じ型に内部で強制されます。
2172,重複が裏側から考慮されるべきかどうかを示す論理、すなわち、同一要素の最後(または右端)は<code>duplicated = FALSE</code>に対応することになる。
2173,予想されるユニークなアイテムの最大数(1より大きい)。
2174,特定のメソッドのための引数。
2175,固定される配列のマージン：<code>apply</code>を参照し、<code>MARGIN = 0</code>が有用であることに注意されたい。
2176,ベクトルまたはデータフレームまたは配列または<code>NULL</code>。
<code>FALSE</code>は特別な値で、全ての値が比較できることを意味し、デフォルト以外のメソッドで受け入れられる唯一の値である可能性があります。  これは、<code>x</code>と同じ型に内部で強制されます。
2178,重複が裏側から考慮されるべきかどうかを示す論理、すなわち、同一要素の最後(または右端)は<code>duplicated = FALSE</code>に対応することになる。
2179,予想されるユニークなアイテムの最大数(1より大きい)。
2180,特定のメソッドのための引数。
2181,固定される配列のマージン：<code>apply</code>を参照し、<code>MARGIN = 0</code>が有用であることに注意してください。
2182,ベクトルまたはデータフレームまたは配列または<code>NULL</code>.
2183,比較できない値のベクトル。<code>FALSE</code>は特別な値で、全ての値が比較できることを意味し、デフォルト以外のメソッドで受け入れられる唯一の値である可能性があります。  これは、<code>x</code>と同じ型に内部で強制されます。
2184,重複が裏側から考慮されるべきかどうかを示す論理。すなわち、同一要素の最後（または右端）は<code>duplicated = FALSE</code> に対応します。
2185,予想されるユニークなアイテムの最大数(1より大きい)。
2186,特定のメソッドの引数。
2187,固定される配列のマージン：<code>apply</code>を参照し、<code>MARGIN = 0</code>が有用であることに注意してください。
2188,適切な数値バージョン文字列を持つ文字ベクトル(「詳細」参照); <code>package_version</code> の場合、代わりに <code>R.version</code> によって得られる Rversion オブジェクト。
2189,無効な数値バージョンはエラーになるか(デフォルト)、ならないかを示す論理です。
2190,date-timeクラスの1つから印刷または要約されるオブジェクト。
2191,タイムゾーンフォーマットのために、<code>format.POSIXct</code>に渡されます。
2192,数値または<code>NULL</code>で、印刷されるエントリの最大数を指定します。  デフォルトでは、<code>NULL</code>の時、<code>getOption("max.print")</code>が使われます。
2193,計算の有効桁数：最も重要な時間単位を正確に表現するのに十分な桁数でなければならない。
2194,他のメソッドから、または他のメソッドに渡される更なる引数。
2195,日付-時間オブジェクト
2196,日付-時間オブジェクトまたは文字ベクトル。  (文字ベクトルは<code>as.POSIXct</code>で変換されます)。
2197,数値ベクトル(秒単位)
2198,<code>==</code>、<code>!=</code>、<code>&lt;</code>、<code>&lt;=</code>、<code>&gt;</code>または<code>&gt;=</code>のいずれか一つ。
2199,<code>cat</code>に渡す引数（<code>warnings()</code>の場合）。
2200,<code>warnings()</code>が返す<code>"warnings"</code>オブジェクトです.
2201,<code>"warnings"</code>または<code>"summary.warnings"</code>オブジェクトを指定します。
2202,もし<code>missing</code>でなければ、<code>x</code>と同じ<code>長さの<code>文字</code>ベクトルで、メッセージを「ラベル」する。  デフォルトは <code>n &lt;- length(x)</code> の場合、<i>n &gt;= 2</i> の <code>paste0(seq_len(n), ": ")</code> となります．
2203,メッセージが印刷される前に表示される文字列<code>cat()</code>。
2204,動的共有オブジェクトとして知られているDLLへのパス名を与える文字列です。  (これらの用語の意味については「詳細」を参照してください)。
2205,DLL内のシンボルをDLL間で共有せず、独自のローカルテーブルに保存するか、グローバルシンボルテーブルに追加するかを制御する論理値です。  この効果があるかどうかは、システムに依存する。
2206,ライブラリがロードされた時点ですべてのシンボルを解決（再配置）するか、使用されるまで延期するかを制御する論理である。  この制御は、開発者がライブラリが完全で、必要なシンボルがすべて揃っているかどうかをテストしたり、ユーザーが不足するシンボルを無視するのに便利です。  この効果があるかどうかは、システムに依存する。
2207,将来の拡張のためのその他の引数。
2208,シンボル名を与える文字列。
2209,与えられた場合、<code>名</code>の検索をこの引数で与えられたDLLに限定する（さらに、従来の拡張子、'<span class="file">.so</span>'、'<span class="file">.sl</span>'、'<span class="file">.dll</span>', ...）．  これは、パッケージの安全性を高めるためのもので、この引数を使うことで、他のパッケージが自分の外部シンボルを上書きできないことを保証することができます。  これは、<code>.C</code>、<code>.Call</code>、<code>.Fortran</code>、<code>.External</code>関数と同じ方法で使用されます。
2210,探すシンボルの種類：任意（<code>""</code>、デフォルト）、<code>"Fortran"</code>、<code>"Call"</code>または<code>"External"</code>でよいです。
2211,動的共有オブジェクトとして知られているDLLへのパス名を与える文字列です。  (これらの用語の意味については、「詳細」を参照)。
2212,DLL内のシンボルをDLL間で共有せず、独自のローカルテーブルに保存するか、グローバルシンボルテーブルに追加するかを制御する論理値です。  この効果があるかどうかは、システムに依存する。
2213,ライブラリがロードされた時点ですべてのシンボルを解決（再配置）するか、使用されるまで延期するかを制御する論理である。  この制御は、開発者がライブラリが完全で、必要なシンボルがすべて揃っているかどうかをテストしたり、ユーザーが不足するシンボルを無視するのに便利です。  この効果があるかどうかは、システムに依存する。
2214,将来の拡張のためのその他の引数。
2215,シンボル名を与える文字列。
2216,与えられた場合、<code>名</code>の検索をこの引数で与えられたDLLに限定する（さらに、従来の拡張子、'<span class="file">.so</span>'、'<span class="file">.sl</span>'、'<span class="file">.dll</span>', ...）．  これは、パッケージの安全性を高めるためのもので、この引数を使うことで、他のパッケージが自分の外部シンボルを上書きできないことを保証することができます。  これは、<code>.C</code>、<code>.Call</code>、<code>.Fortran</code>、<code>.External</code>関数と同じ方法で使用されます。
2217,探すシンボルの種類：任意（<code>""</code>、デフォルト）、<code>"Fortran"</code>、<code>"Call"</code>または<code>"External"</code>でよいです。
2218,<code>get</code>の場合、オブジェクト名（文字列またはシンボルとして与えられる）。<br><code>mget</code>の場合、オブジェクト名の文字ベクタ。
2219,オブジェクトを探す場所(「詳細」を参照); もし省略された場合は、オブジェクトの名前が式で引用されずに現れたかのように検索します。
2220,求めるオブジェクトのモードまたはタイプ：「詳細」セクションを参照してください。
2221,環境を囲むフレームを検索する必要がありますか？
2222,<code>mget</code>の場合、アイテムが見つからない場合に使用される値の<code>list</code>: 必要に応じてリストに強制されます。<br><code>dynGet</code>では任意の<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>オブジェクト、例えば<code>stop()</code>への呼び出しなどです。
2223,lookintoする最小フレーム番号を指定する整数.
2224,使用される環境。
2225,適用される関数は、<em>via</em><code>match.fun</code>で見つかります。<code>+<code>、<code>%*%<code>などの関数の場合、関数名はバッククオートまたはクオートでなければなりません。
2226,<code>FUN</code>のオプション引数。
2227,すべての値に対して関数を適用するかどうかを示す論理。
2228,結果のリストが<code>names</code>を持つべきかどうかを示す論理です。
2229,スペクトル分解が計算される数値または複素行列。  論理的な行列は数値に強制される.
2230,<code>TRUE</code>の場合、行列は対称（複素数の場合はエルミート）であると仮定され、その下三角形（対角線を含む）だけが使用されます.  <code>symmetric</code> が指定されない場合、<code>isSymmetric(x)</code>が使用されます。
2231,<code>TRUE</code>の場合、固有値のみが計算されて返され、それ以外の場合は固有値と固有ベクトルの両方が返される。
2232,論理的である。無効で無視される。
2233,<code>function</code>、<code>formula</code>、または<code>NULL</code>、これはデフォルトである。
2234,関数に関連付ける環境。
2235,任意の<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクト。
2236,論理。もし<code>TRUE</code>なら、環境はハッシュテーブルを使用する。
2237,作成されたenvironmentのエンクロージャーとして使用されるenvironmentです。
2238,環境
2239,ハッシュドエンバイロメントの初期サイズを指定する整数です。  <code>size</code>が<code>NA</code>またはゼロの場合、内部デフォルト値が使用されます。  この引数は、<code>hash</code>が<code>FALSE</code>の場合、無視されます。
2240,文字ベクトル。
2241,正の長さの文字ベクトル。
2242,文字ベクトル。
2243,正の長さの文字ベクトル。
2244,文字ベクトル、または<code>as.character</code>によってoneに強制されることができるオブジェクト。
2245,integer:フィールド幅の最小値。  <code>NULL</code> または<code>NA</code>の場合、これは<code>x</code>の要素のために必要な最大のフィールド幅とみなされる。
2246,character：もしあれば、引用文字。
2247,logical：<code>NA</code>文字列は符号化されるべきか？
2248,character：部分一致が許される。  <code>justify == "none"</code> は <code>width = 0</code> と等価であり、これは <code>format.default</code> との一貫性を保つためです。
2249,文字ベクトル。
2250,正の長さの文字ベクトル。
2251,文字ベクトル。
2252,正の長さの文字ベクトル。
2253,<code>文字</code>の "start "を考慮した文字列のベクトル.
2254,<code>文字</code>ベクトル(しばしば長さ1).
2255,構文的に有効な<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>式。
2256,<code>call</code>、すなわち、<span style="font-family：Courier New, Courier; color：<code>class</code> (および <code>mode</code>) <code>"call"</code> の<b>R</b></span>オブジェクトです。
2257,環境またはリスト・オブジェクト。  デフォルトは、現在の評価環境です。
2258,<code>function</code>、<code>formula</code>、または<code>NULL</code>、これはデフォルトである。
2259,関数と関連付ける環境。
2260,任意の<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクト。
2261,論理。もし<code>TRUE</code>なら、環境はハッシュテーブルを使用する。
2262,作成されたenvironmentのエンクロージャーとして使用されるenvironmentです。
2263,環境
2264,ハッシュドエンバイロメントの初期サイズを指定する整数です。  <code>size</code>が<code>NA</code>またはゼロの場合、内部デフォルト値が使用されます。  この引数は、<code>hash</code>が<code>FALSE</code>の場合、無視されます。
2265,デフォルトの<code>function</code>、<code>formula</code>、または<code>NULL</code>である。
2266,関数と関連付ける環境。
2267,任意の<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクト。
2268,論理。もし<code>TRUE</code>なら、環境はハッシュテーブルを使用する。
2269,作成されたenvironmentのエンクロージャーとして使用されるenvironmentです。
2270,環境
2271,ハッシュドエンバイロメントの初期サイズを指定する整数です。  <code>size</code>が<code>NA</code>またはゼロの場合、内部デフォルト値が使用されます。  この引数は、<code>hash</code>が<code>FALSE</code>の場合は無視されます。
2272,デフォルトである<code>function</code>、<code>formula</code>、または<code>NULL</code>である。
2273,関数に関連付ける環境です。
2274,任意の<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクト。
2275,論理。もし<code>TRUE</code>なら、環境はハッシュテーブルを使用する。
2276,作成されたenvironmentのエンクロージャーとして使用されるenvironmentです。
2277,環境
2278,ハッシュドエンバイロメントの初期サイズを指定する整数です。  <code>size</code>が<code>NA</code>またはゼロの場合、内部デフォルト値が使用されます。  この引数は、<code>hash</code>が<code>FALSE</code>の場合、無視されます。
2279,環境である。
2280,バインディングがロックされるべきかどうかを指定する論理。
2281，名前オブジェクトまたは文字列。
2282,0個または1個の引数を取る関数。
2283,<code>function</code>、<code>formula</code>、または<code>NULL</code>、これはデフォルトである。
2284,関数と関連付ける環境。
2285,任意の<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクト。
2286,論理。もし<code>TRUE</code>なら、環境はハッシュテーブルを使用する。
2287,作成されたenvironmentのエンクロージャーとして使用されるenvironmentです。
2288,環境
2289,ハッシュドエンバイロメントの初期サイズを指定する整数です。  <code>size</code>が<code>NA</code>またはゼロの場合、内部デフォルト値が使用されます。  この引数は、<code>hash</code>が<code>FALSE</code>の場合は無視されます。
2290,条件オブジェクト。
2291,呼び出し式。
2292,条件オブジェクト。
2293,評価される式。
2294,リターンまたは終了する前に評価される式。
2295、関数
2296,文字列。
2297,文字列。
2298,再始動に名前を付ける文字列。
2299,再始動オブジェクト。
2300、オブジェクト
2301,条件クラスの名前を指定する文字列。
2302,追加の引数。詳細は後述する。
2303,評価されるオブジェクト。  詳細'を参照。
2304,<code>expr</code>が評価される<code>environment</code>を指定する。  <code>NULL</code>、リスト、データフレーム、ペアリスト、または<code>sys.call</code>に指定された整数であってもよい。
2305,<code>envir</code>が(ペア)リストまたはデータフレームである場合に関連します：Courier New, Courier; color：<b>R</b></span> が <code>envir</code> で見つからないオブジェクトを探す場所です。  これは<code>NULL</code>（ベースパッケージの環境、<code>baseenv()</code>と解釈）または環境です。
2306,遡る親の世代数
2307,評価されるオブジェクト。  詳細'を参照。
2308,<code>expr</code>が評価される<code>環境</code>です。  <code>NULL</code>、リスト、データフレーム、ペアリスト、または<code>sys.call</code>に指定された整数であってもよい。
2309,<code>envir</code>が(ペア)リストまたはデータフレームである場合に関連します：Courier New, Courier; color：<b>R</b></span> が <code>envir</code> で見つからないオブジェクトを探す場所です。  これは<code>NULL</code>（ベースパッケージの環境、<code>baseenv()</code>と解釈される）または環境であることができます。
2310,遡る親の世代数
2311,評価されるオブジェクト。  詳細'を参照。
2312,<code>expr</code>が評価される<code>環境</code>です。  <code>NULL</code>、リスト、データフレーム、ペアリスト、または<code>sys.call</code>に指定された整数であってもよい。
2313,<code>envir</code>が(ペア)リストまたはデータフレームである場合に関連します：Courier New, Courier; color：<b>R</b></span> が <code>envir</code> で見つからないオブジェクトを探す場所です。  これは<code>NULL</code>（ベースパッケージの環境、<code>baseenv()</code>と解釈）または環境です。
2314,遡る親世代の数
2315,変数名(文字列またはシンボルとして与えられる)。
2316,オブジェクトを探す場所(詳細セクションを参照); もし省略された場合、この関数は、オブジェクトの名前が式の中で引用されずに現れたかのように検索します.
2317,検索する環境を指定する別の方法ですが、通常は<code>where</code>引数を使用する方が簡単です。
2318,呼び出しリスト内のフレームです。  <code>where</code>を<code>sys.frame(frame)</code>のように与えるのと同じことです。
2319,求めるオブジェクトのモードまたはタイプ：「詳細」セクションを参照のこと。
2320,環境を囲むフレームを探す必要があるか？
2321,<code>x</code>が存在しない場合の<code>get0(x, *)</code>の戻り値です。
2322,数値または複素数ベクトル。
2323,正数または複素数: 対数計算の基数を指定します。  デフォルトは <i>e</i>=<code>exp(1)</code> です。
2324,ベクトル、因子、またはこれらを含むリスト。
2325,<code>"out.attrs"</code>属性(下記参照)を計算し、返すべきことを示す論理です。
2326,文字ベクトルが因子に変換されるかどうかを指定する論理。
2327,数値または複素数ベクトル。
2328,正数または複素数: 対数計算の基準となる基数。  デフォルトは <i>e</i>=<code>exp(1)</code> です。
2329,<code>expression</code>となります：<span style="font-family：Courier New, Courier; color：<br><code>as.expression</code>: メソッドに渡される引数。
2330,任意の<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトです。
2331,希望する長さを指定する非負の整数。2倍値は整数に強制される。1以外の長さの引数を与えるとエラーになる。
2332,強制される、またはテストされるオブジェクト。
2333,他のメソッドに渡される、または他のメソッドから渡される追加の引数。
2334,データのベクトルで、通常、少数の異なる値をとります。
2335,オプションとして、<code>x</code>が取ったかもしれないユニークな値(文字列として)のベクトルです。  デフォルトは、<code>as.character(x)</code>が取った値のユニークなセットで、<em>の昇順にソートされます。  なお、この集合は<code>sort(unique(x))</code>より小さく指定することができる。
2336,<em>either</em>レベルのラベルのオプションの文字ベクトル (<code>exclude</code>のものを削除した後の<code>levels</code>と同じ順序で), <em>or</em> 1長の文字列。 <code>labels</code>の重複する値は、同じ要因レベルに<code>x</code>の異なる値をマップするために使用できます.
2337,レベルのセットを形成するときに除外される値のベクトル。  これは、<code>x</code>と同じレベルセットを持つ因子であってもよいし、<code>文字</code>であるべきである。
2338,レベルが(与えられた順序で)順序付けられたとみなされるべきかどうかを決定する論理フラグ。
2339,レベル数の上限; '詳細'を参照のこと。
2340,(in <code>ordered(.)</code>): <code>ordered</code> 自体は別として、上記のいずれかです.
2341,<code>NA</code>レベルが使用される場合、すなわち<code>any(is.na(x))</code>の場合のみ追加されます.
2342,非負の数値ベクトル(Non-Negative numeric vectors)。
2343,数値ベクトル.
2344,整数ベクトル.
2345,文字列.  接続の説明： '詳細'を参照してください。
2346,文字列。  接続を開く方法(最初に開くべき場合)を説明します。  可能な値については、「モード」セクションを参照してください。
2347,論理。  ブロッキング」セクションを参照してください。
2348,想定されるエンコーディングの名前です。  エンコード'セクションを参照してください。
2349,論理。  trueを指定すると、通常のファイルではない引数(キャラクタデバイスなど)に適した「raw」インターフェイスが使用されます。  これは、テキストモードの読書用に開く時に圧縮ファイルのチェックを抑制し、「ファイル」がシーク可能でない可能性があることを主張する。
2350,文字列、<code>c("default", "internal", "wininet", "libcurl")</code> に部分的に一致します:「詳細」参照。
2351,HTTPrequestsで使用するHTTPヘッダーの名前付き文字ベクトルです。  非HTTPのURLでは無視されます。  <code>HTTPUserAgent</code> オプション (<code>options</code> を参照) から得られる <code>User-Agent</code> ヘッダーは、自動的に最初のヘッダーとして使われます。
2352,0-9の整数値。  書き込み時に適用される圧縮の量を、なしから利用可能な最大値まで指定します。  <code>xzfile</code>の場合、負の値も指定できます: '圧縮'のセクションを参照して下さい。
2353,数値：この接続に使用されるタイムアウト（秒単位）です。  OSによっては、非常に大きな値をゼロとして扱うことがあるので注意してください：しかし、POSIX標準では、31日までの値をサポートすることを要求しています。
2354,オプションの文字ベクトル。現在、TCPソケットでは<code>"no-delay"</code>のみがサポートされています。
2355,ZIPファイル内のファイル名。
2356,文字列。  ポートのホスト名。
2357,整数。  TCPポート番号。
2358,論理。  ソケットはクライアントとサーバーのどちらであるべきですか？
2359,コネクションをリッスンするサーバーソケットです。
2360,コネクションです。
2361,文字列。  現在、無視されています。
2362,文字列。  空または<code>"read"</code>または<code>"write"</code>、部分一致が許可されています。
2363,他のメソッドに渡される、または他のメソッドから渡される引数。
2364,文字列。  接続の説明： '詳細'を参照してください。
2365,文字列。  接続を開く方法(最初に開く必要がある場合)の説明。  可能な値については、「モード」のセクションを参照してください。
2366,論理。  ブロッキング」セクションを参照してください。
2367,想定されるエンコーディングの名前です。  エンコード'セクションを参照してください。
2368,論理。  trueを指定すると、通常のファイルではない引数(キャラクタデバイスなど)に適した「raw」インターフェイスが使用されます。  これは、テキストモードでの読書用に開く際の圧縮ファイルのチェックを抑制し、「ファイル」がシーク可能でない可能性があることを表明する。
2369,文字列、<code>c("default", "internal", "wininet", "libcurl")</code> に部分的にマッチします:「詳細」参照。
2370,HTTPrequestsで使用するHTTPヘッダーの名前付き文字ベクトルです。  非HTTPのURLでは無視されます。  <code>HTTPUserAgent</code> オプション (<code>options</code> を参照) から来る <code>User-Agent</code> ヘッダーは、自動的に最初のヘッダーとして使用されます。
2371,0-9の整数値。  書き込み時に適用される圧縮の量を、なしから利用可能な最大値まで指定します。  <code>xzfile</code>の場合、負の値も可能です：'Compression'セクションを参照してください。
2372,数値：この接続に使用されるタイムアウト（秒単位）です。  OSによっては、非常に大きな値をゼロとして扱うことがあるので注意してください：しかし、POSIX標準では、31日までの値をサポートすることを要求しています。
2373,オプションの文字ベクトル。現在、TCPソケットでは<code>"no-delay"</code>のみがサポートされています。
2374,ZIPファイル内のファイル名。
2375,文字列。  ポートのホスト名。
2376,整数。  TCPポート番号。
2377,論理。  ソケットはクライアントとサーバーのどちらであるべきですか？
2378,コネクションをリッスンするサーバーソケットです。
2379,コネクションです。
2380,文字列。  現在、無視されています。
2381,文字列。  空または<code>"read"</code>または<code>"write"</code>、部分一致が許されます。
2382,他のメソッドに渡される、または他のメソッドから渡される引数。
2383,ファイル名を含む文字ベクトル。チルダ展開が行われます：<code>path.expand</code>を参照して下さい。
2384,必要なアクセスモードを指定する整数: '詳細'を参照して下さい.
2385,ファイル名またはパスを含む文字ベクトル.
<code>file.copy</code>と<code>file.symlink</code><code>to</code>では、代わりに既存の1つのディレクトリへのパスとすることができる。
2387,logical;既存の目的地ファイルは上書きされるべきか？
2388,logical;失敗時の警告は表示されるべきか？
2389,logical,です。  <code>to</code>がディレクトリの場合、<code>from</code>のディレクトリはコピーされるべきか(そしてその内容も)？  (POSIX系OSの<code>cp -R</code>のように。)
2390,logical：ファイルのパーミッションビットは、可能な限りコピーされるべきですか？
2391,logical:ファイルの日付は、可能な限り保存されるべきか？<code>Sys.setFileTime</code> を参照してください。
2392,論理：ユーザーに提示されるダイアログボックスのスタイルを選択します：現在、new = FALSEのみが使用されています。
2393,ファイル名又はパスを含む文字ベクトル。
<code>file.copy</code> と <code>file.symlink</code><code>to</code> では、代わりに既存の1つのディレクトリへのパスとすることができる。
2395,logical;既存の目的地ファイルは上書きされるべきか？
2396,logical;失敗時の警告は表示されるべきか？
2397,論理的  <code>to</code>がディレクトリの場合、<code>from</code>のディレクトリもコピー（とその内容）されるべきか？  (POSIX系OSの<code>cp -R</code>のように。)
2398,logical:ファイルのパーミッションビットは、可能な限りコピーされるべきですか？
2399,logical:ファイルの日付は可能な限り保存されるべきか？<code>Sys.setFileTime</code>を参照してください。
2400,ファイル名またはパスを含む文字ベクトル。
<code>file.copy</code>と<code>file.symlink</code><code>to</code>は、代わりに、単一の既存のディレクトリへのパスとすることができる。
2402,logical;既存の目的地ファイルは上書きされるべきか？
2403,logical;失敗時の警告は表示されるべきか？
2404,論理的  <code>to</code>がディレクトリの場合、<code>from</code>のディレクトリもコピー（とその内容）されるべきか？  (POSIX系OSの<code>cp -R</code>のように。)
2405,logical:ファイルのパーミッションビットは、可能な限りコピーされるべきですか？
2406,logical:ファイルの日付は可能な限り保存されるべきか？<code>Sys.setFileTime</code>を参照してください。
2407,ファイル名またはパスを含む文字ベクトル。
2408,ファイル名またはパスを含む文字ベクトル。<code>file.copy</code>と<code>file.symlink</code><code>to</code>については、代わりに単一の既存のディレクトリへのパスとすることができます。
2409,logical;既存の目的地ファイルは上書きされるべきか？
2410,logical;失敗時の警告は表示されるべきか？
2411,論理的  <code>to</code>がディレクトリの場合、<code>from</code>のディレクトリはコピーされるべきか（そしてその内容も）？  (POSIX系OSの<code>cp -R</code>のようなもの。)
2412,logical:ファイルのパーミッションビットは、可能な限りコピーされるべきですか？
2413,logical:ファイルの日付は、可能な限り保存されるべきか？<code>Sys.setFileTime</code> を参照してください。
2414,ファイルパスを含む文字ベクター。  チルダ展開が行われます: <code>path.expand</code> を参照してください。
2415,論理的：最初の6つだけでなく、すべてのcolを返します。
2416,ファイル名またはパスを含む文字ベクトル。
<code>file.copy</code> と <code>file.symlink</code><code>to</code> では、代わりに既存の1つのディレクトリへのパスとすることができます。
2418,logical;既存の目的地ファイルは上書きされるべきか？
2419,logical;失敗時の警告は表示されるべきか？
2420,論理的  <code>to</code>がディレクトリの場合、<code>from</code>のディレクトリはコピーされるべきか(そしてその内容も)？  (POSIX系OSの<code>cp -R</code>のようなもの。)
2421,logical:ファイルのパーミッションビットは、可能な限りコピーされるべきですか？
2422,logical:ファイルの日付は、可能な限り保存されるべきか？<code>Sys.setFileTime</code> を参照してください。
2423,ファイルパスを含む文字ベクター。  チルダ展開が行われます: <code>path.expand</code>を参照してください。
2424,論理的：最初の6つだけでなく、すべてのcolを返します。
2425,ファイルパスを含む文字ベクター。  チルダ展開が行われます：<code>path.expand</code>を参照してください。
2426,ロジカル：最初の6列だけでなく、すべての列を返します。
2427,文字ベクター。  長いベクターはサポートされていません。
2428,使用するパスセパレータ(ASCIIと仮定)。
2429,ファイル名またはパスを含む文字ベクトル。
<code>file.copy</code> と <code>file.symlink</code><code>to</code> では、代わりに既存の1つのディレクトリへのパスとすることができます。
2431,logical;既存の目的地ファイルは上書きされるべきか？
2432,logical;失敗時の警告は表示されるべきか？
2433,論理的  <code>to</code>がディレクトリの場合、<code>from</code>のディレクトリはコピーされるべきか（そしてその内容も）？  (POSIX系OSの<code>cp -R</code>のようなもの。)
2434,logical:ファイルのパーミッションビットは、可能な限りコピーされるべきですか？
2435,logical:ファイルの日付は、可能な限り保存されるべきですか？<code>Sys.setFileTime</code> を参照してください。
2436,ファイル名またはパスを含む文字ベクトル。
<code>file.copy</code>と<code>file.symlink</code><code>to</code>は、代わりに、単一の既存のディレクトリへのパスとすることができる。
2438,logical;既存の目的地ファイルは上書きされるべきか？
2439,logical;失敗時の警告は表示されるべきか？
2440,論理的  <code>to</code>がディレクトリの場合、<code>from</code>のディレクトリはコピーされるべきか（そしてその内容も）？  (POSIX系OSの<code>cp -R</code>のようなもの。)
2441,logical：ファイルのパーミッションビットは、可能な限りコピーされるべきですか？
2442,logical:ファイルの日付は可能な限り保存されるべきか？<code>Sys.setFileTime</code>を参照して下さい。
2443,表示されるファイルの名前を含む1つまたは複数の文字ベクトル。  パスはチルダで展開されます.
2444,表示される各ファイルのヘッダーを含む文字ベクトル(<code>...</code>で指定されたファイル数と同じ長さ).  デフォルトは空文字列である。
2445,ディスプレイの全体的なタイトルを指定します。  もし表示に単一の独立したウィンドウが使われるなら、<code>title</code>はウィンドウタイトルとして使われます。  複数のウィンドウを使用する場合、それらのタイトルは、タイトルとファイル固有のヘッダを組み合わせる必要があります。
2446,表示後、ファイルは削除されますか？  一時ファイルに使用されます。
2447、使用するページャー：全てのプラットフォームで使用されるわけではありません。
2448,ファイル(複数可)に仮定されるエンコーディングを与える文字列。
2449,ファイルパスを含む文字ベクター。  チルダ展開が行われます：<code>path.expand</code>を参照して下さい。
2450,論理：最初の6つのみでなく、すべてのcolを返します。
2451,ファイル名またはパスを含む文字ベクトル。
<code>file.copy</code>と<code>file.symlink</code><code>to</code>では、代わりに既存の1つのディレクトリへのパスとすることができる。
2453,logical;既存の目的地ファイルは上書きされるべきか？
2454,logical;失敗時の警告は表示されるべきか？
2455,論理的  <code>to</code>がディレクトリの場合、<code>from</code>のディレクトリもコピー（とその内容）されるべきか？  (POSIX系OSの<code>cp -R</code>のように。)
2456,logical：ファイルのパーミッションビットは、可能な限りコピーされるべきですか？
2457,logical:ファイルの日付は可能な限り保存されるべきか？<code>Sys.setFileTime</code>を参照してください。
2458,適切なアリティの関数（<code>Reduce</code>ではバイナリ、<code>Filter</code>, <code>Find</code>と<code>Position</code>ではウナリ、<i>k</i>引数と呼ばれた場合には<code>Map</code>では<i>k</i>-アリア）。  <code>Negate</code>のための任意の述語関数。
2459,ベクトル(vector)。
2460,an<span style="font-family：Courier New, Courier; color：<code>x</code> の要素と同じ種類の<b>R</b></span>オブジェクトである。
2461,左から右(デフォルト)に進むか、右から左に進むかを示す論理である。
2462,連続する縮小結合を累積するかどうかを示す論理です。  デフォルトでは、最後の組み合わせのみが使用される。
2463,「no match」（述語を満たす要素がない）が見つかった場合に返される値である。
2464、ベクトル。
2465,適切なアリティの関数（<code>Reduce</code>ではバイナリ、<code>Filter</code>, <code>Find</code>と<code>Position</code>ではウナリ、<i>k</i>引数と呼ばれた場合は<code>Map<code>では<i>k</i>-アリ）です．  <code>Negate</code>のための任意の述語関数です.
2466,ベクトル(vector)。
2467,an <span style="font-family：Courier New, Courier; color：<code>x</code>の要素と同じ種類の<b>R</b></span>オブジェクトである。
2468,左から右に進むか(デフォルト)、右から左に進むかを示す論理である。
2469,連続する縮小結合を累積するかどうかを示す論理である。  デフォルトでは、最後の組み合わせのみが使用される。
2470,「no match」（述語を満たす要素がない）が見つかった場合に返される値。
2471,ベクトル。
2472,文字ベクトル：パッケージの名前。
2473,文字ベクトル：<span style="font-family">の場所を記述する：Courier New, Courier; color：#"><b>R</b></span>ライブラリツリーを検索する場所、または<code>NULL</code>を指定します。  <code>NULL</code>のデフォルト値は、ロードされた名前空間をチェックし、次に<code>.libPaths()</code>で現在知られているすべてのライブラリをチェックすることに相当します。
2474,論理的である。  これは、パッケージが見つからない場合、警告またはエラーを与えるべきではないでしょうか？
2475,a論理的。  <code>TRUE</code>の場合、特にパッケージが複数回見つかった場合に追加の診断がプリントされます。
2476,式を呼び出す。
2477,数値.
2478,長さ<code>N</code>の（弱く）次第にソートされた数値,言う。
2479,logical;真ならば、右端の区間、<code>vec[N-1] ... vec[N]</code> は <em>closed</em> として扱われます、以下を参照して下さい。
2480,logical; if true, return indices are coercedinto <code>1,...,N-1</code>, すなわち、<code>0</code> は <code>1</code> に、 <code>N</code> は <code>N-1</code> にマップされます。
2481,logical; trueの場合、全ての区間は左で開き、右で閉じる。以下の式では、<i>≤</i>は<i>&lt;</i>と入れ替えられ（<i>&gt;</i>は<i>≥</i>）、<code>rightmost.closed</code>は「左端は閉じている」。  これは、例えば、生存分析の計算で役に立つかもしれない。
2482,あるオブジェクト

2483,そこから要素を抽出する。
2484,<code>"row.names"</code>属性を持つ、典型的にはデータ・フレーム。
2485,典型的にはS3-またはS4-クラスです。
2486,パッケージの「<span class="file">DESCRIPTION</span> 」ファイルへのフルパス。
2487,lazyloadデータベースへのファイルパス。
2488,<span style="font-family">の場所を記述する文字ベクトル：Courier New, Courier; color：#"><b>R</b></span>ライブラリツリーを検索する場所を記述する文字ベクトル、または<code>NULL</code>です。  デフォルトの<code>NULL</code>は、<code>.libPaths()</code>で現在知られているすべてのライブラリに対応します。
2489,論理的です。  パッケージが見つからない場合、警告やエラーを与えるべきではないですか？
2490,論理的。  <code>Imports</code>フィールドは処理されるべきですか？
2491,logical:メッセージ(複数可)を出力する必要がありますか？
2492,クラス<code>"packageDescription2"</code>の処理された'<span class="file">DESCRIPTION</span>' ファイルがあります。
2493,<code>"cpu-vendor-os"</code>という形式のプラットフォーム文字列です。
2494,保存またはロードする画像ファイルの名前.
2495,整数.  現在、<code>type = 0</code>は内部の<code>"row.names"</code>属性（<code>NULL</code>の場合もある）を返し、<code>type = 2</code> は属性が意味する行数、 <code>type = 1</code> は負符号付きの行名「自動」であるとします。
2496,integer.  行の数.
2497,<code>"package:MASS"</code>のような文字列を指定します。
2498,lazyloadデータベースのオブジェクト名。
2499,論理：データベース内の値は圧縮されているか？
2500,ロードフック: <code>unserialize</code>を参照して下さい。
2501,長さ1の整数ベクトル。
2502,インデックス(indices)
2503,論理。
2504,an <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトです。
2505,クラスに入れるクラスレスオブジェクト。
2506,オプションのタイムゾーン。
2507,デフォルトのクラスを<em>含む</em>クラスのオプションの文字ベクトルです。
2508,<code>difftime</code>を参照。
2509,ドットネームでないバージョンに渡される引数。
2510,整数である。
2511,<em>同じ</em>オブジェクトの文字ベクトル、他をマスクする。
2512,マスクされるパッケージの名前を示す文字列。
2513,マスクが<em>by</em><code>pkg</code>、または(<code>by = FALSE</code>) <code>pkg<code>から起こるかを示す論理です.
2514,条件オブジェクト.
2515,呼び出し式。
2516,条件オブジェクト.
2517,評価される式。
2518,リターンまたは終了する前に評価される式。
2519、関数。
2520,文字列
2521、文字列
2522,再始動に名前を付ける文字列。
2523,再始動オブジェクト。
2524,オブジェクト。
2525,条件クラスの名前を指定する文字列。
2526,追加の引数。詳細は以下を参照。
2527,数値ベクトル。  または、<code>round</code>と<code>signif</code>の場合は、複合ベクトル。
2528,小数点以下の桁数(<code>round</code>)または有効桁数(<code>signif</code>)を示す整数です。
2529,メソッドに渡される引数。
2530,文字列。  接続の説明：'詳細'を参照してください。
2531,文字列。  接続を開く方法(最初に開くべき場合)の説明。  可能な値については、「モード」セクションを参照してください。
2532,論理。  ブロッキング」セクションを参照してください。
2533,想定されるエンコーディングの名前です。  エンコーディング」セクションを参照してください。
2534,論理。  2534,logical.trueを指定すると、通常のファイルでない引数(キャラクタデバイスなど)に適した「raw」インターフェイスが使用されます。  これは、テキストモードの読書用に開くときに圧縮ファイルのチェックを抑制し、「ファイル」がシーク可能でない可能性があることを表明する。
2535,文字列、<code>c("default", "internal", "wininet", "libcurl")</code> に部分的にマッチします:「詳細」参照。
2536,HTTPrequestsで使用するHTTPヘッダーの名前付き文字ベクトルです。  非HTTPのURLでは無視されます。  <code>HTTPUserAgent</code> オプション (<code>options</code> を参照) から来る <code>User-Agent</code> ヘッダーは、自動的に、最初のヘッダーとして使われます。
2537,0-9の整数。  書き込み時に適用される圧縮の量を、なしから利用可能な最大値まで指定します。  <code>xzfile</code>の場合、負の値も可能です。「圧縮」セクションを参照してください。
2538,数値：この接続に使用されるタイムアウト（秒単位）。  OSによっては、非常に大きな値をゼロとして扱うことがあるので注意してください：しかし、POSIX標準では、31日までの値をサポートすることを要求しています。
2539,オプションの文字ベクトル。現在、TCPソケットでは<code>"no-delay"</code>のみがサポートされています。
2540,ZIPファイル内のファイル名。
2541,文字列。  ポートのホスト名。
2542,整数。  TCPポート番号。
2543,論理。  ソケットはクライアントとサーバーのどちらであるべきですか？
2544,コネクションをリッスンしているサーバーソケットです。
2545,コネクションです。
2546,文字列。  現在、無視されています。
2547,文字列。  空白または<code>"read"</code>または<code>"write"</code>、部分一致が許可されています。
2548,他のメソッドに渡される、または他のメソッドから渡される引数。
2549,文字列。  接続の説明：'詳細'を参照してください。
2550,文字列。  接続を開く方法(最初に開く必要がある場合)の説明。  可能な値については、「モード」のセクションを参照してください。
2551,論理。  ブロッキング」セクションを参照してください。
2552,想定されるエンコーディングの名前です。  エンコード」セクションを参照してください。
2553,論理。  trueを指定すると、通常のファイルでない引数(キャラクタデバイスなど)に適した「raw」インターフェイスが使用されます。  これは、テキストモードの読書用に開く際に圧縮ファイルのチェックを抑制し、「ファイル」がシーク可能でない可能性があることを表明する。
2554,部分的に<code>c("default", "internal", "wininet", "libcurl")</code>と一致する文字列:「詳細」参照。
2555,HTTPrequestsで使用するHTTPヘッダーの名前付き文字ベクトルです。  非HTTPのURLでは無視されます。  <code>HTTPUserAgent</code> オプション (<code>options</code> を参照) から得られる <code>User-Agent</code> ヘッダーは、自動的に最初のヘッダーとして使われます。
2556,0-9の整数値。  書き込み時に適用される圧縮の量を、なしから利用可能な最大値まで指定します。  <code>xzfile</code>の場合、負の値も可能です。「圧縮」セクションを参照してください。
2557,数値：この接続に使用されるタイムアウト（秒単位）です。  OSによっては、非常に大きな値をゼロとして扱う場合があることに注意してください：しかし、POSIX標準では、31日までの値をサポートすることを要求しています。
2558,オプションの文字ベクトル。現在、TCPソケットでは<code>"no-delay"</code>のみがサポートされています。
2559,ZIPファイル内のファイル名。
2560,文字列。  ポートのホスト名。
2561,整数。  TCPポート番号。
2562,論理。  ソケットはクライアントかサーバーのどちらであるか？
2563,接続をリッスンしているサーバー・ソケットです。
2564,接続。
2565,文字列。  現在、無視されています。
2566,文字列。  空または<code>"read"</code>または<code>"write"</code>、部分一致が許可されています。
2567,他のメソッドに渡される、または他のメソッドから渡される引数。
2568,長さ1の論理ベクトルで、<code>NA</code>でないもの。長さが1より大きい条件は、現在、警告で受け入れられますが、最初の要素だけが使用されます。  環境変数<span class="env">_R_CHECK_LENGTH_1_CONDITION_</span> が true に設定されている場合、代わりにエラーが通知されます。  その他の型は、可能であれば論理型に強制され、いかなるクラスも無視される。
2569,変数の構文上の名前。
2570,ベクトル(リストと式を含む)、ペアリスト、<code>NULL</code>に評価される式です。  Afactorの値は、文字ベクトルに強制されます。  <span style="font-family：Courier New, Courier; color：<br>R</b></span>4.0.0 からは、これは長いベクトルである可能性があります。
2571,形式的な意味での<em>式</em>である。  これは単純な式か、いわゆる<em>複合式</em>で、通常は<code>{ expr1 ; expr2 }</code> という形式である。
2572,囲む関数の正式な引数。
2573,強制する先頭の引数の数.
2574,呼び出す関数。
2575,<code>FUN</code>への引数。
2576,<code>function</code>、または'Details'を参照して下さい。
2577,関数が定義されるべき<code>environment</code> (または、最初のケースと<code>fun</code>が文字列の場合、<code>get()</code>を介して検索).
2578,a <code>リスト</code> (または<code>ペアリスト</code>)の<span style="font-family：Courier New, Courier; color：#"><b>R</b></span>式。
2579,a <code>function</code>、または「詳細」を参照。
2580,関数が定義されるべき<code>environment</code> (または、最初のケースと<code>fun</code>が文字列の場合、<code>get()</code>を介して検索).
2581,a <span style="font-family." の <code>list</code> (または <code>pairlist</code>)：Courier New, Courier; color：#"><b>R</b></span>式である。
2582,任意の<span style="font-family：Courier New, Courier; color：#(概念的に)オブジェクト; 通常は数値。
2583,logical; <code>FALSE</code>の場合、論理値、数値、複素数は共通の幅で右寄せされます: <code>TRUE</code>の場合、右寄せのための先頭の空白は抑制されます。
2584,数値と複素数の<code>x</code>に何桁の有効数字を使うか。  デフォルトの<code>NULL</code>は、<code>getOption("digits")</code>を使用します。  これは提案です: (大きさの) 最小の数がこれだけの有効桁数を持つように、また <code>nsmall</code> を満たすように十分な小数位が使われます(複素数の解釈については <code>signif</code> を参照して下さい)。
2585,非科学的なフォーマットで実数/複素数をフォーマットする際の小数点の右側の最小桁数。許容値は <code>0 &lt;= nsmall &lt;= 20</code> です。
2586,<em>文字</em>ベクトルを左寄せ（デフォルト）、右寄せ、中央寄せ、またはそのままにするか。  省略することもできる。
2587,<code>default</code>方式：<em>minimum</em>フィールド幅、または<code>NULL<code>または<code>0<code>で制限なし。

2588,<code>AsIs</code>メソッド：非文字オブジェクトの<em>maximum</em>フィールド幅。  <code>NULL</code>はデフォルトの<code>12</code>に対応します。
2589,logical: <code>NA</code>文字列はエンコードされるべきか？  これは文字ベクトルの要素にのみ適用され、数値、複素数、論理の<code>NA</code>には適用されないので、常に<code>"NA"</code>としてエンコードされる。
2590,実数または複素数ベクトルの要素がscientificformatでエンコードされるべきかどうかを指定する論理、または整数のペナルティ(<code>options("scipen")</code>参照)のいずれかです。
2591,他のメソッドに渡される、または他のメソッドから渡される更なる引数。
2592,数値や複雑な配列をきれいにするために使用されます。<code>prettyNum</code>に渡されます: そのヘルプページで詳細が説明されています。
2593,任意の<span style="font-family：Courier New, Courier; color：<br>R</b></span> オブジェクト(概念的に); 通常は数値。
2594,logical; <code>FALSE</code>の場合、論理値、数値、複素数は共通の幅で右寄せされます: <code>TRUE</code>の場合、右寄せのための先頭の空白は抑制されます。
2595,数値と複素数の<code>x</code>に何桁の有効数字を使うか。  デフォルトの<code>NULL</code>は、<code>getOption("digits")</code>を使用します。  これは提案です: (大きさの) 最小の数がこれだけの有効桁数を持つように、また <code>nsmall</code> を満たすように十分な小数位が使われます(複素数の解釈については <code>signif</code> を参照して下さい)。
2596,非科学的なフォーマットで実数/複素数をフォーマットする際の、小数点以下の最小桁数。
2597,<em>文字</em>ベクトルを左寄せ（デフォルト）、右寄せ、中央寄せ、またはそのままにするか。  省略することもできる。
2598,<code>default</code>方式：<em>minimum</em>フィールド幅、または<code>NULL<code>または<code>0<code>で制限なし。

2599,<code>AsIs</code>メソッド：非文字オブジェクトの<em>maximum</em>フィールド幅。  <code>NULL</code>はデフォルトの<code>12</code>に対応します。
2600,logical: <code>NA</code>文字列はエンコードされるべきか？  これは文字ベクトルの要素にのみ適用され、数値、複素数、論理の<code>NA</code>には適用されないので、常に<code>"NA"</code>としてエンコードされる。
2601,実数または複素数ベクトルの要素がscientificformatでエンコードされるべきかどうかを指定する論理、または整数のペナルティ(<code>options("scipen")</code>参照)のいずれかである。
2602,他のメソッドに渡される、または他のメソッドから渡される更なる引数。
2603,数値や複雑な配列をきれいにするために使用されます。<code>prettyNum</code>に渡されます。
2604,任意の<span style="font-family：Courier New, Courier; color：<br>R</b></span> オブジェクト(概念的に); 通常は数値。
2605,logical; <code>FALSE</code>の場合、論理値、数値、複素数は共通の幅で右寄せされます: <code>TRUE</code>の場合、右寄せのための先頭の空白は抑制されます.
2606,数値と複素数の<code>x</code>に何桁の有効数字を使うか。  デフォルトの<code>NULL</code>は、<code>getOption("digits")</code>を使用します。  これは提案です: (大きさの) 最小の数がこれだけの有効桁数を持つように、また <code>nsmall</code> を満たすように十分な小数位が使われます(複素数の解釈については <code>signif</code> を参照して下さい)。
2607,非科学的なフォーマットで実数/複素数をフォーマットする際の小数点の右側の最小桁数。許容値は <code>0 &lt;= nsmall &lt;= 20</code> です。
2608,<em>文字</em>ベクトルを左寄せ（デフォルト）、右寄せ、中央寄せ、またはそのままにするか。  省略することもできる。
2609,<code>default</code>方式：<em>minimum</em>フィールド幅、または<code>NULL<code>または<code>0<code>で制限なし。

2610,<code>AsIs</code>メソッド：非文字オブジェクトの<em>maximum</em>フィールド幅。  <code>NULL</code>はデフォルトの<code>12</code>に対応します。
2611,logical: <code>NA</code>文字列はエンコードされるべきか？  これは文字ベクトルの要素にのみ適用され、数値、複素数、論理の<code>NA</code>には適用されないので、常に<code>"NA"</code>として符号化される。
2612,実数または複素数ベクトルの要素がscientificformatでエンコードされるべきかどうかを指定する論理、または整数のペナルティ(<code>options("scipen")</code>参照)のいずれかです。
2613,他のメソッドに渡される、または他のメソッドから渡される更なる引数。
2614,数値や複雑な配列をきれいにするために使われます。<code>prettyNum</code>に渡されます。
2615,変換されるオブジェクト。
2616,<code>文字</code>列.  指定がない場合、最初の<code>NA</code>以外の要素に対して<code>tryFormats</code>を1つずつ試し、どれもうまくいかなかった場合はエラーを出します。  それ以外の場合は、<code>strptime()</code>で処理され、そのヘルプページには利用可能な変換仕様が記述されています。
2617,<code>character</code> vector of <code>format</code> strings to try if <code>format</code> is not specified.
2618,<code>論理</code>は、フォーマット推測が成功しない場合、<code>NA</code>を(エラーを通知する代わりに)返すことを示します。
2619,<code>Date</code>オブジェクト、または<code>as.Date(origin, ...)</code> によってそのようなオブジェクトに強制されることができる何かである。
2620,タイムゾーン名。
2621,他のメソッドから、または他のメソッドに渡される追加の引数。<code>as.character</code>および<code>as.Date</code>メソッド用の<code>format</code>を含む。
2622、任意の<span style="font-family：Courier New, Courier; color：#(概念的に) <b>R</b></span>オブジェクト; 通常は数値です。
2623,logical; <code>FALSE</code>の場合、論理値、数値、複素数は共通の幅で右寄せされます: <code>TRUE</code>の場合、右寄せのための先頭の空白は抑制されます。
2624,数値と複素数の<code>x</code>に何桁の有効数字を使用するか。  デフォルトの<code>NULL</code>は、<code>getOption("digits")</code>を使用します。  これは提案です: (大きさの) 最小の数がこれだけの有効桁数を持つように、また <code>nsmall</code> を満たすように十分な小数位が使われます(複素数に対する解釈は <code>signif</code> を参照して下さい)。
2625,非科学的なフォーマットで実数/複素数をフォーマットする際の小数点の右側の最小桁数。許容値は <code>0 &lt;= nsmall &lt;= 20</code> です。
2626,<em>文字</em>ベクトルを左寄せ（デフォルト）、右寄せ、中央寄せ、またはそのままにするか。  省略することもできる。
2627,<code>default</code>方式：<em>minimum</em>フィールド幅、または<code>NULL<code>または<code>0<code>で制限なし。

2628,<code>AsIs</code>メソッド：非文字オブジェクトの<em>maximum</em>フィールド幅。  <code>NULL</code>は、デフォルトの<code>12</code>に対応します。
2629,logical: <code>NA</code> 文字列はエンコードされるべきか？  これは文字ベクトルの要素にのみ適用され、数値、複素数、論理の<code>NA</code>には適用されないので、常に<code>"NA"</code>として符号化される。
2630,実数または複素数ベクトルの要素がscientificformatでエンコードされるべきかどうかを指定する論理、または整数のペナルティ(<code>options("scipen")</code>参照)のいずれかである。
2631,他のメソッドに渡される、または他のメソッドから渡される更なる引数。
2632,数値や複雑な配列をきれいにするために使用されます。<code>prettyNum</code>に渡されます：そのヘルプページで詳細が説明されています。
2633,date-timeまたはdateオブジェクト。
2634,変換に使用されるオプションのタイムゾーン指定、主に<code>"POSIXlt"</code>オブジェクトの場合。
2635,文字列。  結果の単位を指定します。  省略可能です。
2636,文字列.  <code>units</code>と同様ですが、省略はできません。
2637,時間間隔を指定する文字列または数値。
2638,<code>tim</code>のフォーマットを指定する文字：<code>strptime</code>を参照。  デフォルトは、ロケール固有の時間フォーマットである。
2639,クラス<code>"difftime"</code>を継承したオブジェクトです。
2640,他のメソッドに渡す、または他のメソッドから渡される引数。
2641,任意の<span style="font-family：Courier New, Courier; color：<b>R</b></span>オブジェクト(概念的); 通常は数値。
2642,logical; <code>FALSE</code>の場合、論理値、数値、複素数は共通の幅で右寄せされます: <code>TRUE</code>の場合、右寄せのための先頭の空白は抑制されます。
2643,数値と複素数の<code>x</code>に何桁の有効数字を使うか。  デフォルトの<code>NULL</code>は、<code>getOption("digits")</code>を使用します。  これは提案です: (大きさの) 最小の数がこれだけの有効桁数を持つように、また <code>nsmall</code> を満たすように十分な小数位が使われます(複素数の解釈については <code>signif</code> を参照して下さい)。
2644,非科学的なフォーマットで実数/複素数をフォーマットする際の、小数点以下の最小桁数。
2645,<em>文字</em>ベクトルを左寄せ（デフォルト）、右寄せ、中央寄せ、またはそのままにするか。  省略することもできる。
2646,<code>default</code>方式：<em>minimum</em>フィールド幅、または<code>NULL<code>または<code>0<code>で制限なし。

2647,<code>AsIs</code>メソッド：非文字オブジェクトの<em>maximum</em>フィールド幅。  <code>NULL</code>はデフォルトの<code>12</code>に対応します。
2648,logical：<code>NA</code>文字列はエンコードされるべきか？  これは文字ベクトルの要素にのみ適用され、数値、複素数、論理の<code>NA</code>には適用されないので、常に<code>"NA"</code>としてエンコードされる。
2649,実数または複素数ベクトルの要素がscientificformatでエンコードされるべきかどうかを指定する論理、または整数のペナルティ(<code>options("scipen")</code>を参照)のいずれか。
2650,他のメソッドに渡される、または他のメソッドから渡される更なる引数。
2651,数値や複雑な配列をきれいにするために使用されます。<code>prettyNum</code>に渡されます：そのヘルプページで詳細が説明されています。
2652,クラス<code>"hexmode"</code>から継承したメソッドのためのオブジェクトです。
2653,<code>NULL</code>または、使用される最小フィールド幅を指定する正の整数で、先頭のゼロによってパディングされる。
2654,大文字と小文字のどちらを使用するかを示す論理（デフォルト）。
2655,他のメソッドに渡される、または他のメソッドから渡される追加の引数。
2656,原子ベクトル。<code>format(x, ...)</code>の潜在的な引数である。
2657,数値や複素数の<code>x</code>に何桁の有効数字が使われるか。  デフォルトの<code>NULL</code>は、<code>getOption("digits")</code>を使用します。
2658,（<code>format(..., nsmall)</code>を参照）。
2659,パッケージの名前。<code>character.only</code>が<code>FALSE</code>（デフォルト）か<code>TRUE</code>かによって、名前か文字列、または文字列として与えられる。
2660,ロードされた名前空間をアタッチする検索リスト上の位置。  <code>search()</code>で指定された現在の検索リスト上の位置の名前であることもできます。
2661,a character vector describing the location of <span style="font-family：Courier New, Courier; color：<br>R</b></span>Library Treeを検索する場所を記述する文字ベクトル、または<code>NULL</code>。  デフォルトの<code>NULL</code>は、現在<code>.libPaths()</code>で知られているすべてのライブラリに対応します。
2662,<code>package</code>または<code>help</code>が文字列であると仮定することができるかどうかを示す論理である。
2663,論理的である。  <code>TRUE</code>であれば<code>FALSE</code>、<code>TRUE</code>であれば成功を表す値が返される。
2664,論理的である。  <code>TRUE</code>の場合、newpackageのアタッチによる<code>conflicts</code>について警告が表示される。  競合とは、関数をマスクする関数、または非関数をマスクする非関数のことです。デフォルトは、<code>conflicts.policy</code>オプションで<code>FALSE</code>と指定されていない限り、<code>TRUE</code>です。
2665,a論理的である。  <code>TRUE</code>の場合、追加の診断が印刷されます。
2666,論理的である。  <code>TRUE</code>の場合、パッケージの取り付けを確認するメッセージは表示されず、ほとんどの場合、パッケージの取り付けに失敗してもエラー/警告は表示されない。
2667,パッケージの名前を示す文字列。
2668,ストリクトコンフリクトチェックが有効な場合に、エラーを出さずに検索パス上のオブジェクトをマスクすることができるオブジェクトの名前の文字ベクトル。
2669,添付フレームに除外または含めるオブジェクトの名前の文字ベクトル。これらの引数は、<code>library</code>または<code>require</code>の呼び出しで1つだけ使用することができる。
2670,<code>DESCRIPTION</code>ファイルの<code>Depends</code>句にリストされた必須パッケージが自動的に添付されるべきかを指定する論理です。
2671,a character vector with suitable numeric version strings (see'Details'); <code>package_version</code> の場合、代わりに <code>R.version</code> によって得られる Rversion オブジェクトがあります。
2672,無効な数値バージョンはエラーになるか(デフォルト)、ならないかを示す論理です。
2673,クラス<code>"octmode"</code>を継承するメソッドのためのオブジェクトです。
2674,<code>NULL</code>または、使用される最小フィールド幅を指定する正の整数で、先頭のゼロによってパディングされる。
2675,他のメソッドに渡される、または他のメソッドから渡される追加の引数。
2676,パッケージの名前。<code>character.only</code>が<code>FALSE</code>（デフォルト）か<code>TRUE</code>かによって、名前かリテラル文字列、または文字列として与えられる。
2677,ロードされた名前空間をアタッチする検索リスト上の位置を指定します。  <code>search()</code>によって与えられる現在の検索リスト上の位置の名前であることもできる。
2678,a character vector describing the location of <span style="font-family：Courier New, Courier; color：<br>R</b></span>Library Treeを検索する場所を記述する文字ベクトル、または<code>NULL</code>を指定します。  デフォルトの<code>NULL</code>は、現在<code>.libPaths()</code>で知られているすべてのライブラリに対応します。
2679,<code>package</code>または<code>help</code>が文字列であると仮定することができるかどうかを示す論理である。
2680,論理的である。  <code>TRUE</code>であれば<code>FALSE</code>、<code>TRUE</code>であれば成功を示す。
2681,論理的である。  <code>TRUE</code>の場合、newpackageのアタッチによる<code>conflicts</code>について警告が表示される。  競合とは、関数をマスクする関数、または非関数をマスクする非関数のことです。デフォルトは、<code>conflicts.policy</code>オプションで<code>FALSE</code>と指定されていない限り、<code>TRUE</code>です。
2682,論理的である。  <code>TRUE</code>の場合、追加の診断が印刷されます。
2683,a論理。  <code>TRUE</code>の場合、パッケージの取り付けを確認するメッセージは表示されず、ほとんどの場合、パッケージの取り付けに失敗してもエラー/警告は表示されない。
2684,パッケージの名前を示す文字列。
2685,ストリクトコンフリクトチェックが有効な場合に、エラーを出さずに検索パス上のオブジェクトをマスクできるオブジェクトの名前の文字ベクトルです。
2686,添付フレームに除外または含めるオブジェクトの名前の文字ベクトル。これらの引数のうち1つだけが、<code>library</code>または<code>require</code>の呼び出しで使用される可能性があります。
2687,<code>DESCRIPTION</code>ファイルの<code>Depends</code>句にリストされた必須パッケージが自動的に添付されるべきかを指定する論理。
2688,変換するオブジェクト：<code>strptime</code>の文字ベクトル、<code>strftime</code>の<code>"POSIXlt"</code>に変換するオブジェクトです。
2689,変換に使用されるタイムゾーンを指定する文字列。  システム固有(<code>as.POSIXlt</code>を参照)ですが、<code>""<code>は現在のタイムゾーン、<code>"GMT"<code>はUTCです。無効な値はUTCとして扱われ、いくつかのプラットフォームでは警告が出されることがほとんどです。
2690,文字列。  <code>format</code>メソッドのデフォルトは、<code>"%Y-%m-%d %H:%M:%S"</code> で、いずれかの要素が深夜でないタイムコンポーネントを持つ場合、<code>"%Y-%m-%d"</code> それ以外の場合。  <code>options("digits.secs")</code> が設定されている場合、指定された桁数までが秒単位で表示されます。
2691,他のメソッドから、または他のメソッドに渡される追加の引数。
2692,論理的です。  タイムゾーンの略号を出力に付加しますか？  これは、時刻の印刷に使用され、<code>"%Z"</code>を使用するよりも信頼性があります。
2693,変換されるオブジェクト：<code>strptime</code>の文字ベクトル、<code>strftime</code>の<code>"POSIXlt"</code>に変換されるオブジェクトがあります。
2694,変換に使用されるタイムゾーンを指定する文字列。  システム固有（<code>as.POSIXlt</code>を参照）ですが、<code>""<code>は現在のタイムゾーン、<code>"GMT"<code>はUTCです。無効な値はUTCとして扱われ、いくつかのプラットフォームでは警告が出されることがほとんどです。
2695,文字列。  <code>format</code>メソッドのデフォルトは、<code>"%Y-%m-%d %H:%M:%S"</code> で、いずれかの要素が深夜でないタイムコンポーネントを持つ場合、<code>"%Y-%m-%d"<code>それ以外の場合です。  <code>options("digits.secs")</code> が設定されている場合、指定された桁数までが秒単位で表示されます。
2696,他のメソッドから、または他のメソッドに渡される追加の引数。
2697,論理的です。  タイムゾーンの略号を出力に付加しますか？  これは、時刻を表示する際に使用され、<code>"%Z"</code>を使用するよりも信頼性があります。
2698,数値ベクトル。
2699、有効数字何桁を使うか。
2700,数値の許容範囲: '詳細'を参照のこと.
2701,<code>NA</code>sの文字表現。
2702,<code>format</code>に渡される更なる引数、例えば<code>nsmall</code>など。
2703,要約が望まれるオブジェクト。
2704,<code>summary()</code>の<em>default</em>メソッドの結果である。
2705,整数。<code>factor</code>に対して、何段階表示されるべきかを示す。
2706,整数, <code>signif()</code> (<code>summary.default</code> 用) または <code>format()</code> (<code>summary.data.frame</code> 用) による数値のフォーマット化に使用します。  <code>summary.default</code>では、指定されていない場合（すなわち、<code>missing(.)</code>）、<code>signif()</code>はもう呼ばれません（なぜなら、<span style="font-family：Courier New, Courier; color：<br>R</b></span> &gt;= 3.4.0 で、デフォルトが <code>print</code> と <code>format</code> メソッドでラウンドのみに変更されました)。
2707,デフォルトメソッドの<code>quantile(*, type=quantile.type)</code> で使われる整数コードです。
2708,生成される要約に影響を与える追加引数。
2709,数値または文字の原子オブジェクトで、<code>prettyNum()</code>の場合のみ<code>complex</code>の可能性があり、通常は実数のアベクターとなります。  どのようなクラスでも、警告とともに破棄されます。
2710,小数点以下の桁数(<code>format = "f"</code>) または<em>significant</em> digits(<code>format = "g"</code>, <code>= "e"</code> または <code>= "fg"</code>) を指定します。

2711,デフォルト：整数の場合は2、実数の場合は4。  0未満の場合、Cのデフォルトである6桁が使用されます。  50以上指定した場合、<code>format = "f"</code> で通常324に制限される場合を除き、50が警告とともに使用されます。(OSやコンパイラによって異なりますが、15〜21桁までが正確な数字です。  この制限は、基礎となるCランタイムのセグメンテーション障害に対する予防措置に過ぎません)。
<code>digits</code>と<code>width</code>の両方が未指定の場合、<code>width</code>のデフォルトは1、それ以外は<code>digits + 1</code>になります。  <code>width = 0</code> は<code>width = digits</code> を使い、<code>width &lt; 0</code> はこのフィールドの数字を左寄せにすることを意味します（<code> flag = "-"</code> と同等）。必要ならば、結果は <code>width</code> 以上の文字数となります。  文字データの場合、これは文字数で解釈されます（バイト数でも表示幅でもありません）。
2713,<code>"d"</code> (整数), <code>"f"</code>, <code>"e"</code>, <code>"E"</code>, <code>"g"</code>, <code>"G"</code>, <code>"fg"</code> （小数）, または <code>"s"</code> （文字列） と一致します.  デフォルトは、整数の場合は<code>"d"</code>、実数の場合は<code>"g"</code>です。

2714,<code>"f"</code>は通常の<code>xxx.xxx</code>形式の数字を与え、<code>"e"</code>と<code>"E"</code>は <code>n.ddde+nn</code> または<code>n.dddE+nn</code> (科学的形式); <code>"g"</code> と <code>"G"</code> は <code>x[i]</code> を、スペースを節約できる場合のみ科学的形式にし、</em>末尾のゼロと小数点を削除する - <code>flag</code> に <code>"#"</code> が含まれていなければ、<coord>"g", "G"</code> 形式では末尾ゼロはそのまま。

2715,<code>"fg"</code> (我々のハイブリッドフォーマット)は、<code>"f"</code>と同じ固定フォーマットを使用しますが、<code>digits</code>を有効数字の最小数として使います。これは非常に長い結果文字列につながることがあります。  <code>signif</code> とは異なり、これは <code>digits</code> よりも多くの有効桁を持つ大きな数字を表示することに注意してください。  このフォーマットでは、<code>flag</code>に<code>"#"</code>が含まれていない限り、末尾のゼロは<em>dropped</em>されます。
2716,<code>formatC</code>の場合は，Kernighan and Ritchie (1988, page 243) またはC+99標準のようなフォーマット修飾子を与える文字列である。

2717,先頭のゼロをパッドします；
2718,左詰めを行う、
2719,全ての場合において符号を確保する、すなわち正の数に対しては<code>"+"</code>とする、
2720,最初の文字が符号でない場合、代わりにスペース文字<code>" "</code>が使用されます。
2721,特に<code>format</code>に依存して、「代替出力形式」を指定します。
2722,プラットフォームとロケールの組み合わせで、10進数変換のために「千のグループ化」を有効にする、
2723,「<span class="file">glibc</span> 」のいくつかのバージョンで、ロケールの代替出力桁があれば、それを使用する整数変換を許可します。
2724,これらのフラグは、任意の順序で、複数存在することができます。  その他の文字は、<code>文字</code>のフォーマットには影響しませんが、<span style="font-family.Courier, Courier;">のようなエラーシグナルを発します：Courier New, Courier; color：#666666;"><b>R</b></span> 3.4.0.
2725,<code>"double"</code> (または <code>"real"</code>), <code>"integer"</code> or<code>"character"</code>.Default：<code>x</code>の記憶モードから決定される。
2726,character;空でない場合、<code>big.interval</code>小数点の<em>前</em>(したがって<code>big</code>)の間のマークとして使用。
2727,上記の<code>big.mark</code>を参照; デフォルトは3です.
2728,文字; 空でない場合、<code>small.interval</code>の小数点以下(つまり<code>small</code>)の間のマークとして使用します。
2729,上記の<code>small.mark</code>を参照して下さい; デフォルトは5です。
2730,数値の小数点を示すために使用される文字。
2731,<code>x</code>が<code>character</code>の場合、<code>x</code>で小数点として使用されたことが知られている文字が使用されます。
2732,マーク（<code>big.mark</code>または<code>small.mark</code>）を付加する場合に、文字列幅をできる限り維持するかどうかを指定する文字列です.  <code>"common"</code>は、<code>format</code>的な動作に対応し、<code>"individual"</code>は、<code>formatC() </code> のデフォルトとなります。値は省略可能です。
2733,論理、文字列、または<code>NULL</code>で、<em>zero</em>が特別にフォーマットされるべきかどうか、またどのようにフォーマットされるかを指定します。  疎な'オブジェクトをきれいに印刷するのに便利です。
2734,logical; <code>zero.print</code> が文字列の場合、<code>x</code> の正確なゼロのエントリを <code>zero.print</code> で単に置き換えるべきかを示します。  そうでない場合は、それぞれの文字列の幅に応じて、（フォーマットされた）ゼロは<em>部分的に</em> <code>zero.print</code> によって置き換えられ、右側に <code>" "</code> が追加されます（該当）。  その場合(偽の<code>replace[.zero]</code>)、<code>zero.print</code>文字列が適合しない場合、警告が出されます(<code>warn.non.fitting<code>が真の場合)。

2735,これは<code>prettyNum()</code>を介して動作し、この場合<code>.format.zeros(*, replace=replace.zero)</code> を3回呼び出します、「詳細」を参照して下さい。
2736,logical;trueの場合、<code>replace[.zero]</code>がfalseで、<code>zero.print</code>文字列が適合しない場合は、<code>warning</code>が通知される。
2737,論理的で、小数点以下のゼロ、すなわち<code>"0"</code>が削除されるべきかどうかを示します; また、指数形式では<code>"e+00"</code>をドロップします。  これは単に<code>prettyNum()</code>に渡されます。
2738,オプションの論理で、<code>x</code>が<code>"character"</code>の時に使用し、それが<code>complex</code>ベクトルに由来するか否かを示すものである。  デフォルト (<code>NA</code>) では、<code>x</code> は complex のように見えるかどうかチェックされます。
2739,<code>format</code>に渡される引数。
2740,<code>x</code>と同じ長さの数値ベクトル、典型的には、文字ベクトル<code>x</code>がプレフォーマットとなる数値である。
2741,記述される項目を与えるベクトル、または長さ2のリスト、または項目と記述の両方を与える2列のマトリックス。
2742,対応する記述を持つ<code>x</code>と同じ長さのベクトル.  <code>x</code>が既に説明文を与えていない場合にのみ使用されます.
2743,説明情報のレンダリングスタイルを指定する文字列.  <code>"table"</code> の場合、項目と説明をカラムとする2カラムのテーブルを生成します（Texinfoの<code style="white-space: pre;">@table</code> 環境と同様です）。  <code>"list"</code> の場合、LaTeXスタイルのタグ付き説明文のリストが得られます。
2744,出力の折り返し線のターゲットとなる列を指定する正整数.
2745,テーブルスタイルでは2番目の列のインデントを、リストスタイルでは継続行のインデントを指定する正整数.  <code>width/2</code>より大きくてはならず、デフォルトはテーブルスタイルでは<code>width/3</code>、リストスタイルでは<code>width/9</code>となります.
2746,解くべきシステムの係数を与える上（または下）三角行列。  対角線より下(上)の値は無視されます.
2747,方程式の右辺を列挙する行列.
2748,使用する<code>r</code>の列と<code>x</code>の行の数です.
2749,logical; <code>TRUE</code> (デフォルト)の場合、<code>r</code>の<em>upper</em><em>tri</em>angular partが使用されます.  そうでない場合は、下側のものを使用する。
2750,論理; もし<code>TRUE</code>なら、<i>r' * y = x</i>を<i>y</i>に対して解く、つまり<code>t(r) %*% y == x</code>.
2751,空または1つ以上のnameまたはname=expressionの項。
2752,式(expression)
2753,式(expression)
2754,非負の数値ベクトル。
2755,数値ベクトル。
2756,整数ベクトル.
2757,論理; <code>TRUE</code>の場合、ガベージコレクションはconsセルとベクターに割り当てられたスペースに関する統計を表示する。
2758,logical; もし<code>TRUE</code>なら、使用される最大スペースの値は現在の値にリセットされる。
2759,logical; if <code>TRUE</code> the full collection is performed; otherwise only more recently allocated objects may be collected.もし、<code>TRUE</code>なら、完全な収集が行われる。
2760,logical; もし<code>TRUE</code>なら、GCタイミングは有効である。
2761,logical; if <code>TRUE</code>, ガベージコレクションは、consセルとベクターに割り当てられたスペースについての統計を表示する。
2762,logical; もし<code>TRUE</code>なら、最大使用空間の値は現在の値にリセットされる。
2763,logical; もし<code>TRUE</code>なら、完全な収集が行われる。そうでなければ、より最近割り当てられたオブジェクトだけが収集されるかもしれない。
2764,logical;オン/オフを切り替えます。
2765,integer; GCを<code>step</code>の割り当てごとに実行する; <code>step = 0</code> はGC拷問をオフにする。
2766,integer; GC拷問を開始する前に待つアロケーションの数。
2767,logical;再使用のためにフリーオブジェクトを解放しない: 慎重に使用する。
2768,logical;オン/オフを切り替える。
2769,integer; run GC every <code>step</code> allocations; <code>step = 0</code> turns the GC torture off.
2770,integer; GC拷問を開始する前に待つアロケーション数。
2771,logical;再使用のためにフリーオブジェクトを解放しない: 注意して使用する。
2772,<code>get</code>の場合、オブジェクト名(文字列またはシンボルとして与えられる)。<br><code>mget</code>の場合、オブジェクト名の文字ベクトルを指定する。
2773,オブジェクトを探す場所(「詳細」を参照); もし省略された場合は、オブジェクトの名前が式に引用されずに現れたかのように検索します.
2774,求めるオブジェクトのモードまたはタイプ：「詳細」セクションを参照してください。
2775,環境を囲むフレームを検索する必要がありますか？
2776,<code>mget</code>では、アイテムが見つからない場合に使用される値の<code>list</code>です: 必要ならばリストに強制されます。<br><code>dynGet</code>では任意の<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>オブジェクト、例えば<code>stop()</code>への呼び出しなどです。
2777,lookintoする最小フレーム番号を指定する整数.
2778,変数名(文字列またはシンボルとして与えられる).
2779,オブジェクトを探す場所(詳細セクションを参照); もし省略された場合、この関数は、オブジェクトの名前が式の中で引用されずに現れたかのように検索します。
2780,検索する環境を指定する別の方法ですが、通常は<code>where</code>引数を使用する方が簡単です。
2781,呼び出しリスト内のフレームです。  <code>where</code>を<code>sys.frame(frame)</code>のように与えるのと同じことです。
2782,求めるオブジェクトのモードまたはタイプ：「詳細」セクションを参照。
2783,環境を囲むフレームを検索するか？
2784,<code>x</code>が存在しない場合の<code>get0(x, *)</code>の戻り値です。
2785,論理：trueの場合、閉じたもの、標準のものを含むすべての接続が表示されます。  falseの場合は、開いているユーザー作成接続のみが含まれます。
2786,integer：<code>showConnections</code>で与えられたテーブルの行番号です。
2787,接続。
2788,名前空間とDLLを検索する関数。デフォルトでは、これは、ネイティブルーチンが呼び出されている現在の関数である。
2789,名前空間とDLLを見つけることができなかった場合、エラー（<code>TRUE</code>）かそうでないか（<code>FALSE</code>）を示す論理値です。  デフォルトは <code>FALSE</code> で、<code>.C</code>, <code>.Call</code>, <code>.Fortran</code>, <code>.External</code> コールに <code>PACKAGE</code> 引数がないためこの呼び出しがあった場合、エラーが発生せずすべての DLL を順に検索し通常の検索が実行されます。
2790,環境です。
2791,名前空間とDLLを検索する関数。デフォルトでは、ネイティブ・ルーチンが呼び出されている現在の関数である。
2792,名前空間とDLLを見つけることができなかった場合、エラー（<code>TRUE</code>）かそうでないか（<code>FALSE</code>）を示す論理値です。  デフォルトは <code>FALSE</code> で、<code>.C</code>, <code>.Call</code>, <code>.Fortran</code>, <code>.External</code> コールに <code>PACKAGE</code> 引数がないためこの呼び出しがあった場合、エラーが発生せずすべての DLL を順に検索し通常の検索が実行されます。
2793,環境である。
2794,論理：trueの場合、閉じた接続と標準的な接続を含むすべての接続が表示されます。  falseの場合は、開いているユーザー作成接続のみが含まれます。
2795,整数：<code>showConnections</code>で与えられたテーブルの行番号です。
2796,接続。
2797,文字列または<code>DLLInfo</code>オブジェクト。文字列は、対象のDLLのファイル名を指定し、ファイル名拡張子なしで与えられる（例．<span class="file">.dll</span>' や '<span class="file">.so</span>' などのファイル名拡張子はなく、ディレクトリ/パス情報はありません。したがって、ファイル '<span class="file">MyPackage/libs/MyPackage.so</span>' は<span class="samp">MyPackage</span> として指定します。

2798,<code>DLLInfo</code> オブジェクトは、<code>dyn.load</code> と <code>library.dynam</code> の呼び出しで直接得ることができ、または DLL がロードされた後に <code>getLoadedDLLs</code> によって見つけることができ、これは <code>DLLInfo</code> オブジェクト (DLL ファイル名のインデックス可能なリスト ) を返す。

2799,<code>DLLInfo</code>アプローチは、同じ名前を持ちながら異なるディレクトリのファイルに対応する2つのDLLに関連するあらゆる曖昧さを回避する。
2800,論理値である。  これが<code>TRUE</code>の場合、返されるリストの要素は、ルーチンの名前（登録または生の名前によってRによって見られる）を使用して命名される。  <code>FALSE</code>の場合、これらの名前は計算されず、リストに割り当てられます。  その結果、呼び出しはより速くなるはずです。  名前情報は、リスト内の<code>NativeSymbolInfo</code>オブジェクトでも利用可能です。
2801,文字列または<code>DLLInfo</code>オブジェクト。文字列は、対象のDLLのファイル名を指定し、ファイル名拡張子なしで与えられる（例．<span class="file">.dll</span>' や '<span class="file">.so</span>' などのファイル名拡張子はなく、ディレクトリ/パス情報はありません。したがって、ファイル '<span class="file">MyPackage/libs/MyPackage.so</span>' は<span class="samp">MyPackage</span> として指定します。

2802,<code>DLLInfo</code>オブジェクトは、<code>dyn.load</code>と<code>library.dynam</code>の呼び出しで直接得ることができ、または、<code>DLLInfo</code>オブジェクトのリスト (DLL file nameでインデックス可能) を返す、<code>getLoadedDLLS</code>を使用して、 DLLの読み込み後見つけることができます。

2803,<code>DLLInfo</code>アプローチは、同じ名前を持ちながら異なるディレクトリのファイルに対応する2つのDLLに関連するあらゆる曖昧さを回避する。
2804,論理値である。  これが<code>TRUE</code>の場合、返されるリストの要素は、ルーチンの名前（登録または生の名前によってRによって見られる）を使用して命名される。  <code>FALSE</code>の場合、これらの名前は計算されず、リストに割り当てられます。  その結果、呼び出しはより速くなるはずです。  名前情報は、リスト内の<code>NativeSymbolInfo</code>オブジェクトでも利用可能です。
2805,文字列または<code>DLLInfo</code>オブジェクト。文字列は、対象のDLLのファイル名を指定し、ファイル名拡張子なしで与えられる（例．<span class="file">.dll</span>' や '<span class="file">.so</span>' などのファイル名拡張子はなく、ディレクトリ/パス情報はありません。したがって、ファイル '<span class="file">MyPackage/libs/MyPackage.so</span>' は<span class="samp">MyPackage</span> として指定します。

2806,<code>DLLInfo</code>オブジェクトは、<code>dyn.load</code>と<code>library.dynam</code>の呼び出しで直接得ることができ、または、<code>DLLInfo</code>オブジェクトのリスト (DLL file nameでインデックス可能) を返す<code>getLoadedDOLLs</code>を用いてDLLがロードされた後見つけることができます。

2807,<code>DLLInfo</code>アプローチは、同じ名前を持ちながら異なるディレクトリのファイルに対応する2つのDLLに関連する曖昧さを回避するものである。
2808,論理値である。  これが<code>TRUE</code>の場合、返されるリストの要素は、ルーチンの名前（登録または生の名前によってRによって見られる）を使用して命名される。  <code>FALSE</code>の場合、これらの名前は計算されず、リストに割り当てられます。  その結果、呼び出しはより速くなるはずです。  名前情報は、リスト内の<code>NativeSymbolInfo</code>オブジェクトでも利用可能です。
2809,要素を抽出する、または要素を置換するオブジェクト。
2810,抽出または置換される要素を指定するインデックス。  インデックスは<code>numeric</code>または<code>character</code>ベクター、または空（欠損）または<code>NULL</code>である。  文字ベクトルは、オブジェクトの<code>names</code>（行列/配列の場合は<code>dimnames</code>）に一致します。

2811,<code>[</code>-indexingの場合のみ：<code>i</code>, <code>j</code>, <code>...</code>は、選択する要素/スライスを示す論理ベクトルであることができます。  <code>i</code>, <code>j</code>, <code>...</code>は、選択から外す要素/スライスを示す負の整数であることもできます。

2812,配列を<code>[</code>でインデックスする場合、単一の引数<code>i</code>は<code>x</code>の次元と同じ数の列を持つ行列とすることができる。その結果は<code>i</code>の各行におけるインデックスの集合に対応する要素を持つベクトルとする。

2813,インデックス値が<code>NULL</code>の場合、<code>integer(0)</code>であるかのように扱われます。
2814,リテラル文字列または名前(バックティクォートされることもある)。  抽出の場合、これは通常(「環境」の項を参照)、オブジェクトの<code>names</code>と部分的に一致する。
2815,マトリックスとアレイの場合。  <code>TRUE</code>の場合、結果は可能な限り低い次元に強制されます(例を参照ください)。  これは、要素の抽出にのみ機能し、置換には機能しません。  詳細は<code>drop</code>を参照してください。
2816,文字ベクトルによる抽出の際に、<code>[[</code>の部分一致の可能性を制御します(ほとんどのオブジェクトに対して。ただし、「環境」の項目を参照して下さい)。  デフォルトは、部分マッチングなしです。  値<code>NA</code>は部分マッチングを許可するが、発生した場合は警告を発する。  値<code>FALSE</code>は、警告なしで部分マッチングを許可する。
2817,典型的には配列のような<span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクトで、<code>x</code>と同様のクラスである。
2818,文字に強制することができる0個以上のオブジェクト(そして、セパレータなしで一緒に貼り付けられる)又は単一条件オブジェクトを指定する。
2819,論理、呼び出しがエラーメッセージの一部となるべきかを示す。
2820,<code>gettext</code>を参照。  <code>NA</code>の場合、メッセージは翻訳されない。
2821,文字列またはネームスペース・オブジェクト。
2822,文字列または名前。
2823,文字列:フック名
2824,文字列: パッケージ/名前空間名
2825,文字列:パッケージのイベント。  省略可。
2826,関数または関数のリスト、または<code>action = "replace"</code>の場合は<code>NULL</code>。
2827,実行されるアクションを指定します。  省略することができる。
2828,文字列またはネームスペース・オブジェクト。
2829,文字列または名前。
2830,文字列または名前空間オブジェクト。
2831,文字列または名前。
2832,文字列または名前空間オブジェクト。
2833,stringまたはname。
2834,文字列または名前空間環境。
2835,論理。
2836,環境。
2837,名前空間環境。
2838,文字ベクトル。
2839,オプションの文字ベクトル。
2840,名前空間環境。
2841,ロードするパッケージ/名前空間の名前を示す文字列。
2842,<code>generics</code>と並列するパッケージ名のベクトル。
2843,ライブラリを指定する文字ベクトル.
2844,論理.
2845,文字.
2846,文字.
2847,環境.
2848,3列の文字行列.
2849,文字.
2850,任意のオブジェクト。
2851,character引数。
2852,メソッドテーブル名.
2853,シンボル：ネームスペースの名前
2854,importから除外するシンボルを命名する文字ベクトル、特に<code>vars</code>がない場合に有用です。
2855,stringまたはnamespaceオブジェクト。
2856,文字列または名前。
2857,文字列または名前空間オブジェクト。
2858,文字列または名前。
2859,文字列または名前空間オブジェクト。
2860,文字列または名前。
2861,ネイティブシンボルの名前（複数可）。
2862,このシンボルの検索をどのDLLに制限するかを指定するオプションの引数です。  これが<code>"base"</code>の場合、検索対象は<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>実行ファイルそのものを検索します。
<code>unlist</code>が<code>TRUE</code>で、<code>name</code>のシンボル名の数が1であれば、<code>NativeSymbolInfo</code>オブジェクトが返されます。  もし<code>FALSE</code>なら、<code>NativeSymbolInfo</code>オブジェクトのリストが返されます。<code>name</code>に渡されたシンボルの数が1以上ならこれは無視されます。この関数の以前のバージョンとの互換性のために、このデフォルトは<code>TRUE</code>とします。
2864,<code>TRUE</code>の場合、<span style="font-family.Courier New, Courier; color>で登録された情報を返すかどうかを示す論理値です：Courier New, Courier; color：シンボルとそのパラメータの型について、<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> に登録された情報があればそれを、<code>FALSE</code>ならシンボルのアドレスのみを返す。
2865では、<code>name = value</code>で任意のオプションを定義することができる：Courier New, Courier; color：#666666;"><b>R</b></span>で使用されます。

2866,オプションは、名前付きリストである単一の無名引数を与えることによっても渡すことができる。
2867,オプション名を保持する文字列。
2868,指定されたオプションがオプション・リストに設定されていない場合、この値が返される。  これにより、オプションを取得し、それが設定されているかどうかをチェックし、設定されていない場合は別途設定することが容易になる。
<code>package_version</code>の場合は、<code>R.version</code>で得られるRversionオブジェクトの代わりになります。
2870,無効な数値バージョンはエラーになるか(デフォルト)、ならないかを示す論理である。
2871、ファイル名。
2872、ファイルに対して仮定する文字符号化方式。
2873、文字列を作るためのエンコーディング： <code>parse</code> の <code>encoding</code> 引数を参照。
2874、ソース行の文字ベクトル。  その他、<span style="font-family：Courier New, Courier; color：<b>R</b></span> オブジェクトは、文字に強制されます。
2875、ファイルのコピーで使用するタイムスタンプ。
2876、この<code>srcfilecopy</code>はファイルシステムファイルから来たと知られているか？
2877、<code>srcfile</code>オブジェクト。
2878、行番号。
2879、ソース位置を示す4、6、8個の値のベクトル。
2880, 適切なクラスのオブジェクト。
2881, <code>srcref</code>のテキストを得るために<code>srcfile</code>を読み込むかどうか。
2882、文字範囲の終わりをマークするためのオプションの2番目の<code>srcref</code>オブジェクト。
2883、メソッドへの追加の引数、これらは無視されます。
2884,1つまたは複数の文字ベクトル。
2885,変換のための'ドメイン'です。
2886,非負の整数。
2887,英語で<code>n = 1</code>の場合に使用されるメッセージです。
2888,英語で<code>n = 0, 2, 3, ...</code>のために使用されるメッセージ.
2889,ドメインの翻訳されたメッセージカタログを見つけるためのディレクトリです。
2890,フォーマット文字列の文字ベクトルで、それぞれ最大8192バイトである。
2891,<code>fmt</code>に渡される値です。  論理ベクトル、整数ベクトル、実数ベクトル、文字ベクトルだけがサポートされていますが、いくつかの強制が行われます：「詳細」セクションを参照してください。最大100まで。
2892,<code>gettext</code>を参照してください。
2893,文字列: チルダ展開が行われます。
2894,レベル数を示す整数.
2895,複製数を示す整数.
2896,結果の長さを示す整数.
2897,結果の因子レベルに対するラベルのオプションのベクトル。
2898,結果を順序付けるか否かを示す論理。
2899、条件オブジェクト。
2900、呼び出し式。
2901、条件オブジェクト。
2902,評価される式。
2903,戻りまたは終了する前に評価される式。
2904、関数。
2905,文字列。
2906【文字列】 2906【文字列
2907,再始動に名前を付ける文字列。
2908,再起動オブジェクト。
2909,オブジェクト。
2910,条件クラスを指定する文字列。
2911,追加引数; 詳細は下記を参照。
2912,デフォルトの<code>function</code>、<code>formula</code>、または<code>NULL</code>です。
2913,関数と関連付ける環境。
2914,任意の<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトである。
2915,論理。もし<code>TRUE</code>なら、環境はハッシュテーブルを使用します。
2916,作成されたenvironmentのエンクロージャーとして使用されるenvironmentです。
2917,環境
2918,ハッシュドエンバイロメントの初期サイズを指定する整数です。  <code>size</code>が<code>NA</code>またはゼロの場合、内部デフォルト値が使用されます。  この引数は、<code>hash</code>が<code>FALSE</code>の場合、無視される。
2919,与えられた文字ベクトルでマッチする正規表現(<code>fixed = TRUE</code>の場合は文字列)を含む文字列.  可能であれば、<code>as.character</code>によって文字列に強制されます。  長さ2以上の文字ベクトルが与えられた場合、警告とともに最初の要素が使用されます。  <code>regexpr</code>、<code>gregexpr</code>、<code>regexec</code>以外は欠番が許される。
2920,マッチを求める文字ベクトル、または <code>as.character</code> によって文字ベクトルに強制することができるオブジェクトです。  長いベクターもサポートされている。
2921,<code>FALSE</code>の場合、パターンマッチは<em>casesensitive</em>で、<code>TRUE</code>の場合、マッチング中に大文字小文字は無視される。
2922,論理的です。  Perl互換の正規表現が使われるべきか？
2923,<code>FALSE</code>の場合は、<code>grep</code>で決定されたマッチの(<code>integer</code>)インデックスを含むベクトルが返され、<code>TRUE</code>ならマッチ要素自身を含むベクトルが返されます。
2924,論理的である。  <code>TRUE</code>の場合、<code>pattern</code>はそのままマッチする文字列である。  競合するすべての引数を上書きする。
2925,論理的である。  <code>TRUE</code>の場合、マッチングは、文字単位ではなく、バイト単位で行われます。  詳細'を参照してください。
2926,論理的である。  <code>TRUE</code>の場合、<em>not</em>マッチした要素のインデックスまたは値を返す。
2927,<code>sub</code>と<code>gsub</code>でマッチしたパターンの置き換えを行う。  可能であれば、文字に強制される。  <code>fixed=FALSE</code>の場合、<code>pattern</code>の括弧付き部分式への逆参照<code>" \1"</code> to<code>"\9"</code> を含むことができます。  <code>perl=TRUE</code>の場合のみ、<code>" \U"</code> または<code>" \L"</code> で残りの置換を大文字または小文字に、<code>" \E"</code> で置換を終了することもできる。  長さ2以上の文字ベクトルが与えられた場合、警告とともに最初の要素が使用されます。  <code>NA</code>の場合、マッチに対応する結果の全ての要素は<code>NA</code>に設定されます。
2928,与えられた文字ベクトルでマッチする正規表現(<code>fixed = TRUE</code>の場合は文字列)を含む文字列.  可能であれば、<code>as.character</code>によって文字列に強制されます。  長さ2以上の文字ベクトルが与えられた場合、警告とともに最初の要素が使用されます。  <code>regexpr</code>、<code>gregexpr</code>、<code>regexec</code>以外は欠番が許されます。
2929,マッチを求める文字ベクトル、または <code>as.character</code> によって文字ベクトルに強制することができるオブジェクトです。  長いベクターもサポートされている。
2930,<code>FALSE</code>の場合、パターンマッチは<em>casesensitive</em>で、<code>TRUE</code>の場合、マッチング中に大文字小文字は無視される。
2931,論理的です。  Perl互換の正規表現が使われるべきか？
2932,<code>FALSE</code>の場合は、<code>grep</code>で決定されたマッチの(<code>integer</code>)インデックスを含むベクトルが返され、<code>TRUE</code>の場合はマッチ要素自身を含むベクトルが返されます。
2933,論理的である。  <code>TRUE</code>の場合、<code>pattern</code>はそのままマッチする文字列である。  競合するすべての引数を上書きする。
2934,論理的である。  <code>TRUE</code>の場合、マッチングは、文字単位ではなく、バイト単位で行われます。  詳細'を参照。
2935,論理的である。  <code>TRUE</code>の場合、<em>not</em>にマッチした要素のインデックスまたは値を返す。
2936,<code>sub</code>と<code>gsub</code>でマッチしたパターンの置き換えを行う。  可能であれば、文字に強制される。  <code>fixed=FALSE</code>の場合、<code>pattern</code>の括弧付き部分式への逆参照<code>" \1"</code> to<code>"\9"</code> を含むことができます。  <code>perl=TRUE</code>の場合のみ、<code>" \U"</code> または<code>" \L"</code> で残りの置換を大文字または小文字に、<code>" \E"</code> で置換を終了することもできる。  長さ2以上の文字ベクトルが与えられた場合、警告とともに最初の要素が使用されます。  <code>NA</code>の場合、マッチに対応する結果の全ての要素は<code>NA</code>に設定されます。
2937,与えられた文字ベクトルでマッチする正規表現(<code>fixed = TRUE</code>の場合は文字列)を含む文字列.  可能であれば、<code>as.character</code>によって文字列に強制されます。  長さ2以上の文字ベクトルが与えられた場合、警告とともに最初の要素が使用されます。  <code>regexpr</code>、<code>gregexpr</code>、<code>regexec</code>以外は欠番が許される。
2938,マッチを求める文字ベクトル、または <code>as.character</code> によって文字ベクトルに強制することができるオブジェクトです。  長いベクターもサポートされている。
2939,<code>FALSE</code>の場合、パターンマッチは<em>casesensitive</em>で、<code>TRUE</code>の場合、マッチング中に大文字小文字は無視される。
2940,論理的です。  Perl互換の正規表現が使用されるべきか？
2941,<code>FALSE</code>の場合は、<code>grep</code>で決定されたマッチの(<code>integer</code>)インデックスを含むベクトルが返され、<code>TRUE</code>の場合はマッチ要素自身を含むベクトルが返されます。
2942,論理的である。  <code>TRUE</code>の場合、<code>pattern</code>はそのままマッチする文字列である。  競合する全ての引数を上書きする。
2943,論理的である。  <code>TRUE</code>の場合、マッチングは、文字単位ではなく、バイト単位で行われます。  詳細'を参照してください。
2944,論理的である。  <code>TRUE</code>の場合、<em>not</em>マッチした要素のインデックスまたは値を返す。
2945,<code>sub</code>と<code>gsub</code>でマッチしたパターンの置き換えを行う。  可能であれば、文字に強制される。  <code>fixed=FALSE</code>の場合、<code>pattern</code>の括弧付き部分式への後方参照<code>" \1"</code> to<code>"\9"</code> を含むことが出来ます。  <code>perl=TRUE</code>の場合のみ、<code>" \U"</code> または<code>" \L"</code> で残りの置換を大文字または小文字に、<code>" \E"</code> で置換を終了することもできる。  長さ2以上の文字ベクトルが与えられた場合、警告とともに最初の要素が使用されます。  <code>NA</code>の場合、マッチに対応する結果の全ての要素は<code>NA</code>に設定されます。
2946,与えられた文字ベクトルでマッチする正規表現(<code>fixed = TRUE</code>の場合は文字列)を含む文字列.  可能であれば、<code>as.character</code>によって文字列に強制されます。  長さ2以上の文字ベクトルが与えられた場合、警告とともに最初の要素が使用されます。  <code>regexpr</code>、<code>gregexpr</code>、<code>regexec</code>以外は欠番が許されます。
2947,マッチを求める文字ベクトル、または <code>as.character</code> によって文字ベクトルに強制することができるオブジェクトです。  長いベクターもサポートされている。
2948,<code>FALSE</code>の場合、パターンマッチは<em>casesensitive</em>で、<code>TRUE</code>の場合、マッチング中に大文字小文字は無視される。
2949,論理的です。  Perl互換の正規表現が使用されるべきか？
2950,<code>FALSE</code>の場合は、<code>grep</code>で決定されたマッチの(<code>integer</code>)インデックスを含むベクトルが返され、<code>TRUE</code>ならマッチ要素自身を含むベクトルが返されます。
2951,論理的である。  <code>TRUE</code>の場合、<code>pattern</code>はそのままマッチする文字列である。  競合するすべての引数を上書きする。
2952,論理的である。  <code>TRUE</code>の場合、マッチングは、文字単位ではなく、バイト単位で行われます。  詳細'を参照してください。
2953,論理的である。  <code>TRUE</code>の場合、<em>not</em>マッチした要素のインデックスまたは値を返す。
2954,<code>sub</code>と<code>gsub</code>でマッチしたパターンの置き換えを行う。  可能であれば、文字に強制される。  <code>fixed=FALSE</code>の場合、<code>pattern</code>の括弧付き部分式への後方参照<code>" \1"</code> to<code>"\9"</code> を含むことが出来ます。  <code>perl=TRUE</code>の場合のみ、<code>" \U"</code> または<code>" \L"</code> で残りの置換を大文字または小文字に、<code>" \E"</code> で置換を終了することもできる。  長さ2以上の文字ベクトルが与えられた場合、警告とともに最初の要素が使用されます。  <code>NA</code>の場合、マッチに対応する結果の全ての要素が<code>NA</code>に設定されます。
2955,与えられた生ベクトルでマッチする正規表現（または<code>fixed = TRUE</code>の場合は固定パターン）を含む生ベクトル.  可能であれば、<code>charToRaw</code>によって文字列として強制されます。
2956,マッチを求める生ベクトル、または<code>charToRaw</code>によって生ベクトルに強制することができるオブジェクトです。  長いベクターはサポートされていません。
2957,<code>FALSE</code>の場合、パターンマッチは<em>casesensitive</em>で、<code>TRUE</code>の場合、マッチング中に大文字小文字は無視される。
2958,検索を開始するオフセットを指定する整数値です。  正の値でなければならない。  行の始まりはそのオフセットにあると定義され、<code>"^"</code>はそこでマッチします。
2959,論理。  戻り値を決定する：「値」を参照。
2960,論理的。  <code>TRUE</code>の場合、<code>pattern</code>はそのままマッチするパターンである。
2961,論理的である。  <code>TRUE</code>の場合、すべてのマッチを返し、そうでない場合は最初のものだけを返します。
2962,論理的。  <code>TRUE</code>の場合、<em>not</em>マッチした要素のインデックスまたは値を返します。  <code>value = TRUE</code> でなければ無視される（警告が出る）。
2963,すべて同じ長さの数値、文字、論理ベクトルのシーケンス、またはクラス化された<span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクトです。
2964,与えられた文字ベクトルでマッチする正規表現(<code>fixed = TRUE</code>の場合は文字列)を含む文字列.  可能であれば、<code>as.character</code>によって文字列に強制されます。  長さ2以上の文字ベクトルが与えられた場合、警告とともに最初の要素が使用されます。  <code>regexpr</code>、<code>gregexpr</code>、<code>regexec</code>以外は欠番が許されます。
2965,マッチを求める文字ベクトル、または <code>as.character</code> によって文字ベクトルに強制することができるオブジェクトです。  長いベクターもサポートされている。
2966,<code>FALSE</code>の場合、パターンマッチは<em>casesensitive</em>で、<code>TRUE</code>の場合、マッチングの際に大文字小文字は無視される。
2967,logical.  Perl互換の正規表現が使われるべきか？
2968,<code>FALSE</code>の場合は、<code>grep</code>で決定されたマッチの(<code>integer</code>)インデックスを含むベクトルが返され、<code>TRUE</code>の場合はマッチ要素自身を含むベクトルが返されます。
2969,論理的である。  <code>TRUE</code>の場合、<code>pattern</code>はそのままマッチする文字列である。  競合するすべての引数を上書きする。
2970,論理的。  <code>TRUE</code>の場合、マッチングは文字単位ではなく、バイト単位で行われます。  詳細'を参照。
2971,論理的である。  <code>TRUE</code>の場合、<em>not</em>マッチした要素のインデックスまたは値を返す。
2972,<code>sub</code>と<code>gsub</code>でマッチしたパターンの置き換えを行う。  可能であれば、文字に強制される。  <code>fixed=FALSE</code>の場合、<code>pattern</code>の括弧付き部分式への後方参照<code>" \1"</code> to<code>"\9"</code> を含むことが出来ます。  <code>perl=TRUE</code>の場合のみ、<code>" \U"</code> または<code>" \L"</code> で残りの置換を大文字または小文字に、<code>" \E"</code> で置換を終了することもできる。  長さ2以上の文字ベクトルが与えられた場合、警告とともに最初の要素が使用されます。  <code>NA</code>の場合、マッチに対応する結果のすべての要素は<code>NA</code>に設定されます。
2973,接続。
2974,0から9の整数で、書き込み時の圧縮レベル。
2975,論理。  読み込み時、非圧縮入力は許可されるべきか？
2976,論理的なもの。接続はテキスト指向であるべきですか？<code>TRUE</code>の場合、<code>pushBack</code>が動作し、それ以外の場合は<code>readBin</code>とその仲間が適用されます。
2977,文字列.  接続の説明: '詳細'を参照してください。
2978,文字列.  接続を開く方法(最初に開く必要がある場合)の説明。  可能な値については、「モード」セクションを参照してください。
2979,論理。  ブロッキング」セクションを参照してください。
2980,想定されるエンコーディングの名前です。  エンコード'セクションを参照のこと。
2981,論理的なもの。  trueを指定すると、通常のファイルでない引数(例えばキャラクタデバイス)に適した「raw」インターフェースが使用されます。  これは、テキストモードでの読書用に開く際の圧縮ファイルのチェックを抑制し、「ファイル」がシーク可能でない可能性があることを表明する。
2982,文字列、<code>c("default", "internal", "wininet", "libcurl")</code> に部分的にマッチします:「詳細」参照。
2983,HTTPrequestsで使用するHTTPヘッダーの名前付き文字ベクトルです。  非HTTP URLの場合は無視されます。  <code>HTTPUserAgent</code> オプション (<code>options</code> を参照) から来る <code>User-Agent</code> ヘッダーは、自動的に最初のヘッダーとして使われます。
2984,0-9の整数値。  書き込み時に適用される圧縮の量を、なしから利用可能な最大値まで指定します。  <code>xzfile</code>の場合、負の値も可能です：'Compression'セクションを参照してください。
2985,数値：この接続に使用されるタイムアウト（秒単位）です。  OSによっては、非常に大きな値をゼロとして扱うことがあるので注意してください：しかし、POSIX標準では、31日までの値をサポートすることを要求しています。
2986,オプションで指定する文字ベクトル。現在、TCPソケットでは<code>"no-delay"</code>のみがサポートされています。
2987,ZIPファイル内のファイル名。
2988,文字列。  ポートのホスト名。
2989,integer(整数)。  TCPポート番号。
2990,論理。  ソケットはクライアントかサーバーのどちらであるか？
2991,コネクションをリッスンするサーバー・ソケット。
2992,接続。
2993,文字列。  現在、無視されています。
2994,文字列。  空または<code>"read"</code>または<code>"write"</code>、部分一致が許されます。
2995,他のメソッドに渡される、または他のメソッドから渡される引数。
2996,オブジェクト
2997,文字ベクトル、または<code>as.character</code>によって文字ベクトルに変換されるオブジェクト、または<code>iconv(toRaw = TRUE)</code> が返すような<code>NULL</code>と<code>raw</code>要素を持つリスト。
2998,現在のエンコーディングを記述する文字列。
2999,ターゲットエンコーディングを記述する文字列。
3000,文字列。  <code>NA</code>でない場合、入力中の変換不可能なバイトを置き換えるために使用されます。  (<code>"byte"</code>の場合、<code>"&lt;xx&gt;"</code>とそのバイトの16進コードを表示します。  <code>"Unicode"</code>でUTF-8から変換する場合は、<code>"&lt;U+xxxx&gt;"</code>という形でUnicodeポイントを表示します。
3001,論理、専門家用。  エンコーディングはマークすべきなのか？
3002,論理的なもの。  文字ベクトルではなく、生ベクトルのリストが返されるべきか？
3003,文字ベクトル、または<code>as.character</code>によって文字ベクトルに変換されるオブジェクト、または<code>iconv(toRaw = TRUE)</code> が返すような <code>NULL</code> と <code>raw</code> を持つ一覧。
3004,現在のエンコーディングを記述する文字列。
3005,ターゲットエンコーディングを記述する文字列。
3006,文字列。  <code>NA</code>でない場合、入力中の変換不可能なバイトを置き換えるために使用されます。  (<code>"byte"</code>の場合、<code>"&lt;xx&gt;"</code>とそのバイトの16進コードを表示します.  <code>"Unicode"</code>でUTF-8から変換する場合は、<code>"&lt;U+xxxx&gt;"</code>という形でUnicodeポイントを表示します。
3007,論理的、専門家用。  エンコーディングはマークされるべきか？
3008,論理的なもの。  文字ベクトルではなく、生ベクトルのリストが返されるべきか？
3009,名前付き引数、「詳細」参照。
3010,文字列：省略可能です。  照合に使用される実際のロケール、または有効な最も具体的なロケールのいずれかを指定します。
3011,名前付き引数、「詳細」を参照してください。
3012,文字列：省略することができる。  照合に使用される実際のロケール、または有効であろう最も具体的なロケールのいずれかを指定する。
3013,任意の<span style="font-family：クーリエニュー、クーリエ; color：#"><b>R</b></span>オブジェクト。
3014,（<code>double</code>と<code>complex</code>非<code>NA</code>）数が<code>==</code> ('equal') またはbitwisecomparisonで比較されるべきかを示す論理です.  後者(非デフォルト)では、<code>-0</code>と<code>+0</code>が区別される。
3015,概念的にただ一つの数値<code>NA</code>と一つの<code>NaN</code>があるかどうかを示す論理; <code>single.NA = FALSE</code>differentiates bit patterns.
3016,<code>x</code>と<code>y</code>の<code>属性</code>を<em>unorder</em> taggedpairlists ("sets") として扱うべきかを示す論理。これは現在S4オブジェクトの<code>slot</code>sにも適用されています。  <code>attrib.as.set = FALSE</code> とするのは、厳しすぎるかもしれません。
3017,クロージャを比較する時、バイトコードが無視されるべきかどうかを示す論理的なもの。
3018,クロージャを比較する時、それらの環境が無視されるべきかどうかを示す論理的なもの。
3019,クロージャーの比較において、<code>"srcref"</code>属性が無視されるべきかどうかを示す論理的なものである。
3020,an <span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクトです。
3021,長さ1の論理ベクトルで、<code>NA</code>でないもの。1より大きい長さの条件は、現在、警告で受け入れられますが、最初の要素だけが使用されます。  環境変数<span class="env">_R_CHECK_LENGTH_1_CONDITION_</span> が true に設定されている場合、代わりにエラーが通知されます。  その他の型は、可能であれば論理型に強制され、いかなるクラスも無視される。
3022,変数の構文上の名前。
3023,ベクトル(リストと式を含む)、ペアリスト、<code>NULL</code>に評価する式。  Afactorの値は、文字ベクトルに強制されます。  <span style="font-family：Courier New, Courier; color：<br>R</b></span>4.0.0 からは、これは長いベクトルであることができます。
3024,形式的な意味での<em>式</em>である。  これは単純な式か、いわゆる<em>複合式</em>で、通常は<code>{ expr1 ; expr2 }</code> という形式である。
3025,論理モードに強制することができるオブジェクト。
3026,<code>test</code>の真の要素に対する戻り値。
3027,<code>test</code>の偽の要素に対する値を返す。
3028,数値.  出力ベクトルの希望する長さ,入力は必要に応じて再利用される.
3029,数値ベクトル.
3030,数値ベクトル.
3031,数値ベクトル。
3032,数値ベクトル.
3033,オブジェクト、おそらくモード<code>complex</code>の。
3034,モード<code>complex</code>のオブジェクト、またはメソッドが定義されているクラスの1つ。
3035,他のメソッドに渡される、または他のメソッドから渡される更なる引数。
3036,文字列またはネームスペース環境。
3037,論理的。
3038,環境。
3039,名前空間環境(namespace environment)。
3040,文字ベクトル。
3041,オプションの文字ベクトル。
3042,名前空間環境。
3043,ロードするパッケージ/名前空間の名前を示す文字列。
3044,<code>generics</code>と並列するパッケージ名のベクトル。
3045,ライブラリを指定する文字ベクトル.
3046,論理.
3047,文字.
3048,文字.
3049,環境.
3050,3列の文字行列.
3051,文字.
3052,任意のオブジェクト.
3053,characterの引数。
3054,メソッドテーブル名.
3055,シンボル：ネームスペースの名前
3056,importから除外するシンボルを命名する文字ベクトル、特に<code>vars</code>がない場合に有用です。
3057,<span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクトをシリアライズする。
3058,接続または、<span style="font-family.">R</b></span> オブジェクトがあるファイルの名前：Courier New, Courier; color：#"><b>R</b></span>オブジェクトが保存されるか、または読み出されるファイル名です。
3059,論理的である。  <code>TRUE</code> または <code>NA</code> の場合、ASCII表現が書き込まれ、それ以外の場合(デフォルト)はバイナリが使用されます。
3060,使用するワークスペース・フォーマットのバージョンです。  <code>NULL</code>は現在のデフォルトバージョン(3)を指定します。他にサポートされている値は2だけで、これは<span style="font-family：Courier New, Courier; color：<br>R</b></span> 1.4.0 から <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> 3.5.0.
3061,名前付きファイルへの保存が<code>"gzip"</code>圧縮を使用するかどうかを指定する論理、または使用する圧縮のタイプを示すために<code>"gzip"</code>,<code>"bzip2"</code>または<code>"xz"</code>のいずれかを指定。  <code>file</code> が接続である場合は無視されます。
3062,参照オブジェクトを扱うためのフック関数です。
3063,a <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトです。
3064,クラスを命名する文字ベクトル。  <code>value</code>は、<code>NULL</code>でもよい。
3065,戻り値に影響を与える論理: '詳細'を参照して下さい。
3066,希望する長さを指定する非負の整数。ダブル値は整数に強制されます。
3067,強制される、またはテストされるオブジェクト。
3068,他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
3069,相互作用が計算される因子、またはそれらの因子を与える単一のリスト。
3070,<code>drop</code>が<code>TRUE</code>の場合、未使用の因子レベルは結果から取り除かれます。  デフォルトは、全ての因子レベルを保持することである。
3071,構成要素を結合して新しいレベルラベルを構築するための文字列。
3072,因子連結の順序を辞書的に順序付けるべきかを示す論理。
3073,重複する値のない一連の項目(概念的)を含むベクトル(同じモード)。
3074,変換またはシフトされるオブジェクト。
3075,論理：変換は一文字の文字列か複数の個々の文字か？
3076,シフトするビットの数。  正の数は右に、負の数は左にシフトします: 許容値は <code>-8 ... 8</code> です.
3077,結果のタイプ、部分的に一致する。
3078,変換されるオブジェクト。
3079,論理：変換は一文字の文字列または複数の個々の文字にする必要がありますか？
3080,論理：サロゲートペアの解釈を試みるべきですか？  (「詳細」を参照)<code>multiple = FALSE</code>の場合のみサポートされます。
<code>rle()</code>の場合はベクトル(アトミック、リストではない)、<code>inverse.rle()</code>の場合はクラス<code>「rle」</code>のオブジェクトです。
3082,その他の引数; ここでは無視されます。
3083,印刷のための有効桁数, <code>print.default</code> を参照.
3084,文字列、印刷される各行の前に付加されます。
3085,任意の<span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクトです。
3086,条件オブジェクト.
3087,呼び出し式。
3088,条件オブジェクト。
3089,評価される式。
3090,リターンまたは終了する前に評価される式。
3091、関数
3092,文字列
3093、文字列。
3094,再始動に名前を付ける文字列。
3095,再始動オブジェクト。
3096,オブジェクト
3097,条件クラスの名前を指定する文字列。
3098,追加引数; 以下の詳細を参照。
3099 "条件オブジェクト"。
3100、呼び出し式。
3101、条件オブジェクト。
3102,評価される式。
3103,リターンまたは終了する前に評価される式。
3104、関数
3105]文字列
3106、文字列
3107、再起動を命名する文字列。
3108,再起動オブジェクト。
3109、オブジェクト
3110,条件クラス名を指定する文字列。
3111,追加引数; 詳細は以下を参照。
3112,配列を埋めるデータを与えるベクトル（リストまたは<code>expression</code>ベクトルを含む）.  原子クラスでないオブジェクトは、<code>as.vector</code>で強制される。
3113,作成される配列のdim属性、つまり、各次元の最大インデックスを与える長さ1以上の整数ベクトル。
3114,<code>NULL</code>または次元の名前。これは、<code>NULL</code>またはその次元の<code>dim</code>で与えられた長さの文字ベクトルで、各次元に1つの要素を持つリスト（またはそれが無視されます）でなければなりません。  リストには名前を付けることができ、リスト名は次元の名前として使用されます。  リストが次元数より短い場合は、<code>NULL</code>sで必要な長さまで拡張されます。
3115,an <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>オブジェクトです。
3116,メソッドに渡される、またはメソッドから渡される追加の引数。
3117,テストされるオブジェクト。
3118,呼び出される関数を指定する空でない文字列。
3119,呼び出しの一部となる引数。
3120,任意の<span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクト。
3121,希望する長さを指定する非負の整数。二重の値は整数に強制される。
3122,強制される、またはテストされるオブジェクト。
3123,他のメソッドに渡される、または他のメソッドから渡される追加の引数。
3124,数値。  出力ベクトルの希望する長さ。入力は必要に応じて再利用される。
3125,数値ベクトル。
3126,数値ベクトル。
3127,数値ベクトル
3128,数値ベクトル.
3129,オブジェクト、おそらくモード<code>complex</code>の。
3130,モード<code>complex</code>のオブジェクト、またはメソッドが定義されているクラスの1つです。
3131,他のメソッドに渡される、または他のメソッドから渡される更なる引数。
3132,任意の<span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクト。
3133,<code>NULL</code>またはデータフレームのrownamesを与える文字ベクトル。  欠落値は許されない。
3134,論理的である。<code>TRUE</code>の場合、行名の設定と列名の変換（構文名への変換：<code>make.names</code>参照）はオプションです。  なお、<span style="font-family：Courier New, Courier; color：<br>R</b></span> の<span class="pkg">base</span> パッケージの <code>as.data.frame()</code> メソッドは、基本的に <code>data.frame(*, check.names = !optional)</code> のテーマ化で列名の処理にのみ <code>optional</code> を使用するので、注意してください。また <code>matrix</code> メソッドの <code>make.names</code> 引数を参照してください。
3135,メソッドに渡される、またはメソッドから渡される追加の引数。
3136,論理: 文字ベクトルは係数に変換されるべきか？
3137,論理または整数; 256文字(または数値の場合は<code>cut.names</code>)以上の列名を短くするか(そして最後の6文字を<code>" ..."</code> で置き換える)を指定します．
3138,(オプション)カラム名の文字ベクトル.
3139,空の列名、すなわち<code>""</code>が(<code>data.frame</code>内で)修正されるべきか否かを示す論理.
3140,logical; <code>data.frame()</code>の呼び出しに渡されます。
3141,<code>論理</code>、すなわち<code>FALSE, NA, TRUE</code>のうちの1つは、（行列<code>x</code>の）行名が無効な場合にどうすべきかを示すものです。  もし無効であれば、デフォルトの<code>TRUE</code>は <code>make.names(*, unique=TRUE)</code> を呼び出します; <code>make.names=NA</code> は「自動」行名を使い、<code>FALSE</code> は無効行名に対するエラーを通知します。
3142,希望する長さを指定する非負の整数。ダブル値は、整数に強制されます：1以外の長さの引数を供給することはエラーになります。
3143,強制される、またはテストされるオブジェクト。
3144,他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
3145,重複する値のない一連のアイテム（概念的に）を含む（同じモードの）ベクター。
3146,デフォルトである<code>function</code>、<code>formula</code>、または<code>NULL</code>.
3147,関数と関連付ける環境。
3148,任意の<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクト。
3149,a logical, if <code>TRUE</code> the environment will use a hash table.
3150,作成されたenvironmentのエンクロージャーとして使用されるenvironmentです。
3151、環境
3152,ハッシュドエンバイロメントの初期サイズを指定する整数です。  <code>size</code>が<code>NA</code>またはゼロの場合、内部デフォルト値が使用されます。  この引数は、<code>hash</code>が<code>FALSE</code>の場合、無視されます。
3153,<code>expression</code>の場合：<span style="font-family：Courier New, Courier; color：<br><code>as.expression</code>: メソッドに渡される引数。
3154,任意の<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトです。
3155,データのベクトルで、通常は少数の異なる値をとります。
3156,オプションとして、<code>x</code>が取ったかもしれないユニークな値(文字列として)のベクトルです。  デフォルトは、<code>as.character(x)</code>が取った値のユニークなセットで、<em>の昇順にソートされます。  なお、この集合は<code>sort(unique(x))</code>より小さく指定することができる。
3157,<em>either</em>レベル(<code>exclude</code>内のものを取り除いた後の<code>levels</code>と同じ順序で)のラベルのオプション文字ベクトル、<em>or</em>長さ 1の文字列。 <code>labels</code>内の重複値は同じ因子レベルに異なる<code>x</code>をマッピングするのに使用できます。
3158,レベルのセットを形成するときに除外される値のベクトル。  これは<code>x</code>と同じレベルセットを持つ因子であってもよいし、<code>文字</code>であるべきです。
3159,レベルが（与えられた順序で）順序付けられたとみなされるべきかどうかを決定するための論理フラグ。
3160,レベル数の上限; '詳細'を参照のこと。
3161,(<code>ordered(.)</code>内)：<code>ordered</code>自身を除いた上記のいずれかを指定します.
3162,<code>NA</code>レベルが使用される場合のみ、すなわち<code>any(is.na(x))</code>の場合のみ追加されます.
3163,<span style="font-family：Courier New, Courier; color：#テストするオブジェクト: デフォルトのメソッドは、アトミックベクトルを扱います。
3164,an <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトです。
3165,<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトをテストする：デフォルトのメソッドは、アトミックベクトルを扱います。
3166,希望する長さを指定する非負の整数。ダブルの値は整数に強制されます。
3167,強制される、またはテストされるオブジェクト。
3168,他のメソッドに渡される、または他のメソッドから渡される追加の引数。
3169,テストされるオブジェクト。
3170,オブジェクト、おそらく名前が付けられています。
3171,強制されるかテストされるオブジェクト。
3172,全ての値をコピーするか（デフォルト）名前がドットで始まらないものだけをコピーするかを示す論理です。
3173,結果のリストの<code>names</code>がソートされるべきかどうかを示す論理です（ますます）。  これはややコストがかかるが、環境の比較には有用であることに注意されたい。
3174,DLL（動的共有オブジェクトとも呼ばれる）へのパス名を示す文字列。  (この用語の意味については、「詳細」を参照してください。）
3175,DLL内のシンボルをDLL間で共有せず、独自のローカルテーブルに保存するか、グローバルシンボルテーブルに追加するかを制御する論理値です。  この効果があるかどうかは、システムに依存する。
3176,ライブラリがロードされた時点ですべてのシンボルを解決（再配置）するか、使用されるまで延期するかを制御する論理である。  この制御は、開発者がライブラリが完全で、必要なシンボルがすべて揃っているかどうかをテストしたり、ユーザーが不足するシンボルを無視するのに便利です。  この制御が効果を発揮するかどうかはシステムに依存する。
3177,将来の拡張のためのその他の引数。
3178,シンボル名を与える文字列。
3179,与えられた場合、<code>名</code>の検索をこの引数で与えられたDLLに限定する（さらに、従来の拡張子、'<span class="file">.so</span>'、'<span class="file">.sl</span>'、'<span class="file">.dll</span>', ...）．  これは、パッケージの安全性を高めるためのもので、この引数を使うことで、他のパッケージが自分の外部シンボルを上書きできないことを保証することができます。  これは、<code>.C</code>、<code>.Call</code>、<code>.Fortran</code>、<code>.External</code>関数と同じ方法で使用されます。
3180,探すシンボルの種類：任意（<code>""</code>、デフォルト）、<code>"Fortran"</code>、<code>"Call"</code>または<code>"External"</code>でよいです.
3181,希望する長さを指定する非負の整数。ダブル値は整数に強制される：1以外の長さの引数を供給することはエラーである。
3182，強制される、またはテストされるオブジェクト。
3183，他のメソッドに渡される、または他のメソッドから渡される更なる引数。
3184,オプションのデータベクタ（リストまたは<code>式</code>ベクタを含む）。  非アトミッククラスの<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトは <code>as.vector</code> によって強制され、すべての属性は破棄されます。
3185,希望する行の数。
3186,希望する列の数.
3187,論理的である。<code>FALSE</code> (デフォルト)の場合、行列は列で埋められ、それ以外の場合、行列は行で埋められる。
3188,A <code>dimnames</code> attribute for the matrix: <code>NULL</code> or a <code>list</code> of length 2 gives the row and columnnames respectively.  空のリストは <code>NULL</code> として扱われ、長さ 1 のリストは行の名前として扱われます。  リストには名前を付けることができ、リスト名は次元の名前として使用されます。
3189,an <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>オブジェクトです。
3190,メソッドに渡される、またはメソッドから渡される追加の引数。
3191,結果の行列が(<code>NULL</code>ではなく)<code>rownames</code>の文字を持つべきかどうかを示す論理です。  デフォルトの <code>NA</code> は、データフレームが '自動' 行名を持っている場合、または0行データフレームに対して <code>NULL</code>rownames を使用します。
3192,an <span style="font-family：Courier New, Courier; color：テストされる<span style="font: Courier New; color: #666666;"><b>R</b></span> オブジェクト: <code>is.na</code> と <code>anyNA</code> のデフォルトメソッドは原子ベクトル、リスト、ペアリストと <code>NULL</code> を扱います.
3193,論理的：<code>anyNA</code>はリストとペアリストに再帰的に適用されるべきか？
3194,<code>x</code>で使用するための適切なインデックスベクタ。
3195，<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトをテストする: <code>is.na</code> と <code>anyNA</code> のデフォルトメソッドは、原子ベクトル、リスト、ペアリスト、および <code>NULL</code> を処理します。
3196,論理的：<code>anyNA</code>はリストとペアリストに再帰的に適用されるべきか？
3197,<code>x</code>で使用するための適切なインデックスベクタです。
3198,a character vector with suitable numeric version strings (see'Details'); <code>package_version</code> for alternatively a Rversion object as obtained by <code>R.version</code>.
3199,無効な数値バージョンはエラーになるか(デフォルト)、ならないかを示す論理です.
3200,date-timeクラスの1つから印刷または要約されるオブジェクトを指定します。
3201,タイムゾーンフォーマットのために、<code>format.POSIXct</code>に渡されます。
3202,数値または<code>NULL</code>で、印刷されるエントリの最大数を指定します。  デフォルトでは、<code>NULL</code>の場合、<code>getOption("max.print")</code>が使われます。
3203,計算の有効桁数：最も重要でない時間単位を正確に表すのに十分な桁数であるべきです。
3204,他のメソッドから、または他のメソッドに渡される更なる引数。
3205,日付-時間オブジェクト
3206,日付時刻オブジェクトまたは文字ベクトル。  (文字ベクトルは<code>as.POSIXct</code>で変換されます)。
3207,数値ベクトル(秒単位)
3208,<code>==</code>、<code>!=</code>、<code>&lt;</code>、<code>&lt;=</code>、<code>&gt;</code>、<code>&gt;=</code>から一つを指定します。
3209,アン<span style="font-family：Courier New, Courier; color：#テストするオブジェクト：<code>is.na</code>と<code>anyNA</code>のデフォルトメソッドは、アトミックベクトル、リスト、ペアリスト、<code>NULL</code>を扱います。
3210,論理的：<code>anyNA</code>はリストとペアリストに再帰的に適用されるべきか？
3211,<code>x</code>で使用するための適切なインデックスベクタです。
3212,an <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトをテストする: <code>is.na</code> と <code>anyNA</code> のデフォルトメソッドは、原子ベクトル、リスト、ペアリスト、および <code>NULL</code> を処理します。
3213,論理的：<code>anyNA</code>はリストとペアリストに再帰的に適用されるべきか？
3214,<code>x</code>で使用するための適切なインデックスベクタです。
3215,データのベクトルで、通常は少数の異なる値をとります。
3216,オプションとして、<code>x</code>が取ったかもしれないユニークな値(文字列として)のベクトルです。  デフォルトは、<code>as.character(x)</code>が取った値のユニークなセットで、<em>の昇順にソートされます。  なお、この集合は<code>sort(unique(x))</code>より小さく指定することができる。
3217,<em>either</em>レベル(<code>exclude</code>のものを取り除いた後の<code>levels</code>と同じ順序で)のラベルのオプション文字ベクトル、<em>or</em>長さ 1の文字列。 <code>labels</code>内の重複値は同じ因子レベルに<code>x</code>の異なる値マッピングに使用できます.
3218,レベルのセットを形成するときに除外される値のベクトル。  これは、<code>x</code>と同じレベルセットを持つ因子であってもよいし、<code>文字</code>であるべきである。
3219,レベルが(与えられた順序で)順序付けられたとみなされるべきかどうかを決定する論理フラグ。
3220,レベル数の上限; '詳細'を参照のこと。
3221,(<code>ordered(.)</code>内)：<code>ordered</code>自身を除いた上記のいずれかを指定する。
3222,<code>NA</code>レベルが使用される場合のみ、すなわち<code>any(is.na(x))</code>の場合のみ追加されます.
3223,適切な数値バージョン文字列を持つ文字ベクトル(「詳細」参照); <code>package_version</code>の場合、代わりに<code>R.version</code>によって得られるRversionオブジェクトを指定する。
3224,無効な数値バージョンはエラーになるか(デフォルト)、ならないかを示す論理。
3225,強制される、またはテストされるオブジェクト。
3226,<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> テストされるオブジェクト：デフォルトのメソッドは、アトミックベクトルを扱います。
3227,テストされる、または強制されるオブジェクト。
3228,無視される。
3229,希望する長さを指定する非負の整数。2倍値は、整数に強制されます。
3230,強制される、またはテストされるオブジェクト。
3231，他のメソッドに渡される、または他のメソッドから渡される追加の引数。
3232,適切な数値バージョン文字列を持つ文字ベクトル(「詳細」参照); <code>package_version</code>の場合、代わりに<code>R.version</code>によって得られるRversionオブジェクトがある。
3233,無効な数値バージョンはエラーになるか(デフォルト)、ならないかを示す論理です。
3234,希望する長さを指定する非負の整数。ダブル値は整数に強制されます：1以外の長さの引数を与えるとエラーになります。
3235,強制される、またはテストされるオブジェクト。
3236,他のメソッドに渡される、または他のメソッドから渡される追加の引数。
3237,date-timeまたはdateオブジェクト。
3238,変換に使用されるオプションのタイムゾーン指定、主に<code>"POSIXlt"</code>オブジェクトの場合。
3239,文字列。  結果の単位を指定します。  省略可能です。
3240,文字列.  <code>units</code>と同様ですが、省略はできません。
3241,時間間隔を指定する文字列または数値。
3242,<code>tim</code>のフォーマットを指定する文字：<code>strptime</code>を参照。  デフォルトは、ロケール固有の時間フォーマットである。
3243,クラス<code>"difftime"</code>を継承したオブジェクトです。
3244,他のメソッドに渡す、または他のメソッドから渡される引数。
3245,希望する長さを指定する非負の整数。2倍値は整数に強制されます：1以外の長さの引数を与えるとエラーになります。
3246,強制される、またはテストされるオブジェクト。
3247、他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
3248,テストされるオブジェクト。
3249,データのベクトルで、通常、少数の異なる値をとります。
3250,オプションとして、<code>x</code>が取ったかもしれないユニークな値(文字列として)のベクトル。  デフォルトは、<code>as.character(x)</code>が取った値のユニークなセットで、<em>の昇順にソートされています。  なお、この集合は<code>sort(unique(x))</code>より小さく指定することができる。
3251,<em>either</em>レベル(<code>exclude</code>のものを取り除いた後の<code>levels</code>と同じ順序で)のラベルのオプション文字ベクトル、<em>or</em>長さ 1の文字列。 <code>labels</code>内の重複値は同じ因子レベルに<code>x</code>の異なる値マッピングに使用できます.
3252,レベルのセットを形成するときに除外される値のベクトル。  これは、<code>x</code>と同じレベルセットを持つ因子であってもよいし、<code>文字</code>であるべきである。
3253,レベルが（与えられた順序で）順序付けられたとみなされるべきかどうかを決定するための論理フラグ。
3254,レベル数の上限; '詳細'を参照のこと。
3255,(<code>ordered(.)</code>内)：<code>ordered</code>自身を除いた、上記のいずれか。
3256,<code>NA</code>レベルが使用される場合のみ、すなわち<code>any(is.na(x))</code>の場合のみ追加されます.
3257,適切な数値バージョン文字列を持つ文字ベクトル(「詳細」参照); <code>package_version</code> の場合、代わりに <code>R.version</code> によって得られる Rversion オブジェクト。
3258,無効な数値バージョンはエラーになるか(デフォルト)、ならないかを示す論理。
3259,オブジェクト（名前付きもあり）。
3260,強制されるかテストされるオブジェクト。
3261,すべての値をコピーするか、（デフォルト）名前がドットで始まらないものだけをコピーするかを示す論理である。
3262,結果のリストの<code>names</code>がソートされるべきかどうかを示す論理です。  これはややコストがかかるが、環境の比較には有用であることに注意されたい。
3263,an <span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクトです。
3264,QR分解が計算される数値行列または複素行列。  論理行列は数値に強制される。
3265,<code>x</code>の列の線形依存性を検出するための許容範囲.<code>LAPACK</code>がfalseで<code>x</code>が実数の場合のみ使用されます.
3266,<code>qr</code>で計算されるタイプのQR分解です。
3267,方程式の右辺のベクトルまたは行列。
3268,QR分解または(<code>qr.solve</code>のみ)直交行列.
3269,有効ランク.
3270,論理的である。  実数<code>x</code>の場合、trueならLAPACKを、そうでなければLINPACK（デフォルト）を使用します。
3271,他のメソッドに渡される、または他のメソッドから渡される追加の引数
3272,希望する長さ.
3273,強制されるオブジェクト。
3274,テストされるオブジェクト。
3275,テストされるオブジェクト。
3276,強制される、またはテストされるオブジェクト。
3277,因子（文字列を含む）として解釈できる1つ以上のオブジェクト、またはその構成要素がそのように解釈できるリスト（またはデータフレーム）。  (<code>as.table</code>では、特定のメソッドに渡される引数、<code>as.data.frame</code>では、未使用。)
3278,<code>...</code>の全ての要因について除去するレベル。  itが<code>NA</code>を含まず、<code>useNA</code>が指定されていない場合、<code>useNA = "ifany"</code> を意味する。  非要素引数に対する解釈は、'Details'を参照。
3279,テーブルに<code>NA</code>の値を含めるかどうか'Details'を参照。  省略可能です。
3280,結果の次元に与える名前（<em>dimnames names</em>）を指定します。
3281,デフォルトの<code>dnn</code>がどのように構築されるかを制御します。  詳細'を参照。
3282,任意の<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>オブジェクト、または<code>as.data.frame</code>メソッドのクラス<code>"table"<code>を継承したオブジェクト。なお、<code>as.data.frame.table(x, *)</code> は、<code>array</code>を「整形」するためにテーブル以外の <code>x</code> に対して明示的に呼ばれることがある。
3283,データフレームの行名を与える文字ベクトル。
3284,テーブルエントリーの列に使用される名前、通常はカウントです。
3285,論理：分類因子は、因子（デフォルト）または文字ベクトルとして返されるべきか？
3286,<code>provideDimnames</code>に渡されます。
3287,<span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクトのクラス、または数値、複素数、文字、論理、またはローベクタを持つ。
3288,logicalです。  チェックの前に欠落値を削除すべきか？
3289,チェックが<em>厳密に</em>増加する値に対して行われるべきかどうかを示す論理。
3290,アトミックモードまたは<code>"list"</code>または<code>"expression"</code>または（<code>vector</code>を除く）<code>"any"</code>を名付ける文字列.  現在、<code>is.vector()</code>は<code>mode</code>に対して任意の型（<code>typeof</code>参照）を許可し、modeが<code>"any"</code>ではない場合、 <code>is.vector(x, mode)</code> は <code>typeof(x) == mode</code> とほぼ同じになる。
3291,希望する長さを指定する非負の整数です。  長いベクトル、すなわち<code>length &gt; .Machine$integer.max</code>の場合、<code>"double"</code>型でなければならない。  1以外の長さの引数を与えることはエラーです。
3292,an <span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクトです。
3293,aは<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>オブジェクト。
3294,クラスを命名する文字ベクトル。  <code>value</code>は<code>NULL</code>も可能です。
3295,戻り値に影響を与える論理: '詳細'を参照してください。
3296,論理：trueの場合、閉じた接続と標準的な接続を含む全ての接続が表示されます。  falseの場合、開いているユーザー作成接続のみが含まれます。
3297,整数：<code>showConnections</code>で与えられたテーブルの行番号です。
3298,接続。
3299,文字列または名前空間環境。
3300,論理的である。
3301,環境。
3302,名前空間環境(namespace environment)
3303,文字ベクトル。
3304,オプションの文字ベクトル。
3305,名前空間環境。
3306,ロードするパッケージ/名前空間の名前を示す文字列。
3307,<code>generics</code>と並列するパッケージ名のベクトル。
3308,ライブラリを指定する文字ベクトル.
3309,論理.
3310,文字.
3311,文字.
3312,環境.
3313,3列の文字行列.
3314,文字.
3315,任意のオブジェクト.
3316,characterの引数。
3317,メソッドテーブル名.
3318,シンボル：ネームスペースの名前
3319,importから除外するシンボルを指定する文字ベクトル、特に<code>vars</code>がない場合に便利です。
3320,任意の解釈された<span style="font-family：Courier New, Courier; color：#"><b>R</b></span>関数です。
3321,ブラウザが入力されたときに取得できるテキスト文字列。
3322,ブラウザが入力された時に取得可能な条件。
3323,オプションのメソッドシグネチャです。指定された場合、そのメソッドは、ジェネリックではなく、デバッグされます。
3324,論理; サポート関数<code>debuggingState</code>の呼び出しは、デバッグがグローバルにオンになっていれば<code>TRUE</code>、それ以外は<code>FALSE</code>を返す。  引数にこれらの値のいずれか、または両方を指定すると、状態が設定されます。  デバッグ状態が<code>FALSE</code>の場合、デバッグ動作は一切行われません（ただし、関数内の明示的な<code>browser</code>呼び出しは引き続き動作します）。
3325,<code>raw</code>、<code>logical</code>または'number-like'ベクター（すなわち、<code>double</code>型（クラス<code>numeric</code>）、<code>integer</code>および<code>complex</code>）またはメソッドを記述したオブジェクト。
3326,文字列。  接続の説明: '詳細'を参照してください。
3327,文字列.  接続を開く方法(最初に開く必要がある場合)の説明。  可能な値については、「モード」セクションを参照してください。
3328,論理。  ブロッキング」セクションを参照してください。
3329,想定されるエンコーディングの名前です。  エンコーディング」セクションを参照してください。
3330,論理。  trueを指定すると、通常のファイルでない引数(キャラクタデバイスなど)に適した「raw」インターフェースが使用されます。  これは、テキストモードの読書用に開くときに圧縮ファイルのチェックを抑制し、「ファイル」がシーク可能でない可能性があることを表明する。
3331,文字列、<code>c("default", "internal", "wininet", "libcurl")</code> に部分的にマッチします:「詳細」参照。
3332,HTTPrequestsで使用するHTTPヘッダーの名前付き文字ベクトルです。  非HTTP URLの場合は無視されます。  <code>HTTPUserAgent</code> オプション (<code>options</code> を参照) から得られる <code>User-Agent</code> ヘッダーは、自動的に最初のヘッダーとして使われます。
3333,0-9の整数。  書き込み時に適用される圧縮の量を、なしから利用可能な最大値まで指定します。  <code>xzfile</code>の場合、負の値も可能です。「圧縮」セクションを参照してください。
3334,数値：この接続に使用されるタイムアウト（秒単位）です。  OSによっては、非常に大きな値をゼロとして扱うことがあるので注意してください：しかし、POSIX標準では、31日までの値をサポートすることを要求しています。
3335,オプションの文字ベクトル。現在、TCPソケットでは<code>"no-delay"</code>のみがサポートされています。
3336,ZIPファイル内のファイル名。
3337,文字列。  ポートのホスト名。
3338,整数。  TCPポート番号。
3339,論理。  ソケットはクライアントかサーバーのどちらであるか？
3340,コネクションをリッスンするサーバーソケットです。
3341,コネクションです。
3342,文字列。  現在、無視されています。
3343,文字列。  空または<code>"read"</code>または<code>"write"</code>、部分一致が許可されています。
3344,他のメソッドに渡される、または他のメソッドから渡される引数。
3345,文字列またはネームスペース環境。
3346,論理。
3347,環境。
3348,名前空間環境。
3349,文字ベクトル。
3350,オプションの文字ベクトル。
3351,名前空間環境。
3352,ロードするパッケージ/名前空間の名前を示す文字列。
3353,<code>generics</code>と並列するパッケージ名のベクトル.
3354,ライブラリを指定する文字ベクトル.
3355,論理.
3356,文字.
3357,文字.
3358,環境.
3359,3列の文字行列.
3360,文字.
3361,任意のオブジェクト.
3362,characterの引数。
3363,メソッドテーブル名.
3364,シンボル：ネームスペースの名前
3365,importから除外するシンボルを命名する文字ベクトル、特に<code>vars</code>がない場合に有用です。
3366,文字列または名前空間オブジェクト。
3367,アタッチする位置を指定する整数。
3368,<code>NULL</code>またはパッケージのオブジェクト<code>.Depends</code>に記録される依存関係の文字ベクトルです。
3369,ロードするパッケージ/名前空間の名前を指定する文字列。
3370,ライブラリ検索パスを指定する文字ベクトル。
3371,現在はパッケージのインストール時以外は無視されます。
3372,パッケージのインストール中以外は無視されます。
3373,論理; もし真なら、コードをロードした直後に停止する。
3374,<code>NULL</code>またはバージョン指定(<code>op</code>と<code>version</code>を成分とするリスト).
3375,logical:プログレスメッセージとエラーメッセージは抑制されるべきか？
3376,文字列または'名前'、パッケージの<code>as.symbol</code>を参照、例えば、<code>"stats"</code>など。
3377,文字ベクトル; <code>library</code>を参照して下さい.
3378,<code>loadNamespace</code>に渡される更なる引数。
3379,一日を指定するための数値。
3380,1日内の時間を指定する数値。端数秒が許される。
3381,変換に使用するタイムゾーン指定。<code>""</code>は現在のタイムゾーン、<code>"GMT"</code>はUTCです。  無効な値は、最も一般的にはUTCとして扱われ、いくつかのプラットフォームでは警告が表示されます。
3382,日を指定するための数値。
3383,1日内の時間を指定する数値。端数秒が許される。
3384,変換に使用するタイムゾーン指定。<code>""</code>は現在のタイムゾーン、<code>"GMT"</code>はUTCです。  無効な値は最も一般的にはUTCとして扱われ、プラットフォームによっては警告が表示される。
3385,文字列。  接続の説明：'詳細'を参照してください。
3386,文字列.  接続を開く方法(最初に開く必要がある場合)の説明。  可能な値については、「モード」セクションを参照してください。
3387,論理。  ブロッキング」セクションを参照してください。
3388,想定されるエンコーディングの名前です。  エンコード'セクションを参照。
3389,論理。  trueを指定すると、通常のファイルでない引数（キャラクタデバイスなど）に適した「raw」インターフェイスが使用されます。  これは、テキストモードでの読書用に開く際の圧縮ファイルのチェックを抑制し、「ファイル」がシーク可能でない可能性があることを表明する。
3390,文字列、<code>c("default", "internal", "wininet", "libcurl")</code> に部分的に一致します:「詳細」参照。
3391,HTTPrequestsで使用するHTTPヘッダーの名前付き文字ベクトルです。  非HTTP URLの場合は無視されます。  <code>HTTPUserAgent</code> オプション (<code>options</code> を参照) から得られる <code>User-Agent</code> ヘッダーは、自動的に最初のヘッダーとして使われます。
3392,0-9の整数値。  書き込み時に適用される圧縮の量を、なしから利用可能な最大値まで指定します。  <code>xzfile</code>の場合、負の値も可能です。「圧縮」セクションを参照してください。
3393,数値：この接続に使用されるタイムアウト（秒単位）です。  OSによっては、非常に大きな値をゼロとして扱うことがあるので注意してください：しかし、POSIX標準では、31日までの値をサポートすることを要求しています。
3394,オプションの文字ベクトル。現在、TCPソケットでは<code>"no-delay"</code>のみがサポートされています。
3395,ZIPファイル内のファイル名。
3396,文字列。  ポートのホスト名。
3397,整数。  TCPポート番号。
3398,論理。  ソケットはクライアントかサーバーのどちらであるか？
3399,コネクションをリッスンするサーバーソケットです。
3400,コネクションです。
3401,文字列。  現在、無視されています。
3402,文字列。  空または<code>"read"</code>または<code>"write"</code>、部分一致が許されます。
3403,他のメソッドに渡される、または他のメソッドから渡される引数。
3404,条件オブジェクト。
3405、呼び出し式。
3406,条件オブジェクト。
3407,評価される式。
3408.戻りまたは終了する前に評価される式。
3409、関数
3410、文字列。
3411、文字列。
3412,再始動に名前を付ける文字列。
3413,再始動オブジェクト。
3414,オブジェクト。
3415,条件クラスを指定する文字列。
3416,追加引数; 以下の詳細を参照。
3417,任意のRオブジェクト。
3418,オプション、論理：変換の方向を示す。
3419,オプション,論理：S3への変換が完了したかどうか。  通常は必要ありませんが、詳細セクションを参照してください。
3420,接続。
3421,数値。  ファイル位置（<code>origin</code>で指定された起点からの相対位置）、または<code>NA</code>。
3422,文字列.  空または<code>"read"</code>または<code>"write"</code>,部分一致が許される。
3423,文字列.  <code>"start"</code>, <code>"current"</code>, <code>"end"</code> のいずれか: '詳細'を参照.
3424,他のメソッドに渡される、または他のメソッドから渡される更なる引数。
3425,任意の<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクト; matrixメソッドのための<code>matrix</code>です.
3426,numeric scalar &gt;= 0. 小さい差は考慮されないので、<code>all.equal.numeric</code>を参照してください。
3427,numeric scalar &gt;= 0. <code>isSymmetric.matrix()</code>'pre-test' first and last few rows for fast detection of 'obviously' asymmetric cases with this tolerance.  長さ0に設定すると、事前テストはスキップされます。
3428,メソッドに渡される更なる引数; matrixメソッドはこれらを<code>all.equal</code>に渡します.  対称性チェックのために<code>object</code>の行名と列名が異なることが許される場合、<code>check.attributes = FALSE</code>を使用します！
3429,any <span style="font-family：Courier New, Courier; color：<b>R</b></span> オブジェクト; 行列法のための <code>matrix</code> です。
3430,numeric scalar &gt;= 0. 小さい差は考慮されない、<code>all.equal.numeric</code>を参照のこと。
3431,numeric scalar &gt;= 0. <code>isSymmetric.matrix()</code>'pre-test' first and last few rows for fast detection of 'obviously' asymmetric cases with this tolerance.  長さ0に設定すると、事前テストはスキップされます。
3432,メソッドに渡される更なる引数; matrixメソッドはこれらを<code>all.equal</code>に渡します.  対称性チェックのために<code>object</code>の行名と列名が異なることが許される場合、<code>check.attributes = FALSE</code>を使用します！
3433,<code>raw</code>、<code>logical</code>、または 'number-like' ベクトル（すなわち、タイプ <code>double</code> (class <code>numeric</code>), <code>integer</code> and <code>complex</code> ）、またはそのための方法が書かれたオブジェクトがあります。
3434,数値ベクトル <em>jitter</em> が追加されるべきです。
3435,数値.
3436,数値; 正の場合、<em>amount</em> (下記参照)として使用され、それ以外の場合、<code>= 0</code> の場合、デフォルトは <code>factor * z/50</code> です.

3437,デフォルト(<code>NULL</code>)：<code>factor * d/5</code> ここで、<code>d</code>は<code>x</code>の値の間の最小の差についてです。
3438,クラス <code>"POSIXt"</code> または <code>"Date"</code> を継承したオブジェクトです。
3439,論理ベクトル（リサイクルされる可能性があります）。  名前は省略されるべきですか？
3440,クラス<code>"POSIXt"</code>または<code>"Date"</code>を継承した長さ1オブジェクト。
3441,他のメソッドの引数。
3442,クラス<code>"POSIXt"</code>または<code>"Date"</code>から継承されたオブジェクトです。
3443,論理ベクトル（おそらくリサイクルされる）。  名前は省略されるべきですか？
3444,クラス<code>"POSIXt"</code>または<code>"Date"</code>を継承した長さ1オブジェクト。
3445、他のメソッドのための引数。
3446,クラス<code>"POSIXt"</code>または<code>"Date"</code>から継承されたオブジェクトです。
3447,論理ベクトル（リサイクルされる可能性があります）。  名前は省略されるべきですか？
3448,クラス<code>"POSIXt"</code>または<code>"Date"</code>を継承した長さ1オブジェクト。
3449,他のメソッドのための引数。
3450,行列、<code>qr</code>の結果、または<code>"lm"</code>から継承されたクラスからのフィット.
3451,論理的である。  結果は正確であるべきですか？
3452,文字列、条件番号が計算される行列ノルムを指定する、<code>norm</code>も参照。  <code>rcond</code> の場合、デフォルトは <code>"O"</code> で、これは <b>O</b>ne- または 1-norm を意味します。  現在唯一の）他の可能な値は、無限大ノルムを意味する<code>"I"</code>である。
3453,使用する方法を指定する部分一致の文字列;<code>"qr"</code>は主にバックコンパチビリティのためのデフォルトである.
3454,論理的である。  trueの場合、使用される行列は<code>z</code>の低三角形部分だけです.
3455,logical。  もしtrueで<code>z</code>が複素数でなければ、LINPACKルーチン<code>dtrco()</code>が呼ばれ、そうでなければ関連するLAPACKルーチンが呼ばれます。
3456,他のメソッドに渡される、または他のメソッドから渡される更なる引数; <code>kappa.*()</code> の場合、特に <code>norm</code> が <code>"2"</code> ではない時に <code>LINPACK</code> が呼ばれます.
3457,行列、<code>qr</code>の結果、または<code>"lm"</code>を継承したクラスからのフィット。
3458,論理的である。  結果は正確であるべきですか？
3459,文字列、条件番号が計算される行列ノルムを指定する、<code>norm</code>も参照。  <code>rcond</code> の場合、デフォルトは <code>"O"</code> で、これは <b>O</b>ne- または 1-norm を意味します。  現在唯一の）他の可能な値は、無限大ノルムを意味する<code>"I"</code>である。
3460,使用する方法を指定する部分一致の文字列;<code>"qr"</code>は主にバックコンパチビリティのためのデフォルトである.
3461,論理的である。  trueの場合、使用される行列は<code>z</code>の低三角形部分だけです.
3462,logical.  もしtrueで<code>z</code>が複素数でなければ、LINPACKルーチン<code>dtrco()</code>が呼ばれ、さもなければ関連するLAPACKルーチンが呼ばれます。
3463,他のメソッドに渡される、または他のメソッドから渡される更なる引数; <code>kappa.*()</code> の場合、特に <code>norm</code> が <code>"2"</code> ではないとき、<code>LINPACK</code> が呼ばれます.
3464,行列、<code>qr</code>の結果、または<code>"lm"</code>を継承したクラスからのフィット。
3465,論理的である。  結果は正確であるべきですか？
3466,文字列、条件番号を計算するための行列ノルムを指定する、<code>norm</code>も参照。  <code>rcond</code> の場合、デフォルトは <code>"O"</code> で、これは <b>O</b>ne- または 1-norm を意味します。  現在唯一の）他の可能な値は、無限大ノルムを意味する<code>"I"</code>である。
3467,使用する方法を指定する部分一致の文字列;<code>"qr"</code>は主にバックコンパチビリティのためのデフォルトである。
3468,論理的です。  trueの場合、使用される行列は<code>z</code>の低三角形部分だけです.
3469,logical.  もしtrueで<code>z</code>が複素数でなければ、LINPACKルーチン<code>dtrco()</code>が呼ばれ、さもなければ関連するLAPACKルーチンが呼ばれます。
3470,他のメソッドに渡される、または他のメソッドから渡される更なる引数; <code>kappa.*()</code> の場合、特に <code>norm</code> が <code>"2"</code> ではないとき、<code>LINPACK</code> が呼ばれます.
3471,行列、<code>qr</code>の結果、または<code>"lm"</code>を継承したクラスからのフィット。
3472,論理的である。  結果は正確であるべきですか？
3473,文字列、条件番号が計算される行列ノルムを指定する、<code>norm</code>も参照。  <code>rcond</code> の場合、デフォルトは <code>"O"</code> で、これは <b>O</b>ne- または 1-norm を意味します。  現在唯一の）他の可能な値は、無限大ノルムを意味する<code>"I"</code>である。
3474,使用する方法を指定する部分一致の文字列;<code>"qr"</code>は主にバックコンパチビリティのためのデフォルトである.
3475,論理的である。  trueの場合、使用される行列は<code>z</code>の低三角形部分だけです。
3476,論理的である。  もしtrueで<code>z</code>が複素数でなければ、LINPACKルーチン<code>dtrco()</code>が呼ばれ、さもなければ関連するLAPACKルーチンが呼ばれます。
3477,他のメソッドに渡される、または他のメソッドから渡される更なる引数。<code>kappa.*()</code>については、<code>norm</code>が<code>"2"</code>ではない場合に特に<code>LINPACK</code>。
3478,ベクトルまたは配列
3479,ベクトルまたは配列。
3480,関数。引用符で囲まれた文字列であってもよい。
3481,<code>X</code>と<code>Y</code>のdimnamesの積であるdimnamesを提供する。
3482,<code>FUN</code>に渡されるオプションの引数。
3483,SVD分解が計算される数値または複素行列。  論理行列は数値に強制されます.
3484,計算される左特異ベクトルの数。これは <code>0</code> から <code>n = nrow(x)</code> の間でなければなりません.
3485,計算される右特異ベクトルの数。これは<code>0</code>から<code>p = ncol(x)</code>の間でなければなりません.
3486,論理的です。  デファクトでエラーになります。
3487,任意の<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクト：この関数は汎用的です。
3488,他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
3489,任意の<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクト: 関数は一般的です。
3490,他のメソッドに渡される、または他のメソッドから渡される更なる引数。
3491,ベクトル（アトミックまたはリスト）または<code>expression</code>オブジェクト。  その他のオブジェクト（クラス化されたオブジェクトを含む）は、<code>base::as.list</code>によって強制される。
3492,<code>X</code>の各要素に適用される関数: '詳細'を参照して下さい。  <code>+</code>、<code>%*%</code>のような関数の場合、関数名はバッククォートまたはクォートされなければならない。
3493,<code>FUN</code>のオプション引数.
3494,論理または文字列; 可能であれば、結果はベクトル、行列または高次元配列に簡略化されるべきか？  <code>sapply</code> では、省略せずに名前を付けなければなりません。デフォルト値の <code>TRUE</code> は、適切であればベクトルや行列を返しますが、もし <code>simplify = "array"</code> であれば、結果は <code>FUN(X[[i]])</code> の結果より一つ上の "rank"(<i>=</i><code>length(dim(.)) </code>) である可能性があります(<cd>配列</code>) 。
3495,logical; <code>TRUE</code> かつ <code>X</code> が文字の場合、<code>X</code> が既に名前を持っていない限り、結果の <code>names</code> として使用します。  この引数は<code>...</code>に続くので、その名前は省略することができない。
3496,a (generalized) vector; FUNからの戻り値のテンプレートです。  詳細'を参照。
3497,整数: 複製数.
3498,繰り返し評価する式(言語オブジェクト、通常はコール)。
3499,リスト。通常は<code>lapply()</code>から返されます。
3500,論理; もし真なら、<code>simplify2array()</code>は適切な時に("高位")配列を生成し、一方<code>higher = FALSE</code> は行列（またはベクトル）だけを返す。この二つのケースはそれぞれ <code>sapply(*, simplify = "array")</code> または <code>simplify = TRUE</code> と一致します.
3501,データベースへのファイルパスで、拡張子はありません。
3502,オブジェクトがロードされる環境。
3503,オブジェクト名の文字ベクトルで呼び出されると、論理ベクトルを返すオプションの関数です。
3504,引数1つで、環境を指定する関数。
3505,データベースへのファイルパス（拡張子なし）。
3506,オブジェクトがロードされる環境。
3507,オプションの関数で、オブジェクト名の文字ベクトルで呼ばれると、論理ベクトルを返します。
3508,1つの引数、環境を持つ関数。
3509,オブジェクト

3510,そこから要素を抽出する。
3511,<code>"row.names"</code>属性を持つ、典型的なデータ・フレーム。
3512,通常、S3-またはS4-クラスです。
3513,パッケージの<span class="file">DESCRIPTION</span> ファイルへのフルパス。
3514,lazyloadデータベースのファイルパス。
3515,<span style="font-family." の位置を記述する文字ベクトル：Courier New, Courier; color：#"><b>R</b></span>ライブラリツリーを検索する場所、または<code>NULL</code>を指定します。  デフォルトの<code>NULL</code>は、<code>.libPaths()</code>で現在知られているすべてのライブラリに対応します。
3516,論理的です。  パッケージが見つからない場合、警告やエラーを与えるべきではないですか？
3517,論理的。  <code>Imports</code> フィールドは処理されるべきですか？
3518,論理的: メッセージ(複数可)を出力すべきですか?
3519,クラス<code>"packageDescription2"</code>の処理された'<span class="file">DESCRIPTION</span>' ファイルです。
3520,<code>"cpu-vendor-os"</code>という形式のプラットフォーム文字列です。
3521,保存またはロードする画像ファイル名.
3522,整数.  現在、<code>type = 0</code>は内部の<code>"row.names"</code>属性（場合によっては<code>NULL</code>）を返し、 <code>type = 2</code> は属性が意味する行数、 <code>type = 1</code> は負符号付きの行名「自動的に」返す。
3523,integer.  行の数.
3524,<code>"package:MASS"</code>のような文字列。
3525,lazyloadデータベースのオブジェクト名。
3526,論理：データベース内の値は圧縮されているか？
3527,ロードフック: <code>unserialize</code>を参照して下さい。
3528,長さ一の整数ベクトル。
3529,インデックス.
3530,論理。
3531,an <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>オブジェクト。
3532,クラスに入れるクラスレスオブジェクト。
3533,オプションのタイムゾーン。
3534,デフォルトのクラスを<em>含む</em>クラスのオプションの文字ベクトルである。
3535,<code>difftime</code>を参照。
3536,ドットネームでないバージョンに渡される引数。
3537,整数です。
3538,<em>同じ</em>オブジェクトの文字ベクトルで、他をマスクする。
3539,マスクされるパッケージの名前を示す文字列。
3540,マスクが<em>by</em><code>pkg</code>、または(<code>by = FALSE</code>) <code>pkg<code>から起こるかを示す論理です.
3541,非負数値ベクトル.
3542,数値ベクトル。
3543,整数ベクトル
3544,非負の数値ベクトル。
3545,数値ベクトル.
3546,整数ベクトル.
3547,アン <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクト。  置き換えの場合は、ベクトルや因子を指します。
3548,非負の整数またはdouble（切り捨てられる）。
3549,date-timeクラスの1つから、印刷または要約されるオブジェクトです。
3550,タイムゾーンフォーマットのために、<code>format.POSIXct</code>に渡されます。
3551,数値または<code>NULL</code>で、印刷されるエントリの最大数を指定します。  デフォルトでは、<code>NULL</code>の時、<code>getOption("max.print")</code>が使用されます。
3552,計算の有効桁数:最も重要な時間単位を正確に表現するのに十分な桁数でなければならない。
3553,他のメソッドから、または他のメソッドに渡される更なる引数。
3554,日付-時間オブジェクト
3555,日付-時間オブジェクトまたは文字ベクトル。  (文字ベクトルは<code>as.POSIXct</code>で変換されます)。
3556,数値ベクトル(秒単位)
3557,<code>==</code>、<code>!=</code>、<code>&lt;</code>、<code>&lt;=</code>または<code>&gt;=</code>のいずれか1つ。
3558,アン<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトです。  置き換えの場合は、ベクトルや因子。
3559,非負の整数またはdouble（切り捨てられる）。
3560,要約または印刷される<code>Date</code>オブジェクト。
3561,計算のための有効桁数。
3562,数値または<code>NULL</code>で、印刷されるエントリーの最大数を指定する。  デフォルトでは、<code>NULL</code>の場合、<code>getOption("max.print")</code>が使用されます.
3563,他のメソッドから、または他のメソッドに渡される更なる引数。
3564,date-timeまたはdateオブジェクト。
3565,変換に使用されるオプションのタイムゾーン指定、主に<code>"POSIXlt"</code>オブジェクトの場合。
3566,文字列。  変換結果の単位を指定します。  省略可能です。
3567,文字列.  <code>units</code>と同様ですが、省略は不可です。
3568,時間間隔を指定する文字列または数値。
3569,<code>tim</code>のフォーマットを指定する文字：<code>strptime</code>を参照。  デフォルトは、ロケール固有の時間フォーマットである。
3570,クラス<code>"difftime"</code>を継承したオブジェクトです。
3571,他のメソッドに渡す、または他のメソッドから渡される引数。
3572,an <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトです。  置き換えの場合は、ベクトルや因子。
3573,非負の整数またはdouble（切り捨てられる）。
3574,date-timeクラスの1つから、印刷または要約されるオブジェクト。
3575,タイムゾーンフォーマットのために、<code>format.POSIXct</code>に渡されます。
3576,数値または<code>NULL</code>で、印刷されるエントリの最大数を指定します。  デフォルトでは、<code>NULL</code>の時、<code>getOption("max.print")</code>が使用されます。
3577,計算の有効桁数:最も重要な時間単位を正確に表現するのに十分な桁数でなければならない。
3578,他のメソッドから、または他のメソッドに渡される更なる引数。
3579,日付-時間オブジェクト
3580,日付-時間オブジェクトまたは文字ベクトル。  (文字ベクトルは<code>as.POSIXct</code>で変換されます)。
3581,数値ベクトル(秒単位)
3582,<code>==</code>、<code>!=</code>、<code>&lt;</code>、<code>&lt;=</code>または<code>&gt;=</code>のいずれか一つ。
3583,date-timeクラスの1つから印刷または要約されるオブジェクトを指定します。
3584,タイムゾーンフォーマットのために、<code>format.POSIXct</code>に渡されます。
3585,数値または<code>NULL</code>で、印刷されるエントリの最大数を指定します。  デフォルトでは、<code>NULL</code>の時、<code>getOption("max.print")</code>が使用されます。
3586,計算の有効桁数：最も重要でない時間単位を正確に表すのに十分な桁数であるべきです。
3587,他のメソッドから、または他のメソッドに渡される更なる引数。
3588,日付-時間オブジェクト
3589,日付-時間オブジェクトまたは文字ベクター。  (文字ベクトルは<code>as.POSIXct</code>で変換されます。)
3590,数値ベクトル(秒単位)
3591,<code>==</code>、<code>!=</code>、<code>&lt;</code>、<code>&lt;=</code>、<code>&gt;</code>または<code>&gt;=</code>から一つを選ぶ。
3592,<code>list</code>、<code>expression</code>やatomic vector（結果が些細なもの）などのリストのようなものです。
3593,結果が<code>x</code>から<code>names</code>を継承すべきかどうかを示す論理。
3594,オブジェクト(例えば因子)。
3595,<code>levels(x)</code>の有効な値。デフォルトのメソッドでは、<code>NULL</code>または文字ベクトルです。  <code>factor</code>メソッドの場合、<code>x</code>のレベルの数以上の長さを持つ文字列のベクトル、またはレベルの名前の付け方を指定する名前付きリスト。
3596,オブジェクト、例えば係数。
3597,<code>levels(x)</code>の有効な値。デフォルトのメソッドでは、<code>NULL</code>または文字ベクトルです。  <code>factor</code>メソッドの場合、<code>x</code>のレベルの数以上の長さを持つ文字列のベクトル、またはレベルの名前を変更する方法を指定する名前付きリストです。
3598,オブジェクト、例えば、係数。
3599,<code>levels(x)</code>の有効な値。デフォルトのメソッドでは、<code>NULL</code>または文字ベクトルです。  <code>factor</code>メソッドの場合、<code>x</code>のレベルの数以上の長さを持つ文字列のベクトル、またはレベルの名前の付け方を指定する名前付きリスト。
3600,オブジェクト、例えば、係数。
3601,<code>levels(x)</code>の有効な値。デフォルトのメソッドでは、<code>NULL</code>または文字ベクトルです。  <code>factor</code>メソッドの場合、<code>x</code>のレベルの数以上の長さを持つ文字列のベクトル、またはレベルの名前の付け方を指定する名前付きリスト。
3602,非負数値ベクトル.
3603,数値ベクトル.
3604,整数ベクトル.
3605,非負の数値ベクトル。
3606,数値ベクトル。
3607,整数ベクトル。
3608,パッケージの名前。<code>character.only</code>が<code>FALSE</code>（デフォルト）か<code>TRUE</code>かによって、名前か文字列、または文字列として与えられる。
3609,ロードされた名前空間をアタッチする検索リスト上の位置。  <code>search()</code>によって与えられる現在の検索リスト上の位置の名前でもよい。
3610,a character vector describing the location of <span style="font-family：Courier New, Courier; color：<br>R</b></span>Library Treeを検索する場所を記述する文字ベクトル、または<code>NULL</code>です。  デフォルトの<code>NULL</code>は、現在<code>.libPaths()</code>で知られているすべてのライブラリに対応します。
3611,<code>package</code>または<code>help</code>が文字列であると仮定することができるかどうかを示す論理である。
3612,論理的である。  <code>TRUE</code>であれば<code>FALSE</code>、<code>TRUE</code>であれば成功を表す値が返却される。
3613,論理的である。  <code>TRUE</code>の場合、newpackageのアタッチによる<code>conflicts</code>について警告が表示される。  競合とは、関数をマスクする関数、または非関数をマスクする非関数のことです。デフォルトは、<code>conflicts.policy</code>オプションで<code>FALSE</code>として指定されない限り、<code>TRUE</code>です。
3614,a論理的である。  <code>TRUE</code>の場合、追加の診断が印刷されます。
3615,a論理。  <code>TRUE</code>の場合、パッケージの取り付けを確認するメッセージは表示されず、多くの場合、パッケージの取り付けに失敗してもエラー/警告は表示されない。
3616,パッケージの名前を示す文字列。
3617,ストリクトコンフリクトチェックが有効な場合に、エラーを出さずに検索パス上のオブジェクトをマスクできるオブジェクトの名前の文字ベクトルです。
3618,添付フレームに除外または含めるオブジェクトの名前の文字ベクトル。これらの引数は、<code>library</code>または<code>require</code>の呼び出しで1つだけ使用することができる。
3619,<code>DESCRIPTION</code>ファイルの<code>Depends</code>句にリストされた必須パッケージが、自動的に添付されるべきかどうかを指定する論理です。
3620,ロードするDLL（dynamicshared objectまたはlibraryとしても知られている）を名指す文字列です。
3621,パッケージの名前を示す文字ベクトル。
3622,a character vector describing the location of <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>library ツリーを検索するためのものです。
3623,DLLがアンロードされるロードされたパッケージへのパス。
3624,DLLをロードする前にコンソールにアナウンスを表示するかどうかを示す論理値です。  デフォルト値は、システムの<code>options</code>のverboseエントリから取得されます。
3625,ロードするライブラリを指定するためにファイル名に付加する拡張子（使用されている場合は<span class="samp">.</span> を含む）です。  デフォルトは、オペレーティングシステムに適した値です。
3626,ライブラリとその依存関係のロード方法を制御するために <code>dyn.load</code> の呼び出しに渡される、一部のライブラリで必要とされる追加の引数です。
3627,パッケージによってロードされたDLLに対応する<code>"DLLInfo"</code>オブジェクトのリストです。  欠落していることもあります。
3628,ロードするDLL（dynamicshared objectまたはlibraryとしても知られている）を命名する文字列です。
3629,パッケージの名前を持つ文字ベクトル。
3630,a character vector describing the location of <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>library ツリーを検索するためのものです。
3631,DLLがアンロードされるロードされたパッケージへのパス。
3632,DLLをロードする前にコンソールにアナウンスを表示するかどうかを示す論理値です。  デフォルト値は、システムの<code>options</code>のverboseエントリから取得されます。
3633,ロードするライブラリを指定するためにファイル名に付加する拡張子（使用されている場合は<span class="samp">.</span>を含む）です。  デフォルトは、オペレーティングシステムに適した値です。
3634,ライブラリとその依存関係のロード方法を制御するために <code>dyn.load</code> の呼び出しに渡される、一部のライブラリで必要とされる追加の引数です。
3635,パッケージによってロードされたDLLに対応する<code>"DLLInfo"</code>オブジェクトのリストです。  欠落していることもある。
3636,オブジェクト、名前付きである可能性がある。
3637,強制されるかテストされるオブジェクト。
3638,全ての値をコピーするか(デフォルト)名前がドットで始まらないものだけをコピーするかを示す論理です。
3639,結果のリストの<code>names</code>がソートされるべきかどうかを示す論理です（ますます）。  これはややコストがかかるが、環境の比較には有用であることに注意されたい。
3640,フルパス名の文字ベクトル; デフォルトは作業ディレクトリに対応する <code>getwd()</code>.  チルド展開（<code>path.expand</code>参照）が実行されます。  欠落した値は無視されます。  マークされたエンコーディングの要素は、ネイティブエンコーディングに変換されます（変換に失敗した場合は、非存在とみなされます）。
3641,オプションの正規表現です。  正規表現に一致するファイル名のみが返されます。
3642,論理値。  <code>FALSE</code>の場合、可視ファイルの名前のみが返されます（Unixスタイルの可視性、つまり名前がドットで始まらないファイル）。  <code>TRUE</code>の場合、すべてのファイル名が返されます。
3643,論理値です。  <code>TRUE</code>の場合、ファイル名の前にディレクトリパスが付加され、相対的なファイルパスとなります。
3644,論理的です。  リストはディレクトリに再帰するか？
3645,論理的。  パターン・マッチは大文字と小文字を区別しないようにするか？
3646,論理的  再帰的なリストにはサブディレクトリ名を含めるべきですか？  (再帰的でないリストでは常に含まれます)。
3647,論理的。  <code>"."</code>と<code>"."</code>の両方は、非再帰的なリストからも除外されるべきか？
3648,フルパス名の文字ベクトル; デフォルトは作業ディレクトリに対応する <code>getwd()</code>.  チルド展開(<code>path.expand</code>参照)が実行されます。  欠落した値は無視されます。  マークされたエンコーディングの要素は、ネイティブエンコーディングに変換されます（変換に失敗した場合は、非存在とみなされます）。
3649,オプションの正規表現です。  正規表現に一致するファイル名のみが返されます。
3650,論理値です。  <code>FALSE</code>の場合、可視ファイルの名前のみが返されます（Unixスタイルの可視性、つまり名前がドットで始まらないファイル）。  <code>TRUE</code>の場合、すべてのファイル名が返されます。
3651,論理値です。  <code>TRUE</code>の場合、ファイル名の前にdirectorypathが付加され、相対ファイルパスが与えられる。<code>FALSE</code>の場合、（パスではなく）ファイル名が返される。
3652,論理的です。  リストがディレクトリに再帰するか？
3653,論理的。  パターン・マッチは、大文字と小文字を区別しないようにするか。
3654,論理的  再帰的なリストにはサブディレクトリ名を含めるべきか？  (再帰的でないリストでは常に含まれる)。
3655,論理的である。  <code>"."</code>と<code>"."</code>の両方は、非再帰的なリストからも除外されるべきですか？
3656,データフレーム用の変数のリスト。
3657,データフレームの行数を示す整数、または<code>NULL</code>(デフォルト)、この場合リストの要素の最大長が使用され、この場合、リストの要素の最大長が使用されます。  必要であれば、リストの要素は、行数で与えられたのと同じ長さに複製されます。
3658,<code>list</code>で、<code>names(x)</code>は空(<code>""</code>)の要素を含んではならない。
3659,<code>environment</code>または<code>NULL</code>.
3660,(for the case <code>envir = NULL</code>): 親フレーム、別名閉鎖環境、 <code>new.env</code> を参照して下さい。
3661,(for the case <code>envir = NULL</code>): 作成された環境がハッシュを使用するかどうかを示す論理、 <code>new.env</code> を参照してください。
3662,(in the case <code>envir = NULL, hash = TRUE</code>): ハッシュのサイズ、 <code>new.env</code> を参照して下さい.
3663,（読み取り可能なバイナリモードの）接続、またはロードするファイル名を与える文字列（チルダ展開が行われた場合）。
3664,データを読み込むべき環境。
3665,ロード中に項目名を表示するか？
3666,文字列または名前空間オブジェクト。
3667,アタッチする位置を指定する整数値。
3668,<code>NULL</code>またはパッケージのオブジェクト<code>.Depends</code>に記録される依存関係の文字ベクトルです。
3669,ロードするパッケージ/名前空間の名前を指定する文字列。
3670,ライブラリ検索パスを指定する文字ベクトル。
3671,パッケージのインストール時以外は無視されるようになった。
3672,パッケージのインストール中以外は無視されます。
3673,論理; もし真なら、コードをロードした直後に停止する。
3674,<code>NULL</code>またはバージョン指定(<code>op</code>と<code>version</code>の構成要素を持つリスト).
3675,logical:進行状況とエラーメッセージを抑制すべきか？
3676,文字列または'名前'、パッケージの<code>as.symbol</code>を参照、例えば、<code>"stats"</code>のように。
3677,文字ベクトル; <code>library</code>を参照して下さい.
3678,<code>loadNamespace</code>に渡される更なる引数。
3679,文字列または名前空間環境。
3680,論理的です。
3681,環境。
3682,名前空間環境。
3683,文字ベクトル。
3684,オプションの文字ベクトル。
3685,名前空間環境。
3686,ロードするパッケージ/ネームスペースの名前を示す文字列。
3687,<code>generics</code>と並列するパッケージ名のベクトル。
3688,ライブラリを指定する文字ベクトル.
3689,論理。
3690,文字.
3691,文字
3692,環境.
3693,3列の文字行列.
3694,文字.
3695,任意のオブジェクト。
3696,character引数。
3697,メソッドテーブル名.
3698,シンボル：ネームスペースの名前
3699,importから除外するシンボルを命名する文字ベクトル、特に<code>vars</code>がない場合に有用です。
3700,文字列または名前空間オブジェクト。
3701,アタッチする位置を指定する整数値。
3702,<code>NULL</code>またはパッケージのオブジェクト<code>.Depends</code>に記録される依存関係の文字ベクトルです。
3703,ロードするパッケージ/名前空間の名前を指定する文字列。
3704,ライブラリ検索パスを指定する文字ベクトル。
3705,現在はパッケージのインストール時以外は無視される。
3706,パッケージのインストール中以外は無視されます。
3707,論理; もし真なら、コードをロードした直後に停止する。
3708,<code>NULL</code>またはバージョン指定(<code>op</code>と<code>version</code>を成分とするリスト).
3709,logical:進捗状況やエラーメッセージを抑制するか？
3710,文字列または'名前'、パッケージの<code>as.symbol</code>を参照、例えば、<code>"stats"</code>など。
3711,文字ベクトル; <code>library</code>を参照して下さい.
3712,<code>loadNamespace</code>に渡される更なる引数。
3713,評価されるオブジェクト。  詳細'を参照。
3714,<code>expr</code>が評価される<code>environment</code>を指定します。  <code>NULL</code>、リスト、データフレーム、ペアリスト、または<code>sys.call</code>に指定された整数であってもよい。
3715,<code>envir</code>が(ペア)リストまたはデータフレームである場合に関連します：Courier New, Courier; color：<b>R</b></span> が <code>envir</code> で見つからないオブジェクトを探す場所です。  これは<code>NULL</code>（ベースパッケージの環境、<code>baseenv()</code>と解釈）または環境です。
3716,遡る親世代数
3717,環境を指定します。
3718,バインディングがロックされるべきかどうかを指定する論理。
3719,名前オブジェクトまたは文字列。
3720,0個または1個の引数を取る関数です。
3721,環境。
3722,バインディングがロックされるべきかどうかを指定する論理。
3723,名前オブジェクトまたは文字列。
3724,0個または1個の引数を取る関数です。
3725,数値または複素数ベクトル。
3726,正数または複素数: 対数計算の基準となる底を指定します。  デフォルトは <i>e</i>=<code>exp(1)</code> です。
3727,数値または複素数のベクトル。
3728,正数または複素数：対数が計算される基数.  デフォルトは<i>e</i>=<code>exp(1)</code>です.
3729,数値または複素数のベクトル。
3730,正数または複素数: 対数計算の基準となる基数.  デフォルトは<i>e</i>=<code>exp(1)</code>です.
3731,数値または複素数のベクトル。
3732,正数または複素数: 対数計算の基準となる基数.  デフォルトは<i>e</i>=<code>exp(1)</code>です。
3733,数値または複素数のベクトル。
3734,正数または複素数: 対数計算の基準となる基数.  デフォルトは<i>e</i>=<code>exp(1)</code>です。
2倍値は整数に強制されます。1以外の長さの引数を与えることはエラーです。
3736,強制される、またはテストされるオブジェクト。
3737,他のメソッドに渡される、または他のメソッドから渡される追加の引数。
3738,行列または他の<span style="font-family：Courier New, Courier; color：<code>length(dim(x)) == 2</code>を持つ<b>R</b></span>オブジェクト。下位互換性の理由から、上記を満たさない場合、<code>as.matrix(x) </code> が最初に呼ばれます.
3739,論理的です。  対角線を含めるべきか？
3740,利用可能なオブジェクトをリストアップする際にどの環境を使用するか.デフォルトは<em>current</em>環境です.  互換性のために<code>name</code>と呼ばれていますが、実際にはこの引数は任意の形式で環境を指定することができます; 「詳細」セクションを参照してください。
3741,検索リストの位置として環境を指定するための<code>name</code>に代わる引数です。  主にバックコンパチビリティのために存在します。
3742,環境を指定するための<code>name</code>の代替となる引数です。  主に互換性のために存在します。
3743,論理値です。  <code>TRUE</code>の場合、全てのオブジェクト名が返されます。  <code>FALSE</code>の場合、<span class="samp">.</span> から始まる名前は省略されます。
3744,オプションの正規表現です。  <code>pattern</code>にマッチする名前のみが返されます。  <code>glob2rx</code>はワイルドカードパターンを正規表現に変換するために使用される。
3745,結果の<code>character</code>がアルファベット順にソートされるべきかどうかを示す論理。  これは<code>ls()</code>の一部であり、ほとんどの時間を要するかもしれないことに注意してください。
3746,構文的に有効な名前に強制される文字ベクトル。  これは、必要に応じて文字に強制される。
3747,論理; <code>TRUE</code>の場合、結果の要素は一意である。  これは、例えば、カラム名のために望まれるかもしれない。
3748,logical。  との互換性のために、<span style="font-family：Courier New, Courier; color：1.9.0以前の<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> との互換性のため。
3749,文字ベクトル
3750,重複名とシーケンス番号の区切りに使われる文字列。
3751は、環境である。
3752,バインディングをロックするかどうかを指定する論理。
3753,名前オブジェクトまたは文字列。
3754、0個または1個の引数を取る関数。
3755,適切なアリティの関数（<code>Reduce</code>ではバイナリ、<code>Filter</code>, <code>Find</code> and<code>Position</code> ではウナリ、<i>k</i>引数を伴って呼ばれた場合は <code>Map</code> では <i>k</i>-アリ）.  <code>Negate</code>のための任意の述語関数.
3756,ベクトル.
3757,<span style="font-family：Courier New, Courier; color：<code>x</code> の要素と同じ種類の<b>R</b></span>オブジェクトである。
3758,左から右へ進むか(デフォルト)、右から左へ進むかを示す論理である。
3759,連続する縮小結合を累積するかどうかを示す論理である。  デフォルトでは、最後の組み合わせのみが使用される。
3760,「no match」（述語を満たす要素がない）が見つかった場合に返される値。
3761,ベクター。
3762,適用する関数。<code>match.fun</code>で見つかります。
3763,ベクトル化する引数(厳密に正の長さのベクトルまたはリスト、またはすべてゼロの長さ).  詳細'も参照して下さい。
3764,ベクトル化する引数の<code>list</code>または<code>pairlist</code>、上記の<code>...</code>を参照してください.
3765,<code>FUN</code>の他の引数のリスト.
3766,論理または文字列; 結果をベクトル、行列または高次元の配列に縮小しようとします; <code>sapply</code> の <code>simplify</code> 引数を参照してください.
3767,logical;最初の...引数の名前を使用するか、それが無名の文字ベクトルである場合、そのベクトルを名前として使用します。
3768,配列
例えば、行列の場合、<code>1</code>は行、<code>2</code>は列、<code>c(1, 2)</code> は行と列を示します。<code>x</code>がdimnamesという名前を持つ場合、それは次元名を選択するキャラクターベクトルとなることができます.
3770は配列
例えば、行列の場合、<code>1</code>は行、<code>2</code>は列、<code>c(1, 2)</code> は行と列を示します。<code>x</code>が名前付きdimnamesを持つ場合、それは次元名を選択するためのキャラクターベクトルとすることができます。
3772,行と列の数。
3773,vectorまたは<code>NULL</code>：マッチする値。長いベクトルがサポートされています。
3774,vectorまたは<code>NULL</code>：マッチングされる値.ロングベクターはサポートされていません。
3775,一致しない場合に返される値です。  これは<code>integer</code>に強制されることに注意してください。
3776,マッチングできない値のベクトルである。  このベクトル内の値と一致する<code>x</code>の値は、<code>nomatch</code>値が割り当てられます。  歴史的な理由から、<code>FALSE</code>は<code>NULL</code>と等価である。
3777,文字ベクトル（<code>several.ok</code>が<code>TRUE</code>でなければ長さ1）または<code>NULL</code>.
3778,候補値の文字ベクトル
3779,<code>arg</code>が複数の要素を持つことを許可されるべきかどうかを指定する論理。
3780,関数、デフォルトでは<code>match.call</code>が呼び出される関数です。  詳細を参照してください。
3781,<code>call</code>によって生成される、<code>definition</code>によって指定される関数への評価されない呼び出し。
3782,論理的である。  呼び出しの中で<code>...</code>にマッチする引数は、<code>...</code>の引数として含まれるべきか、残すべきか。
3783,環境。<code>call</code>の<code>...</code>があれば、そこから取得されるもの。
3784,関数としてマッチする項目：関数、シンボル、文字列。  詳細'を参照のこと。
3785,logical;機能でないオブジェクトを過去に検索するかどうかを制御する。
3786,オブジェクト。
3787,メソッドに渡される更なる引数。
3788,logical:欠損値を削除すべきか？
3789,要約または印刷される<code>Date</code>オブジェクト。
3790,計算のための有効桁数。
3791,数値または<code>NULL</code>で、印刷されるエントリの最大数を指定します。  デフォルトでは、<code>NULL</code>の場合、<code>getOption("max.print")</code>が使われます。
3792,他のメソッドから、または他のメソッドに渡される更なる引数。
3793,date-timeまたはdateオブジェクト。
3794,変換に使用されるオプションのタイムゾーン指定、主に<code>"POSIXlt"</code>オブジェクトの場合。
3795,文字列。  結果の単位を指定します。  省略可能です。
3796,文字列.  <code>units</code>と同様ですが、省略は不可です。
3797,時間間隔を指定する文字列または数値。
3798,<code>tim</code>のフォーマットを指定する文字：<code>strptime</code>を参照して下さい。  デフォルトは、ロケール固有の時間フォーマットである。
3799,クラス<code>"difftime"</code>を継承したオブジェクトです。
3800,他のメソッドに渡す、または他のメソッドから渡される引数。
3801,データのベクトルで、通常、少数の異なる値を取る。
3802,<code>x</code>が取ったかもしれないユニークな値(文字列として)のオプションのベクトル.  デフォルトは、<code>as.character(x)</code>が取った値のユニークなセットで、<em>の<code>x</code></em>の昇順にソートされます。  このセットは、<code>sort(unique(x))</code>より小さいと指定できることに注意してください。
3803,<em>either</em>レベルのラベルのオプションの文字ベクトル(<code>exclude</code>のものを削除した後の<code>levels</code>と同じ順序で)、<em>or</em>長さ 1の文字列。 <code>labels</code>内の重複する値は、同じ因子レベルに<code>x</code>の異なる値をマップするために使用できます。
3804,レベルのセットを形成するときに除外される値のベクトル。  これは、<code>x</code>と同じレベルセットを持つ因子であってもよいし、<code>文字</code>であるべきである。
3805,レベルが（与えられた順序で）順序付けられたとみなされるべきかどうかを決定するための論理フラグ。
3806,レベル数の上限; '詳細'を参照のこと。
3807,(<code>ordered(.)</code>内)：<code>ordered</code>自身を除いた、上記のいずれか。
3808,<code>NA</code>レベルが使用される場合のみ、すなわち<code>any(is.na(x))</code>の場合のみ追加されます.
3809,date-timeクラスの1つから、印刷または要約するオブジェクトを指定する。
3810,タイムゾーンフォーマットのために、<code>format.POSIXct</code>に渡される。
3811,数値または<code>NULL</code>で、印刷されるエントリの最大数を指定します。  デフォルトでは、<code>NULL</code>の時、<code>getOption("max.print")</code>が使用されます。
3812,計算の有効桁数:最も重要な時間単位を正確に表すのに十分な桁数であるべきです。
3813,他のメソッドから、または他のメソッドに渡される更なる引数。
3814,日付時刻オブジェクト
3815,日付-時間オブジェクトまたは文字ベクトル。  (文字ベクトルは<code>as.POSIXct</code>で変換されます)。
3816,数値ベクトル(秒単位)
3817,<code>==</code>、<code>!=</code>、<code>&lt;</code>、<code>&lt;=</code>または<code>&gt;=</code>から1つ。
3818,オプションのデータベクタ（リストまたは<code>expression</code>ベクタを含む）である。  非アトミッククラスの<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトは <code>as.vector</code> によって強制され、すべての属性は破棄されます。
3819,希望する行の数。
3820,希望する列の数。
3821,論理的である。<code>FALSE</code> (デフォルト)の場合、行列は列で埋められ、それ以外の場合、行列は行で埋められる。
3822,行列の<code>dimnames</code>属性:<code>NULL</code>または長さ2の<code>list</code>で、行と列の名前をそれぞれ指定します。  空のリストは <code>NULL</code> として扱われ、長さ 1 のリストは行の名前として扱われます。  リストには名前を付けることができ、リスト名は次元の名前として使用されます。
3823,an <span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクトです。
3824,メソッドに渡される、またはメソッドから渡される追加の引数。
3825,結果の行列が(<code>NULL</code>ではなく)<code>rownames</code>を持つべきかを示す論理です。  デフォルトの <code>NA</code> は、データフレームが '自動' 行名を持っている場合、または0行データフレームに対して <code>NULL</code>rownames を使用します。
3826,数値または文字引数(注を参照)。
3827,欠損値を除去すべきかどうかを示す論理。
3828,数値行列
3829,同値の扱い方を指定する文字列、デフォルトでは<code>"random"</code>; 省略可能。
3830,An <span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクトです。  現在、数値/論理ベクトル、日付、日付-時間、時間間隔オブジェクトのためのメソッドがあります。  複素数ベクトルは<code>trim = 0</code>の場合のみ可能です。
3831,平均を計算する前に<code>x</code>の各端からトリムする観測値の割合（0～0.5）。その範囲外のトリムの値は、最も近い端点とみなされます。
3832,計算を進める前に<code>NA</code>値を除去すべきかどうかを示す論理値。
3833,他のメソッドに渡される、または他のメソッドから渡される更なる引数。
3834,要約または印刷される<code>Date</code>オブジェクト。
3835,計算のための有効桁数。
3836,数値または<code>NULL</code>、印刷されるエントリの最大数を指定する。  デフォルトでは、<code>NULL</code>の時、<code>getOption("max.print")</code>が使用されます。
3837,他のメソッドから、または他のメソッドに渡される更なる引数。
3838,アン<span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクトです。  現在、数値/論理ベクトル、日付、日付-時間、時間間隔オブジェクトのためのメソッドがあります。  複素数ベクトルは<code>trim = 0</code>の場合のみ可能です。
3839,平均を計算する前に<code>x</code>の各端からトリムする観測値の割合（0～0.5）。その範囲外のトリムの値は、最も近い端点とみなされます。
3840,計算を進める前に<code>NA</code>値を除去すべきかどうかを示す論理値。
3841,他のメソッドに渡される、または他のメソッドから渡される追加の引数。
3842,date-timeまたはdateオブジェクト。
3843,変換に使用されるオプションのタイムゾーン指定、主に<code>"POSIXlt"</code>オブジェクトの場合。
3844,文字列。  結果の単位を指定します。  省略可能です。
3845,文字列.  <code>units</code>と同様ですが、省略はできません。
3846,時間間隔を指定する文字列または数値。
3847,<code>tim</code>のフォーマットを指定する文字：<code>strptime</code>を参照。  デフォルトは、ロケール固有の時間フォーマットである。
3848,クラス<code>"difftime"</code>を継承したオブジェクト。
3849,他のメソッドに渡す、または他のメソッドから渡される引数。
3850,date-timeクラスの1つから印刷または要約されるオブジェクト。
3851,タイムゾーンフォーマットのために、<code>format.POSIXct</code>に渡されます。
3852,数値または<code>NULL</code>で、印刷されるエントリの最大数を指定します。  デフォルトでは、<code>NULL</code>の時、<code>getOption("max.print")</code>が使われます。
3853,計算の有効桁数：最も重要な時間単位を正確に表現するのに十分な桁数でなければならない。
3854,他のメソッドから、または他のメソッドに渡される更なる引数。
3855,日付時間オブジェクト
3856,日付時間オブジェクトまたは文字ベクトル。  (文字ベクトルは<code>as.POSIXct</code>で変換されます)。
3857,数値ベクトル(秒単位)
3858,<code>==</code>、<code>!=</code>、<code>&lt;</code>、<code>&lt;=</code>または<code>&gt;=</code>のいずれか一つ。
3859,date-timeクラスの1つから印刷または要約されるオブジェクトを指定します。
3860,タイムゾーンフォーマットのために、<code>format.POSIXct</code>に渡される。
3861,数値または<code>NULL</code>で、印刷されるエントリの最大数を指定します。  デフォルトでは、<code>NULL</code>の時、<code>getOption("max.print")</code>が使われます。
3862,計算の有効桁数：最も重要な時間単位を正確に表すのに十分な桁数であるべきである。
3863,他のメソッドから、または他のメソッドに渡される更なる引数。
3864,日付-時間オブジェクト
3865,日付時間オブジェクトまたは文字ベクトル。  (文字ベクトルは<code>as.POSIXct</code>によって変換されます)。
3866,数値ベクトル(秒単位)
3867,<code>==</code>、<code>!=</code>、<code>&lt;</code>、<code>&lt;=</code>または<code>&gt;=</code>のいずれか1つ。
3868,numeric;新しいサイズ制限（Mb）。
3869,numeric;新しい最大ノード番号。
3870,numeric;新しいサイズの上限（Mb）。
3871,numeric;新しい最大ノード番号。
3872,A生ベクトル。  <code>memCompress</code> では、文字ベクトルは、<code>" \n"</code> で区切られた文字列を持つ生のベクトルに変換されます。  <code>"gzip"</code> と <code>"xz"</code> は、<span style="font-family."> のような longraw ベクトルをサポートします：Courier New, Courier; color：#666666;"><b>R</b></span> 4.0.0.
3873,文字列,圧縮の種類を示す。  1文字に省略することができ、デフォルトは選択肢の1つ目です。
3874,論理：結果は文字列に変換されるべきか？  注：文字列は<i>2^31 - 1</i>バイトの制限があるため、大きな入力には生のベクターを使用する必要があります。
3875,生のベクトルです。  <code>memCompress</code> では、文字ベクトルは <code>"Ⅾn"</code> で区切られた文字列を持つ生のベクトルに変換されます。  <code>"gzip"</code> と <code>"xz"</code> タイプは、<span style="font-family.Courier New, Courier; color=">のように長いベクターをサポートします：Courier New, Courier; color：#666666;"><b>R</b></span> 4.0.0.
3876,文字列,圧縮の種類を示す。  1文字に省略することができ、デフォルトは選択肢の1つ目です。
3877,論理：結果は文字列に変換されるべきか？  注：文字列は<i>2^31 - 1</i>バイトの制限があるため、大きな入力には生のベクターを使用する必要があります。
3878,データフレーム、または1つに強制されるオブジェクト。
3879,マージに使用される列の仕様.詳細'を参照.
3880,logical; <code>all = L</code> は <code>all.x = L</code> と <code>all.y = L</code> の略記で、<code>L</code> は <code>TRUE</code> か <code>FALSE</code> のどちらかです.
3881,logical; もし<code>TRUE</code>なら、<code>x</code>の各行が<code>y</code>にマッチする行がない場合、追加の行が出力に追加されます。  これらの行は、通常 <code>y</code> の値で埋められている列に <code>NA</code> を持つことになります。  デフォルトは<code>FALSE</code>で、<code>x</code>と<code>y</code>の両方からのデータを持つ行だけが出力に含まれます。
3882,logical；<code>all.x</code>に類似しています。
3883,logical。  結果は<code>by</code>列でソートされるべきか？
3884,マージに使用されない(<code>by</code>等に現れる)結果の列の名前をユニークにするために使用する接尾辞を指定する長さ2の文字ベクトル.
3885,結果内のカラム名の重複を避けるために、より多くのケースで<code>接尾辞</code>が付加されることを示す論理です。  これは、<span style="font-family.Courier, Courier; color">以前は暗黙のうちに偽でした：Courier New, Courier; color：#666666;"><b>R</b></span> バージョン 3.5.0 以前では、これは暗黙の了解でした。
3886,マッチさせることができない値。  <code>match</code>を参照してください。  これは、1つの列のマージに使われることを意図しているので、これらはその列の比較できない値である。
3887,メソッドに渡される、またはメソッドから渡される引数。
3888,データフレーム、または1つに強制されるオブジェクト。
3889,マージに使用されるカラムの仕様。「詳細」を参照。
3890,logical; <code>all = L</code> は <code>all.x = L</code> と <code>all.y = L</code> の略記で、<code>L</code> は <code>TRUE</code> か <code>FALSE</code> のどちらか。
3891,logical; もし<code>TRUE</code>なら、<code>x</code>の各行が<code>y</code>にマッチする行がない場合、追加の行が出力に追加されます。  これらの行は、通常 <code>y</code> の値で埋められている列に <code>NA</code> を持つことになります。  デフォルトは<code>FALSE</code>で、<code>x</code>と<code>y</code>の両方からのデータを持つ行だけが出力に含まれるようにします。
3892,logical；<code>all.x</code>に類似しています。
3893,論理的。  結果は<code>by</code>列でソートされるべきか？
3894,マージに使用されない(<code>by</code>などに現れる)結果の列の名前をユニークにするために使用される接尾辞を指定する長さ2の文字ベクトルです.
3895,結果内のカラム名の重複を避けるために、より多くのケースで<code>サフィックス</code>が付加されることを示す論理です。  これは、<span style="font-family.Courier, Courier; color">以前は暗黙のうちに偽でした：Courier New, Courier; color：#666666;"><b>R</b></span> バージョン 3.5.0 以前では、これは暗黙の了解でした。
3896,マッチさせることができない値。  <code>match</code>を参照してください。  これは、1つの列のマージに使われることを意図しているので、これらはその列の比較できない値である。
3897,メソッドに渡される、またはメソッドから渡される引数。
3898,データフレーム、または1つに強制されるオブジェクト。
3899,マージに使用されるカラムの仕様。「詳細」を参照。
3900,logical; <code>all = L</code> は <code>all.x = L</code> と <code>all.y = L</code> の略記で、<code>L</code> は <code>TRUE</code> か <code>FALSE</code> のどちらか。
3901,logical; もし<code>TRUE</code>なら、<code>x</code>の各行が<code>y</code>の行と一致しない場合、追加の行が出力に追加されます。  これらの行は、通常 <code>y</code> の値で埋められている列に <code>NA</code> を持つことになります。  デフォルトは<code>FALSE</code>で、<code>x</code>と<code>y</code>の両方からのデータを持つ行だけが出力に含まれます。
3902,論理; <code>all.x</code>に類似している。
3903,論理的。  結果は<code>by</code>列でソートされるべきか？
3904,マージに使用されない(<code>by</code>などに現れる)結果の列の名前をユニークにするために使用されるサフィックスを指定する長さ2の文字ベクトル.
3905,結果内の列名の重複を避けるために、より多くのケースで<code>接尾辞</code>が付加されることを示す論理。  これは、<span style="font-family.Courier, Courier; color">以前は暗黙のうちに偽でした：Courier New, Courier; color：#666666;"><b>R</b></span> バージョン 3.5.0 以前では、これは暗黙の了解でした。
3906,マッチさせることができない値。  <code>match</code>を参照してください。  これは、1つの列のマージに使われることを意図しているので、これらはその列の比較できない値である。
3907,メソッドに渡される、またはメソッドから渡される引数。
3908,文字に強制できる0個以上のオブジェクト(そして、セパレータなしで一緒に貼り付けられる)、または(<code>message</code>だけのために)1つの条件オブジェクトです。
3909,<code>gettext</code>を参照してください。  <code>NA</code>の場合、メッセージは翻訳されません、<code>stop</code>の注意も参照してください。
3910,論理：文字列として与えられたメッセージは、改行が付加されるべきか？
3911,評価する式。
3912,どのクラスのメッセージが抑制されるべきかを示す文字。
3913,<code>get</code>の場合、オブジェクト名(文字列またはシンボルとして与えられる) <br><code>mget</code>の場合、オブジェクト名の文字ベクトル.
3914,オブジェクトを探す場所(「詳細」を参照); もし省略された場合は、オブジェクトの名前が式に引用されずに現れたかのように検索します.
3915,求めるオブジェクトのモードまたはタイプ：「詳細」セクションを参照してください。
3916,環境を囲むフレームを検索する必要がありますか？
3917,<code>mget</code>では、アイテムが見つからない場合に使用される値の<code>list</code>です: 必要ならばリストに強制されます。<br><code>dynGet</code>では任意の<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>オブジェクト、例えば<code>stop()</code>への呼び出しなど。
3918,lookintoする最小フレーム番号を指定する整数。
3919,数値または文字引数(注を参照)。
3920,欠損値を除去すべきかどうかを示す論理。
3921,形式的な引数。
3922,数値。  入力が必要に応じて再利用される、出力ベクトルの希望する長さ。
3923,数値ベクトル。
3924,数値ベクトル
3925,数値ベクトル
3926,数値ベクトル.
3927,オブジェクト、おそらくモード<code>complex</code>の。
3928,モード<code>complex</code>のオブジェクト、またはメソッドが定義されているクラスの1つ。
3929,他のメソッドに渡される、または他のメソッドから渡される更なる引数。
3930,任意の<span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクト。
3931,オブジェクトの希望するモードまたは「ストレージモード」(タイプ)を示す文字列。
3932,任意の<span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクトを指定します。
3933,オブジェクトの希望するモードまたは「ストレージモード」（タイプ）を示す文字列。
3934,クラス<code>"POSIXt"</code>または<code>"Date"</code>を継承したオブジェクト。
3935,論理ベクトル（リサイクルされる可能性がある）。  名前は省略されるべきですか？
3936,クラス<code>"POSIXt"</code>または<code>"Date"</code>を継承した長さ1オブジェクト。
3937,他のメソッドの引数。
3938,クラス<code>"POSIXt"</code>または<code>"Date"</code>から継承されたオブジェクトです。
3939,論理ベクトル（おそらくリサイクルされる）。  名前は省略されるべきですか？
3940,クラス<code>"POSIXt"</code>または<code>"Date"</code>を継承した長さ1オブジェクト。
3941,他のメソッドのための引数。
3942,クラス<code>"POSIXt"</code>または<code>"Date"</code>から継承されたオブジェクトです。
3943,論理ベクトル（リサイクルされる可能性がある）。  名前は省略されるべきか？
3944,クラス<code>"POSIXt"</code>または<code>"Date"</code>を継承した長さ1オブジェクト。
3945,他のメソッドのための引数。
3946,任意の<span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクト。
3947,属性の適切な名前の<code>list</code>、または<code>NULL</code>。
3948,an <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクト。
3949,<code>x</code>と同じ長さまでの文字ベクトル、または<code>NULL</code>.
3950,date-timeクラスの1つから印刷または要約されるオブジェクト。
3951,タイムゾーンフォーマットのために、<code>format.POSIXct</code>に渡されます。
3952,数値または<code>NULL</code>で、印刷されるエントリの最大数を指定します。  デフォルトでは、<code>NULL</code>の時、<code>getOption("max.print")</code>が使われます。
3953,計算の有効桁数:最も重要な時間単位を正確に表すのに十分な桁数であるべきです。
3954,他のメソッドから、または他のメソッドに渡される更なる引数。
3955,日付時刻オブジェクト
3956,日付時間オブジェクトまたは文字ベクトル。  (文字ベクトルは<code>as.POSIXct</code>で変換されます)。
3957,数値ベクトル(秒単位)
3958,<code>==</code>、<code>!=</code>、<code>&lt;</code>、<code>&lt;=</code>または<code>&gt;=</code>から一つを選ぶ。
3959,アン<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトです。
3960,<code>x</code>と同じ長さまでの文字ベクトル、または<code>NULL</code>.
3961,date-timeクラスの1つから、印刷または要約されるオブジェクトを指定する。
3962,タイムゾーンフォーマットのために、<code>format.POSIXct</code>に渡されます。
3963,数値または<code>NULL</code>で、印刷されるエントリの最大数を指定します。  デフォルトでは、<code>NULL</code>の時、<code>getOption("max.print")</code>が使われます。
3964,計算の有効桁数：最も重要な時間単位を正確に表現するのに十分な桁数でなければならない。
3965,他のメソッドから、または他のメソッドに渡される更なる引数。
3966,日付-時間オブジェクト
3967,日付時間オブジェクトまたは文字ベクトル。  (文字ベクトルは<code>as.POSIXct</code>で変換されます)。
3968,数値ベクトル(秒単位)
3969,<code>==</code>、<code>!=</code>、<code>&lt;</code>、<code>&lt;=</code>または<code>&gt;=</code>のいずれか一つ。
3970,文字列または名前空間環境。
3971,論理的。
3972,環境。
3973,名前空間環境(namespace environment)。
3974,文字ベクトル。
3975,オプションの文字ベクトル。
3976,名前空間環境。
3977,ロードするパッケージ/名前空間の名前を示す文字列。
3978,<code>generics</code>と並列するパッケージ名のベクトル。
3979,ライブラリを指定する文字ベクトル.
3980,論理.
3981,文字.
3982,文字.
3983,環境.
3984,3列の文字行列.
3985,文字.
3986,任意のオブジェクト.
3987,character引数。
3988,メソッドテーブル名.
3989,シンボル：ネームスペースの名前
3990,importから除外するシンボルを命名する文字ベクトル、特に<code>vars</code>がない場合に有用です。
3991,文字列または名前空間環境。
3992,論理。
3993,環境。
3994,名前空間環境(namespace environment)。
3995,文字ベクトル。
3996,オプションの文字ベクトル。
3997,名前空間環境。
3998,ロードするパッケージ/名前空間の名前を示す文字列。
3999,<code>generics</code>と並列するパッケージ名のベクトル。
4000,ライブラリを指定する文字ベクトル.
4001,論理.
4002,文字.
4003,文字.
4004,環境.
4005,3列の文字行列.
4006,文字.
4007,任意のオブジェクト.
4008、文字引数。
4009,メソッドテーブル名.
4010,シンボル：ネームスペースの名前
4011,importから除外するシンボルを指定する文字ベクトル、特に<code>vars</code>がない場合に便利です。
4012,文字列または名前空間環境。
4013,論理。
4014,環境。
4015,名前空間環境。
4016,文字ベクトル。
4017,オプションの文字ベクトル。
4018,名前空間環境。
4019,ロードするパッケージ/名前空間の名前を示す文字列。
4020,<code>generics</code>と並列するパッケージ名のベクトル。
4021,ライブラリを指定する文字ベクトル.
4022,論理。
4023,文字.
4024,文字.
4025,環境.
4026,3列の文字行列.
4027,文字.
4028,任意のオブジェクト。
4029,character引数。
4030,メソッドテーブル名.
4031,シンボル：ネームスペースの名前
4032,importから除外するシンボルを命名する文字ベクトル、特に<code>vars</code>がない場合に便利です。
4033,文字列または名前空間環境。
4034,論理的。
4035,環境。
4036,名前空間環境(namespace environment)。
4037,文字ベクトル。
4038,オプションの文字ベクトル。
4039,名前空間環境。
4040,ロードするパッケージ/名前空間の名前を示す文字列。
4041,<code>generics</code>と並列するパッケージ名のベクトル。
4042,ライブラリを指定する文字ベクトル.
4043,論理。
4044,文字.
4045,文字.
4046,環境.
4047,3列の文字行列.
4048,文字.
4049,任意のオブジェクト.
4050,character引数。
4051,メソッドテーブル名.
4052,シンボル：ネームスペースの名前
4053,importから除外するシンボルを指定する文字ベクトル、特に<code>vars</code>がない場合に便利です。
4054,文字列または名前空間環境。
4055,論理的である。
4056,環境。
4057,名前空間環境(namespace environment)。
4058,文字ベクトル。
4059,オプションの文字ベクトル。
4060,名前空間環境。
4061,ロードするパッケージ/名前空間の名前を示す文字列。
4062,<code>generics</code>と並列するパッケージ名のベクトル。
4063,ライブラリを指定する文字ベクトル.
4064,論理.
4065,文字.
4066,文字.
4067,環境.
4068,3列の文字行列.
4069,文字.
4070,任意のオブジェクト.
4071,character引数。
4072,メソッドテーブル名.
4073,シンボル：ネームスペースの名前
4074,importから除外するシンボルを命名する文字ベクトル、特に<code>vars</code>がない場合に有用です。
4075,文字ベクトル、または、文字ベクトルに強制されるベクトル。  因子を与えるとエラーになります。
4076,文字列：<code>c("bytes", "chars", "width")</code> の1つに部分一致します。  詳細」を参照してください。
4077,論理：無効なマルチバイト文字列や<code>"bytes"</code>エンコード文字列に対して<code>NA</code>を返すべきか（むしろエラーを投げる）。
4078,logical: <code>x</code> が <code>NA</code> のとき、<code>NA</code> を返すべきですか？  もし偽なら、<code>nchar()</code>は<code>2</code>を返します。これは、文字列が出力に書かれるときに使われる印刷文字数であり、<code>nzchar()</code>は<code>TRUE</code>です。  <code>nchar()</code> のデフォルトである <code>NA</code> は、<code>type</code> が <code>"width"</code> でない限り <code>keepNA = TRUE</code> を使用することを意味しています。
4079,ベクトル、配列、データフレーム、または<code>NULL</code>です。
4080,ベクトル、配列、データフレーム、または<code>NULL</code>。
4081,適切なアリティの関数（<code>Reduce</code>ではバイナリ、<code>Filter</code>、<code>Find</code>、<code>Position</code>ではウナリ、<i>k</i>引数を伴って呼ばれる場合は<code>Map</code>では<i>k</i>-アリ）．  <code>Negate</code>のための任意の述語関数です.
4082,ベクトル(vector)。
4083,an <span style="font-family：Courier New, Courier; color：<code>x</code> の要素と同じ種類の<b>R</b></span>オブジェクトである。
4084,左から右へ進むか(デフォルト)、右から左へ進むかを示す論理である。
4085,連続する縮小結合を累積するかどうかを示す論理である。  デフォルトでは、最後の組み合わせのみが使用される。
4086,「no match」（述語を満たす要素がない）が見つかった場合に返される値。
4087,ベクター。
4088,デフォルトの<code>function</code>、<code>formula</code>、または<code>NULL</code>。
4089,関数と関連付ける環境。
4090,任意の<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクト。
4091,論理。もし<code>TRUE</code>なら、環境はハッシュテーブルを使用する。
4092,作成されたenvironmentのエンクロージャーとして使用されるenvironment。
4093、環境
4094,ハッシュドエンバイロメントの初期サイズを指定する整数です。  <code>size</code>が<code>NA</code>またはゼロの場合、内部デフォルト値が使用されます。  この引数は、<code>hash</code>が<code>FALSE</code>の場合、無視されます。
4095,<code>NA</code>でない長さ1の論理ベクトル。長さが1より大きい条件は、現在、警告で受け入れられますが、最初の要素だけが使用されます。  環境変数<span class="env">_R_CHECK_LENGTH_1_CONDITION_</span> が true に設定されている場合、代わりにエラーが通知されます。  その他の型は、可能であれば論理型に強制され、いかなるクラスも無視される。
4096,変数の構文上の名前。
4097,ベクトル(リストと式を含む)、ペアリスト、<code>NULL</code>に評価される式です。  Afactorの値は、文字ベクトルに強制されます。  <span style="font-family：Courier New, Courier; color：<br>R</b></span>4.0.0 からは、これは長いベクトルであることができます。
4098,形式的な意味での<em>式</em>である。  これは単純な式か、いわゆる<em>複合式</em>で、通常は<code>{ expr1 ; expr2 }</code> という形式である。
4099,関数の名前を示す文字列（内蔵の演算子ではない）。  <code>UseMethod</code>の場合は必須です。
4100,<code>UseMethod</code>の場合：ディスパッチされるメソッドを決定するクラスを持つオブジェクトです。  デフォルトは、包含する関数の最初の引数である。
4101,次のメソッドに渡される更なる引数。
4102,1つまたは複数の文字ベクトル。
4103,変換のための「ドメイン」。
4104,非負の整数。
4105,英語で<code>n = 1</code>の場合に使用されるメッセージ。
4106,英語で<code>n = 0, 2, 3, ...</code>の場合に使用されるメッセージです.
4107,ドメインの翻訳されたメッセージカタログを見つけるためのディレクトリです。
4108,オブジェクト、通常はファクター。
4109,任意の<span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクト、通常は<code>character</code>文字列のベクトルです。
4110,オプションの<code>logical</code>は、<code>print()</code>に渡され、<code>print.default()</code>で使用され、右寄せされるべきかどうかを示している。
4111,クラス<code>"noquote"</code>のオブジェクトです。
4112,次のメソッド（<code>print</code>など）に渡されるさらなるオプション。
4113,汎用<code>c</code>関数との互換性のため。
<a href="https://CRAN.R-project.org/package=Matrix"><span class="pkg">Matrix</span></a> などのパッケージは、より多くの <code>norm() </code> メソッドを定義していることに注意してください。
4115,計算されるmatrixnormの<em>タイプ</em>を指定する文字列.求めるノルムのタイプを示す文字。

4116,は<b>o</b>neノルム(最大絶対列和)を指定する；
4117,は<b>i</b>nfinityノルム(最大絶対行和)を指定する；
4118,<b>F</b>ブロベニウスノルム(<code>x</code>をベクトルとして扱ったときのユークリッドノルム)を指定します；
4119,<b>m</b><code>の全要素の最大モジュラスを指定する; そして
4120,<code>x</code>の最大の特異値(<code>svd</code>)である「スペクトル」または2ノルムを指定する。
4121,デフォルトは<code>"O"</code>です。  <code>type[1]</code>の最初の文字だけが使用されます。
4122,ファイルパスの文字ベクトル。
4123,Windowsで使用されるセパレータ - それ以外の場所では無視されます。  <code>c("/", "\")</code> のうちの1つでなければならない。
4124,論理：もし<code>TRUE</code>なら、結果を決定できない場合、エラーとなり、もし<code>NA</code>なら警告となる。
4125,ベクトル、配列、データフレーム、または<code>NULL</code>.
4126,ベクトル、配列、データフレーム、または<code>NULL</code>.
4127,logical：trueの場合、閉じた接続と標準的な接続を含むすべての接続が表示されます。  falseの場合は、開いているユーザー作成接続のみが含まれます。
4128,integer：<code>showConnections</code>で与えられたテーブルの行番号です。
4129,コネクションです。
4130,希望する長さを指定する非負の整数。ダブル値は整数に強制されます。
4131、強制される、またはテストされるオブジェクト。
4132,他のメソッドに渡される、または他のメソッドから渡される更なる引数。
<code>package_version</code>の場合、代わりに<code>R.version</code>によって得られるRversionオブジェクトを指定する。
4134,無効な数値バージョンはエラーになるか(デフォルト)、ならないかを示す論理。
4135,変換またはシフトされるオブジェクト。
4136,論理：変換は、単一文字列または複数の個々の文字にするべきか？
4137,シフトするビットの数。  正の数は右に、負の数は左にシフトします: 許される値は <code>-8 ... 8</code> です。
4138,結果のタイプ、部分的に一致する。
4139,変換またはシフトされるオブジェクト。
4140,論理：変換は単一文字列または複数の個々の文字にする必要がありますか？
4141,シフトするビットの数。  正の数は右に、負の数は左にシフトします: 許される値は <code>-8 ... 8</code> です。
4142,結果のタイプ、部分的に一致する。
4143,文字ベクトル、または、文字ベクトルに強制されるベクトル。  因子を与えることはエラーです。
4144,文字列：<code>c("bytes", "chars", "width")</code> のうちの1つに部分的にマッチします。  詳細」を参照してください。
4145,論理：無効なマルチバイト文字列や<code>"bytes"</code>エンコード文字列に対して<code>NA</code>を返すべきか（むしろエラーを投げる）。
4146,論理：<code>x</code>が<code>NA</code>のとき、<code>NA</code>を返すべきですか？  もし偽なら、<code>nchar()</code>は<code>2</code>を返します。これは、文字列が出力に書かれるときに使われる印刷文字数であり、<code>nzchar()</code>は<code>TRUE</code>です。  <code>nchar()</code> のデフォルトである <code>NA</code> は、<code>type</code> が <code>"width"</code> でない限り <code>keepNA = TRUE</code> を使用することを意味しています。
4147,利用可能なオブジェクトをリストアップする際にどの環境を使用するか。デフォルトは<em>current</em>環境です。  互換性のために<code>name</code>と呼ばれていますが、実際にはこの引数は任意の形式で環境を指定することができます; 「詳細」セクションを参照してください。
4148,検索リストの位置として環境を指定するための<code>name</code>に代わる引数です。  主にバックコンパチビリティのために存在します。
4149,環境を指定するための<code>name</code>の代替となる引数。  主に互換性のために存在します。
4150,論理値です。  <code>TRUE</code>の場合、全てのオブジェクトの名前が返されます。  <code>FALSE</code>の場合、<span class="samp">.</span> から始まる名前は省略されます。
4151,オプションで正規表現を指定します。  <code>pattern</code>にマッチする名前のみが返される。  <code>glob2rx</code>はワイルドカードパターンを正規表現に変換するために使用される。
4152,結果の<code>character</code>がアルファベット順にソートされるべきかどうかを示す論理。  これは<code>ls()</code>の一部であり、ほとんどの時間を要するかもしれないことに注意されたい。
4153,a <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>オブジェクト。
4154,クラスを命名する文字ベクトル。  <code>value</code>は<code>NULL</code>も可能です。
4155,戻り値に影響を与える論理: '詳細'を参照して下さい。
4156,a <span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクト。
4157,クラスを命名する文字ベクトル。  <code>value</code>は<code>NULL</code>も可能です。
4158,戻り値に影響を与える論理： '詳細'を参照。
4159,logical:defunct:無視され、偽の値に対しては警告が出される。
4160,使用するタイムゾーンデータベース：デフォルトは、1つが見つかるまで不明な場所を試すことである。
4161,実行される式。
4162,TRUEの場合、<code>expr</code>を追加し、以前に設定された式の後に実行されます（<code>after</code>がFALSEの場合は前に実行）、それ以外の場合（デフォルト）は、<code>expr</code>は以前に設定した式を上書きをします。
4163,もし <code>add</code> が TRUE で <code>after</code> が FALSE ならば、<code>expr</code> は既に登録された式の上に追加されます。この結果、Last in First out orderは、逆順にリソースを解放したり閉じたりするのに便利である。
4164,文字列。  接続の説明：'詳細'を参照してください。
4165,文字列。  接続を開く方法(最初に開く必要がある場合)の説明。  可能な値については、「モード」セクションを参照してください。
4166,論理。  ブロック'セクションを参照してください。
4167,想定されるエンコーディングの名前。  エンコード'セクションを参照してください。
4168,論理。  trueを指定すると、通常のファイルではない引数(例えば、キャラクタデバイス)に適した「生」インターフェースが使用されます。  これは、テキストモードの読書用に開くときに圧縮ファイルのチェックを抑制し、「ファイル」がシーク可能でない可能性があることを表明する。
4169,文字列、部分的に<code>c("default", "internal", "wininet", "libcurl")</code> にマッチします:「詳細」参照。
4170,HTTPrequestsで使用するHTTPヘッダーの名前付き文字ベクトルです。  非HTTP URLの場合は無視されます。  <code>HTTPUserAgent</code> オプション (<code>options</code> を参照) から得られる <code>User-Agent</code> ヘッダーは、自動的に最初のヘッダーとして使われます。
4171,0-9の整数値。  書き込み時に適用される圧縮の量を、なしから利用可能な最大値まで指定します。  <code>xzfile</code>の場合、負の値も可能です。「圧縮」セクションを参照してください。
4172,数値：この接続に使用されるタイムアウト（秒単位）です。  OSによっては、非常に大きな値をゼロとして扱うことがあるので注意してください：しかし、POSIX標準では、31日までの値をサポートすることを要求しています。
4173,オプションの文字ベクトル。現在、TCPソケットでは<code>"no-delay"</code>のみがサポートされています。
4174,ZIPファイル内のファイル名。
4175,文字列。  ポートのホスト名。
4176,整数。  TCPポート番号。
4177,論理。  ソケットはクライアントかサーバーのどちらであるか？
4178,コネクションをリッスンするサーバー・ソケット。
4179,接続。
4180,文字列。  現在、無視されています。
4181,文字列。  空または<code>"read"</code>または<code>"write"</code>、部分一致が許可されています。
4182,他のメソッドに渡される、または他のメソッドから渡される引数。
4183,文字列。  接続の説明： '詳細'を参照してください。
4184,文字列。  接続を開く方法(最初に開くべき場合)の説明。  可能な値については、「モード」セクションを参照してください。
4185,論理。  ブロッキング」セクションを参照してください。
4186,想定されるエンコーディングの名前です。  エンコード」セクションを参照してください。
4187,論理。  trueを指定すると、通常のファイルではない引数(例えば、キャラクタデバイス)に適した「生」インターフェースが使用されます。  これは、テキストモードの読書用に開くときに圧縮ファイルのチェックを抑制し、「ファイル」がシーク可能でない可能性があることを表明する。
4188,文字列、<code>c("default", "internal", "wininet", "libcurl")</code> に部分的にマッチします:「詳細」参照。
4189,HTTPrequestsで使用するHTTPヘッダーの名前付き文字ベクトルです。  非HTTPのURLの場合は無視されます。  <code>HTTPUserAgent</code> オプション (<code>options</code> を参照) から来る <code>User-Agent</code> ヘッダーは、自動的に最初のヘッダーとして使われます。
4190,0-9の整数値。  書き込み時に適用される圧縮の量を、なしから利用可能な最大値まで指定します。  <code>xzfile</code>の場合、負の値も可能です。「圧縮」セクションを参照してください。
4191,数値：この接続に使用されるタイムアウト（秒単位）です。  OSによっては、非常に大きな値をゼロとして扱うことがあるので注意してください：しかし、POSIX標準では、31日までの値をサポートすることを要求しています。
4192,オプションの文字ベクトル。現在、TCPソケットでは<code>"no-delay"</code>のみがサポートされています。
4193,ZIPファイル内のファイル名。
4194,文字列。  ポートのホスト名。
4195,整数。  TCPポート番号。
4196,論理。  ソケットはクライアントとサーバーのどちらであるべきですか？
4197,コネクションをリッスンしているサーバー・ソケット。
4198,接続。
4199,文字列。  現在、無視されています。
4200,文字列。  空白または<code>"read"</code>または<code>"write"</code>、部分一致が許されます.
4201,他のメソッドに渡される、または他のメソッドから渡される引数。
4202,ファイル名。
4203,ファイルに対して仮定する文字符号化方式。
4204、文字列を作るためのエンコーディング: <code>parse</code>の<code>encoding</code>引数を参照する。
4205、ソース行の文字ベクトル。  その他、<span style="font-family：Courier New, Courier; color：<b>R</b></span> オブジェクトは、文字に強制されます。
4206、ファイルのコピーに使用するタイムスタンプです。
4207、この<code>srcfilecopy</code>は、ファイルシステムファイルから来たことが知られているか？
4208、<code>srcfile</code>オブジェクト。
4209, 行番号。
4210, ソース位置を示す4、6、または8個の値のベクトル; 「詳細」を参照。
4211, 適切なクラスのオブジェクト。
4212, <code>srcref</code>のテキストを得るために<code>srcfile</code>を読み込むかどうか。
4213、文字範囲の終わりを示すためのオプションの2番目の<code>srcref</code>オブジェクトを指定する。
4214、メソッドへの追加引数、これらは無視されます。
4215、ファイル名。
4216、ファイルに対して仮定する文字エンコーディング。
4217、文字列を作るためのエンコーディング：<code>parse</code>の<code>encoding</code>引数を参照して下さい。
4218、ソース行の文字ベクトル。  その他、<span style="font-family：Courier New, Courier; color：<b>R</b></span> オブジェクトは、文字に強制されます。
4219、ファイルのコピーで使用するタイムスタンプ。
4220、この<code>srcfilecopy</code>は、ファイルシステムファイルから来ることが知られているか？
4221, <code>srcfile</code>オブジェクト。
4222, 行番号。
4223, ソース位置を示す4、6、8個の値のベクトル; 「詳細」を参照。
4224, 適切なクラスのオブジェクト。
4225, <code>srcref</code>のテキストを得るために<code>srcfile</code>を読み込むかどうか。
4226、文字範囲の終わりを示すためのオプションの2番目の<code>srcref</code>オブジェクトを指定する。
4227、メソッドへの追加引数、これらは無視されます。
4228、ファイル名。
4229、ファイルに対して仮定する文字エンコーディング。
4230、文字列を作るためのエンコーディング：<code>parse</code>の<code>encoding</code>引数を参照して下さい。
4231、ソース行の文字ベクトル。  その他、<span style="font-family：Courier New, Courier; color：<b>R</b></span> オブジェクトは、文字に強制されます。
4232、ファイルのコピーに使用するタイムスタンプです。
4233、この<code>srcfilecopy</code>は、ファイルシステムファイルから来ることが知られているか？
4234、<code>srcfile</code>オブジェクト。
4235、行番号。
4236、ソース位置を示す4、6、または8つの値のベクトル。
4237、適切なクラスのオブジェクト。
4238, <code>srcref</code>のテキストを得るために<code>srcfile</code>を読み込むかどうか。
4239、文字範囲の終わりを示すためのオプションの2番目の<code>srcref</code>オブジェクトを指定する。
4240、メソッドへの追加の引数、これらは無視されます。
4241,オブジェクト。
4242,メソッドに渡される更なる引数。
4243,論理：欠損値は削除されるべきか？
4244,日付オブジェクト
4245,日付オブジェクトまたは文字ベクトル。  (文字ベクターは<code>as.Date</code>で変換されます)。
4246,数値ベクトル（日単位）<em>または</em>クラス<code>"difftime"</code>のオブジェクトで、最も近い整数日に丸められる。
4247,<code>==</code>、<code>!=</code>、<code>&lt;</code>、<code>&lt;=</code>または<code>&gt;=</code>のいずれか一つです。
4248,date-timeまたはdateオブジェクト。
4249,変換に使用されるオプションのタイムゾーン指定、主に<code>"POSIXlt"</code>オブジェクトの場合。
4250,文字列。  結果の単位を指定します。  省略可能です。
4251,文字列.  <code>units</code>と同様ですが、省略はできません。
4252,時間間隔を指定する文字列または数値。
4253,<code>tim</code>のフォーマットを指定する文字：<code>strptime</code>を参照。  デフォルトは、ロケール固有の時間フォーマットである。
4254,クラス<code>"difftime"</code>を継承したオブジェクトです。
4255,他のメソッドに渡す、または他のメソッドから渡される引数。
4256,データのベクトルで、通常は少数の異なる値をとります。
4257,オプションとして、<code>x</code>が取ったかもしれないユニークな値(文字列として)のベクトルを指定します。  デフォルトは、<code>as.character(x)</code>が取った値のユニークなセットで、<em>の昇順にソートされます。  なお、この集合は<code>sort(unique(x))</code>より小さく指定することができる。
4258,<em>either</em>レベル(<code>exclude</code>内のものを取り除いた後の<code>levels</code>と同じ順序で)のラベルのオプション文字ベクトル、<em>or</em>長さ 1の文字列。 <code>labels</code>内の重複値は同じ因子レベルに<code>x</code>の異なる値マッピングに使用できる。
4259,レベルのセットを形成するときに除外される値のベクトル。  これは、<code>x</code>と同じレベルセットを持つ因子であってもよいし、<code>文字</code>であるべきである。
4260,レベルが（与えられた順序で）順序付けられたとみなされるべきかどうかを決定するための論理フラグ。
4261,レベル数の上限; '詳細'を参照のこと。
4262,(<code>ordered(.)</code>内): <code>ordered</code>自身を除いた上記のいずれか。
4263,<code>NA</code>レベルが使用される場合のみ、すなわち<code>any(is.na(x))</code>の場合のみ追加されます.
4264,適切な数値バージョン文字列を持つ文字ベクトル(「詳細」参照); <code>package_version</code> の場合、代わりに <code>R.version</code> によって得られる Rversion オブジェクト。
4265,無効な数値バージョンはエラーになるか(デフォルト)、ならないかを示す論理です。
4266,データのベクトルで、通常は少数の異なる値をとります。
4267,オプションで、<code>x</code>が取ったかもしれないユニークな値(文字列として)のベクトルを指定します。  デフォルトは、<code>as.character(x)</code>が取った値のユニークなセットで、<em>の昇順にソートされています。  なお、この集合は<code>sort(unique(x))</code>より小さく指定することができる。
4268,<em>either</em>レベルのラベルのオプションの文字ベクトル(<code>exclude</code>のものを削除した後の<code>levels</code>と同じ順序で)、<em>or</em>長さ 1の文字列。 <code>labels</code>の重複する値は、同じ因子レベルへの<code>x</code>の異なる値マッピングに使うことが出来ます。
4269,レベルのセットを形成するときに除外される値のベクトル。  これは、<code>x</code>と同じレベルセットを持つ因子であってもよいし、<code>文字</code>であるべきである。
4270,レベルが（与えられた順序で）順序付けられたとみなされるべきかどうかを決定するための論理フラグ。
4271,レベル数の上限; '詳細'を参照のこと。
4272,(<code>ordered(.)</code>内): <code>ordered</code>自身を除いた上記のいずれか。
4273,<code>NA</code>レベルが使用される場合のみ、すなわち<code>any(is.na(x))</code>の場合のみ追加されます.
4274,date-timeクラスの1つから印刷または要約されるオブジェクトを指定します。
4275,タイムゾーンフォーマットのために、<code>format.POSIXct</code>に渡される。
4276,数値または<code>NULL</code>で、印刷されるエントリの最大数を指定します。  デフォルトでは、<code>NULL</code>の時、<code>getOption("max.print")</code>が使われます。
4277,計算の有効桁数:最も重要な時間単位を正確に表すのに十分な桁数であるべきです。
4278,他のメソッドから、または他のメソッドに渡される更なる引数。
4279,日付-時間オブジェクト
4280,日付-時間オブジェクトまたは文字ベクトル。  (文字ベクトルは<code>as.POSIXct</code>で変換されます)。
4281，数値ベクトル(秒単位)
4282,<code>==</code>、<code>!=</code>、<code>&lt;</code>、<code>&lt;=</code>または<code>&gt;=</code>から一つを選択します．
4283,任意のオプションを<code>名=値</code>で定義することができる：Courier New, Courier; color：#666666;"><b>R</b></span>で使用されます。

4284,オプションは、名前付きリストである単一の無名引数を与えることによっても渡すことができる。
4285,オプション名を保持する文字列。
4286,指定されたオプションがオプションリストに設定されていない場合、この値が返されます。  これにより、オプションを取得し、それが設定されているかどうかをチェックし、設定されていない場合は別途設定することが容易になる。
4287,同じ長さの数値、複素数、文字、論理ベクトルの列、またはクラス化された<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>オブジェクトです。
4288,<code>method</code>s <code>"shell"</code> and<code>"quick"</code> のための原子ベクトルです。  <code>x</code>がアトミックでない場合、<span style="font-family：Courier New, Courier; color：<b>R</b></span> オブジェクトの場合、<code>order(x,...)</code>がそうであれば、デフォルトの<code>"auto"<code>と<code>"radix"<code>メソッドは機能するかもしれません。
4289,部分ソート用のインデックスのベクトル。(非<code>NULL</code>値は実装されていません。)
4290,論理的である。  ソート順序は増加順序であるべきですか？<code>"radix"</code>メソッドでは、<code>...</code>の引数の数に等しい長さのベクトルを指定することができます。その他の方法については、長さ1でなければなりません。
もし<code>TRUE</code>なら、データの欠損値は最後に置かれ、もし<code>FALSE</code>なら、それらは最初に置かれ、もし<code>NA</code>なら、それらは除去される(「注意」を参照)。
4292,使用する方法：部分一致が可能です。  デフォルト(<code>"auto"</code>)は、短い数値ベクトル、整数ベクトル、論理ベクトル、因数に対して<code>"radix"</code>を意味します。<code>"shell"</code>, <code>"quick"</code>および<code>"radix"</code>メソッドの詳細については、<code>sort</code>ヘルプを見てください。
4293,データのベクトルで、通常、少数の異なる値をとります。
4294,オプションで、<code>x</code>が取ったかもしれないユニークな値(文字列として)のベクトルです。  デフォルトは、<code>as.character(x)</code>が取った値のユニークなセットで、<em><code>x</code></em>の昇順にソートされています。  なお、この集合は<code>sort(unique(x))</code>より小さく指定することができる。
4295,<em>either</em>レベルのラベルのオプション文字ベクトル(<code>exclude</code>内のものを削除した後の<code>levels</code>と同じ順序で)、<em>or</em>長さ 1の文字列。 <code>labels</code>内の重複値は同じ因子レベルに異なる<code>x</code>の値をマッピングするのによいです.
4296,レベルのセットを形成するときに除外される値のベクトル。  これは、<code>x</code>と同じレベルセットを持つ因子であってもよいし、<code>文字</code>であるべきです。
4297,レベルが（与えられた順序で）順序付けられたとみなされるべきかどうかを決定するための論理フラグ。
4298,レベル数の上限; '詳細'を参照のこと。
4299,(in <code>ordered(.)</code>): <code>ordered</code> 自体は別として、上記のいずれかです.
4300,<code>NA</code>レベルが使用される場合のみ、すなわち<code>any(is.na(x))</code>の場合のみ追加されます.
4301,関数<code>FUN</code>の第1、第2引数。
4302,外側の製品に使用する関数。<em>経由</em><code>match.fun</code>で見つかる（特別な場合<code>"*"</code>を除く）。
4303,<code>FUN</code>に渡されるオプションの引数。
<code>package_version</code>の場合、代わりに<code>R.version</code>によって得られるRversionオブジェクトを使用することもできます。
4305,無効な数値バージョンはエラーになるか(デフォルト)、ならないかを示す論理。
4306,文字列:フック名
4307,文字列：パッケージ/名前空間名
4308,文字列:パッケージのイベント。  省略可。
4309,関数または関数のリスト、<code>action = "replace"</code> の場合は <code>NULL</code> です。
4310,実行されるアクション。  省略することもできる。
4311,文字列または名前空間環境。
4312,論理的である。
4313,環境。
4314,名前空間環境。
4315,文字ベクトル。
4316,オプションの文字ベクトル。
4317,名前空間環境。
4318,ロードするパッケージ/名前空間の名前を示す文字列。
4319,<code>generics</code>と並列するパッケージ名のベクトル。
4320,ライブラリを指定する文字ベクトル.
4321,論理。
4322,character。
4323,文字.
4324,環境.
4325,3列の文字行列。
4326,文字.
4327,任意のオブジェクト.
4328,character引数。
4329,メソッドテーブル名.
4330,シンボル：ネームスペースの名前
4331,文字ベクトル：importから除外するシンボルの名前、特に<code>vars</code>がないときに便利です。
4332,文字ベクトル: パッケージの名前。
4333,文字ベクトル：パッケージの位置を記述する<span style="font-family：Courier New, Courier; color：#"><b>R</b></span>ライブラリツリーを検索する場所、または<code>NULL</code>を指定します。  <code>NULL</code>のデフォルト値は、ロードされた名前空間をチェックし、次に<code>.libPaths()</code>で現在知られているすべてのライブラリをチェックすることに相当します。
4334,論理的です。  これは、パッケージが見つからない場合、警告またはエラーを与えるべきではないでしょうか？
4335,a論理的。  <code>TRUE</code>の場合、特にパッケージが複数回見つかった場合に追加の診断がプリントされます。
4336,呼び出し式。
4337,文字に強制できる0以上のオブジェクト(セパレータなしで一緒に貼り付けられる)、または(<code>message</code>の場合のみ)1つの条件オブジェクト。
4338,<code>gettext</code>を参照してください。  <code>NA</code>の場合、メッセージは翻訳されません、<code>stop</code>の注意も参照してください。
4339,論理：文字列として与えられたメッセージは、改行が付加されるべきか？
4340,評価する式。
4341,どのクラスのメッセージが抑制されるべきかを示す文字。
4342,変換またはシフトされるオブジェクト。
4343,論理：変換は、単一文字列または複数の個々の文字にする必要がありますか？
4344,シフトするビットの数。  正の数は右に、負の数は左にシフトします: 許容値は <code>-8 ... 8</code> です。
4345,結果のタイプ、部分的に一致する。
4346,オブジェクト、名前付きかもしれない。
4347,強制されるかテストされるオブジェクト。
4348,すべての値をコピーするか（デフォルト）名前がドットで始まらないものだけをコピーするかを示す論理です。
4349,結果のリストの<code>names</code>がソートされるべきかどうかを示す論理です。  これはややコストがかかるが、環境の比較には有用であることに注意されたい。
4350,<code>function</code>、<code>formula</code>、または<code>NULL</code>、これはデフォルトである。
4351,関数に関連付ける環境。
4352,任意の<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクト。
4353,a logical, if <code>TRUE</code> the environment will use a hash table.
4354,作成されたenvironmentのエンクロージャーとして使用されるenvironmentです。
4355,環境
4356,ハッシュドエンバイロメントの初期サイズを指定する整数です。  <code>size</code>が<code>NA</code>またはゼロの場合、内部デフォルト値が使用されます。  この引数は、<code>hash</code>が<code>FALSE</code>の場合、無視されます。
4357,<code>function</code>、<code>formula</code>、または<code>NULL</code>で、これはデフォルトである。
4358,関数と関連付ける環境。
4359,任意の<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクト。
4360,論理。もし<code>TRUE</code>なら、環境はハッシュテーブルを使用します。
4361,作成されたenvironmentのエンクロージャーとして使用されるenvironmentです。
4362,環境
4363,ハッシュドエンバイロメントの初期サイズを指定する整数です。  <code>size</code>が<code>NA</code>またはゼロの場合、内部デフォルト値が使用されます。  この引数は、<code>hash</code>が<code>FALSE</code>の場合、無視されます。
4364,非負の場合はフレーム番号、負の場合は戻るべきフレーム数。
4365,何世代前に戻るか。  (「詳細」セクションを参照してください)
<code>file</code>が<code>""</code>で<code>text</code>が無いか<code>NULL</code>なら、コンソールから入力されることになる。
4367,integer（またはcoerced to integer）。  パースする式数の最大値。  <code>n</code>が<code>NULL</code>または負または<code>NA</code>の場合、入力はその全体がパースされます.
4368,文字ベクトル。  パースするテキスト。  要素は、ファイルの行のように扱われます.  その他、<span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクトは、可能であれば文字に強制されます。
<code>NULL</code>は、<span style="font-family：Courier New, Courier; color：<b>R</b></span> のプロンプトである <code>getOption("prompt")</code> を使用します。
4370,論理値; <code>TRUE</code>の場合、keepsource参照情報。
4371,<code>NULL</code>、文字ベクトル、または<code>srcfile</code>オブジェクト。  詳細」セクションを参照してください。
4372,入力文字列に対して仮定されるエンコーディング。  この値が <code>"latin1"</code> または <code>"UTF-8"</code> の場合、文字列が Latin-1 または UTF-8 であることを示すために使われます: 入力を再エンコードするためには使われません。  後者を行うには、接続 <code>con</code> または <em>via</em><code>options(encoding=)</code> でエンコーディングを指定します: <code>file</code> の下の例を参照して下さい。引数 <code>encoding = "latin1"</code> と <code>encoding = "UTF-8"</code> は、MBCS ロケールで実行する場合、警告とともに無視されます。
4373,長さ<code>1</code>の<code>character</code>ベクトル、すなわち "文字列".
4374,文字列または名前空間環境。
4375,論理的。
4376,環境.
4377,名前空間環境(namespace environment)。
4378,文字ベクトル。
4379,オプションの文字ベクトル。
4380,名前空間環境。
4381,ロードするパッケージ/名前空間の名前を示す文字列。
4382,<code>generics</code>と並列するパッケージ名のベクトル。
4383,ライブラリを指定する文字ベクトル.
4384,論理.
4385,文字.
4386,文字.
4387,環境。
4388,3列の文字行列.
4389,文字.
4390,任意のオブジェクト。
4391,character引数。
4392,メソッドテーブル名.
4393,シンボル：ネームスペースの名前
4394,importから除外するシンボルを命名する文字ベクトル、特に<code>vars</code>がない場合に有用です。
4395,1つまたは複数の<span style="font-family：Courier New, Courier; color：#文字ベクトルに変換するための<b>R</b></span>オブジェクトを指定します。
4396,項を区切るための文字列。  <code>NA_character_</code>ではありません。
4397,結果を区切るためのオプションの文字列。  Not<code>NA_character_</code>となります。
4398,<code>logical</code>は、<code>sep</code>-phase（<code>collapse</code>-phaseで<code>""</code>に変わる、つまり<code>collapse</code>が<code>NULL</code>ではない場合）の後、ゼロ長の文字引数をゼロ長の<code>文字（0）</code> に導くべきかを示します.
4399,1つまたは複数の<span style="font-family：Courier New, Courier; color：#文字ベクトルに変換するための<b>R</b></span>オブジェクトを指定します。
4400,項を区切るための文字列。  <code>NA_character_</code>ではありません。
4401,結果を区切るためのオプションの文字列。  Not<code>NA_character_</code>とする。
4402,<code>logical</code>は、<code>sep</code>-phase（<code>collapse</code>-phaseで<code>""</code>に変わる、つまり<code>collapse</code>が<code>NULL</code>ではない場合）の後、ゼロ長の文字引数をゼロ長の<code>文字（0）</code> に導くべきかを示します.
4403,文字ベクトル：1つまたは複数のパス名を含む。
4404,文字ベクトル：パッケージの名前。
4405,文字ベクトル：位置を記述する<span style="font-family：Courier New, Courier; color：#"><b>R</b></span>ライブラリツリーを検索する場所、または<code>NULL</code>です。  <code>NULL</code>のデフォルト値は、ロードされた名前空間をチェックし、次に<code>.libPaths()</code>で現在知られているすべてのライブラリをチェックすることに相当します。
4406,論理的です。  これは、パッケージが見つからない場合、警告またはエラーを与えるべきではないでしょうか？
4407,a論理的です。  <code>TRUE</code>の場合、特にパッケージが複数回見つかった場合に、追加の診断が表示されます。
4408,呼び出し式。
4409,文字列。  接続の説明：'詳細'を参照。
4410,文字列。  接続を開く方法(最初に開く必要がある場合)の説明。  可能な値については、「モード」のセクションを参照してください。
4411,論理。  ブロッキング」セクションを参照してください。
4412,想定されるエンコーディングの名前。  エンコーディング」セクションを参照してください。
4413,論理。  trueを指定すると、通常のファイルではない引数(キャラクタデバイスなど)に適した「生」インターフェイスが使用されます。  これは、テキストモードの読書用に開くときに圧縮ファイルのチェックを抑制し、「ファイル」がシーク可能でない可能性があることを表明する。
4414,文字列、<code>c("default", "internal", "wininet", "libcurl")</code> に部分的に一致する:「詳細」参照。
4415,HTTPrequestsで使用するHTTPヘッダーの名前付き文字ベクトルです。  非HTTP URLの場合は無視されます。  <code>HTTPUserAgent</code> オプション (<code>options</code> を参照) から得られる <code>User-Agent</code> ヘッダーは、自動的に最初のヘッダーとして使われます。
4416,0-9の整数値。  書き込み時に適用される圧縮の量を、なしから利用可能な最大値まで指定します。  <code>xzfile</code>の場合、負の値も可能です。「圧縮」セクションを参照してください。
4417,数値：この接続に使用されるタイムアウト（秒単位）です。  OSによっては、非常に大きな値をゼロとして扱うことがあるので注意してください：しかし、POSIX標準では、31日までの値をサポートすることを要求しています。
4418,オプションで指定する文字ベクトル。現在、TCPソケットでは<code>"no-delay"</code>のみがサポートされています。
4419,ZIPファイル内のファイル名。
4420,文字列。  ポートのホスト名。
4421,整数。  TCPポート番号。
4422,論理。  ソケットはクライアントとサーバーのどちらであるべきですか？
4423,コネクションをリッスンするサーバーソケットです。
4424,コネクションです。
4425,文字列。  現在、無視されています。
4426,文字列。  空または<code>"read"</code>または<code>"write"</code>、部分一致が許可されています。
4427,他のメソッドに渡される、または他のメソッドから渡される引数。
4428,プロット内の点の座標。あるいは、単一のプロット構造、関数、または<em>任意の<span style="font-family：Courier New, Courier; color：<b>R</b></span>オブジェクトに<code>plot</code>メソッド</em>を与えることもできます。
4429,プロット内の点のy座標、<em>オプション</em><code>x</code>が適切な構造である場合。
4430,メソッドに渡される引数、例えばグラフパラメータ(<code>par</code>を参照) 多くのメソッドは以下の引数を受け取ります：

4431、どのようなプロットを描くべきか。  考えられるタイプは

4432,<code>"p"</code>は<b>p</b>ointsのために、
4433,<code>"l"</code>は<b>l</b>ines.のためのものです、
4434,<code>"b"</code>は<b>b</b>oth</b>のために、
4435,<code>"c"</code> for the lines part alone of <code>"b"</code>、
4436,<code>"o"</code>両方の'<b>o</b>verplotted'に対応します、
4437,<code>"h"</code> '<b>h</b>istogram'のような(または'高密度')縦線に対応、
4438,<code>"s"</code>階段の<b>s</b>teps、
4439,<code>"S"</code> for other <b>s</b>teps, see 'Details' below、
4440,<code>"n"</code>はプロットなしを表します。
4441,All other <code>type</code>s gives a warning or an error; using, e.g., <code>type = "punkte"</code> is equivalent to <code>type = "p"</code> for Scompatibility.  <code>plot.factor</code>のようないくつかのメソッドは、これを受け入れないことに注意してください。
4442,プロットの全体的なタイトル: <code>title</code> を参照して下さい。
4443,プロットのサブタイトル: <code>title</code>を参照して下さい.
4444,x軸のタイトル: <code>title</code>を参照して下さい.
4445,y軸のタイトル: <code>title</code>を参照して下さい.
4446,<i>y/x</i>の縦横比:<code>plot.window</code>を参照して下さい。
4447,マッチングする値：<code>as.character</code>で文字ベクトルに変換されます.  長いベクトルがサポートされています。
4448,マッチングされる値：charactervectorに変換されます。  ロングベクターはサポートされていません。
4449,非マッチングまたは多重部分マッチング位置で返される値。  これは<code>integer</code>に強制されることに注意されたい。
4450,<code>table</code>に含まれる要素は、複数回使用されるべきか？
4451,数値または文字引数（注を参照）。
4452,欠損値を除去すべきかどうかを示す論理。
4453,数値または文字の引数(注を参照)。
4454,欠落している値を削除するかどうかを示す論理。
4455,数字または文字の引数（注参照）。
4456,欠落している値を削除するかどうかを示す論理。
4457,数字または文字の引数（注参照）。
4458,欠損値を除去すべきか否かを示す論理。
4459,多項式係数の増加順のベクトル。
4460,検索パスの長さを表す<code>1</code>から<code>length(search())</code>までの整数、または<code>-1<code>。
4461,適切なアリティの関数（<code>Reduce</code>ではバイナリ、<code>Filter</code>, <code>Find</code>と<code>Position</code>ではウナリ、<i>k</i>引数を伴って呼ばれる場合は<code>Map</code>では<i>k</i>-アリ）.  <code>Negate</code>のための任意の述語関数。
4462,ベクトル(vector)。
4463,an<span style="font-family：Courier New, Courier; color：<code>x</code>の要素と同じ種類の<b>R</b></span>オブジェクトである。
4464,左から右へ進むか(デフォルト)、右から左へ進むかを示す論理である。
4465,連続するreducecombinationを累積するかどうかを示す論理。  デフォルトでは、最後の組み合わせのみが使用されます。
4466,「no match」（述語を満たす要素がない）が見つかった場合に返される値。
4467、ベクター。
4468,<code>as.numeric</code>でnumericに保型されるオブジェクトです。
4469,インターバルの<em>希望数</em>を指定する整数値。  非整数の値は切り捨てられる.
4470,非負の整数で、<em>最小の</em>区間数を指定する。  <code>min.n == 0</code> の場合、<code>pretty(.)</code>は単一の値を返すかもしれません。
4471,正数, <code>range(x)</code> が非常に小さい場合(通常は0)にデフォルトのスケールを縮小する係数(1より小さい).
4472,非負の数値, 典型的には <i>&gt; 1</i>. 区間単位は {1,2,5,10} x <code>b</code>, 10乗として決定されます.  <code>high.u.bias</code>の値が大きければ大きいほど、大きな単位が好まれます。
4473,非負の数値倍率で、2より5を優先する。  デフォルトと「最適」：<code>u5.bias = .5 + 1.5*high.u.bias</code>.
4474,整数コード, {0,1,2}のいずれか。0でない場合、<em>epsilon補正</em>が境界で行われ、結果の境界が<code>range(x)</code>の外になるようにします。<em>small</em>の場合、<code>eps.correct &gt;= 2</code> の場合のみ補正が行われます。
4475,メソッドのための更なる引数。
4476,<code>as.numeric</code>によってnumericに保型されるオブジェクト。
4477,インターバルの<em>希望数</em>を与える整数.  非整数の値は切り捨てられます.
4478,非負の整数で、<em>最小</em>の区間数を指定します。  <code>min.n == 0</code> の場合、<code>pretty(.)</code>は単一の値を返すことがあります。
4479,正数, <code>range(x)</code>が非常に小さい場合(通常は0)に、デフォルトのスケールを縮小する係数(1より小さい)を指定します。
4480,非負の数値, 典型的には <i>&gt; 1</i>. 区間単位は {1,2,5,10} の <code>b</code> 倍、10のべき乗として決定されます。  <code>high.u.bias</code>の値が大きければ大きいほど、大きな単位が好まれます。
4481,非負の数値倍率で、2より5を優先する。  デフォルトと「最適」：<code>u5.bias = .5 + 1.5*high.u.bias</code>.
4482,整数コード, {0,1,2}のいずれか。0でない場合、<em>epsilon補正</em>が境界で行われ、結果の境界が<code>range(x)</code>の外になるようにします。<em>small</em>の場合、<code>eps.correct &gt;= 2</code> の場合にのみ補正が行われます。
4483,メソッドのための更なる引数。
4484,原子的な数値または文字オブジェクトで、<code>prettyNum()</code>の場合のみ<code>complex</code>の可能性があり、典型的には実数のアベクターです。  どのようなクラスでも、警告とともに破棄されます。
4485,小数点以下の桁数(<code>format = "f"</code>) または<em>significant</em> digits(<code>format = "g"</code>, <code>= "e"</code> or <code>= "fg"</code>) を指定します.

4486,Default: 整数の場合は2、実数の場合は4。  0未満の場合、Cのデフォルトである6桁が使用されます。  50以上指定した場合、<code>format = "f"</code> で通常324に制限される場合を除き、50が警告とともに使用されます。(OSやコンパイラによって異なりますが、15〜21桁までが正確な数字です。  この制限は、基礎となるCランタイムのセグメンテーション障害に対する予防策に過ぎません)。
<code>digits</code>と<code>width</code>の両方が未指定の場合、<code>width</code>のデフォルトは1、それ以外は<code>digits + 1</code>になります。  <code>width = 0</code> は<code>width = digits</code> を使い、<code>width &lt; 0</code> はこのフィールドの数字を左詰めにすることを意味します（<code> flag = "-"</code> と同等）。必要ならば、結果は<code>width</code> より多くの文字になるはずです。  文字データの場合、これは文字数で解釈されます（バイト数でも表示幅でもありません）。
4488,<code>"d"</code> (整数), <code>"f"</code>, <code>"e"</code>, <code>"E"</code>, <code>"g"</code>, <code>"G"</code>, <code>"fg"</code> （小数）, または <code>"s"</code> （文字列） と一致します.  デフォルトは、整数の場合は<code>"d"</code>、実数の場合は<code>"g"</code>です。

4489,<code>"f"</code>は通常の<code>xxx.xxx</code>形式の数字を与え、<code>"e"</code>と<code>"E"</code>は <code>n.ddde+nn</code> または<code>n.dddE+nn</code> (科学的形式); <code>"g"</code> と <code>"G"</code> は <code>x[i]</code> を、スペースを節約できる場合のみ科学的形式にし、</em>末尾のゼロと小数点を削除する - <code>flag</code> に <code>"#"</code> が含まれていなければ、<coord>"g", "G"</code> 形式では末尾ゼロはそのまま。

4490,<code>"fg"</code>（独自のハイブリッドフォーマット）は、<code>"f"</code>として固定フォーマットを使用しますが、<code>digits</code>を有効数字の最小数として使用します。  <code>signif</code> とは異なり、これは <code>digits</code> よりも有効桁数の多い大きな数字を表示することに注意してください。  このフォーマットでは、<code>flag</code>に<code>"#"</code>が含まれていない限り、末尾のゼロは<em>dropped</em>されます。
4491,<code>formatC</code>の場合は，Kernighan and Ritchie (1988, page 243) またはC+99標準のようなフォーマット修飾子を与える文字列である。

4492,先頭のゼロをパッドします；
4493,左の調整を行う、
4494,全ての場合において符号を確保する、すなわち正の数に対しては<code>"+"</code>とする、
4495,最初の文字が符号でない場合、代わりにスペース文字<code>" "</code>が使用されます。
4496,特に<code>format</code>に依存して、「代替出力形式」を指定する。
4497,プラットフォームとロケールの組み合わせで、10進数変換のために「千のグループ化」を有効にする、
4498,「<span class="file">glibc</span> 」のいくつかのバージョンで、ロケールの代替出力桁があれば、それを使用する整数変換を許可する。
4499,これらのフラグは、どのような順序でも、複数個存在することができます。  その他の文字は、<code>文字</code>のフォーマットには影響しませんが、<span style="font-family.Courier, Courier;">のようなエラーシグナルを発します：Courier New, Courier; color：#666666;"><b>R</b></span> 3.4.0.
4500,<code>"double"</code>（または<code>"real"</code>）,<code>"integer"</code>または<code>"character"</code>.Default：<code>x</code>の記憶モードから決定される。
4501,character;空でない場合、<code>big.interval</code>小数の<em>前</em>(したがって<code>big</code>)の小数点間のマークとして使用。
4502,上記の<code>big.mark</code>を参照; デフォルトは3です.
4503,文字; 空でない場合、<code>small.interval</code>の小数点以下(つまり<code>small</code>)の間のマークとして使用します。
4504,上記の<code>small.mark</code>を参照; デフォルトは5です。
4505,数値の小数点を示すために使用される文字。
4506,<code>x</code>が<code>character</code>の場合、<code>x</code>の小数点として使用されたことが知られている文字が使用されます。
4507,マーク（<code>big.mark</code>または<code>small.mark</code>）が追加された場合に、文字列の幅を可能な限り保持するかどうかを指定する文字列。  <code>"common"</code>は、<code>format</code>的な動作に対応し、<code>"individual"</code>は、<code>formatC() </code> のデフォルトとなります。値は省略可能です。
4508,論理、文字列、または<code>NULL</code>で、<em>ゼロ</em>が特別にフォーマットされるべきかどうか、どのようにフォーマットされるべきかを指定します。  疎な'オブジェクトをきれいに印刷するのに便利である。
4509,logical; <code>zero.print</code> が文字列の場合、<code>x</code>の正確なゼロの項目が、<code>zero.print</code>で単に置き換えられるべきかを示します。  そうでない場合は、それぞれの文字列の幅に応じて、（フォーマットされた）ゼロは<em>部分的に</em> <code>zero.print</code> によって置き換えられ、右側に <code>" "</code> が追加されます（該当）。  その場合(偽の<code>replace[.zero]</code>)、<code>zero.print</code>文字列が適合しない場合、警告が出されます(<code>warn.non.fitting<code>が真の場合)。

4510,これは<code>prettyNum()</code>を介して動作し、この場合<code>.format.zeros(*, replace=replace.zero)</code> を3回呼び出します、「詳細」を参照して下さい。
4511,logical;trueの場合、<code>replace[.zero]</code>がfalseで、<code>zero.print</code>文字列が適合しない場合は、<code>warning</code>が通知される。
4512,論理的で、小数点以下のゼロ、すなわち<code>"0"</code>が削除されるべきかどうかを示します; また、指数形式では<code>"e+00"</code>を落とします。  これは単に<code>prettyNum()</code>に渡されます。
4513,オプションの論理で、<code>x</code>が<code>"character"</code>の時に使用し、それが<code>complex</code>ベクトルに由来するか否かを示すものである。  デフォルト(<code>NA</code>)では、<code>x</code>は複素数のように見えるかどうかチェックされます。
4514,<code>format</code>に渡される引数。
4515,<code>x</code>と同じ長さの数値ベクトル、典型的には、文字ベクトル<code>x</code>がプレフォーマットとなる数値である。
4516,メソッドを選択するために使用されるオブジェクト。
4517,他のメソッドに、または他のメソッドから渡される更なる引数。
4518,論理。文字列を引用符で囲んで印刷するかどうかを示す。
<code>0</code>の場合、余分な "Levels "行は印刷されない。  デフォルトの<code>NULL</code>は、<code>max.levels</code>を選択して、幅<code>width</code>の1行にレベルが印刷されるようにするものです。
4520,<code>max.levels</code>がNULLの時のみ使用されます(上記参照)。
4521,<em>有意な</em>最小桁数、<code>print.default</code>を参照のこと.
4522,印刷出力で<code>NA</code>値を示す文字列(または<code>NULL</code>), <code>print.default</code> を参照.
4523,ゼロ(<code>0</code>)がどのように印刷されるべきかを指定する文字; 疎なテーブルの場合、<code>"."<code>を使うと、<a href="https://CRAN.R-project.org/package=Matrix"><span class="pkg">Matrix</span></a> で疎のマトリックスを印刷するのと同様に、より読みやすい結果を得ることができます.
4524,文字列を右寄せにするか否かを示す論理値。
4525,文字列が左寄せか右寄せかを示す文字で、<code>format</code>に渡されます。
4526,例えば、<code>options(keep.source = TRUE)</code>が使用されていた場合、内部で保存されたソースを印刷に使用すべきかどうかを示す論理的なものである。
4527,オブジェクト
4528,アン <span style="font-family：Courier New, Courier; color：<b>R</b></span>オブジェクトで、通常はデータフレーム、場合によっては行列です。
4529,長さ<code>nrow(data)</code>の因子または因子のリスト.
4530,<code>data</code>の（通常はデータフレームの）部分集合に適用される関数.
4531,<code>FUN</code>への更なる引数。
4532,論理：<code>tapply</code>を参照して下さい。
4533,条件オブジェクト。
4534,呼び出し式。
4535,条件オブジェクト。
4536,評価される式。
4537,リターンまたは終了する前に評価される式。
4538、関数
4539,文字列。
4540、文字列
4541,再起動の名前を付ける文字列。
4542,再始動オブジェクト。
4543,オブジェクト。
4544,条件クラスの名前を指定する文字列。
4545,追加引数。詳細は以下を参照。
4546,文字列。  接続の説明：'詳細'を参照してください。
4547,文字列。  接続を開く方法(最初に開くべき場合)を説明します。  可能な値については、「モード」のセクションを参照してください。
4548,論理。  ブロッキング」セクションを参照してください。
4549,想定されるエンコーディングの名前です。  エンコード'セクションを参照。
4550,論理。  trueを指定すると、通常のファイルではない引数(例えばキャラクタデバイス)に適した「raw」インターフェースが使用されます。  これは、テキストモードの読書用に開くときに圧縮ファイルのチェックを抑制し、「ファイル」がシーク可能でない可能性があることを表明する。
4551,文字列、<code>c("default", "internal", "wininet", "libcurl")</code> に部分的にマッチします:「詳細」参照。
4552,HTTPrequestsで使用するHTTPヘッダーの名前付き文字ベクトルです。  非HTTP URLの場合は無視されます。  <code>HTTPUserAgent</code> オプション (<code>options</code> を参照) から得られる <code>User-Agent</code> ヘッダーは、自動的に最初のヘッダーとして使われます。
4553,0-9の整数値。  書き込み時に適用される圧縮の量を、なしから利用可能な最大値まで指定します。  <code>xzfile</code>の場合、負の値も指定できます: '圧縮'のセクションを参照して下さい。
4554,数値：この接続に使用されるタイムアウト（秒単位）です。  OSによっては、非常に大きな値をゼロとして扱うことがあるので注意してください：しかし、POSIX標準では、31日までの値をサポートすることを要求しています。
4555,オプションの文字ベクトル。現在、TCPソケットでは<code>"no-delay"</code>のみがサポートされています。
4556,ZIPファイル内のファイル名。
4557,文字列。  ポートのホスト名。
4558,整数。  TCPポート番号。
4559,論理。  ソケットはクライアントとサーバーのどちらであるべきですか？
4560,コネクションをリッスンするサーバーソケットです。
4561,コネクションです。
4562,文字列。  現在、無視されています。
4563,文字列。  空または<code>"read"</code>または<code>"write"</code>、部分一致が許可されています。
4564,他のメソッドに渡される、または他のメソッドから渡される引数。
4565,クラス<code>data.frame</code>のオブジェクト。
4566,<code>print</code>メソッドへのオプション引数。
4567,使用される有効数字の最小数：<code>print.default</code>を参照して下さい。
4568,論理的なもので、エントリーを引用符で囲んで印刷するかどうかを指定します。
4569,論理、文字列を右寄せにするかどうかを指定します。  デフォルトは右寄せである。
4570,論理(または文字ベクトル)、行名を印刷するかどうか(または何を印刷するか)を指定します。
4571,数値または<code>NULL</code>、印刷されるエントリの最大数を指定する。  デフォルトでは、<code>NULL</code>の時、<code>getOption("max.print")</code>が使われます。
4572,要約または印刷される<code>Date</code>オブジェクトを指定します。
4573,計算のための有効数字の桁数。
4574,数値または<code>NULL</code>で、印刷されるエントリの最大数を指定する。  デフォルトでは、<code>NULL</code>の場合、<code>getOption("max.print")</code>が使用されます.
4575,他のメソッドから、または他のメソッドに渡される更なる引数。
4576,印刷されるオブジェクト。
4577,<code>digits</code>の非NULL値は、値で印刷されるべき有効数字の最小値を指定します。  デフォルトの<code>NULL</code>は、<code>getOption("digits")</code>を使用します。  (複素数の解釈については<code>signif</code>を参照してください。)非整数の値は切り捨てられ、1以上22以下の値のみが受け付けられます。
4578,文字列(<code>character</code>s)を引用符で囲んで印刷するかどうかを示す論理値です。
4579,印刷出力で<code>NA</code>値を示すために使用される文字列、または<code>NULL</code>(「詳細」参照).
4580,非負の整数<i>≦1024</i>、又は<code>NULL</code>（1を意味する）、印刷されたベクトル、行列及び配列における隣接する列の間隔を与える。
4581,文字列を右寄せにするかどうかを指定する論理値。  デフォルトは左揃えである。
4582,<code>max</code>に非NULL値を指定すると、印刷されるエントリの最大数の近似値を指定します。  デフォルトの<code>NULL</code>は、<code>getOption("max.print")</code>を使用します：詳細については、そのヘルプページを参照してください。
4583,ベクトルや行列などの印刷に使用される行の最大列数を制御します。  デフォルトの<code>NULL</code>は、<code>getOption("width")</code>を使用します: 許容値を含むより詳細な情報は、そのヘルプ・ページを参照して下さい.
4584,logical,言語オブジェクトをデパースするのではなく、ソース参照やコピーを使用するかどうかを示します。デフォルトは、オリジナルのソースが利用可能であれば、それを使用することです。
4585,他のメソッドに渡す、または他のメソッドから渡される追加の引数。  それらはこの関数では無視されます。
4586,date-timeまたはdateオブジェクト。
4587,変換に使用されるオプションのタイムゾーン指定、主に<code>"POSIXlt"</code>オブジェクトの場合。
4588,文字列。  変換結果の単位を指定します。  省略可能です。
4589,文字列.  <code>units</code>と同様だが、省略はできない。
4590,時間間隔を指定する文字列または数値。
4591,<code>tim</code>のフォーマットを指定する文字：<code>strptime</code>を参照。  デフォルトは、ロケール固有の時間フォーマットである。
4592,クラス<code>"difftime"</code>を継承したオブジェクトです。
4593,他のメソッドに渡す、または他のメソッドから渡される引数。
4594,メソッドを選択するために使われるオブジェクトです。
4595,他のメソッドに渡される、または他のメソッドから渡される更なる引数。
4596,論理、文字列を引用符で囲んで表示するかどうかを示す。
<code>0</code>の場合、余分な "Levels "行は印刷されない。  デフォルトの<code>NULL</code>は、<code>max.levels</code>を選択して、幅<code>width</code>の1行にレベルが印刷されるようにするものです。
4598,<code>max.levels</code>がNULLの時のみ使用されます, 上記参照.
4599,<em>有意な</em>最小桁数、<code>print.default</code>を参照のこと.
4600,印刷出力で<code>NA</code>値を示す文字列(または<code>NULL</code>), <code>print.default</code> を参照.
4601,ゼロ(<code>0</code>)がどのように印刷されるべきかを指定する文字; 疎なテーブルの場合、<code>"."<code>を使うと、<a href="https://CRAN.R-project.org/package=Matrix"><span class="pkg">Matrix</span></a> における疎なマトリックスの印刷と同様に、読みやすい結果が得られる。
4602,文字列を右寄せにするか否かを示す論理値。
4603,文字列を左寄せ、右寄せにするか、そのままにするかを示す文字で、<code>format</code>に渡されます。
4604,例えば<code>options(keep.source = TRUE)</code>が使用されている場合、内部的に保存されたソースを印刷に使用すべきかどうかを示す論理。
4605,文字列または<code>DLLInfo</code>オブジェクト。文字列は、対象のDLLのファイル名を指定し、ファイル名拡張子なしで与えられる（例．<span class="file">.dll</span>' や '<span class="file">.so</span>' などのファイル名拡張子はなく、ディレクトリ/パス情報はありません。したがって、ファイル '<span class="file">MyPackage/libs/MyPackage.so</span>' は<span class="samp">MyPackage</span> として指定します。

4606,<code>DLLInfo</code>オブジェクトは、<code>dyn.load</code>と<code>library.dynam</code>の呼び出しで直接得ることができ、または、DLLのロード後に、<code>dllInfo</code>オブジェクトのリスト (DLL file nameによるインデックス可能) を返す、<code>getLoadedDLLs</code>を利用して発見できる。

4607,<code>DLLInfo</code>のアプローチは、同じ名前を持つが異なるディレクトリのファイルに対応する2つのDLLに関連する曖昧さを回避することができる。
4608,論理値である。  これが<code>TRUE</code>の場合、返されるリストの要素は、ルーチンの名前（登録または生の名前によってRによって見られる）を使用して命名される。  <code>FALSE</code>の場合、これらの名前は計算されず、リストに割り当てられます。  その結果、呼び出しはより速くなるはずです。  名前情報は、リスト内の<code>NativeSymbolInfo</code>オブジェクトでも利用可能です。
4609,スペクトル分解を計算する数値または複素行列です。  論理行列は数値に強制される。
4610,<code>TRUE</code>の場合、行列は対称（複素数の場合はエルミート）であると仮定され、その下三角形（対角線を含む）だけが使用されます.  <code>symmetric</code> が指定されない場合、<code>isSymmetric(x)</code>が使用されます。
4611,<code>TRUE</code>の場合、固有値のみが計算されて返され、それ以外の場合は固有値と固有ベクトルの両方が返される。
4612,論理的である。無効であり、無視される。
4613,メソッドを選択するために使用されるオブジェクト。
4614,他のメソッドに、または他のメソッドから渡される更なる引数。
4615,論理。文字列を引用符で囲んで印刷するかどうかを示します。
4616,integer,因子に対していくつのレベルを印刷するかを示す。<code>0</code>の場合、余分な「Levels」行は印刷されない。  デフォルトの<code>NULL</code>は、<code>max.levels</code>を選択して、幅<code>width</code>の1行にレベルが印刷されるようにするものです。
4617,<code>max.levels</code>がNULLの時のみ使用されます(上記参照)。
4618,<em>有意な</em>最小桁数、<code>print.default</code>を参照のこと.
4619,印刷出力で<code>NA</code>値を示す文字列(または<code>NULL</code>), <code>print.default</code> を参照.
4620,ゼロ(<code>0</code>)がどのように印刷されるべきかを指定する文字; 疎なテーブルの場合、<code>"."<code>を使うと、<a href="https://CRAN.R-project.org/package=Matrix"><span class="pkg">Matrix</span></a> で疎のマトリックスを印刷するのと同様に、より読みやすい結果を得ることができます.
4621,文字列を右寄せにするか否かを示す論理。
4622,文字列を左寄せ、右寄せにするか、そのままにするかを示す文字で、<code>format</code>に渡されます。
4623,例えば<code>options(keep.source = TRUE)</code>が使用されている場合、内部で保存されたソースを印刷に使用すべきかどうかを示す論理です。
4624,メソッドを選択するために使用されるオブジェクト。
4625,他のメソッドに、または他のメソッドから渡される更なる引数。
4626,論理。文字列を引用符で囲んで印刷するかどうかを示す。
<code>0</code>の場合、余分な "Levels "行は印刷されない。  デフォルトの<code>NULL</code>は、<code>max.levels</code>を選択して、幅<code>width</code>の1行にレベルが印刷されるようにするものです。
4628,<code>max.levels</code>がNULLの時のみ使用されます, 上記参照.
4629,<em>有意な</em>最小桁数、<code>print.default</code>を参照のこと.
4630,印刷出力で<code>NA</code>値を示す文字列(または<code>NULL</code>), <code>print.default</code> を参照.
4631,ゼロ(<code>0</code>)がどのように印刷されるべきかを指定する文字; 疎なテーブルの場合、<code>"."<code>を使うと、<a href="https://CRAN.R-project.org/package=Matrix"><span class="pkg">Matrix</span></a> で疎のマトリックスを印刷するのと同様に、より読みやすい結果を得ることができます.
4632,文字列を右寄せにするか否かを示す論理。
4633,文字列を左寄せ、右寄せにするか、そのままにするかを示す文字で、<code>format</code>に渡されます。
4634,例えば<code>options(keep.source = TRUE)</code>が使用されていた場合、内部で保存されたソースを印刷に使用すべきかどうかを示す論理的なものである。
4635,クラス<code>"hexmode"</code>から継承したメソッドのための、オブジェクトです。
4636,<code>NULL</code>または、使用される最小フィールド幅を指定する正の整数で、先行ゼロによるパディングを行う。
4637,大文字と小文字のどちらを使用するかを示す論理(デフォルト)。
4638,他のメソッドに渡される、または他のメソッドから渡される追加の引数。
4639,パッケージの名前。<code>character.only</code>が<code>FALSE</code>（デフォルト）か<code>TRUE</code>かによって、名前か文字列、または文字列として与えられる。
4640,ロードされた名前空間を付ける検索リスト上の位置。  また、<code>search()</code>によって与えられる現在の検索リスト上の位置の名前であることもできる。
4641,a character vector describing the location of <span style="font-family：Courier New, Courier; color：#または<code>NULL</code>です。  デフォルトの<code>NULL</code>は、現在<code>.libPaths()</code>で知られているすべてのライブラリに対応します。存在しないライブラリツリーは黙って無視されます。
4642,<code>package</code>または<code>help</code>が文字列であると仮定することができるかどうかを示す論理である。
4643,論理的である。  <code>TRUE</code>であれば<code>FALSE</code>、<code>TRUE</code>であれば成功を示す。
4644,論理的である。  <code>TRUE</code>の場合、newpackageのアタッチによる<code>conflicts</code>について警告が表示される。  競合とは、関数をマスクする関数、または非関数をマスクする非関数のことです。デフォルトは、<code>conflicts.policy</code>オプションで<code>FALSE</code>と指定されていない限り、<code>TRUE</code>です。
4645,a論理的である。  <code>TRUE</code>の場合、追加の診断が印刷されます。
4646,論理的である。  <code>TRUE</code>の場合、パッケージの取り付けを確認するメッセージは表示されず、多くの場合、パッケージの取り付けに失敗してもエラー/警告は表示されない。
4647,パッケージの名前を示す文字列。
4648,ストリクトコンフリクトチェックが有効な場合に、エラーを出さずに検索パス上のオブジェクトをマスクできるオブジェクトの名前の文字ベクトルです。
4649,添付フレームに除外または含めるオブジェクトの名前の文字ベクトル。これらの引数は、<code>library</code>または<code>require</code>の呼び出しで1つだけ使用することができる。
4650,<code>DESCRIPTION</code>ファイルの<code>Depends</code>句にリストされた必須パッケージが自動的に添付されるべきかを指定する論理。
4651,メソッドを選択するために使用されるオブジェクト。
4652,他のメソッドに、または他のメソッドから渡される更なる引数。
4653,論理、文字列を引用符で囲んで印刷するかどうかを示す。
<code>0</code>の場合、余分な "Levels "行は印刷されない。  デフォルトの<code>NULL</code>は、<code>max.levels</code>を選択して、幅<code>width</code>の1行にレベルを印刷することを意味する。
4655,<code>max.levels</code>がNULLの時のみ使用されます, 上記参照.
4656,<em>有効数字</em>の最小数、<code>print.default</code>を参照のこと.
4657,印刷出力で<code>NA</code>値を示す文字列(または<code>NULL</code>), <code>print.default</code> を参照.
4658,ゼロ(<code>0</code>)がどのように印刷されるべきかを指定する文字; 疎なテーブルの場合、<code>"."<code>を使うと、<a href="https://CRAN.R-project.org/package=Matrix"><span class="pkg">Matrix</span></a> で疎のマトリックスを印刷するのと同様に、より読みやすい結果を得ることができます.
4659,文字列を右寄せにするか否かを示す論理。
4660,文字列を左寄せ、右寄せにするか、そのままにするかを示す文字で、<code>format</code>に渡されます。
4661,例えば<code>options(keep.source = TRUE)</code>が使用されていた場合、内部で保存されたソースを印刷に使用すべきかどうかを示す論理。
4662,文字列または<code>DLLInfo</code>オブジェクト。文字列は、対象となるDLLのファイル名を指定し、ファイル名拡張子なしで与えられる（例．<span class="file">.dll</span>' や '<span class="file">.so</span>' などのファイル名拡張子はなく、ディレクトリ/パス情報はありません。したがって、ファイル '<span class="file">MyPackage/libs/MyPackage.so</span>' は<span class="samp">MyPackage</span> として指定します。

4663,<code>DLLInfo</code>オブジェクトは、<code>dyn.load</code>と<code>library.dynam</code>の呼び出しで直接得ることができ、または、<code>DLLInfo</code>オブジェクトのリスト (DLL file nameでインデックス可能) を返す、<code>getLoadedDLLS</code>を使用して、 DLLの読み込み後見つけることができます。

4664,<code>DLLInfo</code>アプローチは、同じ名前を持ちながら異なるディレクトリのファイルに対応する2つのDLLに関連する曖昧さを回避することができます。
4665,論理値である。  これが<code>TRUE</code>の場合、返されるリストの要素は、ルーチンの名前（登録または生の名前によってRによって見られる）を使用して命名される。  <code>FALSE</code>の場合、これらの名前は計算されず、リストに割り当てられます。  その結果、呼び出しはより速くなるはずです。  名前情報は、リスト内の<code>NativeSymbolInfo</code>オブジェクトでも利用可能です。
4666,any <span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクト、典型的には<code>character</code>文字列のベクトルです。
4667,オプションの<code>logical</code>は、<code>print()</code>に渡され、<code>print.default()</code>が使用し、右寄せにするかどうかを示すものである。
4668,クラス<code>"noquote"</code>のオブジェクトです。
4669,次のメソッド（<code>print</code>など）に渡されるさらなるオプション。
4670,汎用<code>c</code>関数との互換性のため。
4671,適切な数値バージョン文字列を持つ文字ベクトル(「詳細」参照); <code>package_version</code> の場合、代わりに <code>R.version</code> によって得られる Rversion オブジェクトがある。
4672,無効な数値バージョンはエラーになるか(デフォルト)、ならないかを示す論理。
4673,クラス<code>"octmode"</code>を継承するメソッドのためのオブジェクトです。
4674,<code>NULL</code>または、使用される最小フィールド幅を指定する正の整数で、先頭のゼロでパディングされます。
4675,他のメソッドに渡される、または他のメソッドから渡される追加の引数。
4676,パッケージの名前。<code>character.only</code>が<code>FALSE</code>（デフォルト）か<code>TRUE</code>かによって、名前かリテラル文字列か文字列として与えられる。
4677,ロードされた名前空間をアタッチする検索リスト上の位置。  また、<code>search()</code>によって与えられる現在の検索リスト上の位置の名前であることもできます。
4678,a character vector describing the location of <span style="font-family：Courier New, Courier; color：<br>R</b></span>Library Treeを検索する場所を記述する文字ベクトル、または<code>NULL</code>です。  デフォルトの<code>NULL</code>は、現在<code>.libPaths()</code>で知られているすべてのライブラリに対応する。存在しないライブラリツリーは黙って無視される。
4679,<code>package</code>または<code>help</code>が文字列であると仮定することができるかどうかを示す論理である。
4680,論理的である。  <code>TRUE</code>であれば<code>FALSE</code>、<code>TRUE</code>であれば成功を示す。
4681,論理的である。  <code>TRUE</code>の場合、newpackageのアタッチによる<code>conflicts</code>について警告がプリントされる。  競合とは、関数をマスクする関数、または非関数をマスクする非関数のことです。デフォルトは、<code>conflicts.policy</code>オプションで<code>FALSE</code>と指定されていない限り、<code>TRUE</code>です。
4682,a論理的である。  <code>TRUE</code>の場合、追加の診断が印刷されます。
4683,論理的である。  <code>TRUE</code>の場合、パッケージの取り付けを確認するメッセージは表示されず、多くの場合、パッケージの取り付けに失敗してもエラー/警告は表示されない。
4684,パッケージの名前を示す文字列。
4685,ストリクトコンフリクトチェックが有効な場合に、エラーを出さずに検索パス上のオブジェクトをマスクできるオブジェクトの名前の文字ベクトルです。
4686,添付フレームに除外または含めるオブジェクトの名前の文字ベクトル。これらの引数は、<code>library</code>または<code>require</code>の呼び出しで1つだけ使用することができる。
4687,<code>DESCRIPTION</code>ファイルの<code>Depends</code>句にリストされた必須パッケージが自動的に添付されるべきかを指定する論理。
4688,date-timeクラスの1つから印刷または要約されるオブジェクトを指定します。
4689,タイムゾーンフォーマットのために、<code>format.POSIXct</code>に渡される。
4690,数値または<code>NULL</code>で、印刷されるエントリの最大数を指定します。  デフォルトでは、<code>NULL</code>の時、<code>getOption("max.print")</code>が使われます。
4691,計算の有効桁数:最も重要な時間単位を正確に表すのに十分な桁数であるべきです。
4692,他のメソッドから、または他のメソッドに渡される更なる引数。
4693,日付-時間オブジェクト
4694,日付-時間オブジェクトまたは文字ベクトル。  (文字ベクトルは<code>as.POSIXct</code>によって変換されます)。
4695,数値ベクトル(秒単位)
4696,<code>==</code>、<code>!=</code>、<code>&lt;</code>、<code>&lt;=</code>または<code>&gt;=</code>のいずれか一つ。
4697,date-timeクラスの1つから印刷または要約されるオブジェクトを指定します。
4698,タイムゾーンフォーマットのために、<code>format.POSIXct</code>に渡されます。
4699,数値または<code>NULL</code>で、印刷されるエントリの最大数を指定します。  デフォルトでは、<code>NULL</code>の時、<code>getOption("max.print")</code>が使用されます。
4700,計算の有効桁数:最も重要な時間単位を正確に表現するのに十分な桁数でなければならない。
4701,他のメソッドから、または他のメソッドに渡される更なる引数。
4702,日付時刻オブジェクト
4703、日付-時間オブジェクトまたは文字ベクトル。  (文字ベクトルは<code>as.POSIXct</code>で変換されます)。
4704,数値ベクトル(秒単位)
4705,<code>==</code>、<code>!=</code>、<code>&lt;</code>、<code>&lt;=</code>または<code>&gt;=</code>のいずれか1つ。
4706,条件オブジェクト。
4707、呼び出し式。
4708,条件オブジェクト。
4709,評価される式。
4710,リターンまたは終了する前に評価される式。
4711、関数
4712,文字列。
4713,文字列。
4714,再始動に名前を付ける文字列。
4715,再始動オブジェクト。
4716,オブジェクト。
4717,条件クラスを指定する文字列。
4718,追加引数; 以下の詳細を参照。
4719,<code>rle()</code>の場合はベクトル（アトミック、リストではない）;<code>inverse.rle()</code>の場合はクラス<code>「rle」</code>のオブジェクト.
4720,その他の引数; ここでは無視されます。
4721,印刷のための有効桁数、<code>print.default</code>を参照.
4722,文字列、印刷された各行の前に付加されます。
4723,メソッドを選択するために使用されるオブジェクトです。
4724,他のメソッドに、又は他のメソッドから渡される更なる引数。
4725,論理、文字列を引用符で囲んで印刷するか否かを示す。
<code>0</code>の場合、余分な "Levels "行は印刷されない。  デフォルトの<code>NULL</code>は、<code>max.levels</code>を選択して、幅<code>width</code>の1行にレベルが印刷されるようにするものです。
4727,<code>max.levels</code>がNULLの時のみ使用されます, 上記参照.
4728,<em>有意な</em>最小桁数、<code>print.default</code>を参照のこと.
4729,印刷出力で<code>NA</code>値を示す文字列(または<code>NULL</code>), <code>print.default</code> を参照.
4730,ゼロ(<code>0</code>)がどのように印刷されるべきかを指定する文字; 疎なテーブルの場合、<code>"."<code>を使うと、<a href="https://CRAN.R-project.org/package=Matrix"><span class="pkg">Matrix</span></a> における疎なマトリックスの印刷と同様に、読みやすい結果が得られる。
4731,文字列を右寄せにするか否かを示す論理。
4732,文字列が左寄せか右寄せかを示す文字で、<code>format</code>に渡されます。
4733,例えば<code>options(keep.source = TRUE)</code>が使用されていた場合、内部で保存されたソースを印刷に使用すべきかどうかを示す論理。
4734、ファイル名。
4735、ファイルに対して仮定する文字エンコーディング。
4736, 文字列を作るためのエンコーディング: <code>parse</code> の <code>encoding</code> 引数を参照してください。
4737、ソース行の文字ベクトル。  その他、<span style="font-family：Courier New, Courier; color：<b>R</b></span> オブジェクトは、文字に強制されます。
4738、ファイルのコピーで使用するタイムスタンプ。
4739、この<code>srcfilecopy</code>は、ファイルシステムファイルから来ることが知られているか？
4740、<code>srcfile</code> オブジェクト。
4741, 行番号。
4742, ソース位置を示す4、6、または8個の値のベクトル; 「詳細」を参照。
4743、適切なクラスのオブジェクト。
4744, <code>srcref</code> のテキストを取得するために <code>srcfile</code> を読むかどうか。
4745、文字範囲の終わりを示すためのオプションの2番目の<code>srcref</code>オブジェクトを指定する。
4746、メソッドへの追加の引数、これらは無視されます。
4747、ファイル名。
4748、ファイルに対して仮定する文字エンコーディング。
4749, 文字列を作るためのエンコーディング: <code>parse</code> の <code>encoding</code> 引数を参照してください。
4750, ソース行の文字ベクトル。  その他、<span style="font-family：Courier New, Courier; color：<b>R</b></span> オブジェクトは、文字に強制されます。
4751、ファイルのコピーに使用するタイムスタンプです。
4752、この<code>srcfilecopy</code>は、ファイルシステムファイルから来たことが知られているか？
4753, <code>srcfile</code>オブジェクト。
4754, 行番号。
4755, ソース位置を示す4、6、または8つの値のベクトル; 「詳細」を参照。
4756, 適切なクラスのオブジェクト。
4757, <code>srcref</code> のテキストを取得するために <code>srcfile</code> を読むかどうか。
4758、文字範囲の終わりを示すためのオプションの2番目の<code>srcref</code>オブジェクトを指定する。
4759、メソッドへの追加の引数、これらは無視されます。
4760,因子（文字列を含む）として解釈できる1つ以上のオブジェクト、またはその構成要素がそのように解釈できるリスト（またはデータフレーム）。  (<code>as.table</code>では、特定のメソッドに渡される引数; <code>as.data.frame</code>では、未使用。)
4761,<code>...</code>のすべての要因について除去するレベル。  itが<code>NA</code>を含まず、<code>useNA</code>が指定されていない場合、<code>useNA = "ifany"</code> を意味する。  非要素引数に対する解釈は、'Details'を参照。
4762,表に<code>NA</code>の値を含めるかどうか'Details'を参照。  省略可能です。
4763,結果の次元に与える名前（<em>dimnames names</em>）を指定します。
4764,デフォルトの<code>dnn</code>がどのように構成されるかを制御します。  詳細'を参照。
4765,任意の<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>オブジェクト、または<code>as.data.frame</code>メソッドのクラス<code>"table"<code>を継承したオブジェクト。なお、<code>as.data.frame.table(x, *)</code> は、<code>array</code>を「整形」するためにテーブル以外の <code>x</code> に対して明示的に呼ばれることがある。
4766,データフレームの行名を与える文字ベクトル。
4767,テーブルエントリーの列に使用される名前、通常はカウントです。
4768,論理：分類因子は、因子（デフォルト）または文字ベクトルとして返されるべきか？
4769,<code>provideDimnames</code>に渡される。
4770,<code>cat</code>に渡される引数（<code>warnings()</code>用）.
4771,<code>warnings()</code>が返す<code>"warnings"</code>オブジェクト。
4772,<code>"warnings"</code>または<code>"summary.warnings"</code>オブジェクトを指定します。
4773,もし<code>missing</code>でなければ、<code>x</code>と同じ<code>長さの<code>文字</code>ベクトルで、メッセージに「ラベル」を付けるためのものです。  デフォルトは <code>n &lt;- length(x)</code> の場合、<i>n &gt;= 2</i> の <code>paste0(seq_len(n), ": ")</code> となります．
4774,メッセージを表示する前に表示される文字列<code>cat()</code>。
4775,要約が必要なオブジェクト。
4776,<code>summary()</code>の<em>default</em>メソッドの結果です.
4777,整数、<code>factor</code>のために何段階表示されるべきかを示す。
4778,integer、<code>signif()</code>（<code>summary.default</code>用）または<code>format()</code>（<code>summary.data.frame</code>用）で数値フォーマットを行う際に使用。  <code>summary.default</code>では、指定されていない場合（すなわち、<code>missing(.)</code>）、<code>signif()</code>はもう呼ばれません（なぜなら、<span style="font-family：Courier New, Courier; color：<br>R</b></span> &gt;= 3.4.0 で、デフォルトが <code>print</code> と <code>format</code> メソッドでラウンドのみに変更されました)。
4779,デフォルトメソッドの<code>quantile(*, type=quantile.type)</code> で使われる整数コードです。
4780,生成される要約に影響を与える追加引数。
4781,メソッドを選択するために使用されるオブジェクトです。
4782,他のメソッドに、または他のメソッドから渡される追加の引数。
4783,論理、文字列を引用符で囲んで印刷するかどうかを示す。
<code>0</code>の場合、余分な "Levels "行は印刷されない。  デフォルトの<code>NULL</code>は、<code>max.levels</code>を選択して、レベルが幅<code>width</code>の1行に印刷されるようにする。
4785,<code>max.levels</code>がNULLの時のみ使用されます, 上記参照.
4786,<em>有効数字</em>の最小数、<code>print.default</code>を参照のこと.
4787,印刷出力で<code>NA</code>値を示す文字列(または<code>NULL</code>), <code>print.default</code> を参照.
4788,ゼロ(<code>0</code>)がどのように印刷されるべきかを指定する文字; 疎なテーブルの場合、<code>"."<code>を使用すると、<a href="https://CRAN.R-project.org/package=Matrix"><span class="pkg">Matrix</span></a> における疎の行列の印刷と同様に、読みやすい結果を生成できます.
4789,文字列を右寄せにするか否かを示す論理。
4790,文字列を左寄せ、右寄せにするか、そのままにするかを示す文字で、<code>format</code>に渡されます。
4791,内部的に保存されたソースが存在する場合、印刷に使用されるべきかどうかを示す論理値。
4792,<code>cat</code>に渡される引数(<code>warnings()</code>の場合).
4793,<code>warnings()</code>が返す<code>"warnings"</code>オブジェクトです.
4794,<code>"warnings"</code>または<code>"summary.warnings"</code>オブジェクトを指定します。
4795,<code>missing</code>でなければ、<code>x</code>と同じ<code>length</code>の<code>character</code>ベクトルで、メッセージに「ラベル」を付けるためのもの。  デフォルトは <code>paste0(seq_len(n), ": ")</code> for<i>n &gt;= 2</i> where <code>n &lt;- length(x)</code>.
4796,メッセージを印刷する前に文字列<code>cat()</code>が表示されます。
4797,数値または文字行列.
4798,(オプション) 行名または列名をそれぞれ与える文字ベクトル.  デフォルトでは、これらは<code>dimnames(x)</code>から取得されます.
4799,logical; <code>TRUE</code> かつ <code>x</code> が mode<code>"character"</code> の場合, <em>quotes</em> (<span class="samp">"</span>) が使われます.
4800、<code>TRUE</code>で<code>x</code>がmode<code>"character"</code>の場合、出力列は<em>右</em>-justifiedである。
4801,どのように<code>NA</code>が印刷されるか。  これが非NULLの場合、その値は<code>NA</code>を表すのに使われる。
4802,<code>print</code>メソッドのための引数。
4803,数値または複素数または論理ベクトル。
4804,論理。  欠損値は削除されるべきか？
4805,テーブル
4806,分割する余白を与えるベクトル。例えば、行列の場合、<code>1</code>は行、<code>2</code>は列、<code>c(1, 2)</code> は行と列を示す。<code>x</code>にdimnamesが指定されている場合、次元名を選ぶ文字ベクトルになることができる。
4807,テーブル
4808,分割する余白を示すベクトル。例えば、行列の場合、<code>1</code>は行、<code>2</code>は列、<code>c（1、2）</code>は行と列を示す。<code>x</code>が名前の付いたdimnamesを持っているときは、寸法名を選ぶキャラクターベクトルになることができる。
4809,an <span style="font-family：Courier New, Courier; color：<b>R</b></span>オブジェクト、例えば行列、配列、データフレームなどです。
4810,<code>dimnames(x)</code>の可能な値: 「値」のセクションを参照して下さい。
4811,構成されたdimnamesの<code>base</code>記号と数字を分離するために使用される文字列です.
4812,文字ベクトルの空でない<code>list</code>です。  list成分は、空のdimnames成分の代替を構築するために順番に使用されます（必要な場合はリサイクルされます）。  例題も参照してください。
4813,構築されたdimnamesが<code>make.unique</code>の意味での各次元内でユニークであることを示す論理。
4814,非負の数値ベクトル.
4815,数値ベクトル.
4816,整数ベクトル.
4817,文字ベクトル.
4818,接続。
4819,論理。  trueの場合、押し戻された各文字列に改行が追加されます。
4820,文字列、部分的に一致する。  詳細を参照してください。
4821,文字ベクトル。
4822,接続です。
4823,論理的です。  trueの場合、押し戻された各文字列に改行が追加されます。
4824,文字列、部分一致。  詳細を参照してください。
4825,環境(ワークスペース)を保存すべきかどうかを示す文字列で、<code>"no"</code>, <code>"yes"</code>,<code>"ask"</code>または<code>"default"</code>から一つを選択します.
4826,オペレーティングシステムに返される（数値の）エラーステータス（関連する場合）。  通常、<code>0</code>は成功したことを意味する。
4827,<code>.Last()</code>は実行されるべきか？
4828,QR分解される数値または複素行列。  論理行列は数値に強制されます.
4829,<code>x</code>の列の線形依存性を検出するための許容範囲です.<code>LAPACK</code> が偽で<code>x</code>が実数の場合のみ使用されます。
4830,<code>qr</code>で計算されるタイプのQR分解です。
4831,方程式の右辺のベクトルまたは行列。
4832,QR分解または(<code>qr.solve</code>のみ)直交行列.
4833,有効ランク.
4834,論理的。  実数の<code>x</code>に対して、もしtrueならLAPACKを使い、そうでなければLINPACK（デフォルト）を使う。
4835,他のメソッドに渡される、または他のメソッドから渡される追加の引数
4836,QR分解が計算される数値または複素行列。  論理行列は数値に強制されます.
4837,<code>x</code>の列の線形依存性を検出するための許容範囲。<code>LAPACK</code> が偽で<code>x</code>が実数の場合のみ使用されます。
4838,<code>qr</code>で計算されるタイプのQR分解です。
4839,方程式の右辺のベクトルまたはマトリックス。
4840,QR分解または(<code>qr.solve</code>のみ)長方形の行列。
4841,有効ランク.
4842,論理的.  実数の<code>x</code>に対して、もしtrueならLAPACKを使い、そうでなければLINPACK（デフォルト）を使う。
4843,他のメソッドに渡される、または他のメソッドから渡される追加の引数
4844,QR分解が計算される数値または複素行列。  論理行列は数値に強制されます.
4845,<code>x</code>の列の線形依存性を検出するための許容範囲。<code>LAPACK</code> が偽で<code>x</code>が実数の場合のみ使用されます。
4846,<code>qr</code>で計算されるタイプのQR分解です。
4847,方程式の右辺のベクトルまたはマトリックス。
4848,QR分解または(<code>qr.solve</code>のみ)直交行列.
4849,有効ランク.
4850,論理的です。  実数の<code>x</code>に対して、もしtrueならLAPACKを使い、そうでなければLINPACK（デフォルト）を使う。
4851,他のメソッドに渡される、または他のメソッドから渡される追加の引数
4852,QR分解を計算する数値または複素行列。  論理行列は数値に強制されます.
4853,<code>x</code>の列の線形依存性を検出するための許容範囲.<code>LAPACK</code> が偽で<code>x</code>が実数の場合のみ使用されます。
4854,<code>qr</code>で計算されるタイプのQR分解です。
4855,方程式の右辺のベクトルまたはマトリックス。
4856,QR分解または(<code>qr.solve</code>のみ)直交行列.
4857,有効ランク.
4858,論理的。  実数<code>x</code>に対して、もしtrueならLAPACKを使い、そうでなければLINPACK（デフォルト）を使う。
4859,他のメソッドに渡される、または他のメソッドから渡される追加の引数
4860,QR分解を表すオブジェクト。  これは、典型的には、以前に<code>qr</code>または<code>lsfit</code>を呼び出したときに得られたものでしょう。
4861,長さ1の論理式。 <i>bold{Q}</i>または<i>bold{X}</i>行列を任意に直交補完するか、<i>bold{R}</i>行列をゼロ値行を四角い上三角形の下に結合して補完するか、を示す。
4862,範囲 <code>1:nrow(qr$qr)</code> の整数.  再構築された<i>bold{X}</i>に含まれる列の数を指定します。  <code>complete</code> が <code>FALSE</code> の場合のデフォルトは、qrオブジェクトを構築した元の<i>bold{X}</i>の最初の<code>min(ncol(X), nrow(X))</code> 列になります。  <code>complete</code> が <code>TRUE</code> の場合のデフォルトは、最初の <code>ncol(X)</code> 列が元の<i>bold{X}</i>で、残りの列が任意の直交補完（複素数の場合は単位補完）の正方行列になります。
4863,対角値のベクトル（行列ではない）。  返された<i>bold{Q}</i>の各列は、対応する対角値を乗算される。  デフォルトは全ての<code>1</code>sです。
4864,QR分解を行う数値行列または複素行列を指定します。  論理行列は数値に強制されます.
4865,<code>x</code>の列の線形依存性を検出するための許容値.<code>LAPACK</code>がfalseで<code>x</code>が実数の場合のみ使用されます.
4866,<code>qr</code>で計算されるタイプのQR分解です。
4867,方程式の右辺のベクトルまたはマトリックス。
4868,QR分解または(<code>qr.solve</code>のみ)直交行列.
4869,有効ランク.
4870,論理的。  実数<code>x</code>の場合、trueならLAPACKを、そうでなければLINPACK（デフォルト）を使用する。
4871,他のメソッドに渡される、または他のメソッドから渡される追加の引数。
4872,QR分解を計算する数値または複素行列。  論理行列は数値に強制されます.
4873,<code>x</code>の列の線形依存性を検出するための許容範囲。<code>LAPACK</code> が偽で<code>x</code>が実数の場合のみ使用されます。
4874,<code>qr</code>で計算されるタイプのQR分解です。
4875,方程式の右辺のベクトルまたはマトリックス.
4876,QR分解または(<code>qr.solve</code>のみ)直交行列.
4877,有効ランク.
4878,論理的.  実数の<code>x</code>に対して、もしtrueならLAPACKを、そうでなければLINPACK（デフォルト）を使用します。
4879,他のメソッドに渡される、または他のメソッドから渡される追加の引数
4880,QR分解を表すオブジェクト。  これは、典型的には、以前に<code>qr</code>または<code>lsfit</code>を呼び出したときに得られたものでしょう。
<i>bold{Q}</i>または<i>bold{X}</i>行列を任意に直交補完するか、<i>bold{R}</i>行列をゼロ値行を四角い上三角形の下に結合して補完するかを示す。
4882,範囲 <code>1:nrow(qr$qr)</code> の整数.  再構築された<i>bold{X}</i>に含まれる列の数を指定します。  <code>complete</code> が <code>FALSE</code> の場合のデフォルトは、qrオブジェクトを構築した元の<i>bold{X}</i>の最初の<code>min(ncol(X), nrow(X))</code> 列になります。  <code>complete</code> が <code>TRUE</code> の場合のデフォルトは、最初の <code>ncol(X)</code> 列が元の<i>bold{X}</i>で、残りの列が任意の直交補完（複素数の場合は単位補完）の正方行列になります。
4883,対角値のベクトル（行列ではない）。  返された<i>bold{Q}</i>の各列は、対応する対角値を乗算される。  デフォルトは全ての<code>1</code>sです。
4884,QR分解を行う数値行列または複素行列。  論理行列は数値に強制されます.
4885,<code>x</code>の列の線形依存性を検出するための許容値。<code>LAPACK</code> が偽で<code>x</code>が実数の場合のみ使用されます。
4886,<code>qr</code>で計算されるタイプのQR分解です。
4887,方程式の右辺のベクトルまたはマトリックス。
4888,QR分解または(<code>qr.solve</code>のみ)直交行列.
4889,有効ランク.
4890,論理的.  実数<code>x</code>の場合、trueならLAPACKを、そうでなければLINPACK（デフォルト）を使用します。
4891,他のメソッドに渡される、または他のメソッドから渡される追加の引数
4892,QR分解を計算する数値または複素行列。  論理行列は数値に強制されます。
4893,<code>x</code>の列の線形依存性を検出するための許容範囲。<code>LAPACK</code>がfalseで<code>x</code>が実数の場合のみ使用されます。
4894,<code>qr</code>で計算されるタイプのQR分解です。
4895,方程式の右辺のベクトルまたはマトリックス。
4896,QR分解または（<code>qr.solve</code>のみ）直交行列。
4897,有効ランク.
4898,論理的。  実数の<code>x</code>に対して、もしtrueならLAPACKを使い、そうでなければLINPACK（デフォルト）を使う。
4899,他のメソッドに渡される、または他のメソッドから渡される追加の引数
4900,QR分解を表すオブジェクト。  これは、典型的には、以前に<code>qr</code>または<code>lsfit</code>を呼び出したときに得られたものであるでしょう。
4901,長さ1の論理式。 <i>bold{Q}</i>または<i>bold{X}</i>行列を任意に直交補完するか、<i>bold{R}</i>行列をゼロ値行を四角い上三角形の下に結合して補完するか、を示す。
4902,範囲 <code>1:nrow(qr$qr)</code> 内の整数.  再構築された<i>bold{X}</i>に含まれる列の数を指定します。  <code>complete</code> が <code>FALSE</code> の場合のデフォルトは、qrオブジェクトを構築した元の<i>bold{X}</i>の最初の<code>min(ncol(X), nrow(X))</code> 列になります。  <code>complete</code> が <code>TRUE</code> の場合のデフォルトは、最初の <code>ncol(X)</code> 列が元の<i>bold{X}</i>で、残りの列が任意の直交補完（複素数の場合は単位補完）の正方行列になります。
4903,対角値のベクトル（行列ではない）。  返された<i>bold{Q}</i>の各列は、対応する対角値で乗算される。  デフォルトは全ての<code>1</code>sです。
4904,クラス <code>"POSIXt"</code> または <code>"Date"</code> を継承したオブジェクトです。
4905,論理ベクトル（リサイクルされる可能性がある）。  名前は省略されるべきですか？
4906,クラス<code>"POSIXt"</code>または<code>"Date"</code>を継承した長さ1オブジェクト。
4907,他のメソッドの引数。
4908,クラス<code>"POSIXt"</code>または<code>"Date"</code>から継承されたオブジェクトです。
4909,論理ベクトル(再利用可能)。  名前は省略されるべきか？
4910,クラス<code>"POSIXt"</code>または<code>"Date"</code>を継承した長さ1オブジェクト。
4911,他のメソッドの引数。
4912,クラス<code>"POSIXt"</code>または<code>"Date"</code>から継承されたオブジェクトです。
4913,論理ベクトル（リサイクルされる可能性がある）。  名前は省略されるべきですか？
4914,クラス<code>"POSIXt"</code>または<code>"Date"</code>を継承した長さ1オブジェクト。
4915,他のメソッドの引数。
4916,環境（ワークスペース）を保存するかどうかを示す文字列で、<code>"no"</code>, <code>"yes"</code>,<code>"ask"</code>または <code>"default"</code> から一つを選択します.
4917,オペレーティングシステムに返される（数値）エラーステータス（関連する場合）。  通常、<code>0</code>は成功したことを意味する。
4918,<code>.Last()</code>は実行されるべきか？
4919,構文的に有効な<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>式。
4920,<code>call</code>、すなわち、<span style="font-family：Courier New, Courier; color：<code>class</code> (および <code>mode</code>) <code>"call"</code> の<b>R</b></span>オブジェクトです。
4921,環境またはリスト・オブジェクト。  デフォルトは、現在の評価環境です.
4922,適切な数値バージョン文字列を持つ文字ベクトル(「詳細」参照); <code>package_version</code>の場合、代わりに<code>R.version</code>によって得られるRversionオブジェクトがある。
4923,無効な数値バージョンはエラーになるか(デフォルト)、ならないかを示す論理です。
4924,また、<code>"home"</code>は、<span style="font-family：Courier New, Courier; color：<b>R</b></span> のホームディレクトリを与える <code>"home"</code> の他に、他の既知の値は <code>"bin"</code>, <code>"doc"</code>, <code>"etc"</code>, <code>"include"</code>, <code>"modules"</code> と <code>"share"</code> で、<span style="font-family：Courier New, Courier; color：#"><b>R</b></span>のインストールに対応するパスを与えます。
4925,任意の<code>数字</code>または文字オブジェクト。
4926,論理、<code>NA</code>が省略されるべきかどうかを示す。
4927,論理、全ての非定形要素が省略されるべきかどうかを示す。
4928,任意の<code>数値</code>または文字オブジェクト。
4929,論理、<code>NA</code>が省略されるべきかどうか示す。
4930,論理、全ての非定形要素が省略されるべきかどうかを示す。
4931,数値、複素数、文字または論理ベクトル。
もし<code>TRUE</code>なら、データの欠損値は最後に置かれ、もし<code>FALSE</code>なら、最初に置かれ、もし<code>NA</code>なら、それらは取り除かれ、もし<code> "keep"</code> なら、それらはランク<code>NA</code>と共に保持されます.4932，<code>NA</code>sの処理を制御するために。
4933,同順位の扱いを指定する文字列、「詳細」参照。
4934,<code>list</code>または<code>expression</code>、すなわち「リストのような」ものです.
4935,1つの「主」引数の<code>function</code>で、<code>...</code>でさらに引数を渡します.
4936,<code>class</code>名の文字ベクトル、または<code>"ANY"</code>で任意のクラスと一致する。
4937,デフォルトの結果(<code>how = "replace"</code>の場合は使用されない).
4938,与えられた3つの可能性に部分的に一致する文字列:「詳細」を参照して下さい。
4939,<code>f</code>の呼び出しに渡される追加の引数.
4940,希望する長さ。
4941,強制されるオブジェクト。
4942,文字または生ベクトル.  接続の説明。入力の場合、これは<span style="font-family：Courier New, Courier; color：入力の場合は<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> raw vectorオブジェクト、出力接続の場合は接続の名前です。
4943,character。  標準的な接続のオープンモードのいずれか。
4944,出力raw接続。
4945,characterまたはraw vector。  接続の説明。入力の場合、これは<span style="font-family：Courier New, Courier; color：入力の場合は<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> raw vectorオブジェクト、出力接続の場合は接続の名前です。
4946,character。  標準的な接続のオープンモードのいずれか。
4947,出力raw接続。
4948,変換またはシフトされるオブジェクト。
4949,論理：変換は、単一文字列または複数の個々の文字にする必要がありますか？
4950,シフトするビットの数。  正の数は右に、負の数は左にシフトします: 許容される値は <code>-8 ... 8</code> です。
4951,結果のタイプ、部分的に一致する。
4952,変換またはシフトされるオブジェクト。
4953,論理：変換は一文字の文字列または複数の個々の文字にする必要がありますか？
4954,シフトするビットの数。  正の数は右に、負の数は左にシフトします：許容される値は <code>-8 ... 8</code> です。
4955,結果のタイプ、部分的に一致する。
4956,変換またはシフトされるオブジェクト。
4957,論理：変換は一文字の文字列または複数の個々の文字にする必要がありますか？
4958,シフトするビットの数。  正の数は右に、負の数は左にシフトします：許容される値は <code>-8 ... 8</code> です。
4959,結果タイプ、部分一致。
4960,（一般化された）ベクトルまたはマトリックス。  これらはnamedargumentsとして与えることができる。  その他、<span style="font-family：Courier New, Courier; color：他の<span style="font family: Courier New, Courier; color: #666666;"><b>R</b></span> オブジェクトは適切に強制されるか、S4methodsが使用されるかもしれません：「詳細」「値」セクションを参照してください。  (<code>cbind</code>の<code>"data.frame"</code>メソッドでは、<code>stringsAsFactors</code>のような<code>data.frame</code> へのさらなる引数にできます).
<br><code>deparse.level=0</code>はラベルを作成しません。<br><code>deparse.level=1または2</code>は引数名からラベルを作成します。
4962,(データフレーム法のみ:) 引数からユニークで有効な<code>row.names</code>が構築されるべきかどうかを示す論理値です。
4963,論理、<code>as.data.frame</code>に渡され、<code>...</code>引数が（非<code>data.frame</code>）<code>文字</code>を含む場合にのみ効果を発揮します.
4964,データフレームに因子が含まれている場合、デフォルトの<code>TRUE</code>は、<code>NA</code>レベルの因子を確実に保持します。<a href="https://bugs.R-project.org/show_bug.cgi?id=17562">PR#17562</a> と 'Data frame methods' を参照して下さい。  で、<span style="font-family：Courier New, Courier; color：#3.6.x までの <b>R</b></span> バージョンでは、<code>factor.exclude = NA</code> が暗黙のうちにハードコードされています (<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> &lt;= 3.6.0) またはデフォルト (<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> = 3.6.x, x &gt;= 1）です。
4965、(一般化された)ベクトルまたはマトリックス。  これらはnamedargumentsとして与えることができる。  その他、<span style="font-family：Courier New, Courier; color：他の<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> オブジェクトは適切に強制されるか、S4methodsが使用されるかもしれません：「詳細」「値」セクションを参照して下さい。  (<code>cbind</code>の<code>"data.frame"</code>メソッドでは、<code>stringsAsFactors</code>のような<code>data.frame</code> へのさらなる引数を使用できる).
<br><code>deparse.level=0</code>はラベルを作成しません。<br><code>deparse.level=1または2</code>は引数名からラベルを作成します。
4967,(only for data frame method:) 引数からユニークで有効な <code>row.names</code> が構築されるべきかどうかを示す論理値です。
4968,論理、<code>as.data.frame</code>に渡され、<code>...</code>引数が（非<code>data.frame</code>）<code>文字</code>を含む場合にのみ効果を発揮します.
4969,データフレームに因子が含まれている場合、デフォルトの<code>TRUE</code>は、<code>NA</code>レベルの因子を確実に保持します。<a href="https://bugs.R-project.org/show_bug.cgi?id=17562">PR#17562</a> と 'Data frame methods' を参照して下さい。  で、<span style="font-family：Courier New, Courier; color：#3.6.x までの <b>R</b></span> バージョンでは、<code>factor.exclude = NA</code> が暗黙のうちにハードコードされています (<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> &lt;= 3.6.0) またはデフォルト (<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> = 3.6.x, x &gt;= 1）です。
4970,行列、<code>qr</code>の結果、または<code>"lm"</code>を継承したクラスからのフィット。
4971,論理的です。  結果は正確であるべきですか？
4972,文字列,条件番号が計算される行列ノルムを指定する, <code>norm</code> も参照.  <code>rcond</code> の場合、デフォルトは <code>"O"</code> で、これは <b>O</b>ne- または 1-ノルムを意味します.  現在唯一の）他の可能な値は、無限大ノルムを意味する<code>"I"</code>である。
4973,使用する方法を指定する部分一致の文字列;<code>"qr"</code>は、主にバックコンパチビリティのためのデフォルトです.
4974,論理的である。  trueの場合、使用されるマトリックスは<code>z</code>の低三角形部分だけです.
4975,論理的である。  もし真で<code>z</code>が複素数でなければ、LINPACKルーチン<code>dtrco()</code>が呼ばれ、さもなければ、関連するLAPACKルーチンが呼ばれます。
4976,他のメソッドに、または他のメソッドから渡される更なる引数。<code>kappa.*()</code>については、<code>norm</code>が<code>"2"</code>ではない場合に特に<code>LINPACK</code>。
4977,数値.  出力ベクトルの希望する長さ,入力は必要に応じて再利用される.
4978,数値ベクトル.
4979,数値ベクトル.
4980,数値ベクトル.
4981,数値ベクトル.
4982,オブジェクト、おそらくモード<code>complex</code>の。
4983,モード<code>complex</code>のオブジェクト、またはメソッドが定義されているクラスの1つです.
4984,他のメソッドに渡される、または他のメソッドから渡されるさらなる引数。
<code>""</code>は、コンソールへの出力を示します。  <code>read.dcf</code>の場合、これは圧縮ファイル（<code>gzfile</code>を参照）を指定することができます。
4986,DCFファイルから読み込むフィールドを指定します。  デフォルトは全フィールドを読み込むことです。
4987,1つのレコードにフィールドが複数回出現する場合、これらすべてを収集するかどうかを示す論理。<code>all</code>が偽（デフォルト）の場合、最後の出現分のみが使用される。
4988,空白をそのまま残すべきフィールドの名前を持つ文字列、または<code>NULL</code>（デフォルト）は、そのようなフィールドがないことを示します。  可能であれば文字に強制されます。  空白をそのままにしないフィールドに対しては、<code>read.dcf</code>は先頭と末尾の空白を除去し、<code>write.dcf</code>は<code>strwrap</code>を用いて折り返す。
4989,書き込まれるオブジェクト（通常はデータ・フレーム）。  もしそうでなければ、<code>x</code>をデータフレームに強制することが試みられる。
4990,論理的である。  もし<code>TRUE</code>ならば、出力はファイルに追加される。  もし<code>FALSE</code>ならば、その名前の既存のファイルは破壊される。
<code>writeLines()</code>に渡される4991,logicalは、こちらをご覧ください："専門家用 "を参照してください。
4992,出力エントリーの継続行のインデントを指定する正の整数.
4993,出力中の折り返し線のターゲットとなる列を与える正整数。
4994,接続オブジェクトまたはファイルまたは生ベクトルを名指す文字列。
4995,読み込むベクトルのモードを与えるオブジェクト、またはモードを記述する長さ1の文字ベクトル：<code>"numeric"</code>、<code>"double"</code>、<code>"integer"</code>、<code>"int"</code>、<code>"logical"</code>、<code>"complex"</code>、<code>"cacter"</code>、<code>"raw"</code>から1つとする.
4996,数値.  読み込むべきレコードの（最大）数。  ここでは過大な推定値を使用することができますが、<code>n</code>項目のためにストレージが予約されているので、あまり大きすぎないようにしてください。
4997,integer。  バイトストリームの各要素のバイト数を指定します。  デフォルトの<code>NA_integer_</code>は、自然なサイズを使用します。サイズ変更は、生ベクトルや複雑なベクトルではサポートされていません。
4998,論理。  サイズ1と2の整数に対してのみ使用され、ファイル上の量を符号付き整数と見なすべきか、符号なし整数と見なすべきかを決定する。
4999,ファイルのターゲットシステムのエンディアン性（<code>"big"</code>または<code>"little"</code>）を指定します。  <code>"swap"</code>を使用すると、エンディアンを強制的にスワップすることができます。
5000,An <span style="font-family：Courier New, Courier; color：<b>R</b></span> オブジェクトを接続に書き込む。
5001,<code>writeLines</code>を参照してください。
5002,接続オブジェクト、または、ファイル名を示す文字列、または、生のベクトル。
5003,読み書きをする（終端していない）文字列の長さを文字数で示す整数ベクトルです。  要素は&gt;=0でなければならず、<code>NA</code>であってはならない。
5004,論理的である：<code>readChar</code> では、<code>nchars</code> はマルチバイトロケールでは文字数ではなくバイト数として扱われるべきでしょうか。  <code>writeChar</code>については、<code>writeLines</code>を参照してください。
5005,接続に書き込む文字ベクトル。少なくとも<code>nchars</code>と同じ長さである。
5006,'文字列の終わり': 文字列。  各文字列の後に書かれる終端は、ASCIIの<code>nul</code>が続きます; 終端が全くない場合は<code>NULL</code>を使用してください。
5007,ユーザーに入力を促す時に表示される文字列。通常、スペース <code>" "</code> で終わるはずです。
5008,接続オブジェクトまたは文字列です。
5009,整数。  読むべき(最大)行数.  負の値は、接続の入力の終わりまで読むべきであることを示します。
5010,論理。  <code>n &gt; 0</code> 行が読み込まれる前に接続の終端に到達しても問題ないでしょうか？  そうでない場合は、エラーが発生します。
5011,論理的です。  テキストファイルに最後のEOLがない場合、またはファイル内にnullが埋め込まれている場合に警告を出す。
5012,入力文字列に仮定されるエンコーディング。  これは、文字列がLatin-1またはUTF-8であることが分かっている場合にマークするために使用されます：入力を再エンコードするためには使用されません。  これを行うには、接続の<code>con</code>の一部としてエンコーディングを指定するか、<code>options(encoding=)<code>で指定します：例を参照して下さい。
5013,logical:nulsはスキップされるべきか？
5014,<span style="font-family：Courier New, Courier; color：<b>R</b></span> オブジェクトをシリアライズする。
5015,接続、または<span style="font-family.Courier;">R</b></span> オブジェクトが格納されているファイルの名前：Courier New, Courier; color：<br>R</b></span> オブジェクトの保存先、または読み込み先となるファイル名です。
5016,論理的である。  <code>TRUE</code> または <code>NA</code> の場合、ASCII表現が書き込まれ、それ以外の場合(デフォルト)はバイナリが使用されます。
5017,使用するワークスペース・フォーマットのバージョンです。  <code>NULL</code>は現在のデフォルトバージョン(3)を指定します。他にサポートされている値は2だけで、これは<span style="font-family：Courier New, Courier; color：<br>R</b></span> 1.4.0 から <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> 3.5.0.
5018,名前付きファイルへの保存が<code>"gzip"</code>圧縮を使用するかどうかを指定する論理、または使用する圧縮のタイプを示すために<code>"gzip"</code>,<code>"bzip2"</code>または<code>"xz"</code>のいずれかを指定。  <code>file</code> が接続である場合は無視されます。
5019,参照オブジェクトを扱うためのフック関数です。
5020,ファイルへのパスを示す長さ1文字のベクトル。  サポートされている場合、チルダ展開が実行される。
5021,渡される全ての引数。
5022,適切なアリティの関数（<code>Reduce</code>ではバイナリ、<code>Filter</code>, <code>Find</code>と<code>Position</code>ではウナリ、<i>k</i>引数を伴って呼ばれた場合には<code>Map</code>では<i>k</i>-アリア）。  <code>Negate</code>のための任意の述語関数です.
5023,ベクトル.
5024,an <span style="font-family：Courier New, Courier; color：<code>x</code> の要素と同じ種類の<b>R</b></span>オブジェクトである。
5025,左から右に進むか(デフォルト)、右から左に進むかを示す論理である。
5026,連続するreducecombinationを累積するかどうかを示す論理。  デフォルトでは、最後の組み合わせのみが使用されます。
5027,「no match」（述語を満たす要素がない）が見つかった場合に返される値。
5028,ベクター。
5029,ファイナライズするオブジェクト。  環境または外部ポインタでなければならない。
5030,ファイナライズ時に呼び出す関数。引数は1つで、ファイナライズするオブジェクトでなければなりません。
5031,論理：オブジェクトが<span style="font-family.Courier, Courier">の終了時にまだ収集されていない場合、ファイナライザを実行する必要があります：Courier New, Courier; color：#666666;"><b>R</b></span>セッション？
5032,与えられた文字ベクトルでマッチする正規表現(<code>fixed = TRUE</code>の場合は文字列)を含む文字列。  可能であれば、<code>as.character</code>によって文字列に強制されます。  長さ2以上の文字ベクトルが与えられた場合、警告とともに最初の要素が使用されます。  <code>regexpr</code>、<code>gregexpr</code>、<code>regexec</code>以外は欠番が許される。
5033,マッチを求める文字ベクトル、または <code>as.character</code> によって文字ベクトルに強制することができるオブジェクトです。  長いベクターもサポートされています。
5034,<code>FALSE</code>の場合、パターンマッチは<em>casesensitive</em>で、<code>TRUE</code>の場合、マッチング中に大文字小文字は無視される。
5035,論理的です。  Perl互換の正規表現が使用されるべきか？
5036,<code>FALSE</code>の場合は、<code>grep</code>で決定されたマッチの(<code>integer</code>)インデックスを含むベクトルが返され、<code>TRUE</code>の場合はマッチ要素自身を含むベクトルが返されます。
5037,論理的である。  <code>TRUE</code>の場合、<code>pattern</code>はそのままマッチする文字列である。  競合するすべての引数を上書きする。
5038,論理的。  <code>TRUE</code>の場合、マッチングは文字単位ではなく、バイト単位で行われます。  詳細'を参照してください。
5039,論理的である。  <code>TRUE</code>の場合、<em>not</em>マッチした要素のインデックスまたは値を返す。
5040,<code>sub</code>と<code>gsub</code>でマッチしたパターンの置換を行う。  可能であれば、文字に強制される。  <code>fixed=FALSE</code>の場合、<code>pattern</code>の括弧付き部分式への逆参照<code>" \1"</code> to<code>"\9"</code> を含むことができます。  <code>perl=TRUE</code>の場合のみ、<code>" \U"</code> または<code>" \L"</code> で残りの置換を大文字または小文字に、<code>" \E"</code> で置換を終了することもできる。  長さ2以上の文字ベクトルが与えられた場合、警告とともに最初の要素が使用されます。  <code>NA</code>の場合、マッチに対応する結果の全ての要素は<code>NA</code>に設定されます。
5041,与えられた文字ベクトルでマッチする正規表現(<code>fixed = TRUE</code>の場合は文字列)を含む文字列.  可能であれば、<code>as.character</code>によって文字列に強制されます。  長さ2以上の文字ベクトルが与えられた場合、警告とともに最初の要素が使用されます。  <code>regexpr</code>、<code>gregexpr</code>、<code>regexec</code>以外は欠番が許されます。
5042,マッチを求める文字ベクトル、または <code>as.character</code> によって文字ベクトルに強制することができるオブジェクト。  長いベクターもサポートされています。
5043,<code>FALSE</code>の場合、パターンマッチは<em>casesensitive</em>で、<code>TRUE</code>の場合、マッチング中に大文字小文字は無視される。
5044,logical.  Perl互換の正規表現が使われるべきか？
5045,<code>FALSE</code>の場合は、<code>grep</code>で決定されたマッチの(<code>integer</code>)インデックスを含むベクトルが返され、<code>TRUE</code>ならマッチした要素自体を含むベクトルが返されます。
5046,論理的である。  <code>TRUE</code>の場合、<code>pattern</code>はそのままマッチする文字列である。  競合するすべての引数を上書きする。
5047,論理的である。  <code>TRUE</code>の場合、マッチングは、文字単位ではなく、バイト単位で行われます。  詳細'を参照してください。
5048,論理的である。  <code>TRUE</code>の場合、<em>not</em>にマッチした要素のインデックスまたは値を返す。
5049,<code>sub</code>と<code>gsub</code>でマッチしたパターンの置き換えを行う。  可能であれば、文字に強制される。  <code>fixed=FALSE</code>の場合、<code>pattern</code>の括弧付き部分式への後方参照<code>" \1"</code> to<code>"\9"</code> を含むことが出来ます。  <code>perl=TRUE</code>の場合のみ、<code>" \U"</code> または<code>" \L"</code> で残りの置換を大文字または小文字に、<code>" \E"</code> で置換を終了することもできる。  長さ2以上の文字ベクトルが与えられた場合、警告とともに最初の要素が使用されます。  <code>NA</code>の場合、マッチした結果の全ての要素が<code>NA</code>に設定されます。
5050,文字列または名前空間環境。
5051,論理的。
5052,環境。
5053,名前空間環境。
5054,文字ベクトル。
5055,オプションの文字ベクトル。
5056,名前空間環境。
5057,ロードするパッケージ/名前空間の名前を示す文字列。
5058,<code>generics</code>と並列するパッケージ名のベクトル。
5059,ライブラリを指定する文字ベクトル.
5060,論理.
5061,文字.
5062,文字.
5063,環境.
5064,3列の文字行列.
5065,文字.
5066,任意のオブジェクト.
5067,characterの引数。
5068,メソッドテーブル名.
5069,シンボル：ネームスペースの名前
5070,importから除外するシンボルを命名する文字ベクトル、特に<code>vars</code>がない場合に有用です。
5071,文字列または名前空間環境。
5072,論理的。
5073,環境。
5074,名前空間環境(namespace environment)。
5075,文字ベクトル。
5076,オプションの文字ベクトル。
5077,名前空間環境。
5078,ロードするパッケージ/名前空間の名前を示す文字列。
5079,<code>generics</code>と並列するパッケージ名のベクトル。
5080,ライブラリを指定する文字ベクトル.
5081,論理.
5082,文字.
5083,文字.
5084,環境.
5085,3列の文字行列.
5086,文字.
5087,任意のオブジェクト.
5088,character引数。
5089,メソッドテーブル名.
5090,シンボル：ネームスペースの名前
5091,importから除外するシンボルを指定する文字ベクトル、特に<code>vars</code>がない場合に便利です。
5092,文字ベクトル
5093,マッチデータを持つオブジェクト
5094,論理: <code>TRUE</code>の場合、一致する部分文字列を抽出または置換します。
5095,一致する、または一致しない部分文字列に対する適切な置換値を持つオブジェクト（<code>Details</code>を参照）。
5096,文字ベクトル
5097,マッチデータを持つオブジェクト
5098,論理：もし<code>TRUE</code>なら、マッチした部分文字列を抽出または置換します。
5099,マッチした、またはマッチしていない部分文字列に対する適切な置換値を持つオブジェクト（<code>Details</code>を参照）。
5100,削除するオブジェクトを、名前（引用符なし）または文字列（引用符あり）で指定します。
5101,削除するオブジェクトの名前を指定する文字ベクトル。
5102,削除を実行する場所。  デフォルトでは、現在の環境が使用されます。  他の可能性については、'details'を参照してください。
5103,使用する<code>環境</code>を指定します。  詳細'を参照して下さい。
5104,環境を囲むフレームは検査されるべきか？
5105,トップレベルタスクが成功裏に完了するたびに呼び出される関数です。  これは、<code>data</code>が指定されているかどうかによって、それぞれ5つまたは4つの引数で呼び出される。戻り値は、コールバックをアクティブなコールバックのリストに保持するか、それを破棄するかを示す論理値でなければならない。
5106,指定された場合、これはコールバック関数<code>f</code>の呼び出しにおける5番目の引数である。
5107,削除される内部コールバックリストの要素を特定する文字列または整数。整数インデックスは1ベースであり、すなわち最初の要素は1です。現在登録されているハンドラの名前は、<code>getTaskCallbackNames</code>を使って入手でき、また<code>addTaskCallback</code>へのコールで返します。
5108,文字：使用される名前。
5109,ベクトル（<code>list</code>を含む任意のモード）、因子、または（<code>rep</code>のみ）<code>POSIXct</code>または<code>POSIXlt</code>または<code>Date</code>オブジェクト；またはそのようなオブジェクトを含むS4オブジェクトを指します．
5110,他のメソッドに渡す、または他のメソッドから渡すさらなる引数。内部のデフォルトメソッドについては、これらを含むことができる：

5111,長さ<code>length(x)</code>の場合、各要素を繰り返す（非負の）回数を、長さ1の場合、ベクトル全体を繰り返す回数を与える整数値ベクトルです。  <code>double</code>ベクトルが受け入れられ、他の入力は整数または2倍ベクトルに強制される。
5112,非負の整数.  出力ベクトルの長さを指定します。  他の入力はdoublevectorに強制され、最初の要素が取られます。  <code>NA</code>または無効な場合は無視されます.
5113,非負の整数.  <code>x</code>の各要素は<code>each</code>回繰り返されます.  他の入力は、整数またはダブルベクタに強制され、最初の要素が取られます。  <code>NA</code> または無効な場合は <code>1</code> として扱われる。
5114,上記の<code>...</code>を参照してください。
5115,ベクトル（<code>list</code>を含む任意のモードの）又は係数又は（<code>rep</code>のみ）<code>POSIXct</code>又は<code>POSIXlt</code>又は<code>Date</code>オブジェクト；又はこのようなオブジェクトを含むS4オブジェクト。
5116,他のメソッドに渡す、または他のメソッドから渡すさらなる引数。内部デフォルトメソッドの場合、これらは以下を含むことができる：

5117,長さ<code>length(x)</code>の場合、各要素を何回繰り返すか（非負）、長さ1の場合はベクトル全体を繰り返すかを示す整数値ベクトルです。  <code>double</code>ベクトルが受け入れられ、他の入力は整数またはダブルベクトルに強制される。
5118,非負の整数.  出力ベクトルの長さを指定します。  他の入力はdoublevectorに強制され、最初の要素が取られます。  <code>NA</code>または無効な場合は無視されます.
5119,非負の整数.  <code>x</code>の各要素は<code>each</code>回繰り返されます.  他の入力は、整数またはダブルベクタに強制され、最初の要素が取られます。  <code>NA</code> または無効な場合は <code>1</code> として扱われます。
5120,上記の<code>...</code>を参照してください。
5121,ベクトル（<code>list</code>を含む任意のモード）又は係数又は（<code>rep</code>のみ）<code>POSIXct</code>又は<code>POSIXlt</code>又は<code>Date</code>オブジェクト；又はこのようなオブジェクトを含むS4オブジェクト．
5122,他のメソッドに渡す、または他のメソッドから渡すさらなる引数。内部のデフォルトメソッドの場合、これらは以下を含むことができる：

5123,長さ<code>length(x)</code>の場合、各要素を何回繰り返すか（非負）、長さ1の場合はベクトル全体を何回繰り返すかを示す整数値ベクトルです。  <code>double</code>ベクトルが受け入れられ、他の入力は整数またはダブルベクトルに強制される。
5124,非負の整数。  出力ベクトルの希望する長さ。  他の入力はdoublevectorに強制され、最初の要素が取られます。  <code>NA</code>または無効な場合は無視されます.
5125,非負の整数.  <code>x</code>の各要素は<code>each</code>回繰り返されます.  他の入力は、整数またはダブルベクタに強制され、最初の要素が取られます。  <code>NA</code> または無効な場合は <code>1</code> として扱われます。
5126,上記の<code>...</code>を参照してください。
5127,date-time又はdateオブジェクト。
5128,変換に使用されるオプションのタイムゾーン指定、主に<code>"POSIXlt"</code>オブジェクトの場合。
5129,文字列。  結果の単位を指定します。  省略可能です。
5130,文字列.  <code>units</code>と同様だが、省略はできない。
5131,時間間隔を指定する文字列または数値。
5132,<code>tim</code>のフォーマットを指定する文字：<code>strptime</code>を参照。  デフォルトは、ロケール固有の時間フォーマットである。
5133,クラス<code>"difftime"</code>を継承したオブジェクト.
5134,他のメソッドに渡す、または他のメソッドから渡される引数。
5135,ベクトル（<code>list</code>を含む任意のモード）、係数、または（<code>rep</code>のみ）<code>POSIXct</code>、<code>POSIXlt</code>または<code>Date</code>オブジェクト、またはそのオブジェクトを含むS4 オブジェクト。
5136,他のメソッドに渡す、または他のメソッドから渡すさらなる引数。内部デフォルトメソッドの場合、これらは以下を含むことができる：

5137,長さ<code>length(x)</code>の場合、各要素を繰り返す（非負の）回数を、長さ1の場合、ベクトル全体を繰り返す回数を与える整数値ベクトルです。  <code>double</code>ベクトルが受け入れられ、他の入力は整数またはダブルベクトルに強制される。
5138,非負の整数.  出力ベクトルの長さを指定します。  他の入力はdoublevectorに強制され、最初の要素が取られます。  <code>NA</code>または無効な場合は無視されます.
5139,非負の整数.  <code>x</code>の各要素は<code>each</code>回繰り返されます.  他の入力は、整数またはダブルベクタに強制され、最初の要素が取られます。  <code>NA</code> または無効な場合は <code>1</code> として扱われます。
5140,上記の<code>...</code>を参照してください。
5141,ベクトル（<code>list</code>を含む任意のモードの）又は係数又は（<code>rep</code>のみ）<code>POSIXct</code>又は<code>POSIXlt</code>又は<code>Date</code>オブジェクト；又はこのようなオブジェクトを含むS4 オブジェクト。
5142,他のメソッドに渡す、または他のメソッドから渡すさらなる引数。内部デフォルトメソッドの場合、これらは以下を含むことができる：

5143,長さ<code>length(x)</code>の場合、各要素を繰り返す（非負の）回数を、長さ1の場合、ベクトル全体を繰り返す回数を与える整数値ベクトルです。  <code>double</code>ベクトルが受け入れられ、他の入力は整数またはダブルベクトルに強制される。
5144,非負の整数.  出力ベクトルの長さを指定します。  他の入力はdoublevectorに強制され、最初の要素が取られます。  <code>NA</code> または無効な場合は無視されます。
5145,非負の整数.  <code>x</code>の各要素は<code>each</code>回繰り返されます.  他の入力は、整数またはダブルベクタに強制され、最初の要素が取られます。  <code>NA</code> または無効な場合は <code>1</code> として扱われます。
5146,上記の<code>...</code>を参照してください。
5147,適切な数値バージョン文字列を持つ文字ベクトル(「詳細」参照); <code>package_version</code> の場合、代わりに <code>R.version</code> によって得られるRversionオブジェクトがある。
5148,無効な数値バージョンはエラーになるか(デフォルト)、ならないかを示す論理です。
5149,ベクトル（<code>list</code>を含む任意のモード）、係数、または（<code>rep</code>のみ）<code>POSIXct</code>、<code>POSIXlt</code>、<code>Date</code>オブジェクト、またはそのオブジェクトを含むS4オブジェクトです.
5150,他のメソッドに渡す、または他のメソッドから渡すさらなる引数。内部のデフォルトメソッドの場合、これらは以下を含むことができる：

5151,長さ<code>length(x)</code>の場合、各要素を繰り返す（非負の）回数を、長さ1の場合、ベクトル全体を繰り返す回数を与える整数値ベクトルです。  <code>double</code>ベクトルが受け入れられ、他の入力は整数または2倍ベクトルに強制される。
5152,非負の整数.  出力ベクトルの長さを指定します。  他の入力はdoublevectorに強制され、最初の要素が取られます。  <code>NA</code>または無効な場合は無視されます.
5153,非負の整数.  <code>x</code>の各要素は<code>each</code>回繰り返されます.  他の入力は、整数またはダブルベクタに強制され、最初の要素が取られます。  <code>NA</code> または無効な場合は <code>1</code> として扱われる。
5154,上記の<code>...</code>を参照してください。
5155,ベクトル（<code>list</code>を含む任意のモードの）又は係数又は（<code>rep</code>のみ）<code>POSIXct</code>又は<code>POSIXlt</code>又は<code>Date</code>オブジェクト；又はこのようなオブジェクトを含むS4 オブジェクト。
5156,他のメソッドに渡す、または他のメソッドから渡すさらなる引数。内部デフォルトメソッドの場合、これらは以下を含むことができる：

5157,長さ<code>length(x)</code>の場合、各要素を繰り返す（非負の）回数を、長さ1の場合、ベクトル全体を繰り返す回数を与える整数値ベクトルです。  <code>double</code>ベクトルが受け入れられ、他の入力は整数またはダブルベクトルに強制される。
5158,非負の整数.  出力ベクトルの長さを指定します。  他の入力はdoublevectorに強制され、最初の要素が取られます。  <code>NA</code>または無効な場合は無視されます.
5159,非負の整数.  <code>x</code>の各要素は<code>each</code>回繰り返されます.  他の入力は、整数またはダブルベクタに強制され、最初の要素が取られます。  <code>NA</code> または無効な場合は <code>1</code> として扱われます。
5160,上記の<code>...</code>を参照してください。
5161,長さ1の論理ベクトルで、<code>NA</code>でないもの。長さが1より大きい条件は、現在、警告で受け入れられますが、最初の要素だけが使用されます。  環境変数<span class="env">_R_CHECK_LENGTH_1_CONDITION_</span> が true に設定されている場合、代わりにエラーが通知されます。  その他の型は、可能であれば論理型に強制され、いかなるクラスも無視されます。
5162,変数の構文上の名前。
5163,ベクトル(リストと式を含む)、ペアリスト、<code>NULL</code>に評価される式。  Afactorの値は、文字ベクトルに強制されます。  <span style="font-family：Courier New, Courier; color：<br>R</b></span>4.0.0 からは、これは長いベクトルであることができます。
5164,形式的な意味での<em>式</em>である。  これは単純な式か、いわゆる<em>複合式</em>で、通常は<code>{ expr1 ; expr2 }</code> という形式である。
5165,ベクトル
5166,インデックスベクトル
5167,置換値
5168,ベクトル（アトミックまたはリスト）または<code>expression</code>オブジェ クト。  その他のオブジェクト（クラス化されたオブジェクトを含む）は、<code>base::as.list</code>によって強制される。
5169,<code>X</code>の各要素に適用される関数: '詳細'を参照して下さい。  <code>+</code>、<code>%*%</code>のような関数の場合、関数名はバッククォートまたはクォートされなければならない。
5170,<code>FUN</code>のオプション引数。
5171,論理または文字列; 可能であれば、結果はベクトル、行列または高次元配列に簡略化されるべきか？  デフォルト値の<code>TRUE</code>は、適切な場合はベクトルまたは行列を返しますが、<code>simplify = "array"</code> の場合、結果は <code>FUN(X[[i]])</code> の結果より一つ高い "rank"(<i>=</i><code>length(dim(.))</code>) の <code>array</code> となる可能性があります.
5172,logical; <code>TRUE</code> かつ <code>X</code> が文字の場合、<code>X</code> が既に名前を持っていない限り、結果の <code>names</code> として使用します。  この引数は<code>...</code>に続くので、その名前を省略することはできない。
5173,a (generalized) vector; FUNからの戻り値のテンプレートです。  詳細'を参照。
5174,整数: 複製数.
5175,繰り返し評価する式(言語オブジェクト、通常はコール)です。
5176,リスト。通常は<code>lapply()</code>から返される。
5177,論理; もし真なら、<code>simplify2array()</code>は適切な時に("高位")配列を生成し、一方<code>higher = FALSE</code> は行列（またはベクトル）だけを返す。これら二つのケースはそれぞれ<code>sapply(*, simplify = "array")</code> または <code>simplify = TRUE</code> と一致します.
5178,パッケージの名前。<code>character.only</code>が<code>FALSE</code>（デフォルト）か<code>TRUE</code>かによって、名前か文字列、または文字列として与えられます.
5179,ロードされた名前空間をアタッチする検索リスト上の位置。  また、<code>search()</code>によって与えられる現在の検索リスト上の位置の名前であってもよい。
5180,a character vector describing the location of <span style="font-family：Courier New, Courier; color：#"><b>R</b></span>ライブラリツリーを検索する場所を記述する文字ベクトル、または<code>NULL</code>を指定します。  デフォルトの<code>NULL</code>は、現在<code>.libPaths()</code>で知られているすべてのライブラリに対応する。非存在のライブラリツリーは静かに無視されます.
5181,<code>package</code>又は<code>help</code>が文字列であると仮定できるかどうかを示す論理である。
5182,論理的である。  <code>TRUE</code>であれば<code>FALSE</code>、<code>TRUE</code>であれば成功を表す値が返される。
5183,論理的である。  <code>TRUE</code>の場合、newpackageのアタッチによる<code>conflicts</code>について警告が表示される。  競合とは、関数をマスクする関数、または非関数をマスクする非関数のことです。デフォルトは、<code>conflicts.policy</code>オプションで<code>FALSE</code>として指定されない限り、<code>TRUE</code>です。
5184,a論理的である。  <code>TRUE</code>の場合、追加の診断が印刷される。
5185,a論理的である。  <code>TRUE</code>の場合、パッケージの取り付けを確認するメッセージは表示されず、多くの場合、パッケージの取り付けに失敗してもエラー/警告は表示されない。
5186,パッケージの名前を指定する文字列。
5187,ストリクトコンフリクトチェックが有効な場合に、エラーを出さずに検索パス上のオブジェクトをマスクすることができるオブジェクトの名前の文字ベクトル。
5188,添付フレームに除外または含めるオブジェクトの名前の文字ベクトル。これらの引数のうち1つだけを<code>library</code>または<code>require</code>の呼び出しで使用することができる。
5189,<code>DESCRIPTION</code>ファイルの<code>Depends</code>句にリストされた必須パッケージが自動的に添付されるべきかを指定する論理。
5190,文字列または名前空間オブジェクト。
5191,添付する位置を指定する整数。
5192,<code>NULL</code>またはパッケージのオブジェクト<code>.Depends</code>に記録される依存関係の文字ベクトルです。
5193,ロードするパッケージ/名前空間の名前を指定する文字列。
5194,ライブラリ検索パスを指定する文字ベクトル。
5195,パッケージのインストール中以外は無視されるようになった。
5196,パッケージのインストール中以外は無視されます。
5197,論理;真の場合、コードをロードした直後に停止する。
5198,<code>NULL</code>またはバージョン指定（<code>op</code>と<code>version</code>の構成要素を持つリスト）。
5199,logical:プログレスメッセージとエラーメッセージは抑制されるべきか？
5200,文字列または'名前'、パッケージの<code>as.symbol</code>を参照、例えば、<code>"stats"</code>のように。
5201,文字ベクトル; <code>library</code>を参照して下さい.
5202,<code>loadNamespace</code>に渡される更なる引数。
5203,条件オブジェクト。
5204,呼び出し式。
5205,条件オブジェクト。
5206,評価される式。
5207,リターンまたは終了する前に評価される式。
5208、関数
5209、文字列
5210、文字列。
5211,再起動の名前の文字列。
5212,再始動オブジェクト。
5213,オブジェクト。
5214,条件クラス名を示す文字列。
5215,追加引数; 以下の詳細を参照。
5216,条件オブジェクト。
5217、呼び出し式。
5218,条件オブジェクト。
5219,評価される式。
5220,リターンまたは終了する前に評価される式。
5221、関数
5222,文字列
5223,文字列。
5224,再始動に名前を付ける文字列。
5225,再起動オブジェクト
5226,オブジェクト。
5227,条件クラスの名前を指定する文字列。
5228,追加引数; 以下の詳細を参照してください。
5229,Rオブジェクト。関数、環境、<code>NULL</code>ではありません。
5230,<code>tracemem</code>または<code>retracemem</code>によって返される値です。
5231,空または1つ以上のnameまたはname=expressionの項。
5232,式(expression)。
5233,式(expression)
5234,トレースまたはアントレースされる関数の名前、場合によっては<code>quote()</code>d.  <code>untrace</code>や、複数の引数を持つ<code>trace</code>では、引用符で複数の名前を指定することができ、それぞれに対して同じ動作が適用されます。  名前空間内のS3メソッドのような「隠された」関数では、<code>where = *</code>も通常指定する必要があります。
5235,関数または評価されない式のどちらかを指定します。  関数が呼び出されるか、式が評価されるのは、呼び出しの最初か、引数 <code>at</code> で指定された呼び出しのステップの前です。詳細セクションを参照してください。
5236,<code>function</code>または評価されない式のどちらかです。  関数が呼び出されるか、関数から抜けると式が評価されます。詳細セクションを参照してください。
5237,オプションの数値ベクトルまたはリスト.  与えられた場合、<code>tracer</code>は、関数本体の対応するステップの直前に呼び出されます.詳細セクションを参照してください。
5238,<code>TRUE</code>の場合(デフォルト)、トレース式が評価される前に説明の行が印刷されます。
5239,この引数が与えられた場合、それは関数<code>what</code>のためのメソッドのための署名であるべきです。  この場合、関数そのものではなく、そのメソッドがトレースされる。
5240、関数内のループをトレースするような複雑なトレースでは、関数本体を編集して目的の呼び出しを挿入する必要があります。  その場合、<code>edit</code>引数を<code>TRUE</code>または使用したいエディタ名として与えます。  そうすると、<code>trace()</code>は<code>edit</code>を呼び出し、あなたが編集した後のバージョンの関数を使用します。  追加情報については、detailsセクションを参照してください。
5241,追跡する関数を探す場所; デフォルトでは、<code>trace</code>を呼び出した時のトップレベル環境です。

5242,この引数の重要な使用法は、「隠された」または別のパッケージから呼び出されるパッケージの関数を追跡することです。名前空間機構は、呼び出される関数をインポートします（ベースパッケージの関数は例外です）。  呼び出される関数は、トップレベルから見たオブジェクトと<em>違う</em>（一般的には、インポートされたパッケージが添付されていないこともある）。したがって、正しいバージョンがトレースされていることを確認する必要があります。  これを行う方法は、引数<code>where</code>に名前空間（またはその名前空間）内の関数を設定することです。  トレース計算は、その関数の環境（対応するパッケージの名前空間となる）を探し始めます（そう、微妙ですが、ここでのセマンティクスは、hownamespacesが<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>でのハウネスペースの動作の中心です)。
5243,logical; サポート関数 <code>tracingState</code> の呼び出しは、トレーシングがグローバルにオンになっていれば<code>TRUE</code>、そうでなければ<code>FALSE</code>を返す。  これらの値のうちどちらか一方を引数にとると、状態が設定されます。  トレース状態が<code>FALSE</code>の場合、トレースアクションは実際に発生しません（例えば、デバッグ中にトレースを停止するためにデバッグ関数によって使用されます）。
5244,サポート関数<code>.doTrace</code>への引数は、変更された関数またはメソッドに挿入される呼び出しです。<code>expr</code>はトレースアクション（<code>browser()</code>への呼び出しなど）、<code>msg</code>はトレースアクションが起こる場所を指定する文字列です。
5245,<code>returnValue</code>が戻り値（例えば、エラー、再起動、呼び出し側関数からの戻りを評価した結果、関数が終了した）を見つけない場合、代わりに<code>default</code>を返します。
5246,反転が定義されているベクトルまたは他のオブジェクト。
5247,ベクトルまたは反転が定義されている他のオブジェクト。
5248,<code>rle()</code>ではベクトル（アトミック、リストではない）;<code>inverse.rle()</code>ではクラス<code>"rle"</code>のオブジェクト.
5249,その他の引数; ここでは無視されます。
5250,印刷のための有効桁数、<code>print.default</code>を参照のこと.
5251,文字列、印刷される各行の前に追加されます。
5252,削除するオブジェクトを、名前（引用符なし）または文字列（引用符付き）で指定します。
5253,削除されるオブジェクトの名前を示す文字ベクトル。
5254,削除を行う場所。  デフォルトでは、現在の環境が使用されます。  他の可能性については、'details'を参照して下さい。
5255,使用する<code>environment</code>。  詳細'を参照して下さい。
5256,環境を囲むフレームは検査されるべきか？
5257,characterまたは<code>NULL</code>です。  <code>kind</code>が文字列の場合、<span style="font-family：Courier New, Courier; color：<br>R</b></span> のRNGを希望する種類に設定します。  <code>"default"</code> を使って、<span style="font-family：Courier New, Courier; color：#"><b>R</b></span> のデフォルトに戻ります。  <code>NULL</code>の解釈については、「詳細」を参照。
5258,文字列または<code>NULL</code>.  文字列の場合、Normalの生成方法を設定します。  <code>"default"</code> を使うと、<span style="font-family：Courier New, Courier; color：#"><b>R</b></span> のデフォルトに戻ります。  <code>NULL</code>は変更しない。
5259,文字列または<code>NULL</code>。  文字列の場合、離散一様生成の方法を設定します（<code>sample</code>などで使用されます）。  <code>"default"</code> を使うと、<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> のデフォルトに戻ります。  <code>NULL</code>は変更しない。
5260,整数として解釈される単一の値、または<code>NULL</code>(「詳細」参照).
5261,バージョン番号を含む文字列、例えば、<code>"1.6.2"</code>です。  現在のデフォルトのRNG構成は、<span style="font-family：Courier New, Courier; color：<code>vstr</code> が現在のバージョンよりも大きい場合、><b>R</b></span> バージョンが使用されます。
5262,上記の<code>kind</code>に対して<code>0:k</code>の整数コード(integer).
5263,整数です。  いくつ必要か(これは<code>rng.kind</code>に依存する)については詳細を参照してください.
5264,文字または<code>NULL</code>.  <code>kind</code>が文字列の場合、<span style="font-family：Courier New, Courier; color：<br>R</b></span> のRNGを希望する種類に設定します。  <code>"default"</code> を使って、<span style="font-family：Courier New, Courier; color：#"><b>R</b></span> のデフォルトに戻ります。  <code>NULL</code>の解釈については、「詳細」を参照してください。
5265,文字列または<code>NULL</code>.  文字列の場合、Normalの生成方法を設定します。  <code>"default"</code> を使うと、<span style="font-family：Courier New, Courier; color：#"><b>R</b></span> のデフォルトに戻ります。  <code>NULL</code>は変更しない。
5266,文字列または<code>NULL</code>を指定します。  文字列の場合、離散一様生成の方法を設定します（<code>sample</code>などで使用）。  <code>"default"</code> を使うと、<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> のデフォルトに戻ります。  <code>NULL</code>は何の変化もない。
5267,整数として解釈される単一の値、または<code>NULL</code>(「詳細」参照).
5268,バージョン番号を含む文字列、例えば、<code>"1.6.2"</code>です。  現在のデフォルトのRNG構成は、<span style="font-family：Courier New, Courier; color：<code>vstr</code> が現在のバージョンより大きい場合、><b>R</b></span> バージョンが使用されます。
5269,上記の<code>kind</code>に対して<code>0:k</code>の整数コード(integer code).
5270,整数。  いくつ必要かは詳細を参照してください(これは<code>rng.kind</code>に依存します)。
5271,数値ベクトル。  または、<code>round</code>と<code>signif</code>の場合は、複素数ベクトル(acomplex vector).
5272,使用する小数点以下の桁数(<code>round</code>)または有効数字(<code>signif</code>)を示す整数.
5273,メソッドに渡される引数。
5274,<code>"POSIXt"</code>または<code>"Date"</code>から継承したオブジェクト。
5275,記載されている単位の1つ。  省略可能です。
5276,他のメソッドに渡す引数、特に<code>round</code>の場合は<code>digits</code>。
5277,<code>"POSIXt"</code>または<code>"Date"</code>を継承したオブジェクトです.
5278,記載されている単位の1つ。  省略可能です。
5279,他のメソッドに渡す引数、特に<code>round</code>の場合は<code>digits</code>。
5280,行列のようなオブジェクト、つまり2次元の<code>dim</code>を持つもの。
5281，行列の次元、すなわち、長さ2の整数値の数値ベクトル（非負のエントリを持つ）。
5282,数値としてではなく、行ラベルの係数として値を返すかどうかを示す論理値（必要に応じて作成される）。
5283,クラス<code>"data.frame"</code>のオブジェクト、またはメソッドが定義されている他のクラス。
5284,<code>logical</code>、すなわち<code>FALSE, NA, TRUE</code>のうちの1つは、指定された行名、すなわち<code>value</code>が無効、例えば重複や<code>NA</code>である場合にどうすべきかを示す。  デフォルト(バックコンパチブル)の<code>FALSE</code>はエラーを知らせ、<code>NA</code>は「自動」行名、<code>TRUE</code>は有効名を構築するために<code>make.names（value, unique=TRUE）<//code> を呼び出します。
5285,整数ベクトルでなければ、文字に強制されるオブジェクト。  <code>x</code>の行数と同じ長さで、重複や欠損のないものでなければなりません。<code>NULL</code>も許されます:「詳細」参照。
5286,クラス <code>"data.frame"</code> のオブジェクト、またはメソッドが定義されている他のクラス。
5287,<code>logical</code>、すなわち<code>FALSE, NA, TRUE</code>のうちの1つは、指定された行名、すなわち<code>value</code>が無効、例えば重複や<code>NA</code>である場合にどうすべきかを示しています。  デフォルト(バックコンパチブル)の<code>FALSE</code>はエラーを知らせ、<code>NA</code>は「自動」行名、<code>TRUE</code>は有効名を構築するために<code>make.names（value, unique=TRUE）<//code> を呼び出します。
5288,整数ベクトルでない限り、文字に強制されるオブジェクトです。  <code>x</code>の行数と同じ長さで、重複や欠損のないものでなければなりません。<code>NULL</code>も可能です。
5289,クラス <code>"data.frame"</code> のオブジェクト、またはメソッドが定義されている他のクラス。
5290,<code>logical</code>、すなわち<code>FALSE, NA, TRUE</code>のうちの1つは、指定された行名、すなわち<code>value</code>が無効、例えば重複や<code>NA</code>である場合にどうすべきかを示す。  デフォルト(バックコンパチブル)の<code>FALSE</code>はエラーを知らせ、<code>NA</code>は「自動」行名、<code>TRUE</code>は有効名を構築するために<code>make.names（value, unique=TRUE）<//code> を呼び出します。
5291,整数ベクトルでなければ、文字に強制されるオブジェクトです。  <code>x</code>の行数と同じ長さで、重複や欠落のないものでなければなりません。<code>NULL</code>も許可されます:「詳細」参照。
5292,クラス <code>"data.frame"</code> のオブジェクト、またはメソッドが定義されている他のクラス。
5293,<code>logical</code>、すなわち<code>FALSE, NA, TRUE</code>のうちの1つは、指定された行名、すなわち<code>value</code>が無効、例えば重複や<code>NA</code>である場合にどうすべきかを示す。  デフォルト(バックコンパチブル)の<code>FALSE</code>はエラーを知らせ、<code>NA</code>は「自動」行名、<code>TRUE</code>は有効名を構築するために<code>make.names（値、ユニーク= TRUE）<//code> を呼び出します。
5294,整数ベクトルでない限り、文字に強制されるオブジェクトです。  <code>x</code>の行数と同じ長さで、重複や欠落のないものでなければなりません。<code>NULL</code>も許されます：「詳細」参照。
5295,クラス <code>"data.frame"</code> のオブジェクト、またはメソッドが定義されている他のクラス。
5296,<code>logical</code>、すなわち<code>FALSE, NA, TRUE</code>のうちの1つは、指定された行名、すなわち<code>value</code>が無効、例えば重複や<code>NA</code>である場合にどうすべきかを示す。  デフォルト(バックコンパチブル)の<code>FALSE</code>はエラーを知らせ、<code>NA</code>は「自動」行名、<code>TRUE</code>は有効名を構築するために<code>make.names（値、ユニーク= TRUE）<//code> を呼び出します。
5297,整数ベクトルでない限り、文字に強制されるオブジェクトです。  <code>x</code>の行数と同じ長さで、重複や欠損のないものでなければなりません。<code>NULL</code>も許されます:「詳細」参照。
5298,クラス <code>"data.frame"</code> のオブジェクト、またはメソッドが定義されている他のクラス。
5299,<code>logical</code>、すなわち<code>FALSE, NA, TRUE</code>のうちの1つは、指定された行名、すなわち<code>value</code>が無効、例えば重複や<code>NA</code>である場合にどうすべきかを示しています。  デフォルト(バックコンパチブル)の<code>FALSE</code>はエラーを知らせ、<code>NA</code>は「自動」行名、<code>TRUE</code>は有効名を構築するために<code>make.names（value, unique=TRUE）<//code> を呼び出します。
5300,整数ベクトルでない限り、文字に強制されるオブジェクトです。  <code>x</code>の行数と同じ長さで、重複や欠落のないものでなければなりません。<code>NULL</code>も使用可能です。
5301,数値、複素数、整数、論理値を含む、2次元以上の配列、または数値データフレーム。  <code>.colSums()</code>などの場合は、数値、整数、または論理行列（または長さ<code>m * n</code>のベクトル）です.
5302,論理。  欠損値（<code>NaN</code>を含む）は計算から省略されるべきですか？
5303,integer：どの次元を「行」または「列」とみなして合計するか。  <code>row*</code>の場合、和または平均は次元<code>dims+1, ...</code>の上にあり、<code>col*</code>の場合は次元<code>1：dims</code>上のものである。
5304,行列の寸法 <code>x</code> for<code>.colSums()</code> など.
5305,行列のような<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>オブジェクトで、<code>colnames</code>のために少なくとも2次元を持つ。
5306,論理的である。<code>FALSE</code>でnamesが<code>NULL</code>の場合、namesは作成されます。
5307,作成された名前に対して。
5308,<code>dimnames(x)</code>の構成要素に対して有効な値です。  行列や配列の場合、これは<code>NULL</code>か、適切な次元に等しい非ゼロの長さの文字ベクトルのどちらかです。
5309,行列のような<span style="font-family：Courier New, Courier; color：<code>colnames</code>のために少なくとも2つの次元を持つ、<span style="font: Courier New, Courier; color: #666666;"><b>R</b></span> オブジェクト。
5310,論理的である。<code>FALSE</code>でnamesが<code>NULL</code>の場合、namesは作成されます。
5311,作成された名前に対して。
5312,<code>dimnames(x)</code>の構成要素に有効な値です。  行列または配列の場合、これは<code>NULL</code>または適切な次元に等しい非ゼロの長さの文字ベクトルのいずれかです。
5313,数値データの行列、データフレーム、またはベクトル。  欠落値も許容されます。  数値ベクトルは、列ベクトルとして扱われます。
5314,グループ化を示すベクトルまたは係数で、<code>x</code>の1行に1つの要素を持つ。  欠落した値は別のグループとして扱われ、警告が与えられる。
5315,<code>TRUE</code>の場合、結果は<code>sort(unique(group))</code>の順になり、<code>FALSE</code>の場合、グループが発生した順になる。
5316,論理（<code>TRUE</code>または<code>FALSE</code>）。  <code>NA</code>(<code>NaN</code>を含む)の値は破棄されるべきか？
5317,メソッドに渡される、またはメソッドから渡される他の引数
5318,数値データの行列、データフレーム、またはベクトル。  欠落値も許容されます。  数値ベクトルは、列ベクトルとして扱われます。
5319,グループ化を示すベクトルまたは係数で、<code>x</code>の1行に1つの要素があります。  欠落した値は別のグループとして扱われ、警告が与えられる。
5320,<code>TRUE</code>の場合、結果は<code>sort(unique(group))</code>の順になり、<code>FALSE</code>の場合、グループが発生した順になる。
5321,論理（<code>TRUE</code>または<code>FALSE</code>）。  <code>NA</code>(<code>NaN</code>を含む)の値は破棄されるべきか？
5322,メソッドに渡される、またはメソッドから渡される他の引数
5323,数値データの行列、データフレーム、またはベクトル。  欠落値も許容されます。  数値ベクトルは、列ベクトルとして扱われます。
5324,グループ化を示すベクトルまたは係数で、<code>x</code>の1行に1つの要素があります。  欠落した値は別のグループとして扱われ、警告が与えられる。
5325,もし<code>TRUE</code>なら、結果は<code>sort(unique(group))</code>の順になり、もし<code>FALSE</code>なら、グループが発生した順になる。
5326,論理（<code>TRUE</code>または<code>FALSE</code>）。  <code>NA</code>(<code>NaN</code>を含む)の値は破棄されるべきか？
5327.メソッドに渡す、またはメソッドから渡される他の引数
5328,数値、複素数、整数、論理値を含む2次元以上の配列、または数値データフレーム。  <code>.colSums()</code>等の場合は、数値、整数または論理行列（または長さ<code>m * n</code>のベクトル）。
5329,論理。  欠損値（<code>NaN</code>を含む）は計算から省略されるべきですか？
5330,integer：どの次元を「行」または「列」とみなして合計するか。  <code>row*</code>の場合、和または平均は次元<code>dims+1, ...</code>の上にあり、<code>col*</code>の場合は次元<code>1：dims</code>上のものである。
5331,行列の次元 <code>x</code> for<code>.colSums()</code> など.
5332,1つ以上の要素から選択するベクトル、または正の整数を指定します。  詳細'を参照してください。
5333,正の数で、選択する項目の数です。  詳細'を参照してください。
5334,選択する項目の数を示す非負の整数。
5335,サンプリングは置換で行うべきですか？
5336,サンプリングされるベクトルの要素を得るための確率の重みのベクトル。
5337,<code>logical</code>は、アルゴリズムのhash-versionが使用されるべきかどうかを示します。  <code>replace = FALSE</code>, <code>prob = NULL</code>, <code>size &lt;= n/2</code> の場合にのみ使用でき、<code>useHash=FALSE</code> は <code>n</code> に比例してメモリを使用するので本当に大きな <code>n</code> に対して使用すべきです.
5338,1つ以上の要素から選択するベクトル、または正の整数を指定します。  詳細」を参照してください。
5339,正の数で、選択する項目の数です。  詳細'を参照してください。
5340,選択する項目の数を示す非負の整数。
5341,サンプリングは置換で行うべきですか？
5342,サンプリングされるベクトルの要素を得るための確率の重みのベクトル.
5343,<code>logical</code>は、アルゴリズムのhash-versionが使用されるべきかどうかを示します。  <code>replace = FALSE</code>, <code>prob = NULL</code>, <code>size &lt;= n/2</code> の場合にのみ使用でき、<code>useHash=FALSE</code> は <code>n</code> に比例してメモリを使用するので本当に大きな <code>n</code> に対して使用すべきです.
5344,ベクトル（アトミックまたはリスト）または<code>expression</code>オブジェクト。  その他のオブジェクト（クラス化されたオブジェクトを含む）は、<code>base::as.list</code>によって強制される。
5345,<code>X</code>の各要素に適用される関数: '詳細'を参照して下さい。  <code>+</code>、<code>%*%</code>のような関数の場合、関数名はバッククォートまたはクォートされなければならない。
5346,<code>FUN</code>のオプション引数。
5347,論理または文字列; 可能であれば、結果はベクトル、行列または高次元配列に簡略化されるべきか？  <code>sapply</code> では、省略せずに名前を付ける必要があります。デフォルト値の <code>TRUE</code> は、適切であればベクトルや行列を返しますが、もし <code>simplify = "array"</code> なら、結果は <code>FUN(X[[i]])</code> の結果より一つ高い "rank"(<i>=</i><code>length(dim(.)) </code>) である可能性があります。
5348,logical;もし<code>TRUE</code>で<code>X</code>が文字なら、<code>X</code>を結果の<code>names</code>として使用します（既に名前がある場合は除く）。  この引数は<code>...</code>に続くので、その名前を省略することはできない。
5349,a (generalized) vector; FUNからの戻り値のテンプレート。  詳細'を参照。
5350,整数: 複製数.
5351,繰り返し評価する式(言語オブジェクト、通常はコール)。
5352,リスト。通常は<code>lapply()</code>から返されます。
5353,論理; もし真なら、<code>simplify2array()</code>は適切な時に(「高位の」)配列を生成し、一方<code>higher = FALSE</code> は行列（またはベクトル）だけを返す。この二つのケースはそれぞれ <code>sapply(*, simplify = "array")</code> または <code>simplify = TRUE</code> と一致します.
5354,保存するオブジェクトの名前(シンボルまたは文字列)。
5355,保存されるオブジェクトの名前を含む文字ベクトル.
5356,（書き込み可能なバイナリモードの）接続、またはデータが保存されるファイルの名前（チルダ展開が行われた場合）。  <code>save.image</code>または<code>version = 1</code>のファイル名でなければならない。
5357,もし<code>TRUE</code>なら、データのASCII表現が書き込まれる。  <code>ascii</code>のデフォルト値は<code>FALSE</code>で、バイナリーファイルが書き込まれます。  <code>NA</code> と<code>version &gt;= 2</code> の場合、2倍/複素数を2進数の分数として書き込む別のASCII表現が使用されます。
5358,使用するワークスペース・フォーマットのバージョンです。  <code>NULL</code>は現在のデフォルトフォーマット(3)を指定します。  バージョン1は、デフォルトで<span style="font-family：Courier New, Courier; color：<br>R</b></span> 0.99.0 から <span style="font-family.Courier New, Courier; color: #666666;"><br>R</b></span> 0.99.0 までのデフォルトです：Courier New, Courier; color：<br>R</b></span> 1.3.1 およびバージョン 2 から <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> 1.4.0 から 3.5.0.Version 3 は <span style="font-family." からサポートされます：Courier New, Courier; color：#666666;"><b>R</b></span> 3.5.0.
5359,保存するオブジェクトを検索するための環境。
5360,名前付きファイルへの保存が圧縮を使用するかどうかを指定する論理または文字列。  <code>TRUE</code> は<code>gzip</code>圧縮に対応し、文字列 <code>"gzip"</code>,<code>"bzip2"</code> または <code>"xz"</code> は圧縮の種類を指定します.  <code>file</code> が接続である場合、およびワークスペース・フォーマット・バージョン1の場合は無視されます。
5361,integer：使用される圧縮のレベル。  デフォルトは、<code>gzip</code>圧縮の場合は<code>6</code>、<code>bzip2</code>または<code>xz</code>圧縮の場合は<code>9</code>となります。  可能な値とその利点については、<code>file</code>のhelpを参照してください。
5362,logical:約束されているオブジェクトは、保存前に強制されるべきですか？
5363,logical:保存を開始する前に（特にファイル/接続を開く前に）、オブジェクトの存在を確認する必要がありますか？  バージョン1の保存には適用されません。
5364,論理的です。  <code>TRUE</code>の場合、保存されたワークスペースを作成するために一時ファイルが使用されます。  保存に成功した場合、一時ファイルの名前は<code>file</code>に変更されます。  これは、保存に失敗した場合、既存のワークスペース<code>file</code>を保存しますが、保存中に余分なディスクスペースを使用する代償として、保存されます。
5365,保存されるオブジェクトの名前（シンボルまたは文字列として）。
5366,保存されるオブジェクトの名前を含む文字ベクトル。
5367,（書き込み可能なバイナリモードの）接続またはデータが保存されるファイルの名前（チルダ展開が行われた場合）。  <code>save.image</code>または<code>version = 1</code>のためのファイル名でなければならない。
5368,もし<code>TRUE</code>なら、データのASCII表現が書き込まれる。  <code>ascii</code>のデフォルト値は<code>FALSE</code>で、バイナリーファイルが書き込まれることになります。  <code>NA</code> と<code>version &gt;= 2</code> の場合、2倍/複素数を2進数の分数として書き込む別のASCII表現が使用されます。
5369,使用するワークスペース・フォーマット・バージョンを指定します。  <code>NULL</code>は現在のデフォルトフォーマット(3)を指定します。  バージョン1は、デフォルトで<span style="font-family：Courier New, Courier; color：<br>R</b></span> 0.99.0 から <span style="font-family.Courier New, Courier; color: #666666;"><br>R</b></span> 0.99.0 までのデフォルトです：Courier New, Courier; color：<br>R</b></span> 1.3.1 およびバージョン 2 から <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> 1.4.0 から 3.5.0.Version 3 は <span style="font-family." からサポートされます：Courier New, Courier; color：#666666;"><b>R</b></span> 3.5.0.
5370,保存するオブジェクトを検索するための環境。
5371,名前付きファイルへの保存が圧縮を使用するかどうかを指定する論理または文字列。  <code>TRUE</code> は<code>gzip</code>圧縮に対応し、文字列 <code>"gzip"</code>,<code>"bzip2"</code> または <code>"xz"</code> は圧縮の種類を指定します.  <code>file</code> が接続である場合、およびワークスペース・フォーマット・バージョン1の場合は無視される。
5372,integer：使用される圧縮のレベル。  デフォルトは、<code>gzip</code>圧縮の場合は<code>6</code>、<code>bzip2</code>または<code>xz</code>圧縮の場合は<code>9</code>となります．  可能な値とその利点については <code>file</code> のヘルプを参照してください。
5373,logical: 約束されたオブジェクトは、保存前に強制されるべきですか？
5374,logical:保存を開始する前に（特にファイル/接続を開く前に）、オブジェクトの存在を確認する必要がありますか？  バージョン1の保存には適用されません。
5375,論理的です。  <code>TRUE</code>の場合、保存されたワークスペースを作成するために一時ファイルが使用されます。  保存に成功した場合、一時ファイルの名前は<code>file</code>に変更されます。  これは、保存に失敗した場合、既存のワークスペース<code>file</code>を保存しますが、保存中に余分なディスクスペースを使用する代償として、保存されます。
5376,<span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクトをシリアライズする。
5377,接続、または<span style="font-family.">R</b></span> オブジェクトがあるファイルの名前：Courier New, Courier; color：#"><b>R</b></span>オブジェクトが保存されるか、または読み出されるファイル名です。
5378,論理的である。  <code>TRUE</code> または <code>NA</code> の場合、ASCII表現が書き込まれ、それ以外の場合(デフォルト)は、バイナリが使用されます。
5379,使用するワークスペース・フォーマットのバージョンです。  <code>NULL</code>は現在のデフォルトバージョン(3)を指定します。他にサポートされている値は2だけで、これは<span style="font-family：Courier New, Courier; color：<br>R</b></span> 1.4.0 から <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> 3.5.0.
5380,名前付きファイルへの保存が<code>"gzip"</code>圧縮を使用するかどうかを指定する論理、または使用する圧縮のタイプを示すために<code>"gzip"</code>,<code>"bzip2"</code>または<code>"xz"</code>から一つを指定。  <code>file</code> が接続である場合は無視されます。
5381，参照オブジェクトを扱うためのフック関数です．
5382，数値行列(オブジェクトのようなもの)。
5383,論理値または<code>x</code>の列数に等しい長さの数値類似ベクトル.
5384,論理値または<code>x</code>の列数に等しい長さの数値類似のベクトル.
5385,数値行列(オブジェクトのようなもの).
5386,論理値または<code>x</code>の列数に等しい長さの数値類似のベクトル。
5387,論理値または<code>x</code>の列の数に等しい長さの数値類似のベクトル。
5388,データ値を読み込むためのファイル名です。  指定されたファイルが<code>""</code>の場合、入力はキーボード（または入力がリダイレクトされた場合に<code>stdin()</code>が読み取るもの、<span style="font-family：Courier New, Courier; color：#(この場合、入力は空白行またはEOFsignal、Unixでは<span class="samp">Ctrl-D</span> 、Windowsでは<span class="samp">Ctrl-Z</span> で終了することができます).

5389,Otherwise, ファイル名は、<em>absolute</em>パスを指定しない限り、現在の作業ディレクトリ（<code>getwd()</code>で与えられる）に対して<em>relative</em>と解釈されます：クーリエニュー、クーリエ、カラー：スクリプトから<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> を実行する場合、プロセスの <code>stdin</code> ファイルストリームを参照するために <code>file = "stdin"</code> が使用されます。

5390,これは圧縮ファイル（<code>file</code>を参照）であることができます。

5391,あるいは、<code>file</code>は<code>connection</code>で、必要なら開かれ、必要なら関数呼び出しの終わりに閉じられます。  接続がどのようなモードで開かれるにせよ、LF、CRLF、CRのいずれかが行のEOLマーカーとして受け入れられ、<code>sep = "\n"</code> にマッチします。

5392,<code>file</code>は完全なURLであることもできます。  (サポートされているURLスキームについては、<code>url</code>のヘルプの「URL」セクションを参照してください)。

5393,現在のエンコーディングではないデータファイル(例えばUTF-8ロケールのLatin-1ファイルやその逆)を読むには、<code>encoding</code>引数（または<code>scan</code> の <code>fileEncoding</code> 引数）を設定して<code>file</code> 接続を使います。
5394,<code>what</code>のタイプは、読み込むべきデータのタイプを与えます。  (ここで'type'は<code>typeof</code>の意味で使われます。) サポートされているタイプは<code>logical</code>,<code>integer</code>,<code>numeric</code>,<code>complex</code>, <code>character</code>,<code>raw</code>および<code>list</code>です。  <code>what</code> がリストの場合、データファイルの行は<code>length(what)</code>項目（'フィールド'）を含むレコードであると仮定され、リストの構成要素は、リストされた最初の6（原子）タイプのいずれか、または <code>NULL</code> である要素を持つべきである、以下のセクション「詳細」参照。
5395,読み込まれるデータ値の最大数、または<code>what</code>がリストの場合は、読み込まれるレコードの最大数です。  もし省略された場合、または正でない場合、または整数の無効な値(そして<code>nlines</code>が正の値に設定されていない場合)、<code>scan</code>は<code>ファイル</code>の終わりまで読み込む。
5396,integer：読み込むデータ値の最大数、デフォルトは制限なし。  無効な値は無視されます。
5397,デフォルトでは、scanは「ホワイトスペース」で区切られた入力フィールドを読むことを期待する。  また、<code>sep</code>を使用して、フィールドを区切る文字を指定することもできます。  フィールドは、引用符で囲まれていない限り、常に行末マーカーで区切られる。

5398,指定された場合、これは空の文字列（デフォルト）または<code>NULL</code>、あるいは1つの単一バイト文字を含む文字列でなければなりません。
5399,単一の文字列としての引用文字のセット、または<code>NULL</code>です。  マルチバイトロケールでは、引用文字はASCII（シングルバイト）でなければならない。
5400,小数点以下の文字。  1バイト文字を含む文字列である必要があります。  (<code>NULL</code>とゼロ長の文字ベクトルも受け入れられ、デフォルトとされる)
5401,データ値の読み取りを開始する前にスキップする入力ファイルの行数を指定します。
5402,正数なら、読み込むデータの最大行数です。
5403,文字ベクトル。  このベクトルの要素は、欠損（<code>NA</code>）値として解釈される。  空白のフィールドは、論理フィールド、整数フィールド、数値フィールド、複合フィールドの欠落値ともみなされます。  このテストは、入力から空白が取り除かれた後に行われるので、<code>na.strings</code>の値は、事前に空白を取り除く必要があるかもしれないことに注意。
5404,logical: もし <code>TRUE</code> ならば、<code>scan</code> は要求されたフィールドの最後を読んだ後、行末にフラッシュします。これは最後のフィールドの後にコメントを置くことを可能にしますが、1行に1レコード以上入力しないようにするためです。
5405,logical: <code>TRUE</code>の場合、<code>scan</code>は、<code>what</code>が意味するよりも少ないフィールドを持つ行に、暗黙的に空フィールドを追加します。
5406,<code>what</code>引数の項目に対応する論理値(複数可)のベクトルです。  これは、<code>sep</code> が指定された場合にのみ使用され、<code>character</code> フィールドから先頭と末尾の「空白」を取り除くことができます (<code>numeric</code> フィールドは常に取り除かれる)。  注意：引用符で囲まれた文字列の中の空白は取り除かれない。

5407,If <code>strip.white</code> is of length 1, it applies to all fields; otherwise, if <code>strip.white[i]</code> is <code>TRUE</code> <em>and</em> the<code>i</code>-th field is of mode character (because <code>what[i]</code> is) then the leading and trailing unquoted white space from field <code>i</code> isstripping.
5408,logical: <code>FALSE</code> (デフォルト)の場合、scan()は、何個のアイテムが読み込まれたかという行を表示します。
5409,logical: <code>TRUE</code> の場合、<code>skip</code> と <code>nlines</code> を数えるとき以外は、入力中の空行は無視されます。
5410,論理的である。  <code>what</code>がリストの場合のみ使用されます。  <code>FALSE</code>の場合、レコードのすべてが1行に表示されなければならない（ただし、複数のレコードが1行に表示されることもある）。  <code>fill = TRUE</code>を使用すると、レコードが行末で終了することを意味することに注意すること。
5411,character: 1文字または空文字列を含む長さonの文字ベクトル。  <code>""</code> を使用すると、コメントの解釈を完全にオフにすることができます（デフォルト）。
5412,論理的。  <span class="samp"></span> のようなCスタイルのエスケープは、処理すべきか（デフォルト）、そのまま読むべきか？   引用符の中でなければ、これらは区切り文字として解釈される可能性があることに注意してください（ただし、コメント文字としては解釈されません）。

5413,解釈されるエスケープは制御文字<span class="samp">a, \b, \f,˶n,˶r,˶t,˶v</span> と<span class="samp">040</span> や<span class="samp">0x2A</span> など8桁と16進数表現です。  その他のエスケープされた文字は、バックスラッシュを含めてそれ自身として扱われます。Unicodeエスケープ（<span class="samp">u</span> または<span class="samp">U</span>: SeeQuotesで始まる）は、決して処理しないことに注意してください。
5414,文字列：空でない場合、文字データを再エンコードできるように、ファイル（接続やキーボードではない）で使用するエンコーディングを宣言する。  <code>file</code>のヘルプの「エンコード」セクション、および「R DataImport/Export Manual」を参照してください。
5415,入力文字列に仮定されるエンコーディング。  この値が <code>"latin1"</code> または <code>"UTF-8"</code> の場合、文字列を Latin-1 または UTF-8 であることが分かっているものとしてマークするために使われます: 入力の再エンコードには使われません (<code>fileEncoding</code> 参照)。
5416,文字列: <code>file</code> が供給されず、これが供給される場合、データはテキスト接続を介して <code>text</code> の値から読み込まれます。
5417,論理: 文字フィールドを読むとき、nulsはスキップされるべきか？
5418,a接続。
5419,数値です。  ファイル位置（<code>origin</code>で指定されたオリジンからの相対位置）、または<code>NA</code>。
5420,文字列.  空または<code>"read"</code>または<code>"write"</code>,部分一致が許されます.
5421,文字列.  <code>"start"</code>, <code>"current"</code>, <code>"end"</code> のいずれか: '詳細'を参照.
5422,他のメソッドに渡される、または他のメソッドから渡される更なる引数。
5423,接続。
5424,数値。  ファイル位置（<code>origin</code>で指定された起点からの相対位置）、または<code>NA</code>.
5425,文字列.  空または<code>"read"</code>または<code>"write"</code>,部分一致が許される。
5426,文字列.  <code>"start"</code>, <code>"current"</code>, <code>"end"</code> のいずれか: '詳細'を参照してください。
5427,他のメソッドに渡される、または他のメソッドから渡される更なる引数。
5428,メソッドに、またはメソッドから渡される引数。
5429,これらの配列の開始値と（最大）終了値。  無名の引数として<code>from</code>だけが供給されない限り、長さ<code>1</code>のものである。
5430,番号: シーケンスのインクリメント。
5431,シーケンスの希望する長さ.  <code>seq</code>と<code>seq.int</code>では、分数であれば切り上げられる負の数。
5432,この引数の長さから長さを取る。
5433,メソッドに渡される、またはメソッドから渡される引数。
5434,これらの配列の開始値と（最大）終了値。  無名の引数として<code>from</code>だけが供給されない限り、長さ<code>1</code>のものである。
5435,number: シーケンスの増分。
5436,シーケンスの希望する長さ.  <code>seq</code>と<code>seq.int</code>では、分数であれば切り上げられる。
5437,この引数の長さから長さを取る。
5438,メソッドに渡される、またはメソッドから渡される引数。
5439,これらの配列の開始値と（最大）終了値。  無名の引数として<code>from</code>だけが供給されない限り、<code>1</code>の長さである。
5440,番号: シーケンスの増加数.
5441,シーケンスの希望する長さ.  <code>seq</code>と<code>seq.int</code>では、分数であれば切り上げられる。
5442,この引数の長さから長さを取る。
5443,開始日。  必須
5444,終了日。  オプションです。
5445,シーケンスのインクリメント。  任意です。  詳細」を参照してください。
5446,integer、オプション。  シーケンスの希望する長さ。
5447,この引数の長さから長さを取ります。
5448,他のメソッドに渡される、または他のメソッドから渡される引数。
5449,メソッドに渡される、またはメソッドから渡される引数。
5450,これらの配列の開始値と（最大）終了値。  無名の引数として<code>from</code>だけが供給されない限り、長さ<code>1</code>のものである。
5451,番号: シーケンスの増加数.
5452,シーケンスの希望する長さ.  <code>seq</code>と<code>seq.int</code>では、分数であれば切り上げられる負の数。
5453,この引数の長さから長さを取る。
5454,メソッドに渡される、またはメソッドから渡される引数。
5455,これらの配列の開始値と（最大）終了値。  無名の引数として<code>from</code>だけが供給されない限り、長さ<code>1</code>のものである。
5456,番号: シーケンスのインクリメント.
5457,シーケンスの希望する長さ.  <code>seq</code>と<code>seq.int</code>では、分数であれば切り上げられる。
5458,この引数の長さから長さを取る。
5459,開始日。  必須です。
5460,終了日。  オプションです。
5461,シーケンスのインクリメント。  オプションです。  詳細」を参照してください。
5462,integer、オプション。  シーケンスの希望する長さ。
5463,この引数の長さから長さを取ります。
5464,他のメソッドに渡される、または他のメソッドから渡される引数。
5465,非負整数ベクトルに強制され、その各要素はシーケンスの長さを指定する。
5466,配列の最初の要素を指定する各要素を持つ整数ベクトルへ強制されます。
5467,各要素がシーケンスの要素間のステップサイズを指定する整数ベクトルに強制される。
5468,メソッドに渡される追加引数。
5469,配列の長さを指定する各要素を非負の整数ベクトルに強制する。
5470,配列の最初の要素を指定する各要素を持つ整数ベクトルに強制されます。
5471,各要素がシーケンスの要素間のステップサイズを指定する整数ベクトルに強制される。
5472,メソッドに渡される追加引数。
5473,<span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクトをシリアライズする。
5474,オープンな接続、(<code>serialize</code>の場合)<code>NULL</code>、(<code>unserialize</code>の場合) raw vector(see 'Details').
5475,a logical.  <code>TRUE</code> または <code>NA</code> の場合、ASCII表現が書かれます; それ以外の場合(デフォルト)はバイナリ表現です。 <code>save</code> のヘルプにあるコメントも参照してください。
5476,a論理：バイナリ表現が使用される場合、アビッグエンディアンのもの（XDR）が使用されるべきですか？
5477,使用するワークスペース・フォーマット・バージョンを指定します。  <code>NULL</code>は現在のデフォルトバージョン(3)を指定します。他にサポートされている値は2だけで、これは<span style="font-family：Courier New, Courier; color：<br>R</b></span> 1.4.0 から <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> 3.5.0.
5478,参照オブジェクトを扱うためのフック関数。
5479,文字列。  接続の説明：'詳細'を参照してください。
5480,文字列。  接続を開く方法(最初に開くべき場合)の説明。  可能な値については、「モード」セクションを参照してください。
5481,論理。  ブロッキング」セクションを参照してください。
5482,想定されるエンコーディングの名前です。  エンコーディング」セクションを参照してください。
5483,論理。  trueを指定すると、通常のファイルではない引数(例えばキャラクタデバイス)に適した「raw」インターフェースが使用されます。  これは、テキストモードの読書用に開く際に圧縮ファイルのチェックを抑制し、「ファイル」がシーク可能でない可能性があることを表明する。
5484,文字列、<code>c("default", "internal", "wininet", "libcurl")</code> に部分的に一致します:「詳細」参照。
5485,HTTPrequestsで使用するHTTPヘッダーの名前付き文字ベクトルです。  非HTTPのURLでは無視されます。  <code>HTTPUserAgent</code> オプション (<code>options</code> を参照) から得られる <code>User-Agent</code> ヘッダーは、自動的に最初のヘッダーとして使用されます。
5486,0-9の整数値。  書き込み時に適用される圧縮の量を、なしから利用可能な最大値まで指定します。  <code>xzfile</code>の場合、負の値も指定できます：「圧縮」セクションを参照してください。
5487,数値：この接続に使用されるタイムアウト（秒単位）です。  OSによっては、非常に大きな値をゼロとして扱うことがあるので注意してください：しかし、POSIX標準では、31日以内の値をサポートすることが要求されています。
5488,オプションの文字ベクトル。現在、TCPソケットでは<code>"no-delay"</code>のみがサポートされています。
5489,ZIPファイル内のファイル名。
5490,文字列。  ポートのホスト名。
5491,整数。  TCPポート番号。
5492,論理。  ソケットはクライアントとサーバーのどちらであるべきですか？
5493,コネクションをリッスンするサーバー・ソケットです。
5494,コネクションです。
5495,文字列です。  現在、無視されています。
5496,文字列。  空または<code>"read"</code>または<code>"write"</code>、部分一致が許されます。
5497,他のメソッドに渡される、または他のメソッドから渡される引数。
5498,characterまたは<code>NULL</code>。  <code>kind</code>が文字列の場合、<span style="font-family：Courier New, Courier; color：<br>R</b></span> のRNGを希望する種類に設定します。  <code>"default"</code> を使って、<span style="font-family：Courier New, Courier; color：#"><b>R</b></span> のデフォルトに戻ります。  <code>NULL</code>の解釈については、「詳細」を参照してください。
5499,文字列または<code>NULL</code>.  文字列の場合、Normalの生成方法を設定します。  <code>"default"</code> を使うと、<span style="font-family：Courier New, Courier; color：#"><b>R</b></span> のデフォルトに戻ります。  <code>NULL</code>は変更しない。
5500,文字列または<code>NULL</code>を指定します。  文字列の場合は、離散一様生成の方法を設定します（<code>sample</code>などで使用します）。  <code>"default"</code> を使うと、<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> のデフォルトに戻ります。  <code>NULL</code>は何の変化もない。
5501,整数として解釈される単一の値、または<code>NULL</code>(「詳細」参照).
5502,バージョン番号を含む文字列、例えば、<code>"1.6.2"</code>です。  現在のデフォルトのRNG構成は、<span style="font-family：Courier New, Courier; color：<code>vstr</code> が現在のバージョンより大きい場合、><b>R</b></span> バージョンが使用されます。
5503,上記の<code>kind</code>に対応する<code>0:k</code>の整数コード.
5504,整数.  いくつ必要かは詳細をご覧ください(これは<code>rng.kind</code>に依存します)。
5505,重複する値のない一連の項目を含むベクトル(同じモード)(概念的に)
5506,重複のない一連の項目(概念的に)を含む(同じモードの)ベクター。
5507,文字列：フック名
5508,文字列：パッケージ/名前空間名
5509,文字列：パッケージのイベント。  省略可。
5510,関数または関数のリスト、<code>action = "replace"</code> の場合は <code>NULL</code> 。
5511,実行されるアクション。  省略することもできる。
5512,文字列または名前空間環境。
5513,論理的である。
5514,環境。
5515,名前空間環境。
5516,文字ベクトル。
5517,オプションの文字ベクトル。
5518,名前空間環境。
5519,ロードするパッケージ/名前空間の名前を示す文字列。
5520,<code>generics</code>と並列するパッケージ名のベクトル。
5521,ライブラリを指定する文字ベクトル.
5522,論理.
5523,文字.
5524,文字.
5525,環境.
5526,3列の文字行列.
5527,文字.
5528,任意のオブジェクト。
5529,character引数。
5530,メソッドテーブル名.
5531,シンボル：ネームスペースの名前
5532,importから除外するシンボルを指定する文字ベクトル、特に<code>vars</code>がない場合に便利です。
5533,double(長さ1)。  合計または経過したcpu時間の制限をそれぞれ秒単位で設定する。
5534,論理。  <code>TRUE</code>の場合、制限は現在の計算の残りの部分にのみ適用されます。
5535,double(長さ1).  合計または経過したcpu時間にそれぞれ秒単位で制限を設定する。
5536,論理。  <code>TRUE</code>の場合、制限は現在の計算の残りの部分にのみ適用されます。
5537,文字列：チルダ展開が行われます。
5538,logical:trueの場合、閉じた接続と標準的な接続を含むすべての接続が表示されます。  falseの場合、開いているユーザー作成接続のみが含まれます。
5539,integer：<code>showConnections</code>で与えられたテーブルの行番号です。
5540,接続。
5541,文字ベクトル、通常長さは1です。
5542,character：シェルクオートのタイプ。  部分的なマッチングがサポートされています。  <code>"cmd"</code>と<code>"cmd2"</code>はWindowsシェルを指します。<code>"cmd"</code>はWindowsではデフォルトです。
5543,数値ベクトル
5544,条件オブジェクト。
5545、呼び出し式。
5546,条件オブジェクト。
5547,評価される式.
5548、リターンまたは終了する前に評価される式。
5549、関数
5550、文字列
5551、文字列
5552,再始動に名前を付ける文字列。
5553,再始動オブジェクト。
5554,オブジェクト
5555,条件クラス名を指定する文字列。
5556,追加引数; 以下の詳細を参照してください。
5557,数値ベクトル。  または、<code>round</code>と<code>signif</code>の場合は、複合ベクトル。
5558,小数点以下の桁数(<code>round</code>)または有効桁数(<code>signif</code>)を示す整数です。
5559,メソッドに渡される引数。
5560,条件オブジェクト。
5561,呼び出し式。
5562、条件オブジェクト。
5563,評価される式。
5564、リターンまたは終了する前に評価される式。
5565、関数
5566,文字列。
5567,文字列。
5568,再始動に名前を付ける文字列。
5569,再始動オブジェクト。
5570,オブジェクト。
5571,条件クラスの名前を指定する文字列。
5572,追加引数; 下記詳細を参照。
5573,条件オブジェクト。
5574、呼び出し式。
5575、条件オブジェクト。
5576,評価される式。
5577,リターンまたは終了する前に評価される式。
5578、関数
5579,文字列
5580,文字列
5581【再起動を命名する文字列】.
5582,再始動オブジェクト。
5583,オブジェクト。
5584,条件クラスの名前を指定する文字列。
5585,追加引数、詳細は下記を参照。
5586,条件オブジェクト。
5587、呼び出し式。
5588、条件オブジェクト。
5589、評価される式。
5590、リターンまたは終了する前に評価される式。
5591、関数
5592,文字列。
5593、文字列
5594,再始動に名前を付ける文字列。
5595,再始動オブジェクト。
5596,オブジェクト。
5597,条件クラス名を指定する文字列。
5598,追加引数; 以下の詳細を参照。
5599,条件オブジェクト。
5600、呼び出し式。
5601、条件オブジェクト。
5602,評価される式。
5603,リターンまたは終了する前に評価される式。
5604、関数
5605,文字列。
5606、文字列。
5607,再起動の名前を示す文字列。
5608,再起動オブジェクト。
5609、オブジェクト。
5610,条件クラス名を示す文字列。
5611,追加引数; 詳細は後述する。
5612,ベクトル（アトミックまたはリスト）または<code>expression</code>オブジェクト。  その他のオブジェクト（クラス化されたオブジェクトを含む）は、<code>base::as.list</code>によって強制される。
5613,<code>X</code>の各要素に適用される関数: '詳細'を参照して下さい。  <code>+</code>、<code>%*%</code>のような関数の場合、関数名はバッククォートまたはクォートされなければならない。
5614,<code>FUN</code>のオプション引数。
5615,論理または文字列; 可能であれば、結果はベクトル、行列または高次元配列に簡略化されるべきか？  <code>sapply</code> では、省略せずに名前を付けなければなりません。デフォルト値の <code>TRUE</code> は、適切であればベクトルまたは行列を返し、<code>simplify = "array"</code> では、結果は <code>FUN(X[[i]])</code> の結果より一つ高い "rank"(<i>=</i><code>length(dim(.)) </code>) であることができます。
5616,論理; もし <code>TRUE</code> で <code>X</code> が文字なら、<code>X</code> を結果の <code>names</code> として使用します（既に名前がある場合を除く）。  この引数は<code>...</code>に続くので、その名前を省略することはできない。
5617,a (generalized) vector; FUNからの戻り値のテンプレート。  詳細'を参照。
5618,整数: 複製数.
5619,繰り返し評価する式(言語オブジェクト、通常はコール)。
5620,リスト。通常は<code>lapply()</code>から返されます。
5621,論理; もし真なら、<code>simplify2array()</code>は適切な時に("高位")配列を生成し、一方<code>higher = FALSE</code> は行列（またはベクトル）だけを返す。この二つのケースはそれぞれ <code>sapply(*, simplify = "array")</code> または <code>simplify = TRUE</code> と一致します.
5622,数値ベクトルまたは複素数ベクトル。
5623,希望する長さを指定する非負の整数。2倍値は整数に強制される。1以外の長さの引数を与えるとエラーになる。
5624,強制される、またはテストされるオブジェクト。
5625,他のメソッドに渡される、または他のメソッドから渡される追加の引数。
5626,数値または複素数ベクトル
5627,書き込み可能な接続、または書き込み先のファイルを指定する文字列、または<code>NULL</code>でシンクを停止します。
5628,論理的である。  <code>TRUE</code>の場合、出力は<code>file</code>に追加され、それ以外の場合、<code>file</code>の内容を上書きする。
5629,文字列。  出力ストリームまたはメッセージストリームのどちらかを指定します。  名前は部分的にマッチングされるので省略可能です。
5630,論理：<code>TRUE</code>の場合、Unixのプログラム<code>tee</code>のように、出力はニュースリンクと現在の出力ストリームに送られます。
5631,書き込み可能な接続、または書き込み先のファイルを指定する文字列、または<code>NULL</code>でシンクを停止します。
5632,論理的である。  <code>TRUE</code>の場合、出力は<code>file</code>に追加され、そうでない場合、<code>file</code>の内容を上書きします.
5633,文字列。  出力ストリームまたはメッセージストリームのいずれかを指定します。  名前は部分的に一致するので省略可能です。
5634,論理：<code>TRUE</code>の場合、Unixのプログラム<code>tee</code>のように、出力はニュースリンクと現在の出力ストリームに送られます.
5635,数値または複素数ベクトル。
5636,配列である。  <code>x</code>がdimension属性を持たない場合、1次元配列とみなされる。
5637,スライスする次元数を指定する整数ベクトル.
5638,文字列。  接続の説明：'詳細'を参照してください。
5639,文字列。  接続を開く方法(最初に開くべき場合)の説明。  可能な値については、「モード」のセクションを参照してください。
5640,論理。  ブロッキング」セクションを参照してください。
5641,想定されるエンコーディングの名前。  エンコード」セクションを参照してください。
5642,論理。  trueを指定すると、通常のファイルではない引数（キャラクタデバイスなど）に適した「raw」インターフェイスが使用されます。  これは、テキストモードの読書用に開くときに圧縮ファイルのチェックを抑制し、「ファイル」がシーク可能でない可能性があることを表明する。
5643,文字列、<code>c("default", "internal", "wininet", "libcurl")</code> に部分的に一致します:「詳細」参照。
5644,HTTPrequestsで使用するHTTPヘッダーの名前付き文字ベクトルです。  非HTTPのURLでは無視されます。  <code>HTTPUserAgent</code> オプション (<code>options</code> を参照) から来る <code>User-Agent</code> ヘッダーは、自動的に最初のヘッダーとして使用されます。
5645,0-9の整数。  書き込み時に適用される圧縮の量を、なしから利用可能な最大値まで指定します。  <code>xzfile</code>の場合、負の値も可能です。「圧縮」セクションを参照してください。
5646,数値：この接続に使用されるタイムアウト（秒単位）です。  OSによっては、非常に大きな値をゼロとして扱うことがあるので注意してください：しかし、POSIX標準では、31日までの値がサポートされることを要求しています。
5647,オプションの文字ベクトル。現在、TCPソケットでは<code>"no-delay"</code>のみがサポートされています。
5648,ZIPファイル内のファイル名。
5649,文字列。  ポートのホスト名。
5650,整数。  TCPポート番号。
5651,論理。  ソケットはクライアントかサーバーのどちらであるか？
5652,コネクションをリッスンしているサーバーソケットです。
5653,コネクションです。
5654,文字列。  現在、無視されています。
5655,文字列。  空または<code>"read"</code>または<code>"write"</code>、部分一致が許可されます。
5656,他のメソッドに渡される、または他のメソッドから渡される引数。
5657,文字列。  接続の説明：'詳細'を参照してください。
5658,文字列。  接続を開く方法(最初に開く必要がある場合)の説明。  可能な値については、「モード」セクションを参照してください。
5659,論理。  ブロッキング」セクションを参照してください。
5660,想定されるエンコーディングの名前です。  エンコード」セクションを参照してください。
5661,論理。  trueを指定すると、通常のファイルでない引数(キャラクタデバイスなど)に適した「raw」インターフェイスが使用されます。  これは、テキストモードの読書用に開くときに圧縮ファイルのチェックを抑制し、「ファイル」がシーク可能でない可能性があることを表明する。
5662,文字列、<code>c("default", "internal", "wininet", "libcurl")</code> に部分的にマッチします:「詳細」参照。
5663,HTTPrequestsで使用するHTTPヘッダーの名前付き文字ベクトルです。  非HTTP URLの場合は無視されます。  <code>HTTPUserAgent</code> オプション (<code>options</code> を参照) から得られる <code>User-Agent</code> ヘッダーは、自動的に最初のヘッダーとして使われます。
5664,0-9の整数値。  書き込み時に適用される圧縮の量を、なしから利用可能な最大値まで指定します。  <code>xzfile</code>の場合、負の値も可能です。「圧縮」セクションを参照してください。
5665,数値：この接続に使用されるタイムアウト（秒単位）です。  OSによっては、非常に大きな値をゼロとして扱うことがあるので注意してください：しかし、POSIX標準では、31日までの値をサポートすることを要求しています。
5666,オプションの文字ベクトル。現在、TCPソケットでは<code>"no-delay"</code>のみがサポートされています。
5667,ZIPファイル内のファイル名。
5668,文字列。  ポートのホスト名。
5669,整数。  TCPポート番号。
5670,論理。  ソケットはクライアントとサーバーのどちらであるべきですか？
5671,コネクションをリッスンするサーバー・ソケット。
5672,コネクションです。
5673,文字列。  現在、無視されています。
5674,文字列。  空または<code>"read"</code>または<code>"write"</code>、部分一致が許可されています。
5675,他のメソッドに渡される、または他のメソッドから渡される引数。
5676,オープンソケット接続とサーバーソケットのリスト。
5677,論理的である。  もし<code>TRUE</code>なら、対応するソケットが書き込み可能になるのを待ち、そうでなければ、読み込み可能または着信接続を受け付けるようになるのを待つ（サーバーソケット）。
5678,数値または<code>NULL</code>.ソケットが利用可能になるのを待つ時間(秒); <code>NULL</code>は、無期限に待つことを意味します.
5679,文字列.  接続の説明: '詳細'を参照してください。
5680,文字列.  接続を開く方法(最初に開く必要がある場合)の説明。  可能な値については、「モード」のセクションを参照してください。
5681,論理。  ブロッキング」セクションを参照してください。
5682,想定されるエンコーディングの名前です。  エンコーディング」セクションを参照してください。
5683,logical。  trueを指定すると、通常のファイルでない引数（キャラクタデバイスなど）に適した「raw」インターフェースが使用されます。  これは、テキストモードの読書用に開くときに圧縮ファイルのチェックを抑制し、「ファイル」がシーク可能でない可能性があることを表明する。
5684,文字列、<code>c("default", "internal", "wininet", "libcurl")</code> に部分的に一致します:「詳細」参照。
5685,HTTPrequestsで使用するHTTPヘッダーの名前付き文字ベクトルです。  非HTTP URLの場合は無視されます。  <code>HTTPUserAgent</code> オプション (<code>options</code> を参照) から得られる <code>User-Agent</code> ヘッダーは、自動的に最初のヘッダーとして使用されます。
5686,0-9の整数値。  書き込み時に適用される圧縮の量を、なしから利用可能な最大値まで指定します。  <code>xzfile</code>の場合、負の値も可能です。「圧縮」セクションを参照してください。
5687,数値：この接続に使用されるタイムアウト（秒単位）です。  OSによっては、非常に大きな値をゼロとして扱うことがあるので注意してください：しかし、POSIX標準では、31日までの値をサポートすることを要求しています。
5688,オプションを含むオプションの文字ベクトル。現在、TCPソケットでは<code>"no-delay"</code>のみがサポートされています。
5689,ZIPファイル内のファイル名。
5690,文字列。  ポートのホスト名。
5691,整数。  TCPポート番号。
5692,論理。  ソケットはクライアントかサーバーのどちらであるか？
5693,コネクションをリッスンするサーバー・ソケット。
5694,コネクションです。
5695,文字列。  現在、無視されています。
5696,文字列。  空または<code>"read"</code>または<code>"write"</code>、部分一致が許可されています。
5697,他のメソッドに渡される、または他のメソッドから渡される引数。
5698,連立方程式の係数を含む正方形の数値または複素数行列。  論理行列は数値に強制されます.
5699,連立方程式の右辺を示す数値または複素数のベクトルまたは行列.  もし見つからない場合、<code>b</code>はbean identity matrixとみなされ、<code>solve</code>は<code>a</code>の逆を返します.
5700,<code>a</code>の列の線形依存性を検出するための許容範囲。  デフォルトは <code>.Machine$double.eps</code> です。現在、複素数行列<code>a</code>では使用されていません。
5701,論理的である。  無効であり、エラーである。
5702,他のメソッドに渡される、または他のメソッドから渡される更なる引数
5703,連立方程式の係数を含む正方形の数値または複素行列。  論理行列は、数値に強制される。
5704,連立方程式の右辺を示す数値または複素数のベクトルまたは行列.  もし見つからない場合、<code>b</code>は豆単位行列となり、<code>solve</code>は<code>a</code>の逆行列を返します.
5705,<code>a</code>の列の線形依存性を検出するための許容範囲。  デフォルトは <code>.Machine$double.eps</code> です。現在、複素行列<code>a</code>で使用されていません。
5706,論理的である。  無効でエラーになります。
5707,他のメソッドに渡される、または他のメソッドから渡される更なる引数
5708,QR分解が計算される数値または複素行列。  論理行列は、数値に強制される。
5709,<code>x</code>の列の線形依存性を検出するための許容範囲。<code>LAPACK</code> が偽で<code>x</code>が実数の場合のみ使用されます。
5710,<code>qr</code>で計算されるタイプのQR分解です。
5711,方程式の右辺のベクトルまたはマトリックス。
5712,QR分解または(<code>qr.solve</code>のみ)直交行列.
5713,有効ランク.
5714,論理的.  実数<code>x</code>の場合、trueならLAPACKを、そうでなければLINPACK（デフォルト）を使用します。
5715,他のメソッドに渡される、または他のメソッドから渡される追加の引数
5716,<code>sort</code>の場合、<span style="font-family：Courier New, Courier; color：クラスまたは数値、複素数、文字、論理ベクトルを持つ<span style="font-family: Courier New Courier; color: #666666;"><b>R</b></span> オブジェクトを指定します。  <code>sort.int</code> の場合は、数値、複素数、文字、論理ベクトル、または係数。
5717,論理。  <code>"radix"</code> メソッドでは、<code>...</code> の引数の数に等しい長さのベクトルにすることができます。その他のメソッドでは、長さ1でなければなりません。部分ソートでは利用できない。
5718,メソッドに渡す引数、または(デフォルトのメソッドとクラスを持たないオブジェクトに対して)<code>sort.int</code>に渡す引数を指定します。
5719,<code>NA</code>の扱いを制御する。<code>TRUE</code>なら、データの欠損値は最後に置かれ、<code>FALSE</code>なら最初に置かれ、<code>NA</code>なら、それらは除去される。
5720,<code>NULL</code>または部分ソートのためのインデックスのベクトル。
5721,使用されるアルゴリズムを指定する文字列。  部分的なソートには利用できない。  省略可能。
5722,順序付けインデックスベクトルも返すべきかを示す論理。<code>na.last</code>モードとデータ型に対して<code>method == "radix"</code>でサポートされ、他のメソッドは<code>na.last = NA</code> （デフォルト）および非要素の完全ソートの場合に使用されます。
5723,<code>sort</code> の場合、<span style="font-family：Courier New, Courier; color：#クラスまたは数値、複素数、文字、論理ベクトルを持つ<br /> R</b></span> オブジェクトを指定します。  <code>sort.int</code> の場合は、数値、複素数、文字、論理ベクトル、または係数。
5724,論理。  <code>"radix"</code> メソッドでは、<code>...</code> の引数の数に等しい長さのベクトルにすることができます。その他のメソッドでは、長さ1でなければなりません。部分ソートでは利用できない。
5725,メソッドまたは(デフォルトのメソッドとクラスを持たないオブジェクトに対して)<code>sort.int</code>に渡される引数です。
5726,<code>NA</code>の扱いを制御する。<code>TRUE</code>なら、データの欠損値は最後に置かれ、<code>FALSE</code>なら最初に置かれ、<code>NA</code>なら、それらは除去される。
5727,<code>NULL</code>または部分ソートのためのインデックスのベクトル。
5728,使用されるアルゴリズムを指定する文字列。  部分的なソートには利用できない。  省略可能。
5729,順序付けインデックスベクトルも返すべきかを示す論理。<code>na.last</code>モードとデータ型に対して<code>method == "radix"</code>でサポートされ、他のメソッドは<code>na.last = NA</code> （デフォルト）および非要素の完全ソートの時にサポートされる。
5730,<code>sort</code> の場合、<span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクトのクラス、または数値、複素数、文字、論理ベクトルを指定する。  <code>sort.int</code>の場合は、数値、複素数、文字または論理ベクトル、または係数。
5731,論理。  <code>"radix"</code> メソッドでは、<code>...</code> の引数の数に等しい長さのベクトルにすることができます。その他のメソッドでは、長さ1でなければなりません。部分ソートでは利用できない。
5732,メソッドに、または（デフォルトのメソッドとクラスを持たないオブジェクトのために）<code>sort.int</code>に渡される引数です。
<code>TRUE</code>の場合、データの欠損値は最後に置かれ、<code>FALSE</code>の場合、それらは最初に置かれ、<code>NA</code>の場合、それらは除去される。
5734,<code>NULL</code>または部分ソートのためのインデックスのベクトル。
5735,使用されるアルゴリズムを指定する文字列。  部分的なソートには利用できない。  省略可能です。
5736,順序付けインデックスベクトルも返すべきかを示す論理。<code>na.last</code>モードとデータ型に対して<code>method == "radix"</code>でサポートされ、他のメソッドは<code>na.last = NA</code> （デフォルト）および非要素の完全ソートの場合に使用されます。
5737,すべて同じ長さの数値、複素数、文字または論理ベクトルのシーケンス、またはクラス化された<span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクトです。
5738,<code>method</code>s <code>"shell"</code> and<code>"quick"</code> for atomic vector.  <code>x</code>が非アトミックな<span style="font-family：Courier New, Courier; color：<b>R</b></span> オブジェクトの場合、<code>order(x,...)</code>がそうであれば、デフォルトの<code>"auto"<code>と<code>"radix"<code>メソッドは機能するかもしれません。
5739,部分ソート用のインデックスのベクトル。(非<code>NULL</code>値は実装されていません。)
5740,論理的である。  ソート順序は増加順序であるべきですか？<code>"radix"</code>メソッドでは、<code>...</code>の引数の数に等しい長さのベクトルを指定することができます。その他の方法については、長さ1でなければなりません。
<code>TRUE</code>の場合、データの欠損値は最後に置かれ、<code>FALSE</code>の場合、それらは最初に置かれ、<code>NA</code>の場合、それらは除去されます（「注」参照）。
5742,使用する方法：部分一致が可能です。  デフォルト(<code>"auto"</code>)は、短い数値ベクトル、整数ベクトル、論理ベクトル、因数に対して<code>"radix"</code>を意味します。<code>"shell"</code>, <code>"quick"</code>, <code>"radix"</code>, という方法の詳細は、 <code>sort</code> に対するヘルプを見てください。
5743、<code>sort</code>の場合、<span style="font-family：Courier New, Courier; color：<br>R</b></span> クラスを持つオブジェクト、または数値、複素数、文字、論理ベクトルを指定します。  <code>sort.int</code> の場合は、数値、複素数、文字、論理ベクトル、または係数。
5744,論理。  <code>"radix"</code> メソッドでは、<code>...</code> の引数の数に等しい長さのベクトルにすることができます。その他のメソッドでは、長さ1でなければなりません。部分ソートでは利用できない。
5745,メソッドまたは(デフォルトのメソッドとクラスを持たないオブジェクトに対して)<code>sort.int</code>に渡される引数です.
もし<code>TRUE</code>なら、データの欠損値は最後に置かれ、もし<code>FALSE</code>なら、それらは最初に置かれ、もし<code>NA</code>なら、それらは除去される。
5747,<code>NULL</code>または部分ソートのためのインデックスのベクトル。
5748,使用されるアルゴリズムを指定する文字列。  部分的なソートには利用できない。  省略可能です。
5749,順序付けインデックスベクトルも返すべきかを示す論理。<code>na.last</code>モードとデータ型に対して<code>method == "radix"</code>でサポートされ、他のメソッドは<code>na.last = NA</code> （デフォルト）と非要素の完全ソートの場合に使用されます。
5750,コネクション、または読み込むファイルやURLのパス名を与える文字列を指定します。  <code>""</code>は、<code>stdin()</code>という接続を示します。
5751、<code>TRUE</code>、<code>FALSE</code>または環境は、解析された式が評価される場所を決定します。  <code>FALSE</code>（デフォルト）はユーザのワークスペース（グローバル環境）に対応し、<code>TRUE</code>は<code>source</code>が呼び出される環境に対応します。
5752,logical;もし<code>TRUE</code>なら、各式はパース後、評価前にプリントされる。
5753,logical; if <code>TRUE</code>, <code>eval(i)</code> の結果が各式 <code>i</code> に対して表示される; デフォルトは <code>echo</code> の値である.
5754,<code>source()</code>と<code>withAutoprint(*, evaluated=TRUE)</code>の場合：<em>代わりに<code>ファイル</code>、<code>式<code>、<code>コール<code>または<code>コール<code>の <code>リスト<code>、ただし評価なしの「式」であることが指定されます</em>.

5755,<code>withAutoprint()</code>（デフォルト<code>evaluated=FALSE</code>）の場合：一つまたは複数の評価されない「式」.
5756,論理的には、<code>exprs</code>は<code>source(exprs= *)</code>に渡され、したがって評価されなければならない、すなわち、正式な<code>式</code>、<code>コール</code>または呼び出しの<code>リスト</code>であることを示しています。
5757,各式の前に改行（つまり空行）を表示するかどうかを示す論理（<code>echo = TRUE</code>の時）。
5758,もし<code>TRUE</code>なら、入力の解析と評価中に、<b>各</b>式の追加情報を含むより多くの診断結果(<code>echo = TRUE</code> だけではない)を表示する。
5759,character;は、<code>echo = TRUE</code> の場合に使用されるプロンプトを与えます。
5760,integer;は<code>echo</code>が<code>TRUE</code>の場合にのみ使用され、単一の式のディパースの最大出力文字数を指定します.
5761,整数、<code>deparse()</code>に渡され、ソース参照がない場合に使用される(だけ)。
5762,<code>文字</code>ベクトル、<code>deparse()</code>に<code>制御<code>として渡されます。  で、<span style="font-family：Courier New, Courier; color：<span>バージョン &lt;= 3.3.x では、これは <code>"showAttributes"</code> にハードコードされており、現在はこれがデフォルトとなっています; <code>deparseCtrl = "all"</code> は、ストリップバック互換性が重要でない場合、望ましいかもしれません。
5763,logical; <code>TRUE</code>で<code>file</code>がパス名の場合、<span style="font-family：Courier New, Courier; color：<br>R</b></span> 作業ディレクトリを<code>file</code>を含むディレクトリに一時的に変更し、評価します。
5764,文字ベクトル。  <code>file</code>が文字列である場合に仮定されるエンコーディング: <code>file</code>を参照してください.  エンコーディングが推測される場合、可能な値は <code>"unknown"</code> です: 'Encodings'セクションを参照してください。
5765,character; <code>echo=TRUE</code>の場合、継続行で使用するプロンプトを指定します。
5766,整数; <code>echo = TRUE</code>の場合、ファイル冒頭のコメント行を何行スキップするか。
5767,logical:可能であれば、式をエコーするときにソースのフォーマットを保持しますか？
5768,(<code>withAutoprint()</code>の場合:) <code>source(.)</code>に渡す追加の(ファイルに関連しない)引数。
5769,グループに分割される値を含むベクトルまたはデータフレーム。
5770,<code>as.factor(f)</code>がグループ化を定義するという意味での「因子」、または、それらの相互作用がグループ化に使われるような因子のリストである。<code>x</code>がデータフレームである場合，<code>f</code>は，変数<code>g</code>によって分割するための<code>〜g<code>という形式の式，またはより一般的には<code>〜g1＋...という形式の式でもあり得る．+ gk</code> は変数<code>g1</code>, ..., <code>gk</code>の相互作用によって分割され、これらの変数は通常の非標準評価規則を使用してデータフレーム<code>x</code>内で評価される。
5771,発生しないレベルを削除するかどうかを示す論理（<code>f</code>が<code>factor</code>またはリストの場合）.
5772,<code>x</code>のasplittingと互換性のあるベクターまたはデータフレームのリスト。長さが一致しない場合、リサイクルが適用されます。
5773,文字列、<code>f</code>が<code>list</code>の場合、<code>interaction</code>に渡される。
5774,論理、<code>f</code>がリストの場合、<code>interaction</code>に渡される.
5775,メソッドに渡される更なる潜在的な引数。
5776,グループに分割される値を含むベクトルまたはデータフレーム。
5777,<code>as.factor(f)</code>がグループ化を定義するという意味での「因子」、または、それらの相互作用がグループ化に使用される場合のそのような因子のリストである。<code>x</code>がデータフレームである場合，<code>f</code>は，変数<code>g</code>によって分割するための<code>〜g<code>という形式の式，またはより一般的には<code>〜g1＋...という形式の式でもあり得る．+ gk</code> は変数<code>g1</code>, ..., <code>gk</code>の相互作用によって分割され、これらの変数は通常の非標準評価規則を使用してデータフレーム<code>x</code>内で評価される。
5778,出現しないレベルを削除するかどうかを示す論理（<code>f</code>が<code>factor</code>またはリストの場合）.
5779,<code>x</code>のasplittingと互換性のあるベクターまたはデータフレームのリスト。長さが一致しない場合、リサイクルが適用されます。
5780,文字列、<code>f</code>が<code>list</code>の場合、<code>interaction</code>に渡される。
5781,論理、<code>f</code>がリストの場合、<code>interaction</code>に渡される.
5782,メソッドに渡される更なる潜在的な引数。
5783,要約または印刷される<code>Date</code>オブジェクト。
5784,計算のための有効桁数。
5785,数値または<code>NULL</code>で、印刷されるエントリの最大数を指定する。  デフォルトでは、<code>NULL</code>の場合、<code>getOption("max.print")</code>が使用されます.
5786,他のメソッドから、または他のメソッドに渡される更なる引数。
5787,グループに分割される値を含むベクトルまたはデータフレーム。
5788,<code>as.factor(f)</code>がグループ化を定義するという意味での「因子」、または、それらの相互作用がグループ化に使われるような因子のリストである。<code>x</code>がデータフレームである場合，<code>f</code>は，変数<code>g</code>によって分割するための<code>〜g<code>という形式の式，またはより一般的には<code>〜g1＋...という形式の式でもあり得る．+ gk</code> は変数<code>g1</code>, ..., <code>gk</code>の相互作用によって分割され、これらの変数は通常の非標準評価規則を使用してデータフレーム<code>x</code>内で評価される。
5789,発生しないレベルを削除するかどうかを示す論理（<code>f</code>が<code>factor</code>またはリストである場合）.
5790,<code>x</code>のasplittingと互換性のあるベクターまたはデータフレームのリスト。長さが一致しない場合、リサイクルが適用されます。
5791,文字列、<code>f</code>が<code>リスト</code>の場合に<code>interaction</code>に渡される。
5792,論理、<code>f</code>がリストの場合、<code>interaction</code>に渡される.
5793,メソッドに渡される更なる潜在的な引数。
5794,date-timeクラスの1つから印刷または要約されるオブジェクトです。
5795,タイムゾーンフォーマットのために、<code>format.POSIXct</code>に渡されます。
5796,数値または<code>NULL</code>で、印刷されるエントリの最大数を指定します。  デフォルトでは、<code>NULL</code>の時、<code>getOption("max.print")</code>が使われます。
5797,計算の有効桁数：最も重要な時間単位を正確に表すのに十分な桁数であるべきです。
5798,他のメソッドから、または他のメソッドに渡される更なる引数。
5799,日付-時間オブジェクト
5800,日付-時間オブジェクトまたは文字ベクトル。  (文字ベクトルは<code>as.POSIXct</code>で変換されます)。
5801,数値ベクトル(秒単位)
5802,<code>==</code>、<code>!=</code>、<code>&lt;</code>、<code>&lt;=</code>または<code>&gt;=</code>から一つを選ぶ。
5803,グループに分けられる値を含むベクトルまたはデータフレーム。
5804,<code>as.factor(f)</code>がグループ化を定義するという意味での「因子」、または、それらの相互作用がグループ化に使用される場合の、そのような因子のリストである。<code>x</code>がデータフレームである場合，<code>f</code>は，変数<code>g</code>によって分割するための<code>〜g<code>という形式の式，またはより一般的には<code>〜g1＋...という形式の式でもあり得る．+ gk</code> は、変数<code>g1</code>, ..., <code>gk</code>の相互作用によって分割され、これらの変数は、通常の標準外評価規則を使用してデータフレーム<code>x</code>内で評価されます。
5805,発生しないレベルを削除するかどうかを示す論理（<code>f</code>が<code>factor</code>またはリストの場合）.
5806,<code>x</code>のasplittingと互換性のあるベクターまたはデータフレームのリスト。長さが一致しない場合、リサイクルが適用される。
5807,文字列、<code>f</code>が<code>リスト</code>の場合、<code>interaction</code>に渡される。
5808,論理、<code>f</code>がリストの場合、<code>interaction</code>に渡される.
5809,メソッドに渡される更なる潜在的な引数。
5810,グループに分割される値を含むベクトルまたはデータフレーム。
5811,<code>as.factor(f)</code>がグループ化を定義するという意味での「因子」、または、それらの相互作用がグループ化に使われる場合の、そのような因子のリスト。<code>x</code>がデータフレームである場合，<code>f</code>は，変数<code>g</code>によって分割するための<code>〜g<code>という形式の式，またはより一般的には<code>〜g1＋...という形式の式でもあり得る．+ gk</code> は変数<code>g1</code>, ..., <code>gk</code>の相互作用によって分割され、これらの変数は通常の非標準評価規則を使用してデータフレーム<code>x</code>内で評価される。
5812,発生しないレベルを削除するかどうかを示す論理（<code>f</code>が<code>factor</code>またはリストの場合）.
5813,<code>x</code>のasplittingと互換性のあるベクターまたはデータフレームのリスト。長さが一致しない場合、リサイクルが適用される。
5814,文字列。<code>f</code>が<code>list</code>の場合、<code>interaction</code>に渡します。
5815,論理、<code>f</code>がリストの場合、<code>interaction</code>に渡される。
5816,メソッドに渡される更なる潜在的な引数。
5817,グループに分割される値を含むベクトルまたはデータフレーム。
5818,<code>as.factor(f)</code>がグループ化を定義するという意味での「因子」、または、それらの相互作用がグループ化のために使用される場合のそのような因子のリストである。<code>x</code>がデータフレームである場合，<code>f</code>は，変数<code>g</code>によって分割するための<code>〜g<code>という形式の式，またはより一般的には<code>〜g1＋...という形式の式でもあり得る．+ gk</code> は変数<code>g1</code>, ..., <code>gk</code>の相互作用によって分割され、これらの変数は通常の非標準評価規則を使用してデータフレーム<code>x</code>内で評価される。
5819,発生しないレベルを削除するかどうかを示す論理（<code>f</code>が<code>factor</code>またはリストの場合）.
5820,<code>x</code>のasplittingと互換性のあるベクターまたはデータフレームのリストです。長さが一致しない場合、リサイクルが適用される。
5821,文字列、<code>f</code>が<code>list</code>の場合、<code>interaction</code>に渡される。
5822,論理、<code>f</code>がリストの場合、<code>interaction</code>に渡される.
5823,メソッドに渡される更なる潜在的な引数。
5824,フォーマット文字列の文字ベクトルで、それぞれ最大8192バイトである。
5825,<code>fmt</code>に渡される値です。  論理ベクトル、整数ベクトル、実数ベクトル、文字ベクトルだけがサポートされていますが、いくつかの強制が行われます：「詳細」セクションを参照してください。最大100まで。
5826,<code>gettext</code>を参照してください。
5827,数値または<code>complex</code>ベクトルまたは配列。
5828,an <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクト、文字ベクトルに強制される。
5829,使用される引用符の種類は、「詳細」を参照。
5830,ファイル名。
5831、ファイルに対して仮定する文字エンコーディング。
5832、文字列を作るためのエンコーディング：<code>parse</code>の<code>encoding</code>引数を参照してください。
5833, ソース行の文字ベクトル。  その他、<span style="font-family：Courier New, Courier; color：<b>R</b></span> オブジェクトは、文字に強制されます。
5834、ファイルのコピーに使用するタイムスタンプです。
5835, この<code>srcfilecopy</code>は、ファイルシステムファイルから来たことが知られていますか？
5836, <code>srcfile</code>オブジェクト。
5837, 行番号です。
5838, ソース位置を示す4、6、または8つの値のベクトル; 「詳細」を参照。
5839, 適切なクラスのオブジェクト。
5840, <code>srcref</code>のテキストを得るために<code>srcfile</code>を読み込むかどうか。
5841, 文字範囲の終わりを示すためのオプションの2番目の<code>srcref</code>オブジェクトを指定する。
5842、メソッドへの追加引数、これらは無視されます。
5843、ファイル名。
5844、ファイルに対して仮定する文字エンコーディング。
5845、文字列を作るためのエンコーディング： <code>parse</code>の<code>encoding</code>引数を参照。
5846、ソース行の文字ベクトル。  その他、<span style="font-family：Courier New, Courier; color：<b>R</b></span> オブジェクトは、文字に強制されます。
5847、ファイルのコピーで使用するタイムスタンプ。
5848、この<code>srcfilecopy</code>はファイルシステムファイルから来たと知られているか？
5849, <code>srcfile</code>オブジェクト。
5850, 行番号。
5851, ソース位置を示す4、6、または8つの値のベクトル; 「詳細」を参照。
5852, 適切なクラスのオブジェクト。
5853, <code>srcref</code>のテキストを得るために<code>srcfile</code>を読み込むかどうか。
5854、文字範囲の終わりを示すためのオプションの2番目の<code>srcref</code>オブジェクトを指定する。
5855、メソッドへの追加引数、これらは無視されます。
5856、ファイル名。
5857、ファイルに対して仮定する文字エンコーディング。
5858, 文字列を作るためのエンコーディング: <code>parse</code> の <code>encoding</code> 引数を参照してください。
5859, ソース行の文字ベクトル。  その他、<span style="font-family：Courier New, Courier; color：<b>R</b></span> オブジェクトは、文字に強制されます。
5860、ファイルのコピーに使用するタイムスタンプ。
5861、この<code>srcfilecopy</code>は、ファイルシステムファイルから来ることが知られているか？
5862、<code>srcfile</code>オブジェクト。
5863, 行番号。
5864, ソース位置を示す4、6、または8つの値のベクトル; 「詳細」を参照。
5865、適切なクラスのオブジェクト。
5866, <code>srcref</code>のテキストを得るために<code>srcfile</code>を読み込むかどうか。
5867、文字範囲の終わりをマークするためのオプションの2番目の<code>srcref</code>オブジェクト。
5868、メソッドへの追加引数、これらは無視されます。
5869、ファイル名。
5870、ファイルに対して仮定する文字エンコーディング。
5871, 文字列を作るためのエンコーディング: <code>parse</code> の <code>encoding</code> 引数を参照してください。
5872, ソース行の文字ベクトル。  その他、<span style="font-family：Courier New, Courier; color：<b>R</b></span> オブジェクトは、文字に強制されます。
5873、ファイルのコピーで使用するタイムスタンプ。
5874、この<code>srcfilecopy</code>は、ファイルシステムファイルから来ることが知られていますか？
5875, <code>srcfile</code>オブジェクト。
5876, 行番号です。
5877, ソース位置を示す4、6、または8つの値のベクトル; '詳細'を参照。
5878, 適切なクラスのオブジェクト。
5879, <code>srcref</code>のテキストを得るために<code>srcfile</code>を読み込むかどうか。
5880、文字範囲の終わりを示すためのオプションの2番目の<code>srcref</code>オブジェクトを指定する。
5881、メソッドへの追加引数、これらは無視されます。
5882,ジェネリックの名前。
5883,ジェネリック関数定義。新しいジェネリックを定義するときは決して渡されません。
5884,「start」が考慮される<code>character</code>文字列のベクトルです。
5885,<code>文字</code>ベクトル(しばしば長さ1)。
5886,論理：trueの場合、閉じた接続と標準的な接続を含むすべての接続が表示されます。  falseの場合、開いているユーザー作成接続のみが含まれます。
5887,integer：<code>showConnections</code>で与えられるテーブルの行番号です。
5888,接続。
5889,論理：trueの場合、閉じた接続と標準的な接続を含むすべての接続が表示されます。  falseの場合、開いているユーザー作成接続のみが含まれます。
5890,integer：<code>showConnections</code>で指定されたテーブルの行番号です。
5891,コネクション。
5892,論理：trueの場合、閉じた接続と標準的な接続を含むすべての接続が表示されます。  falseの場合、開いているユーザー作成接続のみが含まれます。
5893,integer：<code>showConnections</code>で指定されたテーブルの行番号です。
5894,接続。
5895,文字に強制できる0個以上のオブジェクト（セパレータなしで一緒に貼り付けられる）または単一条件オブジェクト。
5896,論理、呼び出しがエラーメッセージの一部となるべきかを示す。
5897,<code>gettext</code>を参照してください。  <code>NA</code>の場合、メッセージは翻訳されない。
5898,任意の数の<span style="font-family：Courier New, Courier; color：<b>R</b></span> 式は、<code>TRUE</code>に評価される必要があります（すべての論理ベクトル）。  <em>either</em> <code>...</code> <em>or</em><code>exprs</code> を使用します。

5899,例えば、<code>if(.)</code>の中や<span style="font-family." の算術計算で<code>TRUE</code>に強制された場合でも、正の数は<em>ない</em>ことに注意：Courier New, Courier; color：#666666;"><b>R</b></span>のようなものです。

5900,<code>...</code>に名前が提供された場合、デフォルトのエラーメッセージの代わりに使用されます。
5901,<code>exprs</code>または<code>...</code>に代わるもの：「式のような」オブジェクト、通常は<code>expression</code>ですが、<code>call</code>、<code>name</code>、または<code>TRUE</code>などの原子定数をも指します.
5902,(only when <code>exprs</code> is used:) indicates the <code>environment</code> in which the expressions should beevaluated; by default the one from <code>stopifnot() </code> has beencalled.
5903,任意の<span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクトである。
5904,オブジェクトの希望するモードまたは「ストレージモード」(タイプ)を示す文字列。
5905,任意の<span style="font-family：クーリエニュー、クーリエ; color：#"><b>R</b></span>オブジェクトを指定します。
5906,オブジェクトの希望するモードまたは「ストレージモード」(タイプ)を示す文字列。
<code>file</code>が<code>""<code>で<code>text</code>が無いか<code>NULL<code>なら、コンソールから入力されることになる。
5908,integer（またはcoerced to integer）。  パースする式数の最大値。  <code>n</code>が<code>NULL</code>または負または<code>NA</code>の場合、入力はその全体がパースされます.
5909,文字ベクトル。  パースするテキスト。  要素は、ファイルの行のように扱われます。  その他、<span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクトは、可能であれば文字に強制されます。
5910,キーボードから解析するときに表示するプロンプト。<code>NULL</code>は、<span style="font-family：Courier New, Courier; color：<b>R</b></span> のプロンプトである <code>getOption("prompt")</code> を使用します。
5911,論理値; <code>TRUE</code>の場合、keepsource参照情報。
5912,<code>NULL</code>、文字ベクトル、または<code>srcfile</code>オブジェクトを指定します。  詳細」セクションを参照してください。
5913,入力文字列に対して想定されるエンコーディング。  この値が<code>"latin1"</code>または<code>"UTF-8"</code>の場合、文字列がLatin-1またはUTF-8であることが分かっているとマークするために使用されます。  後者を行うには、接続 <code>con</code> または <em>via</em><code>options(encoding=)</code> でエンコーディングを指定します: <code>file</code> の下の例を参照して下さい。引数 <code>encoding = "latin1"</code> と <code>encoding = "UTF-8"</code> は、MBCSロケールで実行すると警告を発して無視されます。
5914,長さ<code>1</code>の<code>character</code>ベクトル、すなわち "文字列"。
もし<code>file</code>が<code>""</code>で<code>text</code>が無いか<code>NULL</code>なら、コンソールから入力されることになる。
5916,integer（またはcoerced to integer）。  パースする式の最大数。  もし<code>n</code>が<code>NULL</code>または負または<code>NA</code>の場合、入力はその全体が解析される。
5917,文字ベクトル。  パースするテキスト。  要素は、ファイルの行のように扱われます.  その他、<span style="font-family：Courier New, Courier; color：<br>R</b></span> オブジェクトは、可能であれば文字に強制されます。
5918,キーボードから解析するときに表示するプロンプト。<code>NULL</code>は、<span style="font-family：Courier New, Courier; color：<b>R</b></span> のプロンプトである <code>getOption("prompt")</code> を使用します。
5919,論理値; <code>TRUE</code>の場合、keepsource参照情報。
5920,<code>NULL</code>、文字ベクトル、または<code>srcfile</code>オブジェクト。  詳細」セクションを参照してください。
5921,入力文字列に対して想定されるエンコーディング。  この値が<code>"latin1"</code>または<code>"UTF-8"</code>の場合、文字列をLatin-1またはUTF-8であると認識させるために使用されます。  後者を行うには、接続 <code>con</code> の最初にエンコーディングを指定するか、 <em>via</em><code>options(encoding=)</code>: <code>file</code> の下の例を参照して下さい。引数 <code>encoding = "latin1"</code> と <code>encoding = "UTF-8"</code> は、MBCSロケールで実行すると警告を発して無視されます。
5922,長さ<code>1</code>の<code>character</code>ベクトル、すなわち "文字列".
5923,変換されるオブジェクト：<code>strptime</code>用の文字ベクトル、<code>strftime</code>用の<code>「POSIXlt」</code>に変換されるオブジェクト。
5924,変換に使用されるタイムゾーンを指定する文字列。  システム固有(<code>as.POSIXlt</code>を参照)ですが、<code>""<code>は現在のタイムゾーン、<code>"GMT"<code>はUTCです。無効な値はUTCとして最も一般的に扱われ、いくつかのプラットフォームでは警告が出されることがあります。
5925,文字列を指定します。  <code>format</code>methods のデフォルトは、<code>"%Y-%m-%d %H:%M:%S"</code> で、もし要素が深夜でないタイムコンポーネントを持つ場合、<code>"%Y-%m-%d"<code>それ以外の場合です。  <code>options("digits.secs")</code> が設定されている場合、指定された桁数までが秒単位で表示されます。
5926,他のメソッドから、または他のメソッドに渡される追加の引数。
5927,論理的です。  タイムゾーンの略号を出力に付加しますか？  これは時刻を表示する際に使用され、<code>"%Z"</code>を使用するよりも信頼性があります。
5928,変換されるオブジェクト：<code>strptime</code>では文字ベクトル、<code>strftime</code>では<code>"POSIXlt"</code>に変換されるオブジェクトがあります。
5929,変換に使用されるタイムゾーンを指定する文字列。  システム固有(<code>as.POSIXlt</code>を参照)ですが、<code>""<code>は現在のタイムゾーン、<code>"GMT"<code>はUTCです。無効な値はUTCとして扱われ、いくつかのプラットフォームでは警告が出されることがほとんどです。
5930,文字列。  <code>format</code>methods のデフォルトは、<code>"%Y-%m-%d %H:%M:%S"</code> で、もし要素が深夜でないタイムコンポーネントを持つ場合、<code>"%Y-%m-%d"<code>それ以外の場合です。  <code>options("digits.secs")</code> が設定されている場合、指定された桁数までが秒単位で表示されます。
5931,他のメソッドから、または他のメソッドに渡される追加の引数。
5932,論理的です。  タイムゾーンの略号を出力に付加しますか？  これは時刻を表示する際に使用され、<code>"%Z"</code>を使用するよりも信頼性があります。
5933,文字ベクトル、または<code>as.character</code>を使用して文字ベクトルに強制することができるオブジェクトです。
5934,整数ベクトルで、<code>x</code>の各要素を繰り返す（非負の）回数を指定します。
5935,分割される各要素の文字ベクトル.  因子を含む他の入力はエラーとなる.
5936,分割に使用する正規表現(複数可)(<code>fixed = TRUE</code>を除く)を含む文字ベクトル(またはそのように強制することができるオブジェクト).  空のマッチが発生した場合、特に<code>split</code>の長さが0の場合、<code>x</code>は1文字に分割されます。<code>split</code>の長さが1より大きい場合、<code>x</code>に沿って再利用されます.
5937,論理的である。  <code>TRUE</code> ならば <code>split</code> に正確にマッチし、そうでなければ正規表現を使用する。  <code>perl</code>より優先されます。
5938,論理的。  Perlと互換性のある正規表現を使うべきですか？
5939,論理的。  <code>TRUE</code>の場合、マッチングは文字単位ではなくバイト単位で行われ、マークされたエンコーディングの入力は変換されない。  <code>"bytes"</code> (<code>Encoding</code> を参照) とマークされた入力が見つかると、(警告とともに) 強制的に変換されます。
5940,文字ベクトル、または<code>as.character</code>によってこれに強制される何か。
5941,2から36までの整数、またはゼロ（デフォルト）。
5942,文字ベクトル、または<code>as.character</code>によって文字ベクトルに強制されることができるオブジェクト。
5943,正の整数値: <code>x</code>の長さにリサイクルされます.
5944,様々な属性が付加されるオブジェクト。
5945,データに付けられる<code>タグ=値</code>の形で指定される属性。
5946,文字ベクトル、または<code>as.character</code>によって文字ベクトルに変換されるオブジェクトです。
5947,出力の折り返し線のターゲットとなる列を示す正整数。
5948,段落の最初の行のインデントを与える非負の整数。
5949,段落内の後続の行のインデントを指定する非負の整数。
5950,最初の行を除く各行の接頭辞として使用される文字列で、<code>initial</code>が使用される。
5951,論理。  <code>TRUE</code> の場合、結果は行テキストの1文字ベクトルであり、そうでない場合は、<code>x</code>と同じ長さのリストで、その要素は<code>x</code>の該当要素から得られる行テキストの文字ベクトルである（したがって、前の場合の結果は、後者の結果をリスト解除することで得られる）。
5952,与えられた文字ベクトルでマッチする正規表現(<code>fixed = TRUE</code>の場合は文字列)を含む文字列。  可能であれば、<code>as.character</code>によって文字列に強制されます。  長さ2以上の文字ベクトルが与えられた場合、警告とともに最初の要素が使用されます。  <code>regexpr</code>、<code>gregexpr</code>、<code>regexec</code>以外は欠番が許される。
5953,マッチを求める文字ベクトル、または<code>as.character</code>で文字ベクトルに強制することができるオブジェクトです。  長いベクターもサポートされている。
5954,<code>FALSE</code>の場合、パターンマッチは<em>casesensitive</em>で、<code>TRUE</code>の場合、マッチング中に大文字小文字は無視されます。
5955,論理的です。  Perl互換の正規表現が使われるべきか？
5956,<code>FALSE</code>の場合は、<code>grep</code>で決定されたマッチの(<code>integer</code>)インデックスを含むベクトルが返され、<code>TRUE</code>の場合はマッチ要素自身を含むベクトルが返されます。
5957,論理的である。  <code>TRUE</code>の場合、<code>pattern</code>はそのままマッチする文字列である。  競合するすべての引数を上書きする。
5958,論理的です。  <code>TRUE</code>の場合、マッチングは、文字単位ではなく、バイト単位で行われます。  詳細'を参照してください。
5959,論理的である。  <code>TRUE</code>の場合、<em>not</em>にマッチした要素のインデックスまたは値を返す。
5960,<code>sub</code>と<code>gsub</code>でマッチしたパターンの置き換えを行う。  可能であれば、文字に強制される。  <code>fixed=FALSE</code>の場合、<code>pattern</code>の括弧付き部分式への逆参照<code>" \1"</code> to<code>"\9"</code> を含むことができます。  <code>perl=TRUE</code>の場合のみ、<code>" \U"</code> または<code>" \L"</code> で残りの置換を大文字または小文字に、<code>" \E"</code> で置換を終了することもできる。  長さ2以上の文字ベクトルが与えられた場合、警告とともに最初の要素が使用されます。  <code>NA</code>の場合、マッチに対応する結果内のすべての要素は<code>NA</code>に設定されます。
5961,サブセットされるオブジェクト。
5962,保持する要素または行を示す論理式：欠損値は偽として扱われる。
5963,データフレームから選択する列を示す式。
5964,インデックス演算子<code>[</code>に渡される。
5965,他のメソッドに、または他のメソッドから渡される更なる引数。
5966,サブセットされるオブジェクト。
5967,保持する要素または行を示す論理式：欠損値は偽とみなされる。
5968,データフレームから選択する列を示す式。
5969,インデックス演算子<code>[</code>に渡される。
5970,他のメソッドに、または他のメソッドから渡される更なる引数。
5971,サブセットされるオブジェクト。
5972,保持する要素または行を示す論理式：欠損値は偽とみなされる。
5973,データフレームから選択する列を示す式。
5974,インデックス演算子<code>[</code>に渡される。
5975,他のメソッドに、または他のメソッドから渡される更なる引数。
5976,サブセットされるオブジェクト。
5977,保持する要素または行を示す論理式：欠損値は偽とみなされる。
5978,データフレームから選択する列を示す式。
5979,インデックス演算子<code>[</code>に渡されます.
5980,他のメソッドに渡す、または他のメソッドから渡される更なる引数。
5981，構文的に有効な<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>式。
5982,<code>call</code>、すなわち、<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>オブジェクトの<code>class</code>（および<code>mode<code>）<code>"call"</code>である。
5983,環境またはリスト・オブジェクト。  デフォルトは現在の評価環境です.
5984,文字ベクトル.
5985,整数.  置換される最初の要素.
5986,整数.  置換される最後の要素.
5987,文字ベクトル、必要に応じてリサイクルされる。
5988,文字ベクトル.
5989,整数.  置換される最初の要素。
5990,整数.  置換される最後の要素。
5991,文字ベクトル、必要に応じて再利用されます。
5992,文字ベクトル.
5993,integer(整数)  置換される最初の要素。
5994,整数.  置換される最後の要素.
5995,文字ベクトル,必要ならリサイクルされる。
5996,文字ベクトル.
5997,integer(整数)  置換される最初の要素。
5998,integer(整数)  置換される最後の要素
5999,文字ベクトル、必要なら再利用される。
6000,数値または複素数または論理ベクトル。
6001,論理。  欠損値(<code>NaN</code>を含む)は削除されるべきか？
6002,要約が必要なオブジェクト。
6003,<code>summary()</code>の<em>default</em>メソッドの結果です。
6004,整数。<code>factor</code>のために何段階表示されるべきかを示す。
6005,整数, <code>signif()</code> (<code>summary.default</code> 用) または <code>format()</code> (<code>summary.data.frame</code> 用) による数値のフォーマット化に使用します.  <code>summary.default</code>では、指定されていない場合（すなわち、<code>missing(.)</code>）、<code>signif()</code>はもう呼ばれません（なぜなら<span style="font-family：Courier New, Courier; color：<br>R</b></span> &gt;= 3.4.0 で、デフォルトが <code>print</code> と <code>format</code> メソッドのラウンドのみに変更されました）。
6006,デフォルトメソッドの<code>quantile(*, type=quantile.type)</code> で使用される整数コード(integer code).
6007,生成される要約に影響を与える追加引数。
6008,文字列。  接続の説明: '詳細'を参照してください。
6009,文字列.  接続を開く方法(最初に開く必要がある場合)の説明。  可能な値については、「モード」セクションを参照してください。
6010,論理。  ブロッキング」セクションを参照してください。
6011,想定されるエンコーディングの名前です。  エンコーディング」セクションを参照してください。
6012,論理。  trueを指定すると、通常のファイルではない引数（キャラクタデバイスなど）に適した「raw」インターフェイスが使用されます。  これは、テキストモードの読書用に開く際に圧縮ファイルのチェックを抑制し、「ファイル」がシーク可能でない可能性があることを表明する。
6013,文字列、<code>c("default", "internal", "wininet", "libcurl")</code> に部分的にマッチします:「詳細」参照。
6014,HTTPrequestsで使用するHTTPヘッダーの名前付き文字ベクトルです。  非HTTP URLの場合は無視されます。  <code>HTTPUserAgent</code> オプション (<code>options</code> を参照) から得られる <code>User-Agent</code> ヘッダーは、自動的に最初のヘッダーとして使用されます。
6015,0-9の整数。  書き込み時に適用される圧縮の量を、なしから利用可能な最大値まで指定します。  <code>xzfile</code>の場合、負の値も可能です。「圧縮」セクションを参照してください。
6016,数値：この接続に使用されるタイムアウト（秒単位）です。  OSによっては、非常に大きな値をゼロとして扱うことがあるので注意してください：しかし、POSIX標準では、31日までの値がサポートされることを要求しています。
6017,オプションの文字ベクトル。現在、TCPソケットでは<code>"no-delay"</code>のみがサポートされています。
6018,ZIPファイル内のファイル名。
6019,文字列。  ポートのホスト名。
6020,整数。  TCPポート番号。
6021,論理。  ソケットはクライアントかサーバーのどちらであるか？
6022,コネクションをリッスンしているサーバーソケットです。
6023,コネクションです。
6024,文字列です。  現在、無視されています。
6025,文字列。  空または<code>"read"</code>または<code>"write"</code>、部分一致が許されます。
6026,他のメソッドに渡される、または他のメソッドから渡される引数。
6027,要約が必要なオブジェクト。
6028,<code>summary()</code>の<em>default</em>メソッドの結果です。
6029,整数、<code>factor</code>に対して何段階表示されるべきかを示す。
6030,整数, <code>signif()</code> (<code>summary.default</code> 用) または <code>format()</code> (<code>summary.data.frame</code> 用) による数値フォーマット用に使用します。  <code>summary.default</code>では、指定されていない場合（すなわち、<code>missing(.)</code>）、<code>signif()</code>はもう呼ばれません（なぜなら<span style="font-family：Courier New, Courier; color：<br>R</b></span> &gt;= 3.4.0 で、デフォルトが <code>print</code> と <code>format</code> メソッドのラウンドのみに変更されました）。
6031,デフォルトメソッドの<code>quantile(*, type=quantile.type)</code> で使われる整数コードです。
6032,生成される要約に影響を与える追加引数。
6033,オブジェクト。
6034,メソッドに渡される更なる引数。
6035,論理的: 欠損値は削除されるべきか？
6036,要約または印刷される<code>Date</code>オブジェクト。
6037,計算のための有効桁数。
6038,数値または<code>NULL</code>で、印刷されるエントリーの最大数を指定する。  デフォルトでは、<code>NULL</code>の場合、<code>getOption("max.print")</code>が使用されます.
6039,他のメソッドから、または他のメソッドに渡される更なる引数。
6040,要約または印刷される<code>Date</code>オブジェクト。
6041,計算のための有効桁数。
6042,数値または<code>NULL</code>、印刷されるエントリの最大数を指定する。  デフォルトでは、<code>NULL</code>の場合、<code>getOption("max.print")</code>が使用されます.
6043,他のメソッドから、または他のメソッドに渡される更なる引数。
6044,要約が必要なオブジェクト。
6045,<code>summary()</code>の<em>default</em>メソッドの結果です。
6046,整数、<code>factor</code>に対して何段階表示されるべきかを示す。
6047,integer、<code>signif()</code>（<code>summary.default</code>用）または<code>format()</code>（<code>summary.data.frame</code>用）で数値をフォーマットするために使用します。  <code>summary.default</code>では、指定されていない場合（すなわち、<code>missing(.)</code>）、<code>signif()</code>はもう呼ばれません（なぜなら、<span style="font-family：Courier New, Courier; color：<br>R</b></span> &gt;= 3.4.0 で、デフォルトが <code>print</code> と <code>format</code> メソッドでラウンドのみに変更されました）。
6048,デフォルトメソッドの<code>quantile(*, type=quantile.type)</code> で使用される整数コードです。
6049,生成される要約に影響を与える追加引数。
6050,date-timeまたはdateオブジェクト。
6051,変換に使用されるオプションのタイムゾーン指定、主に<code>"POSIXlt"</code>オブジェクトの場合。
6052,文字列。  変換結果の単位を指定します。  省略可能です。
6053,文字列.  <code>units</code>と同様ですが、省略はできません。
6054,時間間隔を指定する文字列または数値。
6055,<code>tim</code>のフォーマットを指定する文字：<code>strptime</code>を参照。  デフォルトはロケール固有の時間フォーマットである。
6056,クラス<code>"difftime"</code>を継承したオブジェクトです。
6057,他のメソッドに渡す、または他のメソッドから渡される引数。
6058,要約が必要なオブジェクト。
6059,<code>summary()</code>の<em>default</em>メソッドによる結果です。
6060,整数、<code>factor</code>に対して何段階表示されるべきかを示す。
6061,整数, <code>signif()</code> (<code>summary.default</code> 用) または <code>format()</code> (<code>summary.data.frame</code> 用) による数値フォーマット用に使用します。  <code>summary.default</code>では、指定されていない場合（すなわち、<code>missing(.)</code>）、<code>signif()</code>はもう呼ばれません（なぜなら、<span style="font-family：Courier New, Courier; color：<br>R</b></span> &gt;= 3.4.0 で、デフォルトが <code>print</code> と <code>format</code> メソッドのラウンドのみに変更されました）。
6062,デフォルトメソッドの<code>quantile(*, type=quantile.type)</code> で使われる整数コードです。
6063,生成される要約に影響を与える追加引数.
6064,データのベクトルで、通常、少数の異なる値をとります。
6065,オプションとして、<code>x</code>が取ったかもしれないユニークな値(文字列として)のベクトルを指定します。  デフォルトは、<code>as.character(x)</code>が取った値のユニークなセットで、<em>の昇順にソートされます。  なお、この集合は<code>sort(unique(x))</code>より小さく指定することができる。
6066,<em>either</em>レベル(<code>exclude</code>内のものを取り除いた後の<code>levels</code>と同じ順序で)のラベルのオプション文字ベクトル、<em>or</em>長さ 1の文字列。 <code>labels</code>内の重複値は同じ因子レベルに異なる<code>x</code>をマッピングするのに 使うことが出来ます.
6067,レベルのセットを形成するときに除外される値のベクトル。  これは<code>x</code>と同じレベルセットを持つ因子であってもよいし、<code>文字</code>であるべきである。
6068,レベルが（与えられた順序で）順序付けられたとみなされるべきかどうかを決定するための論理フラグ。
6069,レベル数の上限; '詳細'を参照のこと。
6070,(in <code>ordered(.)</code>): <code>ordered</code> 自体は別として、上記のいずれかである。
6071,<code>NA</code>レベルが使用される場合のみ、すなわち<code>any(is.na(x))</code>の場合のみ追加されます.
6072,要約が必要なオブジェクトです。
6073,<code>summary()</code>の<em>default</em>メソッドの結果です.
6074,整数、<code>factor</code>のために何段階表示されるべきかを示す。
6075,integer、<code>signif()</code>（<code>summary.default</code>用）または<code>format()</code>（<code>summary.data.frame</code>用）で数値フォーマットを行う際に使用。  <code>summary.default</code>では、指定されていない場合（すなわち、<code>missing(.)</code>）、<code>signif()</code>はもう呼ばれません（なぜなら、<span style="font-family：Courier New, Courier; color：<br>R</b></span> &gt;= 3.4.0 で、デフォルトが <code>print</code> と <code>format</code> メソッドでラウンドのみに変更されました）。
6076,デフォルトメソッドの<code>quantile(*, type=quantile.type)</code> で使われる整数コードです。
6077,生成される要約に影響を与える追加引数.
<code>package_version</code>の場合は、<code>R.version</code>で得られるRversionオブジェクトの代わりとなる。
6079,無効な数値バージョンはエラーになるか(デフォルト)、ならないかを示す論理です。
6080，データのベクトルで、通常は少数の異なる値をとります。
6081，<code>x</code>が取ったかもしれないユニークな値(文字列として)のオプションのベクトルである。  デフォルトは、<code>as.character(x)</code>が取った値のユニークなセットで、<em>の昇順にソートされています。  なお、この集合は<code>sort(unique(x))</code>より小さく指定することができる。
6082,<em>either</em>レベルのラベルのオプションの文字ベクトル (<code>exclude</code>内のものを削除した後の<code>levels</code>と同じ順序で), <em>or</em> 1長の文字列。 <code>labels</code>内の重複値は同じ要因レベルに<code>x</code>の異なる値をマップするために使用できます.
6083,レベルのセットを形成するときに除外される値のベクトル。  これは、<code>x</code>と同じレベルセットを持つ因子であってもよいし、<code>文字</code>であるべきです。
6084,レベルが（与えられた順序で）順序付けられたとみなされるべきかどうかを決定するための論理フラグ。
6085,レベル数の上限; '詳細'を参照のこと。
6086,(in <code>ordered(.)</code>): <code>ordered</code> 自身とは別に、上記のいずれか。
6087,<code>NA</code>レベルが使用される場合のみ、すなわち<code>any(is.na(x))</code>の場合のみ追加されます.
6088,date-timeクラスの1つから、印刷または要約されるオブジェクト。
6089,タイムゾーンフォーマットのために、<code>format.POSIXct</code>に渡されます。
6090,数値または<code>NULL</code>、印刷するエントリの最大数を指定する。  デフォルトでは、<code>NULL</code>の時、<code>getOption("max.print")</code>が使われます。
6091,計算の有効桁数:最も重要な時間単位を正確に表現するのに十分な桁数でなければならない。
6092,他のメソッドから、または他のメソッドに渡される更なる引数。
6093,日付-時間オブジェクト
6094,日付-時間オブジェクトまたは文字ベクトル。  (文字ベクトルは<code>as.POSIXct</code>で変換されます)。
6095,数値ベクトル(秒単位)
6096,<code>==</code>、<code>!=</code>、<code>&lt;</code>、<code>&lt;=</code>または<code>&gt;=</code>のいずれか一つ。
6097,date-timeクラスの1つから印刷または要約されるオブジェクトを指定します。
6098,タイムゾーンフォーマットのために、<code>format.POSIXct</code>に渡されます。
6099,数値または<code>NULL</code>で、印刷されるエントリの最大数を指定します。  デフォルトでは、<code>NULL</code>の時、<code>getOption("max.print")</code>が使用されます。
6100,計算の有効桁数：最も重要な時間単位を正確に表現するのに十分な桁数でなければならない。
6101,他のメソッドから、または他のメソッドに渡される更なる引数。
6102,日付-時間オブジェクト
6103、日付-時間オブジェクトまたは文字ベクトル。  (文字ベクトルは<code>as.POSIXct</code>で変換されます)。
6104,数値ベクトル(秒単位)
6105,<code>==</code>、<code>!=</code>、<code>&lt;</code>、<code>&lt;=</code>または<code>&gt;=</code>のいずれか一つ。
6106,date-timeクラスの1つから、印刷または要約されるオブジェクトを指定します。
6107,タイムゾーンフォーマットのために、<code>format.POSIXct</code>に渡されます。
6108,数値または<code>NULL</code>で、印刷されるエントリの最大数を指定します。  デフォルトでは、<code>NULL</code>の時、<code>getOption("max.print")</code>が使われます。
6109,計算の有効桁数：最も重要でない時間単位を正確に表現するのに十分な桁数でなければならない。
6110,他のメソッドから、または他のメソッドに渡される更なる引数。
6111、日付-時間オブジェクト
6112、日付-時間オブジェクトまたは文字ベクトル。  (文字ベクトルは<code>as.POSIXct</code>で変換されます)。
6113,数値ベクトル(秒単位)
6114,<code>==</code>、<code>!=</code>、<code>&lt;</code>、<code>&lt;=</code>または<code>&gt;=</code>のいずれか一つ。
6115,date-timeクラスの1つから印刷または要約されるオブジェクトを指定します。
6116,タイムゾーンフォーマットのために、<code>format.POSIXct</code>に渡されます。
6117,数値または<code>NULL</code>で、印刷されるエントリの最大数を指定します。  デフォルトでは、<code>NULL</code>の時、<code>getOption("max.print")</code>が使われます。
6118,計算の有効桁数：最も重要な時間単位を正確に表現するのに十分な桁数でなければならない。
6119,他のメソッドから、または他のメソッドに渡される更なる引数。
6120,日付-時間オブジェクト
6121、日付-時間オブジェクトまたは文字ベクトル。  (文字ベクトルは<code>as.POSIXct</code>で変換されます)。
6122,数値ベクトル(秒単位)
6123,<code>==</code>、<code>!=</code>、<code>&lt;</code>、<code>&lt;=</code>または<code>&gt;=</code>のいずれか一つ。
6124、ファイル名。
6125、ファイルに対して仮定する文字符号化方式。
6126、文字列を作るためのエンコーディング：<code>parse</code>の<code>encoding</code>引数を参照してください。
6127, ソース行の文字ベクトル。  その他、<span style="font-family：Courier New, Courier; color：<b>R</b></span> オブジェクトは、文字に強制されます。
6128、ファイルのコピーで使用するタイムスタンプ。
6129、この<code>srcfilecopy</code>は、ファイルシステムファイルから来ることが知られているか？
6130、<code>srcfile</code>オブジェクト。
6131、行番号。
6132, ソース位置を示す4、6、8個の値のベクトル。
6133, 適切なクラスのオブジェクト。
6134, <code>srcref</code>のテキストを得るために<code>srcfile</code>を読み込むかどうか。
6135、文字範囲の終わりをマークするためのオプションの第2の<code>srcref</code>オブジェクト。
6136、メソッドへの追加の引数、これらは無視されます。
6137、ファイル名。
6138、ファイルに対して仮定する文字エンコーディング。
6139、文字列を作るためのエンコーディング：<code>parse</code>の<code>encoding</code>引数を参照して下さい。
6140, ソース行の文字ベクトル。  その他、<span style="font-family：Courier New, Courier; color：<b>R</b></span> オブジェクトは、文字に強制されます。
6141、ファイルのコピーに使用するタイムスタンプです。
6142、この<code>srcfilecopy</code>は、ファイルシステムファイルから来ることが知られているか？
6143、<code>srcfile</code>オブジェクト。
6144、行番号。
6145、ソース位置を示す4、6、8個の値のベクトル。
6146、適切なクラスのオブジェクト。
6147, <code>srcref</code>のテキストを得るために<code>srcfile</code>を読み込むかどうか。
6148、文字範囲の終わりをマークするためのオプションの第2の<code>srcref</code>オブジェクト。
6149、メソッドへの追加の引数、これらは無視されます。
6150,因子（文字列を含む）として解釈できる1つ以上のオブジェクト、またはその構成要素がそのように解釈できるリスト（またはデータフレーム）。  (<code>as.table</code>では、特定のメソッドに渡される引数; <code>as.data.frame</code>では、未使用。)
6151,<code>...</code>のすべての要因について除去するレベル。  itが<code>NA</code>を含まず、<code>useNA</code>が指定されていない場合、<code>useNA = "ifany"</code> を意味する。  非要素引数に対する解釈は、'Details'を参照。
6152,表に<code>NA</code>の値を含めるかどうか.詳細'を参照。  省略することができる。
6153,結果の次元に与えられる名前（<em>dimnames names</em>）。
6154,デフォルトの<code>dnn</code>がどのように構築されるかを制御します。  詳細'を参照。
6155,任意の<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>オブジェクト、または<code>as.data.frame</code>メソッドのクラス<code>"table"<code>を継承したオブジェクト。なお、<code>as.data.frame.table(x, *)</code> は、<code>array</code>を「リシェイプ」するためにテーブル以外の <code>x</code> に対して明示的に呼ばれることがある。
6156,データフレームの行名を与える文字ベクトル。
6157,テーブルエントリーの列に使用される名前、通常はカウントです。
6158,論理：分類因子は、因子（デフォルト）または文字ベクトルとして返されるべきか？
6159,<code>provideDimnames</code>に渡される。
6160,<code>cat</code>に渡される引数(<code>warnings()</code>の場合).
6161,<code>warnings()</code>が返す<code>"warnings"</code>オブジェクト。
6162,<code>"warnings"</code>または<code>"summary.warnings"</code>オブジェクトを指定します。
6163,もし<code>missing</code>でなければ、<code>x</code>と同じ<code>長さの<code>文字</code>ベクトルで、メッセージを「ラベル」する。  デフォルトは <code>n &lt;- length(x)</code> の場合、<i>n &gt;= 2</i> の <code>paste0(seq_len(n), ": ")</code> となります．
6164,メッセージが印刷される前に文字列<code>cat()</code>が表示されます。
6165,文字に強制することができる0個以上のオブジェクト(そして、それらはセパレータなしで一緒に貼り付けられる)、または(<code>message</code>だけのために)単一の条件オブジェクトを持つ。
6166,<code>gettext</code>を参照してください。  <code>NA</code>の場合、メッセージは翻訳されません、<code>stop</code>の注意も参照してください。
6167,論理：文字列として与えられたメッセージは、改行が付加されるべきか？
6168,評価する式。
6169,どのクラスのメッセージが抑制されるべきかを示す文字.
6170,文字に強制することができる0個以上のオブジェクト（そしてそれらはセパレータなしで一緒に貼り付けられる）または（<code>message</code>に対してのみ）1つの条件オブジェクトです。
6171,<code>gettext</code>を参照してください。  <code>NA</code>の場合、メッセージは翻訳されません、<code>stop</code>の注意も参照してください。
6172,論理：文字列として与えられたメッセージは、改行が付加されるべきか？
6173,評価する式。
6174,どのクラスのメッセージが抑制されるべきかを示す文字。
6175,文字に強制することができる0個以上のオブジェクト（そして、セパレータなしで一緒に貼り付けられる）または1つの条件オブジェクトです。
6176,論理、呼び出しが警告メッセージの一部となるべきかを示す。
6177,論理、<code>getOption("warn") &lt;= 0</code>であっても、呼び出しが即座に出力されるべきかどうかを示します。
6178,論理的、<code>options(warn = 1)</code>の時、可能な限りメッセージを1行として出力すべきかを示す。
6179,評価する式。
6180,<code>gettext</code>を参照して下さい。  <code>NA</code> の場合、メッセージは翻訳されません、 <code>stop</code> の注意も参照して下さい。
6181，どのクラスの警告が抑制されるべきかを示す文字．
6182,条件オブジェクト。
6183，呼び出し式。
6184、条件オブジェクト。
6185、評価される式。
6186、戻りまたは終了する前に評価される式。
6187、関数
6188,文字列
6189、文字列
6190,再始動に名前を付ける文字列。
6191,再始動オブジェクト。
6192,オブジェクト。
6193,条件クラス名を指定する文字列。
6194,追加引数。詳細は下記を参照。
6195,SVD分解が計算される数値または複素行列。  論理行列は、数値に強制される。
6196,計算される左特異ベクトルの数。これは<code>0</code>から<code>n = nrow(x)</code> の間でなければなりません.
6197,計算される右特異ベクトルの数.これは<code>0</code>から<code>p = ncol(x)</code>の間でなければなりません.これは,計算される右特異ベクトルの数です.
6198,論理的です。  デファクトでエラーです。
6199,行列を含む配列。
6200,<code>x</code>の範囲を示すインデックスのベクトルで、<code>STATS</code>に対応します。<code>x</code>がdimnamesという名前を持つ場合、それは次元名を選ぶ文字ベクトルにすることができます。
6201,掃き出される要約統計量.
6202,掃引を実行するために使用される関数。
6203,論理。  <code>TRUE</code> (デフォルト)の場合、<code>STATS</code>の長さや次元が<code>x</code>の指定次元と一致しない場合に警告を出す。  <code>FALSE</code>に設定すると、寸法が一致することを<em>知っている</em>場合に、わずかな速度向上が期待できます。
6204,<code>FUN</code>のオプション引数。
6205,数値または文字列として評価される式。
6206,選択肢のリスト。  もし、<code>EXPR</code>が文字列の値を持つことを意図しているならば、これらは、おそらく、「デフォルト」値として使用される1つの選択肢を除いて、名前を付けられるでしょう。
6207,非負の場合はフレーム番号、負の場合は遡るフレーム数。
6208,何世代前に戻るか。  (「詳細」セクションを参照)
6209,フレーム番号(非負の場合)、負の場合は戻るフレーム数。
6210,何世代前に戻るか。  (「詳細」セクションを参照)
6211,パス名を1つ含む文字ベクトル。  Tildeexpansion(<code>path.expand</code>参照)が行われます。
6212,ファイルまたはディレクトリのパスを含む文字ベクトル。  Tildeexpansion（<code>path.expand</code>を参照）が行われます。
6213,logical;失敗時の警告は表示されるべきか？
6214,logicalです。last以外のパスの要素は作成されるべきか？  trueの場合、Unixコマンド<code>mkdir -p</code>のようになります。
6215,Unix-alikeで使用するモード: <code>as.octmode</code> によって強制されます.  <code>Sys.chmod</code> では、<code>paths</code> に沿ってリサイクルされます。
6216,論理：モードは<code>umask</code>設定によって制限されるべきか？
6217,非負の場合はフレーム番号、負の場合は戻るフレーム数。
6218,何世代前に戻るかを指定します。  (「詳細」セクションを参照してください)
6219,フレーム番号(非負の場合)、負の場合は戻るフレーム数。
6220,何世代前に戻るか。  (「詳細」セクションを参照してください)
6221,フレーム番号(非負の場合)、負の場合は戻るフレーム数。
6222,何世代前に戻るか。  (「詳細」セクションを参照)
6223,文字ベクトル、または<code>NULL</code>です。
6224,文字列.
6225,論理: 結果に名前を付けるべきか？  <code>NA</code>(デフォルト)の場合、単一要素の結果には名前が付かないが、複数要素の結果には名前が付く。
6226,文字列。  以下のカテゴリは常にサポートされるべきです：<code>"LC_ALL"</code>, <code>"LC_COLLATE"</code>, <code>"LC_CTYPE"</code>, <code>"LC_MONETARY"</code>, <code>"LC_NUMERIC"</code> and<code>"LC_TIME"</code>.  一部のシステム(Windowsではない)では、<code>"LC_MESSAGES"</code>、<code>"LC_PAPER"</code>、<code>"LC_MEASUREMENT"</code>もサポートしています。
6227,文字列。  使用中のシステムで有効なロケール名.  通常、<code>""</code>(デフォルト)は、システムのデフォルトロケールを拾います。
6228,相対パスまたは絶対パスのパターンを表す文字ベクトル。  欠落した値は、無視されます。
6229,論理: <code>/<code>で終わっていないpatternstからのディレクトリへのマッチは、スラッシュを付加する必要がありますか？  すべてのプラットフォームでサポートされていないかもしれません。
6230,オブジェクト

6231,そこから要素を抽出する。
6232,<code>"row.names"</code>属性を持つ、典型的にはデータ・フレーム。
6233,典型的にはS3-またはS4-クラスです。
6234,パッケージの「<span class="file">DESCRIPTION</span> 」ファイルへのフルパス。
6235,lazyloadデータベースへのファイルパス。
6236,<span style="font-family">の位置を記述する文字ベクトル：Courier New, Courier; color：#または<code>NULL</code>を指定します。  デフォルトの<code>NULL</code>は、<code>.libPaths()</code>で現在知られているすべてのライブラリに対応します。
6237,論理的です。  パッケージが見つからない場合、警告やエラーを与えるべきではないですか？
6238,論理的。  <code>Imports</code>フィールドは処理されるべきですか？
6239,logical:メッセージ(複数可)を出力すべきですか。
6240,クラス<code>"packageDescription2"</code>の処理された'<span class="file">DESCRIPTION</span>' ファイルです。
6241,<code>"cpu-vendor-os"</code>という形式のプラットフォーム文字列です。
6242,保存またはロードする画像ファイル名.
6243,整数.  現在、<code>type = 0</code>は内部の<code>"row.names"</code>属性（<code>NULL</code>の場合もある）を返し、<code>type = 2</code> は属性が意味する行数、 <code>type = 1</code> は負符号付きの行名「自動」であるとします。
6244,integer。  行の数.
6245,<code>"package:MASS"</code>のような文字列を指定します。
6246,lazyloadデータベースのオブジェクト名です。
6247,論理：データベース内の値は圧縮されているか？
6248,ロードフック: <code>unserialize</code>を参照して下さい。
6249,長さ一の整数ベクトル。
6250,インデックス(index)。
6251,論理的。
6252,an <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>オブジェクト。
6253,クラスに入れるクラスレスオブジェクト。
6254,オプションのタイムゾーン。
6255,デフォルトのクラスを<em>含む</em>クラスのオプションの文字ベクトルです。
6256,<code>difftime</code>を参照。
6257,ドットネームでないバージョンに渡される引数。
6258,整数である。
6259,<em>同じ</em>オブジェクトの文字ベクトルで、他をマスクする。
6260,マスクされるパッケージの名前を示す文字列。
6261,マスクが<em>by</em><code>pkg</code>、または(<code>by = FALSE</code>) <code>pkg<code>から起こるかを示す論理です.
6262,非負の場合はフレーム番号、負の場合は戻るべきフレーム数。
6263,何世代前に戻るか。  (「詳細」セクションを参照)
6264,フレーム番号(非負の場合)、負の場合、戻るフレーム数。
6265,何世代前に戻るか。  (「詳細」セクションを参照してください。)
6266,フレーム番号(非負の場合)、負の場合は戻るフレーム数。
6267,過去に遡る世代数です。  (「詳細」セクションを参照してください)
6268,フレーム番号(非負の場合)、負の場合、戻るフレーム数。
6269,何世代前に戻るか。  (「詳細」セクションを参照のこと)
6270,ファイルパスの文字ベクトル。  チルダ展開が行われます:<code>path.expand</code>を参照してください。
6271,オブジェクト

6272,そこから要素を抽出する。
6273,<code>"row.names"</code>属性を持つ、典型的なデータ・フレーム。
6274,通常、S3-またはS4-クラスです。
6275,パッケージの<span class="file">DESCRIPTION</span>' ファイルへのフルパス。
6276,lazyloadデータベースへのファイルパス。
6277,a character vector describing the location of <span style="font-family：Courier New, Courier; color：#または<code>NULL</code>を指定します。  デフォルトの<code>NULL</code>は、<code>.libPaths()</code>で現在知られているすべてのライブラリに対応します。
6278,論理的です。  パッケージが見つからない場合、警告やエラーは表示されないのでしょうか？
6279,論理的。  <code>Imports</code>フィールドは処理されるべきですか？
6280,logical:メッセージ(複数可)を出力すべきですか。
6281,クラス<code>"packageDescription2"</code>の処理された'<span class="file">DESCRIPTION</span>' ファイルです。
6282,<code>"cpu-vendor-os"</code>という形式のプラットフォーム文字列です。
6283,保存またはロードする画像ファイル名.
6284,整数.  現在、<code>type = 0</code>は内部の<code>"row.names"</code>属性（場合によっては<code>NULL</code>）を返し、 <code>type = 2</code> は属性が意味する行数、 <code>type = 1</code> は負符号付きの行名「自動的に」返す。
6285,integer.  行の数.
6286,<code>"package:MASS"</code>のような文字列を指定します。
6287,lazyloadデータベースにおけるオブジェクト名。
6288,論理：データベース内の値は圧縮されているか？
6289,ロードフック: <code>unserialize</code>を参照して下さい。
6290,長さ一の整数ベクトル。
6291,インデックス.
6292,論理的。
6293,an <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトです。
6294,クラスに入れるクラスレスオブジェクト。
6295,オプションのタイムゾーン。
6296,デフォルトのクラスを<em>含む</em>クラスのオプションの文字ベクトルである。
6297,<code>difftime</code>を参照。
6298,ドットネームでないバージョンに渡される引数。
6299,整数である。
6300,<em>同じ</em>オブジェクトの文字ベクトル、他はマスクされる。
6301,マスクされるパッケージの名前を示す文字列。
6302,マスクが<em>by</em><code>pkg</code>、または(<code>by = FALSE</code>) <code>pkg<code>から起こるかを示す論理。
6303,文字列と互換性のある値を持つ名前付き引数。
6304,文字ベクトル、または文字に保型されたオブジェクト。
6305,ファイルまたはディレクトリのパスを含む文字ベクトル。
6306,クラス<code>"POSIXct"</code>の日付時間、または1に強制されることができるオブジェクト。  秒の端数は無視されるかもしれません。  <code>paths</code>に沿ってリサイクルされる。
6307,文字列。  以下のカテゴリは常にサポートされるべきです：<code>"LC_ALL"</code>, <code>"LC_COLLATE"</code>, <code>"LC_CTYPE"</code>, <code>"LC_MONETARY"</code>, <code>"LC_NUMERIC"</code> and <code>"LC_TIME"</code>.  一部のシステム(Windowsではない)では、<code>"LC_MESSAGES"</code>、<code>"LC_PAPER"<code>、<code>"LC_MEASUREMENT"<code>もサポートします。
6308,文字列。  使用中のシステムで有効なロケール名。  通常、<code>""</code>(デフォルト)は、システムのデフォルトロケールを拾います。
6309,実行を中断する時間間隔を秒単位で指定します。
6310,読み込むファイルの名前を指定する文字列。
6311,読み込むファイルを指定する文字列：Courier New, Courier; color：#expressionsが評価される環境を指定する<b>R</b></span>オブジェクトです。  デフォルトの値 <code>NULL</code> は、ベース環境での評価に対応します。  通常、明示的な<code>envir</code>引数を与える必要があります。
6312,logical; もし <code>TRUE</code> なら、<span style="font-family：Courier New, Courier; color：<b>R</b></span> の作業ディレクトリを、評価用の <code>file</code> を含むディレクトリに変更する。
6313,論理的である。  <code>TRUE</code> の場合、関数はコメントを含むソースを保持します。詳細は<code>options(keep.source = *)</code> を参照してください。
6314,論理的。  <code>TRUE</code> かつ <code>keep.source</code> も <code>TRUE</code> ならば、関数は解析データをソースとともに保持します。詳細は <code>options(keep.parse.data = *)</code> を参照して下さい。
6315,an <span style="font-family：Courier New, Courier; color：<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> 環境を指定し、式を評価する際にトップレベルとして使用することができます。  この引数は、パッケージテストを実行するフレームワークの場合に便利です。
6316,非負の場合はフレーム番号、負の場合は遡るフレーム数。
6317,何世代前に戻るか。  (「詳細」セクションを参照)
6318,logical:defunct:無視され、偽の値に対しては警告が出されます。
6319,使用するタイムゾーンデータベース：デフォルトは、1つが見つかるまで既知の場所を試すことである。
6320,パス名を1つ含む文字ベクトル。  Tildeexpansion(<code>path.expand</code>を参照)が行われます。
6321,ファイルまたはディレクトリのパスを含む文字ベクトル。  Tildeexpansion（<code>path.expand</code>を参照）が実行されます。
6322,logical;失敗時の警告は表示されるべきか？
6323,logicalです。last以外のパスの要素は作成されるべきか？  trueの場合、Unixコマンド<code>mkdir -p</code>のようになります。
6324,Unix-alikeで使用するモード: <code>as.octmode</code> によって強制されます.  <code>Sys.chmod</code> では、<code>paths</code> に沿ってリサイクルされます。
6325,論理：モードは<code>umask</code>設定によって制限されるべきですか？
6326,文字列と互換性のある値を持つ名前付き引数。
6327,文字ベクトル、または文字と保磁力のあるオブジェクト。
6328,可能な実行可能ファイルの名前またはパスの文字ベクトル。
6329,呼び出されるシステム・コマンドを文字列で指定します。
6330,コマンドの出力を<span style="font-family.", <code>NA</code>として捕らえるかを示す論理（<code>NA</code>ではない）：Courier New, Courier; color：#666666;"><b>R</b></span>文字ベクトル。
6331,「<span class="file">stdout</span> 」または「<span class="file">stderr</span> 」に書かれたメッセージを無視するかどうかを示す論理（<code>NA</code>ではありません）.
6332,<span style="font-family.Courier New, Courier; color">が無視されるかどうかを示す論理（<code>NA</code>ではありません）：Courier New, Courier; color：#"><b>R</b></span>インタプリタがコマンドの終了を待つべきか、それとも非同期で実行すべきかを示します。  <code>intern = TRUE</code>の場合、これは無視されます（インタープリタは常に待ちます）。コマンドを非同期で実行する場合、Windowsの<code>Rgui</code>コンソールに出力は表示されません（代わりにドロップされます）。
6333,文字ベクトルが与えられた場合、これは一時ファイルに1行につき1文字ずつコピーされ、<code>command</code>の標準入力は、そのファイルにリダイレクトされます。
これは、別プロセスで<code>command</code>を実行する際の経過時間の制限です。  秒の端数は無視されます。
6335,Windowsでは受け入れられるが、このプラットフォームでは無視される引数、警告付き。
6336,パッケージ内のサブディレクトリとファイルを指定する文字ベクトルです。  デフォルトのnoneは、パッケージのルートを返します。  ワイルドカードはサポートされていません。
6337,1つのパッケージ名を持つ文字列。複数のパッケージ名が指定された場合、エラーが発生します。
6338,パス名を持つ文字ベクトル<span style="font-family：Courier New, Courier; color：<code>NULL</code> のデフォルト値の意味については '詳細' を参照してください。
6339,論理的である。  <code>TRUE</code>の場合、一致するファイルがない場合はエラーとなる。
6340,有効な<span style="font-family：Courier New, Courier; color：#"><b>R</b></span>式は、時間を計ることができます。
6341,論理 - タイミングの直前にガベージコレクションを実行するか？  デフォルトは<code>TRUE</code>です。
6342,呼び出されるシステム・コマンド（文字列として）。
6343,<code>command</code>の引数を表す文字ベクトルです。
6344,「<span class="file">stdout</span> 」または「<span class="file">stderr</span> 」への出力が送られるべき場所です。  可能な値は、<code>""</code> で、<span style="font-family：Courier New, Courier; color：#(デフォルト)、<code>NULL</code>または<code>FALSE</code> (出力を破棄)、<code>TRUE</code> (出力を文字ベクトルに取り込む)、ファイル名を示す文字列。
6345,入力は流用されるべきか？  <code>""</code>はデフォルトを意味し、代わりにファイル名を示す文字列を指定します。  <code>input</code>が指定された場合は無視されます。
6346,文字ベクトルが与えられた場合、これは一時ファイルに1行につき1文字ずつコピーされ、<code>command</code>の標準入力はそのファイルにリダイレクトされます。
6347,環境変数を設定するためのname=value文字列の文字ベクトル。
6348,<span style="font-family">の有無を示す論理（<code>NA</code>ではない）：Courier New, Courier; color：<br>R</b></span> インタープリタがコマンドの終了を待つか、非同期で実行するかを指定します。  <code>stdout = TRUE</code> または <code>stderr = TRUE</code> の場合、これは無視されます（インタープリタは常に待ちます）。非同期でコマンドを実行する場合、Windowsの<code>Rgui</code>コンソールに出力は表示されません(代わりにドロップされます。)。
6349,タイムアウト（秒）、0なら無視されます。これは、別プロセスで<code>command</code>を実行する際の経過時間の制限です。   秒の端数は無視されます。
6350,Windowsで受け入れられるが、このプラットフォームでは無視される引数、警告を伴う。
6351,行列またはデータフレーム、通常。
2倍値は整数に強制されます。1以外の長さの引数を与えるとエラーになります。
6353,強制される、またはテストされるオブジェクト。
6354,他のメソッドに渡される、または他のメソッドから渡される追加の引数。
6355,通常、行列またはデータフレームです。
6356,マトリックスまたはデータフレーム。
6357,因子として解釈できる1つ以上のオブジェクト（文字列を含む）、または、その構成要素がそのように解釈できるリスト（またはデータ・フレーム）。  (<code>as.table</code>では、特定のメソッドに渡される引数; <code>as.data.frame</code>では、未使用.)
6358,<code>...</code>の全ての要因について除去するレベル。  itが<code>NA</code>を含まず、<code>useNA</code>が指定されていない場合、<code>useNA = "ifany"</code> を意味する。  非要素引数に対する解釈は、'Details'を参照。
6359,表に<code>NA</code>の値を含めるかどうか'Details'を参照。  省略することもできる。
6360,結果の次元に与える名前（<em>dimnames names</em>）を指定します。
6361,デフォルトの<code>dnn</code>がどのように構築されるかを制御します。  詳細'を参照。
6362,任意の<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>オブジェクト、または<code>as.data.frame</code>メソッドのクラス<code>"table"<code>を継承したオブジェクト。なお、<code>as.data.frame.table(x, *)</code> は、<code>array</code>を「リシェイプ」するためにテーブル以外の <code>x</code> に対して明示的に呼び出すことがあります。
6363,データフレームの行名を与える文字ベクトル。
6364,テーブルエントリーの列に使用される名前、通常はカウントである。
6365,論理：分類因子は因子（デフォルト）または文字ベクトルとして返されるべきか？
6366,<code>provideDimnames</code>に渡されます。
6367,数値ベクトル(正の整数)、または因子。長いベクトルもサポートされています。
6368,使用されるビンの数.
6369,数値ベクトルまたは複素数ベクトル.
6370,数値ベクトルまたは複素数ベクトル
6371,数値または複素数ベクトル。
6372,数値または複素数ベクトル <span style="font-family：Courier New, Courier; color：<b>R</b></span> オブジェクトで、<code>split</code> メソッドが存在する。  典型的にはベクトル的で、<code>[</code>でサブセットできる。
6373,1つ以上の<code>factor</code>の<code>list</code>で、それぞれ<code>X</code>と同じ長さである。  要素は、<code>as.factor</code>によってfactorに強制される。
6374,適用する関数（または関数名）、または<code>NULL</code>。<code>+</code>, <code>%*%</code>などの関数の場合、関数名はバッククォートまたはクォートされていなければなりません。  <code>FUN</code> が<code>NULL</code>の場合、tapplyは、通常<code>tapply</code>が生成する多方向配列の添字に使用できるベクトルを返す。
6375,<code>FUN</code>へのオプションの引数：Noteセクション.
6376,(配列への単純化の場合のみ)配列が<code>array(default, dim = ...)</code> として初期化される値.  前に<span style="font-family：Courier New, Courier; color：<br>R</b></span> 3.4.0では、これは<code>array()</code>のデフォルト<code>NA<code>にハードコードされていました。  もしそれが<code>NA</code>（デフォルト）であれば、例えば<code>NA_real_</code>のような回答タイプの欠損値が選ばれます（<code>"raw"</code>の場合は<code>as.raw（0）</code>）。  数値の場合は、<code>FUN(integer(0))</code>に、例えば、<code>FUN = sum</code>の場合は<code>0</code>または<code>0L</code>に設定することができます。
6377,logical; <code>FALSE</code> の場合、<code>tapply</code> は常にモード <code>"list"</code> の配列、言い換えれば <code>dim</code> 属性を持つ <code>list</code> を返す。  <code>TRUE</code> (デフォルト) の場合、<code>FUN</code> が常にスカラを返すなら、<code>tapply</code> はスカラのモードを持つ配列を返します。
6378,これは、各要素がコールバック関数である<code>"f"</code>という要素と、コールバックが呼び出されたときにコールバックに供給される5番目の引数である<code>"data"</code>というオプション要素からなるリストであることができます。一般的にこの引数が指定されておらず、マネージャー作成後にコールバックを登録するのに<code> add</code>を使っています。
6379,内部タスクコールバックメカニズムで<code>evaluate</code>関数が既に登録されているかどうかを示す論理値。これは通常<code>FALSE</code>で、コールバックが初めて<code>add</code>関数で追加されると、<code>evaluate</code>関数が自動的に登録される。この引数を<code>TRUE</code>に指定し<cord>addTaskCallback</cord>を手で呼び出すことにより関数がいつ登録されるかを制御できる。
6380,論理値で、<code>TRUE</code>の場合、ディスパッチマネージャが実行する特定のアクティビティに関する情報をコンソールに出力します。これは、コールバックやハンドラ自体のデバッグに役立ちます。
6381，数値または複素行列（またはベクトル）．<code>y = NULL</code> は <code>x</code> と同じ行列であるとみなされます。  ベクトルは、文脈に応じて、トシングルカラムまたはシングルローマトリックスに昇格します。
6382,名前の最初の部分を与える空でない文字ベクトル.
6383,ディレクトリ名を示す空でない文字ベクトル。
6384,ファイル拡張子を与える空でない文字ベクトル
6385,<code>logical</code>は、<code>tmpdir()</code>がチェックされ、もはや有効でない場合に再作成されるべきかどうかを示します。
6386,名前の最初の部分を与える空でない文字ベクトル。
6387,ディレクトリ名を指定する空でない文字ベクトル。
6388,ファイル拡張子を与える空でない文字ベクトル。
6389,<code>logical</code>は、<code>tmpdir()</code>がチェックされ、もはや有効でない場合に再作成されるべきかどうかを示します。
6390,文字。  接続の説明。入力の場合、これは<span style="font-family：Courier New, Courier; color：出力接続の場合は、<span style="font-family: Courier New, Courier; color: #666666;"><b>R</b></span> 文字ベクトルオブジェクトであり、<span style="font-family：の名前です：#または<code>NULL</code>（ない場合）です。
6391,文字列。  入力接続の場合は <code>"r"</code> (または同等に <code>""</code>) 、出力接続の場合は <code>"w"</code> または <code>"a"</code> のいずれかを指定します。
6392,論理。  出力コネクションにのみ使用されます。  <code>TRUE</code>の場合、出力は呼び出し環境の変数に割り当てられます。  それ以外の場合は、グローバル環境が使用されます。
6393,接続名を指定する<code>文字</code>文字列。
6394,部分的に一致する文字列。  入力接続にのみ使用されます。  <code>object</code>のマークされた文字列は、現在のロケールに変換されるか、バイト単位で使用されるか、UTF-8に変換されるか、どのように処理されるかを指定します。
6395,出力テキスト接続。
6396,文字。  入力の場合、これは<span style="font-family：Courier New, Courier; color：また、出力接続の場合は、<span style="font-family, Courier; color: #666666;"><b>R</b></span> 文字ベクトルオブジェクトの名前です：の名前です：#または<code>NULL</code>（ない場合）です。
6397,文字列.  入力接続の場合は<code>"r"</code>(または同等に<code>""</code>)、出力接続の場合は<code>"w"</code>または<code>"a"</code>のいずれかを指定します。
6398,論理。  出力コネクションにのみ使用されます。  <code>TRUE</code>の場合、出力は呼び出し環境の変数に割り当てられます。  それ以外の場合は、グローバル環境が使用されます。
6399,接続名を指定する<code>文字</code>文字列。
6400,文字列、部分的に一致する。  入力接続にのみ使用されます。  <code>object</code>のマークされた文字列は、現在のロケールに変換するか、バイト単位で使用するか、UTF-8に変換するか、どのように処理されるかを指定します。
6401,出力テキスト接続。
6402,文字ベクトル、または<code>as.character</code>によって文字に強制できるオブジェクトです。
6403,翻訳される文字を指定する文字列。  長さ2以上の文字ベクトルが与えられた場合、警告とともに最初の要素が使用される。
6404,翻訳を指定する文字列。長さ2以上の文字ベクトルが供給された場合、最初の要素は警告とともに使用される。
6405,論理：大文字か小文字に変換しますか？
6406,環境。
6407,他の条件が満たされる前に、この環境が一致した場合、この環境を返します。  デフォルトのオプション<span class="samp">topLevelEnvironment</span> は、<code>sys.source</code>によって設定され、特定の環境をトップレベル環境として扱います。引数に <code>NULL</code> または <code>emptyenv()</code> を指定すると決してマッチしません。
6408,変換されるオブジェクト。
6409,最大フィールド幅の提案。  <code>NULL</code>または<code>0</code>の値は、最大値がないことを意味します.受け入れられる最小値は6で、より小さい値は6とみなされます.
6410,メソッドに渡される、またはメソッドから渡されるオプションの引数。
6411,変換されるオブジェクト。
6412,最大フィールド幅の提案。  <code>NULL</code>または<code>0</code>の値は、最大値がないことを示します.受け入れられる最小値は6で、より小さい値は6とみなされます.
6413,メソッドに渡される、またはメソッドから渡されるオプションの引数。
6414,文字ベクトル、または<code>as.character</code>によってcharacterに強制されることができるオブジェクト。
6415,翻訳される文字を指定する文字列。  長さ2以上の文字ベクトルが与えられた場合、警告とともに最初の要素が使用されます。
6416,翻訳を指定する文字列。長さ2以上の文字ベクトルが供給された場合、最初の要素は警告とともに使用される。
6417,論理：大文字か小文字に変換するか？
6418,トレースまたはアントレースされる関数の名前(場合によっては<code>quote()</code>d)。  <code>untrace</code>や、複数の引数を持つ<code>trace</code>の場合、引用した形で複数の名前を与えることができ、それぞれに対して同じアクションが適用されます。  名前空間内のS3メソッドのような「隠された」関数では、<code>where = *</code>も通常指定される必要があります。
6419,関数または評価されない式のいずれかです。  関数が呼び出されるか、式が評価されるかは、呼び出しの最初か、引数<code>at</code>で指定された呼び出しのステップの前に行われます.詳細セクションを参照してください。
6420,<code>function</code>または評価されない式のどちらかを指定します。  関数が呼び出されるか、関数から抜けると式が評価されます。詳細セクションを参照してください。
6421,オプションの数値ベクトルまたはリスト。  与えられた場合、<code>tracer</code>は、関数本体の対応するステップの直前に呼び出されます.詳細セクションを参照してください.
6422,<code>TRUE</code>の場合(デフォルト)、トレース式が評価される前に説明の行が印刷されます。
6423,この引数が与えられた場合、それは関数<code>what</code>のためのメソッドのための署名であるべきです。  この場合、関数そのものではなく、そのメソッドがトレースされる。
6424、関数内のループ内をトレースするような複雑なトレースでは、関数本体を編集して必要な呼び出しを挿入する必要があります。  その場合、<code>edit</code>引数を<code>TRUE</code>または使用したいエディタ名として与えます。  そうすると、<code>trace()</code>は<code>edit</code>を呼び出し、あなたが編集した後のバージョンの関数を使用します。  追加情報については、detailsセクションを参照してください。
6425,追跡する関数を探す場所; デフォルトでは、<code>trace</code>を呼び出した時のトップレベル環境です。

名前空間機構は、呼び出される関数をインポートします（ベースパッケージの関数は例外です）。  呼び出される関数は、トップレベルから見たオブジェクトと<em>違う</em>（一般的には、インポートされたパッケージが添付されていないこともある）。したがって、正しいバージョンがトレースされていることを確認する必要があります。  これを行う方法は、引数<code>where</code>に名前空間（またはその名前空間）内の関数を設定することです。  トレース計算は、その関数の環境（対応するパッケージの名前空間となる）を探し始めます（そう、微妙ですが、ここでのセマンティクスは、hownamespacesが<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>でのハウネスペースの作業の中心です)。
6427,logical; サポート関数 <code>tracingState</code> の呼び出しは、トレーシングがグローバルにオンになっていれば <code>TRUE</code> を、そうでなければ <code>FALSE</code> を返します。  これらの値のうちどちらか一方を引数にとると、状態が設定されます。  トレース状態が<code>FALSE</code>の場合、トレースアクションは実際に発生しません（例えば、デバッグ中にトレースを停止するためにデバッグ関数によって使用されます）。
6428,サポート関数<code>.doTrace</code>への引数は、変更された関数またはメソッドに挿入される呼び出しです。<code>expr</code>はトレースアクション（<code>browser()</code>への呼び出しなど）、<code>msg</code>はトレースアクションが生じる場所を特定する文字列です。
6429,<code>returnValue</code>が戻り値を見つけない場合（例えば、エラー、再起動、呼び出し側関数からの戻りを評価した結果、関数が終了した）、代わりに<code>default</code>を返します。
6430,<code>NULL</code>（デフォルト、<code>.Traceback</code>を意味する）、または現在のスタックでスキップする呼び出しの整数カウント、または呼び出しのリストまたはペアリストです。  詳細をご覧ください。
6431,数値で、<em>1コール</em>あたり印刷される行の最大数。  デフォルトは無制限です。  <code>x</code> が <code>NULL</code>, <code>list</code> または <code>pairlist</code> ofcalls の時のみ適用されます、詳細を参照してください。
6432,Rオブジェクト。関数や環境、<code>NULL</code>ではありません。
6433,<code>tracemem</code>または<code>retracemem</code>によって返される値です。
6434,トレースまたはアントレースされる関数の名前(場合によっては<code>quote()</code>d)を指定します。  <code>untrace</code>や、複数の引数を持つ<code>trace</code>の場合、引用した形で複数の名前を与えることができ、それぞれに対して同じアクションが適用されます。  名前空間内のS3メソッドのような「隠された」関数では、<code>where = *</code>も通常指定される必要があります。
6435,関数または評価されない式のどちらかを指定します。  関数が呼び出されるか、式が評価されるかは、呼び出しの最初か、引数 <code>at</code> で指定された呼び出しのステップの前に行われます.詳細セクションを参照してください。
6436,<code>function</code>または評価されない式のどちらかです。  関数が呼び出されるか、関数から抜けたときに式が評価されます.詳細セクションを参照してください.
6437,オプションの数値ベクトルまたはリスト。  与えられた場合、<code>tracer</code>は、関数本体の対応するステップの直前に呼び出されます。詳細セクションを参照してください。
6438,<code>TRUE</code>の場合(デフォルト)、トレース式が評価される前に説明の行が印刷されます。
6439,この引数が与えられた場合、それは関数<code>what</code>のためのメソッドのための署名であるべきです。  この場合、関数そのものではなく、そのメソッドがトレースされる。
6440、関数内のループ内をトレースするような複雑なトレースでは、関数本体を編集して必要な呼び出しを挿入する必要があります。  その場合、<code>edit</code>引数を<code>TRUE</code>または使用したいエディタ名として与えます。  そうすると、<code>trace()</code>は<code>edit</code>を呼び出し、あなたが編集した後のバージョンの関数を使用します。  追加情報については、detailsセクションを参照してください。
6441,追跡する関数を探す場所; デフォルトでは、<code>trace</code>を呼び出した時のトップレベル環境である。

名前空間機構は、呼び出される関数をインポートします（ベースパッケージの関数は例外です）。  呼び出される関数は、トップレベルから見たオブジェクトと<em>違う</em>（一般的には、インポートされたパッケージが添付されていないこともある）。したがって、正しいバージョンがトレースされていることを確認する必要があります。  これを行う方法は、引数<code>where</code>に名前空間（またはその名前空間）内の関数を設定することです。  トレース計算は、その関数の環境（対応するパッケージの名前空間となる）を探し始めます（そう、微妙ですが、ここでのセマンティクスは、hownamespacesが<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>でのハウネスペースの動作の中心です)。
6443,logical; サポート関数 <code>tracingState</code> の呼び出しは、トレーシングがグローバルにオンになっていれば<code>TRUE</code>、そうでなければ<code>FALSE</code>を返す。  これらの値のうちどちらか一方を引数にとると、状態が設定されます。  トレース状態が<code>FALSE</code>の場合、トレースアクションは実際に発生しません（例えば、デバッグ中にトレースを停止するためにデバッグ関数で使用されます）。
6444,サポート関数<code>.doTrace</code>への引数は、変更された関数またはメソッドに挿入される呼び出しです。<code>expr</code>はトレースアクション（<code>browser()</code>への呼び出しなど）、<cord>mg</code>はトレースアクションが生じる場所を特定する文字列です。
6445,<code>returnValue</code>が戻り値を見つけない場合（例えば、エラー、再起動、呼び出し側関数からの戻りを評価した結果、関数が終了した）、代わりに<code>default</code>を返します。
6446,変換されるオブジェクト
6447,<code>tag=value</code>という形式の更なる引数。
6448,変換されるオブジェクト
6449,<code>tag=value</code>の形の更なる引数。
6450,変換されるオブジェクト
6451,<code>tag=value</code>の形の更なる引数
6452,非負の数値ベクトル。
6453,数値ベクトル。
6454,整数ベクトル.
6455...文字ベクトル
6456,先頭と末尾の空白を除去するか(デフォルト)、先頭(<code>"left"</code>)と末尾(<code>"right"</code>)だけを除去するかを指定する文字列.  省略も可能です。
6457,「空白」にマッチする正規表現を指定する文字列（1文字）。
6458,数値ベクトル。  または、<code>round</code>と<code>signif</code>のために、複素数ベクトル。
6459,小数点以下の桁数(<code>round</code>)または有効桁数(<code>signif</code>)を示す整数です。
6460,メソッドに渡される引数。
6461,<code>"POSIXt"</code>または<code>"Date"</code>から継承したオブジェクト。
6462,記載されている単位の1つ。  省略可能です。
6463,他のメソッドに渡す引数、特に<code>round</code>の場合は<code>digits</code>です。
6464,<code>"POSIXt"</code>または<code>"Date"</code>から継承したオブジェクト。
6465,記載されている単位のうちの1つ。  省略可能です。
6466,他のメソッドに渡す引数、特に<code>round</code>の場合は<code>digits</code>です。
6467,接続。
6468,数値。  ファイル位置（<code>origin</code>で指定された起点からの相対位置）、または<code>NA</code>。
6469,文字列.  空または<code>"read"</code>または<code>"write"</code>,部分一致が許される。
6470,文字列.  <code>"start"</code>, <code>"current"</code>, <code>"end"</code> のいずれか: '詳細'を参照.
6471,他のメソッドに渡される、または他のメソッドから渡される更なる引数。
6472,接続。
6473,数値。  ファイル位置（<code>origin</code>で指定された起点からの相対位置）、または<code>NA</code>.
6474,文字列.  空または<code>"read"</code>または<code>"write"</code>,部分一致が許される。
6475,文字列.  <code>"start"</code>, <code>"current"</code>, <code>"end"</code> のいずれか: '詳細'を参照.
6476,他のメソッドに渡される、または他のメソッドから渡される更なる引数。
6477,アン <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>式を試す。
6478,論理：エラーメッセージの報告を抑制するか？
6479,接続、または(<code>cat(*, file = outFile)</code>によって)印刷するファイルを指定する文字列; デフォルトで<code>silent</code>が偽の場合にのみ使われます。
6480,条件オブジェクト.
6481,呼び出し式。
6482,条件オブジェクト.
6483,評価される式.
6484,リターンまたは終了する前に評価される式。
6485、関数
6486,文字列
6487、文字列
6488,再始動に名前を付ける文字列。
6489,再始動オブジェクト。
6490,オブジェクト。
6491,条件クラスを指定する文字列。
6492,追加引数; 詳細は下記を参照。
6493,条件オブジェクト。
6494,呼び出し式。
6495,条件オブジェクト。
6496,評価される式。
6497,リターンまたは終了する前に評価される式。
6498、関数
6499,文字列.
6500、文字列
6501,再始動に名前を付ける文字列。
6502,再始動オブジェクト。
6503,オブジェクト。
6504,条件クラスの名前を指定する文字列。
6505,追加引数; 詳細は下記を参照して下さい。
6506,任意の<span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクト。
6507,a <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>オブジェクト。
6508,クラスを命名する文字ベクトル。  <code>value</code>は<code>NULL</code>も可能です。
6509,戻り値に影響を与える論理: '詳細'を参照して下さい。
6510,任意の解釈された<span style="font-family：Courier New, Courier; color：#"><b>R</b></span>関数です。
6511,ブラウザ入力時に取得可能なテキスト文字列。
6512,ブラウザが入力された時に取得可能な条件。
6513,オプションのメソッドシグネチャです。指定された場合、そのメソッドは、ジェネリックではなく、デバッグされます。
6514,論理; サポート関数<code>debuggingState</code>の呼び出しは、デバッグがグローバルにオンになっていれば<code>TRUE</code>を、それ以外は<code>FALSE</code>を返す。  引数にこれらの値のいずれか、または両方を指定すると、状態が設定されます。  デバッグ状態が<code>FALSE</code>の場合、デバッグ動作は行われません（ただし、関数内の明示的な<code>browser</code>呼び出しは引き続き動作します）。
6515,重複する値のない一連のアイテム（概念的）を含む（同じモードの）ベクター。
6516,ベクトル、データフレーム、配列、または<code>NULL</code>.
6517,比較できない値のベクトル。<code>FALSE</code>は特別な値で、すべての値が比較できることを意味し、デフォルト以外のメソッドで受け入れられる唯一の値である可能性があります。  これは、<code>x</code>と同じ型に内部で強制されます。
6518,重複を最後から考慮するかどうかを示す論理値、すなわち、同一要素の最後（または右端）が保持される。  これは<code>names</code>または<code>dimnames</code>に対してのみ重要です。
6519,期待されるユニークなアイテムの最大数（1より大きい）。<code>duplicated</code>を参照してください。
6520,特定のメソッドのための引数です。
6521,固定される配列のマージン: 1つの整数。
6522,ベクトル、データフレーム、配列、<code>NULL</code>のいずれかを指定します。
<code>FALSE</code>は特別な値で、全ての値を比較できることを意味し、デフォルト以外のメソッドで受け入れられる唯一の値である可能性があります。  これは、<code>x</code>と同じ型に内部で強制されます。
6524,重複を最後から考慮するかどうかを示す論理値、すなわち、同一要素の最後（または右端）が保持される。  これは<code>names</code>または<code>dimnames</code>に対してのみ重要です。
6525,期待されるユニークなアイテムの最大数（1より大きい）。<code>duplicated</code>を参照のこと。
6526,特定のメソッドのための引数です。
6527,固定される配列のマージン: 1つの整数。
6528,ベクトル、データフレーム、配列、<code>NULL</code>を表します。
<code>FALSE</code>は特別な値で、全ての値を比較できることを意味し、デフォルト以外のメソッドで受け入れられる唯一の値である可能性があります。  これは、<code>x</code>と同じ型に内部で強制されます。
6530,重複を最後から考慮するかどうかを示す論理値、すなわち、同一要素の最後（または右端）が保持される。  これは<code>names</code>または<code>dimnames</code>に対してのみ重要です。
6531,期待されるユニークなアイテムの最大数（1より大きい）。<code>duplicated</code>を参照してください。
6532,特定のメソッドのための引数です。
6533,固定される配列のマージン: 1つの整数。
6534,ベクトル、データフレーム、配列、<code>NULL</code>のいずれかを指定します。
<code>FALSE</code>は特別な値で、全ての値を比較できることを意味し、デフォルト以外のメソッドで受け入れられる唯一の値である可能性があります。  これは、<code>x</code>と同じ型に内部で強制されます。
6536,重複を最後から考慮するかどうかを示す論理値、すなわち、同一要素の最後（または右端）が保持される。  これは<code>names</code>または<code>dimnames</code>に対してのみ重要です。
6537,期待されるユニークなアイテムの最大数（1より大きい）。<code>duplicated</code>を参照してください。
6538,特定のメソッドのための引数です。
6539,固定される配列のマージン: 1つの整数。
6540,ベクトル、データフレーム、配列、<code>NULL</code>のいずれかを指定します。
6541,比較できない値のベクトル。<code>FALSE</code>は特別な値で、全ての値が比較できることを意味し、デフォルト以外の方法で受け入れられる唯一の値かもしれません。  これは、<code>x</code>と同じ型に内部で強制されます。
6542,重複を最後から考慮するかどうかを示す論理値、すなわち、同一要素の最後（または右端）が保持される。  これは<code>names</code>または<code>dimnames</code>に対してのみ重要です。
6543,期待されるユニークなアイテムの最大数（1より大きい）。<code>duplicated</code>を参照してください。
6544,特定のメソッドのための引数です。
6545,固定される配列のマージン: 1つの整数。
6546,バージョン文字列を数値で表した文字ベクトル(「詳細」参照); <code>package_version</code>の場合、代わりに<code>R.version</code>によって得られるRversionオブジェクトを指定します。
6547,無効な数値バージョンはエラーになるか(デフォルト)、ならないかを示す論理です。
6548,date-timeクラスの1つから印刷または要約されるオブジェクトを指定します。
6549,タイムゾーンフォーマットのために、<code>format.POSIXct</code>に渡されます。
6550,数値または<code>NULL</code>で、印刷されるエントリの最大数を指定します。  デフォルトでは、<code>NULL</code>の時、<code>getOption("max.print")</code>が使用されます。
6551,計算の有効桁数:最も重要な時間単位を正確に表すのに十分な桁数であるべきです。
6552,他のメソッドから、または他のメソッドに渡される更なる引数。
6553,日付時間オブジェクト
6554,日付時間オブジェクトまたは文字ベクトル。  (文字ベクトルは<code>as.POSIXct</code>で変換されます)。
6555,数値ベクトル(秒単位)
6556,<code>==</code>、<code>!=</code>、<code>&lt;</code>、<code>&lt;=</code>または<code>&gt;=</code>のいずれか1つ。
6557,<code>cat</code>に渡す引数（<code>warnings()</code>の場合）。
6558,<code>warnings()</code>が返す<code>"warnings"</code>オブジェクトです.
6559,<code>"warnings"</code>または<code>"summary.warnings"</code>オブジェクトを指定します。
6560,もし<code>missing</code>でなければ、<code>x</code>と同じ<code>長さの<code>文字</code>ベクトルで、メッセージを「ラベル」する。  デフォルトは <code>paste0(seq_len(n), ": ")</code> for<i>n &gt;= 2</i> where <code>n &lt;- length(x)</code>.
6561,メッセージを印刷する前に文字列<code>cat()</code>が表示されます。
6562,date-timeまたはdateオブジェクト。
6563,変換に使用されるオプションのタイムゾーン指定、主に<code>"POSIXlt"</code>オブジェクトの場合。
6564,文字列。  結果の単位を指定します。  省略可能です。
6565,文字列.  <code>units</code>と同様ですが、省略は不可です。
6566,時間間隔を指定する文字列または数値。
6567,<code>tim</code>のフォーマットを指定する文字：<code>strptime</code>を参照。  デフォルトはロケール固有の時間フォーマットである。
6568,クラス<code>"difftime"</code>を継承したオブジェクトです。
6569,他のメソッドに渡す、または他のメソッドから渡される引数。
6570,date-timeまたはdateオブジェクト。
6571,変換に使用されるオプションのタイムゾーン指定、主に<code>"POSIXlt"</code>オブジェクトの場合。
6572,文字列。  結果の単位を指定します。  省略可能です。
6573,文字列.  <code>units</code>と同様ですが、省略はできません。
6574,時間間隔を指定する文字列または数値。
6575,<code>tim</code>のフォーマットを指定する文字：<code>strptime</code>を参照。  デフォルトはロケール固有の時間フォーマットである。
6576,クラス<code>"difftime"</code>を継承したオブジェクトです。
6577,他のメソッドに渡す、または他のメソッドから渡される引数。
6578,date-timeまたはdateオブジェクト。
6579,変換に使用されるオプションのタイムゾーン指定、主に<code>"POSIXlt"</code>オブジェクトの場合。
6580,文字列。  結果の単位を指定します。  省略可能です。
6581,文字列.  <code>units</code>と同様だが、省略はできない。
6582,時間間隔を指定する文字列または数値。
6583,<code>tim</code>のフォーマットを指定する文字：<code>strptime</code>を参照。  デフォルトは、ロケール固有の時間フォーマットである。
6584,クラス<code>"difftime"</code>を継承したオブジェクト.
6585,他のメソッドに渡す、または他のメソッドから渡される引数。
6586,date-timeまたはdateオブジェクト。
6587,変換に使用されるオプションのタイムゾーン指定、主に<code>"POSIXlt"</code>オブジェクトの場合。
6588,文字列。  変換結果の単位を指定します。  省略可能です。
6589,文字列.  <code>units</code>と同様だが、省略はできない。
6590,時間間隔を指定する文字列または数値。
6591,<code>tim</code>のフォーマットを指定する文字：<code>strptime</code>を参照。  デフォルトはロケール固有の時間フォーマットである。
6592,クラス<code>"difftime"</code>を継承したオブジェクト.
6593,他のメソッドに渡す、または他のメソッドから渡される引数。
6594,(引数)
6595,削除されるファイル名またはディレクトリ名を持つ文字ベクトル。
6596,論理。  ディレクトリは再帰的に削除されるべきか？
6597,論理的。  削除するファイルまたはディレクトリを許可するために（可能であれば）パーミッションを変更する必要がありますか？
6598,論理的ワイルドカード（下記の「詳細」を参照）やチルダ（<code>path.expand</code>を参照）は展開されるべきか？
6599,アン <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクト、通常はリストまたはベクトルです。
6600,論理的である。  <code>x</code>のlistcomponentsにunlistingを適用するべきか？
6601,論理的である。  名前は保存されるべきか？
6602,文字列または名前空間オブジェクト。
6603,アタッチする位置を指定する整数。
6604,<code>NULL</code>またはパッケージのオブジェクト<code>.Depend</code>に記録される依存関係の文字ベクトル。
6605,ロードするパッケージ/名前空間の名前を指定する文字列。
6606,ライブラリ検索パスを指定する文字ベクトル。
6607,パッケージのインストール時以外は無視されるようになった。
6608,パッケージのインストール中以外は無視されます。
6609,論理; もし真なら、コードをロードした直後に停止する。
6610,<code>NULL</code>またはバージョン指定(<code>op</code>と<code>version</code>で構成されるリスト).
6611,logical:進捗状況やエラーメッセージを抑制するか。
6612,文字列または'名前'、パッケージの<code>as.symbol</code>を参照、例えば、<code>"stats"</code>のように。
6613,文字ベクトル; <code>library</code>を参照して下さい.
6614,<code>loadNamespace</code>に渡される更なる引数。
6615,環境。
6616,バインディングがロックされるべきかどうかを指定する論理。
6617,名前オブジェクトまたは文字列。
6618,0個または1個の引数を取る関数。
6619,<span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクト。
6620,logical; trueの場合、<code>dimnames</code>（名前とローンネーム）は<code>data.frame</code>sからも削除されます。
6621,<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトをシリアライズする。
6622,オープンな接続、(<code>serialize</code>の場合)<code>NULL</code>、(<code>unserialize</code>の場合) 生ベクトル(「詳細」参照).
6623,論理的である。  <code>TRUE</code> または <code>NA</code> の場合、ASCII表現が書き込まれます; それ以外の場合 (デフォルト) はバイナリ表現です。
6624,a論理：バイナリ表現が使用される場合、アビッグエンディアンのもの(XDR)が使用されるべきか？
6625,使用するワークスペース・フォーマット・バージョン。  <code>NULL</code>は現在のデフォルトバージョン(3)を指定します。他にサポートされている値は2だけで、これは<span style="font-family：Courier New, Courier; color：<br>R</b></span> 1.4.0 から <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> 3.5.0.
6626,参照オブジェクトを扱うためのフック関数です。
6627,グループに分けられる値を含むベクトルまたはデータフレーム。
6628,グループ化を定義する<code>as.factor(f)</code>という意味での「因子」、または、それらの相互作用がグループ化に使われるような因子のリストである。<code>x</code>がデータフレームである場合，<code>f</code>は，変数<code>g</code>によって分割するための<code>〜g<code>という形式の式，またはより一般的には<code>〜g1＋...という形式の式でもあり得る．+ gk</code> は変数<code>g1</code>, ..., <code>gk</code>の相互作用によって分割され、これらの変数は通常の非標準評価規則を使用してデータフレーム<code>x</code>内で評価される。
6629,発生しないレベルを削除するかどうかを示す論理（<code>f</code>が<code>factor</code>またはリストの場合）.
6630,<code>x</code>のasplittingと互換性のあるベクターまたはデータフレームのリスト。長さが一致しない場合、リサイクルが適用される。
6631,文字列。<code>f</code>が<code>リスト</code>の場合、<code>interaction</code>に渡される。
6632,論理、<code>f</code>がリストの場合、<code>interaction</code>に渡される.
6633,メソッドに渡される更なる潜在的な引数。
6634,トレースまたはアントレースされる関数の名前(場合によっては<code>quote()</code>d)を指定します。  <code>untrace</code>や、複数の引数を持つ<code>trace</code>では、引用された形式で複数の名前を与えることができ、同じアクションがそれぞれに適用されます。  名前空間内のS3メソッドのような「隠された」関数では、<code>where = *</code>も通常指定する必要があります。
6635,関数または評価されない式のどちらかを指定します。  関数が呼び出されるか、式が評価されるかは、呼び出しの最初か、引数<code>at</code>で指定された呼び出しのステップの前に行われます.詳細セクションを参照してください。
6636,<code>function</code>または評価されない式のどちらかです。  関数は呼び出され、式は関数の終了時に評価されます。詳細セクションを参照してください。
6637,オプションの数値ベクトルまたはリスト。  与えられた場合、<code>tracer</code>は、関数本体の対応するステップの直前に呼び出されます.詳細セクションを参照してください.
6638,<code>TRUE</code>の場合(デフォルト)、トレース式が評価される前に説明の行が印刷されます。
6639,この引数が与えられた場合、関数<code>what</code>のメソッドのシグネチャであるべきです。  この場合、関数そのものではなく、そのメソッドがトレースされる。
6640、関数内のループ内をトレースするような複雑なトレースでは、関数本体を編集して必要な呼び出しを挿入する必要があります。  その場合、<code>edit</code>引数を<code>TRUE</code>または使用したいエディタ名として与えます。  そうすると、<code>trace()</code>は<code>edit</code>を呼び出し、あなたが編集した後のバージョンの関数を使用します。  追加情報については、detailsセクションを参照してください。
6641,追跡する関数を探す場所; デフォルトでは、<code>trace</code>を呼び出した時のトップレベル環境です。

6642,この引数の重要な使用法は、「隠された」または別のパッケージから呼び出されるパッケージの関数を追跡することです。名前空間機構は、呼び出される関数を（ベースパッケージの関数を除いて）インポートします。  呼び出される関数は、トップレベルから見たオブジェクトと<em>違う</em>（一般的には、インポートされたパッケージが添付されていないこともある）。したがって、正しいバージョンがトレースされていることを確認する必要があります。  これを行う方法は、引数<code>where</code>に名前空間（またはその名前空間）内の関数を設定することです。  トレース計算は、その関数の環境（対応するパッケージの名前空間となる）を探し始めます（そう、微妙ですが、ここでのセマンティクスは、hownamespacesが<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>でのハウネスペースの作業の中心です)。
6643,logical; サポート関数 <code>tracingState</code> の呼び出しは、トレーシングがグローバルにオンになっていれば<code>TRUE</code>、そうでなければ<code>FALSE</code>を返す。  これらの値のうちどちらか一方を引数にとると、状態が設定されます。  トレース状態が<code>FALSE</code>の場合、トレースアクションは実際に発生しません（例えば、デバッグ中にトレースを停止するためにデバッグ関数で使用されます）。
6644,サポート関数<code>.doTrace</code>への引数は、変更された関数またはメソッドに挿入される呼び出しです。<code>expr</code>はトレースアクション（<code>browser()</code>への呼び出しなど）、<cord>mg</code>はトレースアクションが生じる場所を特定する文字列です。
6645,<code>returnValue</code>が戻り値を見つけない場合（例えば、エラー、再起動、呼び出し側関数からの戻りを評価した結果、関数が終了した）、代わりに<code>default</code>を返します。
6646,Rオブジェクト。関数や環境、<code>NULL</code>ではありません。
6647,<code>tracemem</code>または<code>retracemem</code>によって返されるような値。
6648,文字列。  接続の説明： '詳細'を参照してください。
6649,文字列.  接続を開く方法(最初に開くべき場合)の説明。  可能な値については、「モード」セクションを参照してください。
6650,論理。  ブロッキング」セクションを参照してください。
6651,想定されるエンコーディングの名前です。  エンコード」セクションを参照してください。
6652,論理。  trueを指定すると、通常のファイルでない引数（キャラクタデバイスなど）に適した「raw」インターフェースが使用されます。  これは、テキストモードの読書用に開くときに圧縮ファイルのチェックを抑制し、「ファイル」がシーク可能でない可能性があることを表明する。
6653,文字列、<code>c("default", "internal", "wininet", "libcurl")</code> に部分的にマッチします:「詳細」参照。
6654,HTTPrequestsで使用するHTTPヘッダーの名前付き文字ベクトルです。  非HTTPのURLの場合は無視されます。  <code>HTTPUserAgent</code> オプション (<code>options</code> を参照) から得られる <code>User-Agent</code> ヘッダーは、自動的に最初のヘッダーとして使われます。
6655,0-9の整数値。  書き込み時に適用される圧縮の量を、なしから利用可能な最大値まで指定します。  <code>xzfile</code>の場合、負の値も可能です。「圧縮」セクションを参照してください。
6656,数値：この接続に使用されるタイムアウト（秒単位）です。  OSによっては、非常に大きな値をゼロとして扱うことがあるので注意してください：しかし、POSIX標準では、31日までの値がサポートされることを要求しています。
6657,オプションの文字ベクトル。現在、TCPソケットでは<code>"no-delay"</code>のみがサポートされています。
6658,ZIPファイル内のファイル名。
6659,文字列。  ポートのホスト名。
6660,整数。  TCPポート番号。
6661,論理。  ソケットはクライアントかサーバーのどちらであるか？
6662,接続を待つサーバー・ソケット。
6663,コネクションです。
6664,文字列。  現在、無視されています。
6665,文字列。  空または<code>"read"</code>または<code>"write"</code>、部分一致が許されます。
6666,他のメソッドに渡される、または他のメソッドから渡される引数。
6667,行列または他の<span style="font-family：Courier New, Courier; color：<code>length(dim(x)) == 2</code>を持つ<b>R</b></span>オブジェクト。下位互換性の理由から、上記を満たさない場合、<code>as.matrix(x)</code>が最初に呼び出されます.
6668,論理的です。  対角線を含めるべきか？
6669,文字列。  接続の説明：'詳細'を参照してください。
6670,文字列。  接続を開く方法(最初に開くべき場合)の説明。  可能な値については、「モード」のセクションを参照してください。
6671,論理。  ブロッキング」セクションを参照してください。
6672,想定されるエンコーディングの名前です。  エンコーディング」セクションを参照してください。
6673,論理。  trueを指定すると、通常のファイルでない引数（キャラクタデバイスなど）に適した「raw」インターフェイスが使用されます。  これは、テキストモードの読書用に開くときに圧縮ファイルのチェックを抑制し、「ファイル」がシーク可能でない可能性があることを表明する。
6674,文字列、<code>c("default", "internal", "wininet", "libcurl")</code> に部分的にマッチします:「詳細」参照。
6675,HTTPrequestsで使用するHTTPヘッダーの名前付き文字ベクトルです。  非HTTP URLの場合は無視されます。  <code>HTTPUserAgent</code> オプション (<code>options</code> を参照) から得られる <code>User-Agent</code> ヘッダーは、自動的に最初のヘッダーとして使われます。
6676,0-9の整数値。  書き込み時に適用される圧縮の量を、なしから利用可能な最大値まで指定します。  <code>xzfile</code>の場合、負の値も指定できます。「圧縮」セクションを参照してください。
6677,数値：この接続に使用されるタイムアウト（秒単位）です。  OSによっては、非常に大きな値をゼロとして扱うことがあるので注意してください：しかし、POSIX標準では、31日までの値がサポートされることを要求しています。
6678,オプションの文字ベクトル。現在、TCPソケットでは<code>"no-delay"</code>のみがサポートされています。
6679,ZIPファイル内のファイル名。
6680,文字列。  ポートのホスト名。
6681,整数。  TCPポート番号。
6682,論理。  ソケットはクライアントとサーバーのどちらであるべきですか？
6683,接続を待つサーバー・ソケット。
6684,コネクションです。
6685,文字列。  現在、無視されています。
6686,文字列。  空または<code>"read"</code>または<code>"write"</code>、部分一致が許されます。
6687,他のメソッドに渡される、または他のメソッドから渡される引数。
6688,関数の名前を示す文字列（内蔵の演算子ではない）。  <code>UseMethod</code>の場合は必須です。
6689,<code>UseMethod</code>の場合：ディスパッチされるメソッドを決定するクラスを持つオブジェクトです。  デフォルトは、包含する関数の第1引数です。
6690,次のメソッドに渡される更なる引数。
6691,変換されるオブジェクト。
6692,論理：変換は一文字の文字列と複数の個々の文字のどちらを使うべきか？
6693,論理：サロゲートペアの解釈を試みるか？  (「詳細」を参照)<code>multiple = FALSE</code>の場合のみサポートされます。
6694,文字ベクトル。
6695,文字ベクトル.
6696,ベクトル（アトミックまたはリスト）または<code>expression</code>オブジェクト。  その他のオブジェクト（クラス化されたオブジェクトを含む）は、<code>base::as.list</code>によって強制される。
6697,<code>X</code>の各要素に適用される関数: '詳細'を参照。  <code>+</code>、<code>%*%</code>のような関数の場合、関数名はバッククォートまたはクォートされなければならない。
6698,<code>FUN</code>のオプション引数。
6699,論理または文字列; 可能であれば、結果はベクトル、行列または高次元配列に簡略化されるべきか？  <code>sapply</code> の場合は、省略せずに名前を付ける必要があります。デフォルト値の <code>TRUE</code> は、適切な場合はベクトルや行列を返しますが、<code>simplify = "array"</code> の場合は、結果は <code>FUN(X[[i]])</code> の結果より一つ上の "rank"(<i>=</i><code>length(dim(.)) </code>) である可能性があります(<COD>配列</code>).
6700,logical; <code>TRUE</code> かつ <code>X</code> が文字の場合、<code>X</code> が既に名前を持っていない限り、結果の <code>names</code> として使用します。  この引数は<code>...</code>に続くので、その名前を省略することはできない。
6701,a (generalized) vector; FUNの戻り値のテンプレート。  詳細'を参照。
6702,整数: 複製数.
6703,繰り返し評価する式(言語オブジェクト、通常はコール)。
6704,リスト。通常は<code>lapply()</code>から返されます。
6705,論理; もし真なら、<code>simplify2array()</code>は適切な時に("高位")配列を生成し、一方<code>higher = FALSE</code> は行列（またはベクトル）だけを返す。この二つのケースはそれぞれ <code>sapply(*, simplify = "array")</code> または <code>simplify = TRUE</code> と一致します.
6706,アトミックモードまたは<code>"list"</code>または<code>"expression"</code>または（<code>vector</code>を除く）<code>"any"</code>を名付ける文字列.  現在、<code>is.vector()</code>は<code>mode</code>に対して任意の型（<code>typeof</code>参照）を許可し、modeが<code>"any"</code>ではない場合、 <code>is.vector(x, mode)</code> は <code>typeof(x) == mode</code> とほぼ同じになる。
6707,希望する長さを指定する非負の整数。  長いベクトル、すなわち<code>length &gt; .Machine$integer.max</code>の場合、<code>"double"</code>型でなければならない。  長さが1以外の引数を指定するとエラーになります。
6708,an <span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクトです。
6709,適用する関数は、<code>match.fun</code>で見つかりました。
6710,ベクトル化されるべき引数の文字ベクトル.  デフォルトは<code>FUN</code>の全ての引数です.
6711,論理または文字列; 結果をベクトル、行列または高次元の配列に縮小しようとします; <code>sapply</code> の <code>simplify</code> 引数を参照してください.
6712,logical; 最初の...引数に名前があれば名前を、文字ベクトルであればその文字ベクトルを名前として使用します。
6713,文字に強制できる0個以上のオブジェクト(そして、セパレータなしで一緒に貼り付けられる)または単一条件オブジェクト。
6714,論理、呼び出しが警告メッセージの一部となるべきかを示す。
6715,論理、<code>getOption("warn") &lt;= 0</code>であっても、呼び出しが直ちに出力されるべきかどうかを示します。
6716,論理的, <code>options(warn = 1)</code> の場合、可能な限りメッセージを1行で出力すべきかを示す.
6717,評価する式。
6718,<code>gettext</code>を参照して下さい。  <code>NA</code>の場合、メッセージは翻訳されません、<code>stop</code>の注意も参照して下さい。
6719,どのクラスの警告が抑制されるべきかを示す文字.
6720,条件オブジェクト。
6721、呼び出し式。
6722,条件オブジェクト。
6723,評価される式。
6724、リターンまたは終了する前に評価される式。
6725、関数
6726,文字列.
6727,文字列。
6728,再始動に名前を付ける文字列。
6729,再始動オブジェクト。
6730,オブジェクト。
6731,条件クラスの名前を指定する文字列。
6732,追加引数; 詳細は下記を参照。
6733,<code>cat</code>に渡される引数（<code>warnings()</code>用）.
6734,<code>warnings()</code>が返す<code>"warnings"</code>オブジェクトです.
6735,<code>"warnings"</code>または<code>"summary.warnings"</code>オブジェクトを指定します。
6736,もし<code>missing</code>でなければ、<code>x</code>と同じ<code>長さの<code>文字</code>ベクトルで、メッセージを「ラベル」する。  デフォルトは <code>paste0(seq_len(n), ": ")</code> for<i>n &gt;= 2</i> where <code>n &lt;- length(x)</code>.
6737,メッセージを印刷する前に文字列<code>cat()</code>が表示されます。
6738,クラス <code>"POSIXt"</code> または <code>"Date"</code> を継承したオブジェクトです。
6739,論理ベクトル(おそらくリサイクル)。  名前は省略されるべきですか？
6740,クラス<code>"POSIXt"</code>または<code>"Date"</code>を継承した長さ1オブジェクト。
6741,他のメソッドの引数。
6742,クラス<code>"POSIXt"</code>または<code>"Date"</code>から継承されたオブジェクトです。
6743,論理ベクトル(リサイクルされる可能性がある)  名前は省略されるべきですか？
6744,クラス<code>"POSIXt"</code>または<code>"Date"</code>を継承した長さ1オブジェクト。
6745,他のメソッドの引数。
6746,クラス<code>"POSIXt"</code>または<code>"Date"</code>から継承されたオブジェクトです。
6747,論理ベクトル（リサイクルされる可能性があります）。  名前は省略されるべきですか？
6748,クラス<code>"POSIXt"</code>または<code>"Date"</code>を継承した長さ1オブジェクト。
6749,他のメソッドのための引数。
6750,<code>論理</code>ベクトルまたは配列。  <code>NA</code>は省略可能です(<code>FALSE</code>と同じように扱われます)。
6751,論理; <code>x</code>が配列の場合、<b>arr</b>ay <b>ind</b>ices を返すべきでしょうか？
6752,整数値のインデックス・ベクトル、<code>which(x)</code>から得られるように。
6753,<code>dim(.)</code>整数ベクトル。
6754,<code>useNames</code>が真の場合、<code>arrayInd()</code>（したがって、<code>which(*, arr.ind=TRUE)</code> ）用のdimnameを構成するのに、使われます。 <code>names(.dimnames)</code> が空ではない場合、これらは列名として用いられます。  <code>.dimnames[[1]]</code>は行名として使用されます。
6755,論理は、<code>arrayInd()</code>の値が（非NULLの）dimnamesを全く持つべきかどうかを示します。
6756,数値（論理、整数またはダブル）ベクトルまたは<span style="font-family：Courier New, Courier; color：<code>double</code> への内部強制が働く <code>R</b></span> オブジェクトの <code>min</code> または <code>max</code> が検索されます。
6757,数値（論理、整数、ダブル）ベクトルまたは<span style="font-family：Courier New, Courier; color：<code>double</code> への内部強制が働く、<code>min</code> または <code>max</code> が検索される</span>オブジェクトです。
6758,長さ1の論理ベクトルで、<code>NA</code>でないもの。長さが1より大きい条件は、現在、警告で受け入れられますが、最初の要素だけが使用されます。  環境変数<span class="env">_R_CHECK_LENGTH_1_CONDITION_</span> が true に設定されている場合、代わりにエラーが通知されます。  その他の型は、可能であれば論理型に強制され、いかなるクラスも無視されます。
6759,変数の構文上の名前。
6760,ベクトル(リストと式を含む)、ペアリスト、<code>NULL</code>に評価される式。  Afactorの値は、文字ベクトルに強制されます。  のように、<span style="font-family：Courier New, Courier; color：<br>R</b></span>4.0.0 からは、これは長いベクトルである可能性があります。
6761,形式的な意味での<em>式</em>である。  これは単純な式か、いわゆる<em>複合式</em>で、通常は<code>{ expr1 ; expr2 }</code> という形式である。
6762,環境構築のために使用するデータ。デフォルトの<code>with</code>メソッドでは、これは環境、リスト、データフレーム、または<code>sys.call</code>のような整数であるかもしれません。<code>within</code>では、リストかデータ・フレームになります。
6763,評価する式; 特に<code>within()</code>の場合、しばしば「複合」式、すなわち、次のような形式である。

6764,<code>within()</code> の <code>list</code> メソッドで、結果のリストが <code>data</code> の <code>attributes</code> を保持するか、同じ順序で <code>names</code> を持つかを指定する <code>logical</code> を指定しました。  多くの場合、結果はいずれにせよ<em>名前付き</em>リストであるため、これは不要であり、<code>keepAttrs = FALSE</code> がより効率的です。
6765,（将来の）メソッドに渡される引数。
6766,環境を構築するために使用するデータ。デフォルトの <code>with</code> メソッドでは、これは環境、リスト、データフレーム、または <code>sys.call</code> のように整数であるかもしれません。<code>within</code>では、リストかデータ・フレームにすることができます。
6767,評価する式; 特に<code>within()</code>の場合、しばしば「複合」式、すなわち、次のような形式です。

6768,<code>within()</code> の <code>list</code> メソッドで、結果のリストが <code>data</code> の <code>attributes</code> を保持し、その <code>names</code> を同じ順序にするかどうかを指定する <code>logical</code> を指定しました。  多くの場合、結果はいずれにせよ<em>名前付き</em>リストであるため、これは不要であり、<code>keepAttrs = FALSE</code> がより効率的です。
6769,（将来の）メソッドに渡される引数。
6770,接続、または読み込むファイルまたはURLのパス名を与える文字列。  <code>""</code>は、接続<code>stdin()</code>を示します。
6771、<code>TRUE</code>、<code>FALSE</code>または環境は、解析された式が評価される場所を決定します。  <code>FALSE</code>（デフォルト）はユーザのワークスペース（グローバル環境）に対応し、<code>TRUE</code>は<code>source</code>が呼び出される環境に対応する。
6772,logical;もし<code>TRUE</code>なら、各式はパース後、評価前にプリントされる。
6773,logical; if <code>TRUE</code>, <code>eval(i)</code> の結果が各式 <code>i</code> に対して表示される; デフォルトは <code>echo</code> の値である.
6774,<code>source()</code> および <code>withAutoprint(*, evaluated=TRUE)</code>: <em>代わりに</em> <code>file</code>, <code>expression</code>, <code>call</code>, または <code>call</code> の</code>リスト</>, ただし評価されない "expression" は指定されません(<em>not</em>).

6775,<code>withAutoprint()</code>（デフォルト<code>evaluated=FALSE</code>）の場合：一つまたは複数の評価されない「式」.
6776,論理的には、<code>exprs</code>は<code>source(exprs= *)</code>に渡され、したがって評価されなければならない、すなわち、正式な<code>式</code>、<code>コール</code>または呼び出しの<code>リスト</code>であることを指示します。
6777,各式の前に改行（つまり空行）を表示するかどうかを示す論理（<code>echo = TRUE</code>の時）。
6778,もし<code>TRUE</code>なら、入力の解析と評価中に、<b>各</b>式の追加情報を含むより多くの診断(<code>echo = TRUE</code> だけではない)を表示する。
6779,character;は、<code>echo = TRUE</code>の場合に使用されるプロンプトを与えます。
6780,integer;は<code>echo</code>が<code>TRUE</code>の場合にのみ使用され、単一の式のディパースの最大出力文字数を指定します.
6781,整数、<code>deparse()</code>に渡され、ソース参照がない場合に使用される(だけ)。
6782,<code>character</code> vector, <code>deparse()</code> に<code>control</code>として渡される, <code>.deparseOpts</code> も参照。  で、<span style="font-family：Courier New, Courier; color：<span>バージョン &lt;= 3.3.x では、これは <code>"showAttributes"</code> にハードコードされており、現在はこれがデフォルトになっています; <code>deparseCtrl = "all"</code> は、ストリップバック互換性が重要でない場合、望ましいかもしれません。
6783,logical; <code>TRUE</code> で <code>file</code> がパス名の場合、<span style="font-family：Courier New, Courier; color：<br>R</b></span> 作業ディレクトリを<code>file</code>を含むディレクトリに一時的に変更し、評価します。
6784,文字ベクトル。  <code>file</code>が文字列である場合に仮定されるエンコーディング: <code>file</code>を参照してください.  エンコーディングが推測される場合、可能な値は <code>"unknown"</code> です: 'Encodings'セクションを参照してください。
6785,character; <code>echo=TRUE</code>の場合、継続行で使用するプロンプトを指定します。
6786,integer; <code>echo = TRUE</code>の場合、ファイル冒頭のコメント行を何行スキップするか。
6787,logical:可能であれば、式をエコーするときにソースのフォーマットを保持するか？
6788,(<code>withAutoprint()</code>の場合:) <code>source(.)</code>に渡す追加の(ファイルに関連しない)引数。
6789，条件オブジェクト。
6790,呼び出し式。
6791,条件オブジェクト.
6792,評価される式.
6793,リターンまたは終了する前に評価される式。
6794、関数
6795,文字列.
6796,文字列。
6797,再始動に名前を付ける文字列。
6798,再始動オブジェクト
6799,オブジェクト。
6800,条件クラスの名前を示す文字列。
6801,追加の引数、詳細は後述。
6802,環境構築のために使用するデータ。デフォルトの<code>with</code>メソッドでは、これは環境、リスト、データフレーム、または<code>sys.call</code>のように整数であるかもしれません。<code>within</code>では、リストかデータ・フレームにすることができます。
6803,評価する式; 特に<code>within()</code>の場合、しばしば「複合」式、すなわち、次のような形式である。

6804,<code>within()</code>の<code>list</code>メソッドに、結果のリストが<code>data</code>の<code>attributes</code>を維持し、<code>names</code>を同じ順序にするかどうかを特定する<code>logical</code>が指定されました。  多くの場合、結果はいずれにせよ<em>名前付き</em>リストであるため、これは不要であり、<code>keepAttrs = FALSE</code> がより効率的です。
6805,（将来の）メソッドに渡される引数。
6806,環境構築のために使用するデータ。デフォルトの <code>with</code> メソッドでは、これは環境、リスト、データフレーム、または <code>sys.call</code> のように整数であるかもしれません。<code>within</code>では、リストかデータ・フレームになります。
6807,評価する式; 特に<code>within()</code>の場合、しばしば「複合」式、すなわち、次のような形式である。

6808,<code>within()</code>の<code>list</code>メソッドに、結果のリストが<code>data</code>の<code>attributes</code>を維持し、<code>names</code>を同じ順序にするかどうかを特定する <code>logical</code> を指定しました。  多くの場合、結果はいずれにせよ<em>名前付き</em>リストであるため、これは不要であり、 <code>keepAttrs = FALSE</code> がより効率的です。
6809,（将来の）メソッドに渡される引数。
6810,環境を構築するために使用するデータ。デフォルトの <code>with</code> メソッドでは、これは環境、リスト、データフレーム、または <code>sys.call</code> のような整数であるかもしれません。<code>within</code>の場合は、リストかデータフレームになります。
6811,評価する式; 特に<code>within()</code>の場合、しばしば「複合」式、すなわち、以下のような形式です。

6812,<code>within()</code>の<code>list</code>メソッドで、結果のリストが<code>data</code>の<code>attributes</code>を保持し、<code>names</code>を同じ順序で持っているかどうかを指定する<code>logical</code>を指定します。  多くの場合、結果はいずれにせよ<em>名前付き</em>リストであるため、これは不要であり、<code>keepAttrs = FALSE</code> はより効率的です。
6813,（将来の）メソッドに渡される引数。
6814,条件オブジェクト。
6815,呼び出し式。
6816,条件オブジェクト。
6817,評価される式。
6818,リターンまたは終了する前に評価される式。
6819、関数
6820,文字列
6821、文字列
6822,再始動に名前を付ける文字列。
6823,再始動オブジェクト
6824,オブジェクト。
6825,条件クラスの名前を指定する文字列。
6826,追加引数; 以下の詳細を参照。
6827,評価される式。
6828,書き出されるデータ、通常はアトミックベクトルです。
6829,<code>connection</code>、または書き込み先のファイルを指定する文字列です。  <code>""</code>の場合、標準出力接続にプリントします。

6830,<code>.Platform$OS.type != "windows"</code>, <code>"|cmd"</code> の場合、'<span class="file">cmd</span>' で与えられたコマンドに出力をパイプするようにしました。
6831,データを書き込む列の数を指定する。
6832,<code>TRUE</code>の場合、データ<code>x</code>は接続に追加される。
6833,列の区切りに使用する文字列です。  <code>sep = "\t"</code> を使用すると、タブ区切りの出力が得られます; デフォルトは <code>" "</code> です。
<code>""</code>はコンソールへの出力を表します。  <code>read.dcf</code>の場合、圧縮ファイル(<code>gzfile</code>を参照)を指定することができます。
6835,DCFファイルから読み込むフィールドを指定します。  デフォルトは全フィールドを読み込むことです。
6836,1つのレコードに複数のフィールドが出現する場合、これらすべてを収集するかどうかを示す論理。<code>all</code>が偽（デフォルト）の場合、最後の出現分のみが使用される。
6837,空白をそのまま残すべきフィールドの名前を持つ文字列、または<code>NULL</code>（デフォルト）は、そのようなフィールドがないことを示す。  可能であれば文字に強制されます。  空白をそのままにしないフィールドに対しては、<code>read.dcf</code>は先頭と末尾の空白を除去し、<code>write.dcf</code>は<code>strwrap</code>を用いて折り返す。
6838,書き込まれるオブジェクト（通常はデータ・フレーム）。  もしそうでなければ、<code>x</code>をデータ・フレームに強制することが試みられる。
6839,論理的である。  もし<code>TRUE</code>ならば、出力はファイルに追加される。  もし<code>FALSE</code>なら、その名前の既存のファイルは破壊される。
6840,論理的に<code>writeLines()</code>に渡される、そこを参照："専門家用 "を参照してください。
6841,出力項目中の継続行のインデントを指定する正の整数.
6842,出力中の折り返し線のターゲットとなる列を指定する正の整数.
6843,接続オブジェクト、またはファイルや生ベクトルを指定する文字列。
6844,読み込むベクトルのモードを与えるオブジェクト、またはモードを記述する長さ1の文字ベクトル：<code>"numeric"</code>、<code>"double"</code>、<code>"integer"</code>、<code>"int"</code>、<code>"logical"</code>、<code>"complex"</code>、<code>"cacter"</code>、<code>"raw"</code>から1つとする。
6845,数値.  読み込むべきレコードの(最大)数.  ここでは、過大な見積もりを使用することができますが、<code>n</code>項目のためにストレージが予約されているので、あまり大きすぎないようにしてください。
6846,integer。  バイトストリームの各要素のバイト数。  デフォルトの<code>NA_integer_</code>は、自然なサイズを使用します。サイズ変更は、生ベクトルや複雑なベクトルではサポートされていません。
6847,論理。  サイズ1と2の整数に対してのみ使用され、ファイル上の量を符号付き整数と見なすべきか、符号なし整数と見なすべきかを判断します。
6848,ファイルのターゲットシステムのエンディアン性(<code>"big"</code>または<code>"little"</code>)を指定します。  <code>"swap"</code>を使用すると、強制的にスワップエンディアンになります。
6849,An <span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクトを接続に書き込む。
6850,<code>writeLines</code>を参照してください。
6851,接続オブジェクト、またはファイル名を示す文字列、または生のベクトル。
6852,読み書きをする（終端していない）文字列の長さを文字数で示す整数ベクトルです。  要素は&gt;=0でなければならず、<code>NA</code>であってはならない。
6853,論理的である：<code>readChar</code> では、<code>nchars</code> はマルチバイトロケールでは文字数ではなくバイト数として扱われるべきでしょうか。  <code>writeChar</code>については、<code>writeLines</code>を参照してください。
6854,接続に書き込む文字ベクトル、少なくとも<code>nchars</code>と同じ長さです。
6855,'文字列の終わり': 文字列。  各文字列の後に書かれる終端は、ASCIIの<code>nul</code>が続きます;終端が全くない場合は<code>NULL</code>を使用してください。
6856,文字ベクトル
6857,接続オブジェクトまたは文字列。
6858,文字列。  テキストの各行の後に接続に書き込まれる文字列。
6859,論理的なもの。  詳細'を参照。
6860,<code>raw</code>、<code>logical</code>または'数的'ベクトル（すなわち、<code>double</code>（クラス<code>numeric</code>）、<code>integer</code>、<code>complex</code>）またはメソッドが書かれたオブジェクトです。
6861,クラス<code>data.frame</code>のオブジェクトです。
6862,古い行と新しい行の行名。
6863,an <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトです。
6864,an <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクトです。
6865,アン <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>のオブジェクトです。
6866,アン <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>のオブジェクトです。
6867,アン <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>のオブジェクトです。
6868,アン <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>のオブジェクトです。
6869,アン <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>のオブジェクトです。
6870,バージョン文字列を数値で表した文字ベクトル(「詳細」参照); <code>package_version</code> の場合、代わりに <code>R.version</code> によって得られる Rversion オブジェクト。
6871,無効な数値バージョンはエラーになるか(デフォルト)、ならないかを示す論理。
6872、<span style="font-family：Courier New, Courier; color：#"><b>R</b></span>オブジェクトです。
6873,anの<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> オブジェクト。
6874,文字列。  接続の説明: '詳細'を参照してください。
6875,文字列。  接続を開く方法(最初に開くべき場合)の説明。  可能な値については、「モード」セクションを参照してください。
6876,論理。  ブロッキング」セクションを参照してください。
6877,想定されるエンコーディングの名前。  エンコード'セクションを参照。
6878,論理。  trueを指定すると、通常のファイルでない引数(例えばキャラクタデバイス)に適した「raw」インターフェースが使用されます。  これは、テキストモードの読書用に開くときに圧縮ファイルのチェックを抑制し、「ファイル」がシーク可能でない可能性があることを表明する。
6879,文字列、<code>c("default", "internal", "wininet", "libcurl")</code> に部分的に一致します:「詳細」参照。
6880,HTTPrequestsで使用するHTTPヘッダーの名前付き文字ベクトルです。  非HTTP URLの場合は無視されます。  <code>HTTPUserAgent</code> オプション (<code>options</code> を参照) から得られる <code>User-Agent</code> ヘッダーは、自動的に最初のヘッダーとして使われます。
6881,0-9の整数値。  書き込み時に適用される圧縮の量を、なしから利用可能な最大値まで指定します。  <code>xzfile</code>の場合、負の値も指定できます：'Compression'セクションを参照してください。
6882,数値：この接続に使用されるタイムアウト（秒単位）です。  OSによっては、非常に大きな値をゼロとして扱うことがあるので注意してください：しかし、POSIX標準では、31日までの値をサポートすることを要求しています。
6883,オプションの文字ベクトル。現在、TCPソケットでは<code>"no-delay"</code>のみがサポートされています。
6884,ZIPファイル内のファイル名。
6885,文字列。  ポートのホスト名。
6886,整数。  TCPポート番号。
6887,論理。  ソケットはクライアントとサーバーのどちらであるべきですか？
6888,コネクションをリッスンしているサーバーソケットです。
6889,接続。
6890,文字列。  現在、無視されています。
6891,文字列。  空または<code>"read"</code>または<code>"write"</code>、部分一致が許されます。
6892,他のメソッドに渡される、または他のメソッドから渡される引数。
6893,数値または複素数ベクトル、または任意の<span style="font-family：Courier New, Courier; color：<code>round</code> メソッドと<code>log10()</code>を含む基本的な算術メソッドを持つ数値類似オブジェクトです。
6894,使用する精度を示す整数。
6895,切片と傾き、単一値。
6896,<em>untransform</em>を行うかどうかを尋ねる論理。  詳細'を参照。
6897,水平線のy値(複数可)
6898,垂直線のx値(複数可).
6899,切片と傾きを与える長さ2のベクトル。
6900,<code>coef</code>メソッドを持つオブジェクトです。  詳細'を参照。
6901,図形パラメータ<code>col</code>, <code>lty</code>, <code>lwd</code> (おそらくベクトルとして: '詳細'を参照), <code>xpd</code>, 線特性 <code>lend</code>, <code>ljoin</code>, <code>lmitre</code> など.
6902,描画する点<b>from</b>の座標。
6903,描画する点の座標<b>to</b>.  少なくとも1つは指定されたものでなければならない。
6904,矢尻の長さ(単位:インチ).
6905,矢の軸から矢の頭の端までの角度.
6906,整数コード、描かれる矢の<em>種類</em>を決定します。
6907,グラフィカルパラメータ、可能なベクトル。<code>col</code>の<code>NA</code>値は、矢印が省略されることを引き起こす。
6908,<code>xpd</code>や線特性<code>lend</code>, <code>ljoin</code>や<code>lmitre</code>などのグラフィックパラメータ： <code>par</code> 参照.
6909,行列形式の2次元分割表。
6910,正と負のピアソン残差の描画に使用する色を与える長さ2の文字ベクトル.
6911,各矩形の間に残されたスペース(平均的な矩形の幅と高さの割合)の量。
6912,プロットの全体的なタイトル。
6913,X軸のラベル.  デフォルトは<code>x</code>の行次元の名前(もしあれば)です.
6914,y軸のラベル.  デフォルトは<code>x</code>の列寸法の名前(もしあれば)である.
6915,軸がプロットのどの側に描かれるかを指定する整数値。  軸は次のように配置されます：1=下、2=左、3=上、4=右です.
6916,目盛りマークが描かれる点を指定します。  無限、<code>NaN</code>、<code>NA</code>以外の値は省略されます.  デフォルトでは(<code>NULL</code>の場合)、ティックマークの位置が計算されます(以下の「詳細」を参照)。
6917,これは、ティックマークに（数値）注釈を付けるかどうかを指定する論理値か、ティックポイントに配置するラベルの文字または式ベクトルであることができます。  (他のオブジェクトは <code>as.graphicsAnnot</code> によって強制されます。) これが論理的でない場合、<code>at</code> も同じ長さで供給されるべきです。  強制された後に<code>labels</code>の長さが0であれば、<code>TRUE</code>を供給するのと同じ効果がある。
6918,目印と軸線を描くかどうかを指定する論理値。
6919,<code>NA</code>でない場合、軸線が描かれる余白の行数です。
6920,軸線が引かれる座標: <code>NA</code>でない場合、これは<code>line</code>の値より優先される。
6921,軸線を標準のプロットマージンではなく、外側のプロットマージンに描くべきかを示す論理値。
6922,テキスト用フォント.  デフォルトは <code>par("font")</code> です.
6923,軸線と目盛りの線の種類を指定します.
6924,軸線と目盛りの線幅を指定します。  ゼロまたは負の値は、ラインまたはティックを抑制する。
6925,軸線と目盛りのそれぞれの色。  <code>col = NULL</code> は <code>par("fg")</code> を使用することを意味し、場合によってはインラインで指定されます。<code>col.ticks = NULL</code> は <code>col</code> に解決した色を使用することを意味します。
6926,読み方向に対して<em>平行</em>（'水平'）な全てのラベルの調整（ <code>par("adj")</code> を参照）。  これが有限の値でない場合、デフォルトが使用されます(軸に平行な文字列は中央揃え、それ以外は軸に最も近い端で揃えられます)。
6927,読み上げ方向に対して<em>垂直</em>にある各目盛りのラベルの調整。  軸に平行なラベルの場合、<code>padj = 0</code>は右またはトップアライメントを意味し、<code>padj = 1</code>は左またはボトムアライメントを意味しています。  これは、各文字列の値を与えるベクトルとすることができ、必要に応じて再利用される。

6928,<code>padj</code>が有限の値（デフォルト）でない場合、<code>par("las")</code>の値で調整が決定されます。  軸に垂直にプロットされた文字列の場合、デフォルトは文字列を中央に配置する。
6929,描画されるラベル間の最小ギャップを決定するために'm'のサイズに乗算されるオプションの(通常は非負の)数値係数、「詳細」参照。デフォルトの<code>NA</code>は、軸に<em>平行</em>に描かれた目盛りラベルに対して<code>1<code>、それ以外では<code>0.25<code>と等価です、すなわちデフォルトは

6930,<code>gap.axis</code>は、典型的には、<code>at = ..</code>ティックマークの位置が明示的に指定される場合に関連するかも知れない。
6931,他のグラフィック・パラメータは、この関数への引数として渡されることもあり、特に、軸の注釈、すなわち、<code>cex.axis</code>、<code>col.axis<code>及び<code>font.axis<code>がある。ティックラベル、位置決めのための <code>mgp</code> と <code>xaxp</code> または <code>yaxp</code> 、ティックマークの長さと方向のための <code>tck</code> または <code>tcl</code> 、垂直/水平ラベル方向のための <code>las</code> または <code>col</code> に代わる <code>fg</code>, クリッピング用の <code>xpd</code> 。  これらについては<code>par</code>を参照してください。

6932,パラメータ <code>xaxt</code> (side 1 and 3)と <code>yaxt</code> (side 2 and 4)は、軸が全くプロットされないかどうかを制御します。

6933,<code>lab</code>は、引数<code>labels</code>が与えられない限り、部分一致することに注意してください。  (デフォルトの軸は既に<code>plot.window</code>によって設定されているので、<code>lab</code>は<code>axis</code>によって作用されない).
6934,軸が描かれるべき範囲を示すオブジェクト
6935,目盛りマークが描かれるポイントを示すオブジェクト。
6936,軸がプロットのどの側に描かれるかを指定する整数.  軸は次のように配置される：1=下、2=左、3=上、4=右です。
6937,これは、目盛りに（数値）注釈を付けるかどうかを指定する論理値か、目盛りに付けるラベルの文字または式ベクトルであるかのどちらかになります。文字または式ベクトルとして指定された場合、<code>at</code>が与えられ、それらは同じ長さであるべきです。
6938,メソッドに渡される引数、そしておそらく<code>axis</code>にも渡されます。
6939,date-timeまたはdateオブジェクト。
6940,<code>axis</code>を参照してください。
6941,<code>strptime</code>を参照のこと。
6942,目盛りに注釈を付けるかどうかを指定する論理値、または目盛りに配置される文字列のベクトルのいずれかである。
6943,他のメソッドから、または他のメソッドに渡される更なる引数、典型的にはグラフィックパラメータ。
6944,date-timeまたはdateオブジェクト。
6945,<code>axis</code>を参照。
6946,<code>strptime</code>を参照して下さい。
6947,目盛りに注釈を付けるかどうかを指定する論理値か、目盛りに配置される文字列のベクトルのどちらかである。
6948,他のメソッドから、または他のメソッドに渡される追加の引数、通常はグラフィックパラメータ。
6949,1:4の整数、<code>axis</code>の場合と同様です。
6950,長さ3の数値ベクトル,デフォルトは<code>side</code>引数に応じて<code>par("xaxp")</code>または<code>par("yaxp")</code>(<code>side</code>が1または3ならば、<par("xaxp")</code>, 2または4ならば、<code>par("yaxp")</code>).。
6951,ユーザー座標の制限を与える長さ2の数値ベクトル、デフォルトは<code>par("usr")</code>の関連部分（<code>par("usr")[1:2]</code>または<code>par("usr")[3:4]</code>でそれぞれ<code>側</code>の (1,3) または (2,4)） になります.
6952,ログ座標がアクティブかどうかを示す論理。デフォルトは、<code>side</code>に応じて、<code>par("xlog")</code>または<code>par("ylog")</code>となります.
6953,(only used when <code>log</code> is true): 目盛りの間隔のおおよその（下限）数; デフォルトは<code>par("lab")[j]</code>、<code>j</code> は <code>side</code> によって1または2です.  以前の<span style="font-family "と同じ動作をさせたい場合は、<code>Inf</code>に設定してください：Courier New, Courier; color：#R</b></span> バージョン (2.14.x 以降) と同じ動作をさせたい場合は、<code>Inf</code>を設定してください。
6954,プロットを構成するバーを記述する値のベクトルまたはマトリックス.  <code>height</code> がベクトルである場合、プロットは、ベクトルの値で与えられる高さを持つ長方形のバーの列で構成されます。  <code>height</code> がマトリックスで <code>beside</code> が <code>FALSE</code> なら、プロットの各バーは <code>height</code> の列に対応し、列内の値はバーを構成するサブバーの高さを与える。  <code>height</code> が行列で <code>beside</code> が<code>TRUE</code> の場合、各列の値は積み重ねられるのではなく、並べられる。
6955,オプションで、バーの幅のベクトル。描画されるバーの数の長さに再循環されます。  <code>xlim</code>が指定されない限り、単一の値を指定しても効果はない。
6956,各バーの前に残されたスペースの量(平均バー幅の何分の一か)。  1つの数値として、またはバー毎に1つの数値として指定することができます。  <code>height</code>が行列で<code>beside</code>が<code>TRUE</code>の場合、<code>space</code>は二つの数値で指定でき、第一は同じグループ内のバー間のスペース、第二はグループ間のスペースである。  明示的に与えられない場合、<code>height</code> が行列で <code>beside</code> が <code>TRUE</code> の場合は <code>c(0,1)</code> に、それ以外の場合は 0.2 に設定されます.
6957,各バーまたはバーのグループの下にプロットされる名前のベクトル.  この引数が省略された場合は、ベクトルであれば<code>height</code>の<code>names</code>属性から、行列であれば列名から取られます。
6958,プロットの凡例を構成するために使用されるテキストのベクトル、または凡例が含まれるべきかどうかを示す論理値です。  その場合、与えられた凡例ラベルは<code>height</code>の行に対応する必要があります。<code>legend.text</code>が真の場合、<code>height</code>の行名が非NULLであればラベルとして使われます。
6959,論理値です。  <code>FALSE</code>の場合、<code>height</code>の列は積み上げられたバーとして描かれ、<code>TRUE</code>の場合、列は並べられたバーとして描かれる。
6960,論理値です。  <code>FALSE</code>の場合、バーは最初のバーが左になるように垂直に描かれます。  <code>TRUE</code>の場合、バーは水平に描かれ、最初のバーが一番下に来る。
6961,バーまたはバーコンポーネントの陰影線の密度(inlines per inch)を示すベクトル。デフォルト値の<code>NULL</code>は陰影線が描かれないことを意味する。また、<code>density</code>の値が正でない場合は、シェーディングラインの描画が抑制されます。
6962,バーまたはバーコンポーネントのシェーディングラインの傾き(反時計回りの角度で指定)。
デフォルトでは、<code>height</code>がベクトルの場合はグレー、<code>height</code>がマトリックスの場合はagamma補正されたグレーパレットが使用されます.6963,バーまたはバーコンポーネントの色のベクトル.
6964,バーの境界線に使用される色。境界線を省略するには、<code>border = NA</code>を使用します。  網掛け線がある場合、<code>border = TRUE</code>は、網掛け線と同じ色を境界線に使用することを意味します。
6965,プロットの全体タイトルとサブタイトル。
6966,X軸のラベル.
6967,y軸のラベル.
6968,x軸の限界値。
6969,y軸の限界値。
6970,論理バーが領域外に出ることを許可すべきか？
6971,軸のスケールを対数にするかどうかを指定する文字列; <code>plot.default</code> を参照して下さい。
6972,論理的。  <code>TRUE</code>の場合、垂直軸（<code>horiz</code>が真の場合、水平軸）が描かれます.
6973,論理的である。  <code>TRUE</code>の場合、そして<code>names.arg</code>がある場合（上記参照）、他の軸が（<code>lty = 0</code>で）描かれ、ラベルが付けられます.
6974,数値軸ラベルの拡大係数 (<code>par('cex')</code> を参照).
6975,軸名(バーラベル)のための拡張係数。
6976,論理的。  <code>TRUE</code>の場合、隣接する(重なっていない!)バーを分割する線が描かれます。  <code>space = 0</code> の時のみ適用されます (<code>beside = TRUE</code> の時は一部適用されます)。
6977,論理的。  <code>FALSE</code>の場合、何も描画されない。
6978,グラフィックパラメータ <code>lty</code> (<code>par('lty')</code> 参照)は、カテゴリ軸(デフォルトの水平軸)の軸と目盛りに適用されます.  デフォルトでは、軸は抑制されていることに注意。
6979,棒グラフがx軸に対してどの程度シフトされるべきかを示すベクトル.
6980,既に存在するプロットに棒グラフを追加するかどうかを指定する論理的なもの。
6981,デフォルトの注釈 (<code>main</code>,<code>sub</code>,<code>xlab</code>,<code>ylab</code>) がプロットに表示されるべきかどうかを指定する論理的。
6982,<code>legend()</code>に渡す追加引数のリスト; リストの名前は引数名として使用されます.  <code>legend.text</code>が供給された場合にのみ使用されます.
6983,<code>y</code> 変数がカテゴリ変数 <code>x</code> に対してプロットする数値データである式。  数式は3つの形式のうちの1つを持つことができます：

6984,(例題を参照)。
6985,式中の変数を取得するデータフレーム(またはリスト)。
6986,使用する観測データのサブセットを指定するオプションのベクトル.
6987,データに<code>NA</code>値が含まれる場合にどうするかを示す関数です。  デフォルトは与えられた変数の欠損値を無視することである。
6988,他のメソッドに/から渡される引数。  デフォルトのメソッドでは、これには、<code>plot.window()</code>、<code>title()</code>、<code>axis</code>に渡される、さらなる引数（<code>axes</code>、<code>asp<code>、<code>main</code> など）およびグラフィックパラメータ（</code> par</code> 参照） があります。
6989,プロットを構成するバーを記述する値のベクトルまたはマトリックスを指定します。  <code>height</code> がベクトルである場合、プロットは、ベクトルの値で与えられる高さを持つ長方形のバーの列から構成されます。  <code>height</code> がマトリックスで <code>beside</code> が <code>FALSE</code> なら、プロットの各バーは <code>height</code> の列に対応し、列内の値はバーを構成するサブバーの高さを与える。  <code>height</code> が行列で <code>beside</code> が<code>TRUE</code> の場合、各列の値は積み重ねられるのではなく、並べられる。
6990,オプションでバーの幅を表すベクトル.描画されるバーの数の長さに再循環されます。  <code>xlim</code>が指定されない限り、単一の値を指定しても効果はないでしょう。
6991,各バーの前に残されたスペースの量(平均バー幅の何分の一か)を指定します。  1つの数値、またはバー毎に1つの数値を指定することができます.  <code>height</code>が行列で<code>beside</code>が<code>TRUE</code>の場合、<code>space</code>は二つの数値で指定でき、第一は同じグループ内のバー間のスペース、第二はグループ間のスペースである。  明示的に与えられない場合、<code>height</code> が行列で <code>beside</code> が <code>TRUE</code> の場合は <code>c(0,1)</code> に、それ以外の場合は 0.2 に設定されます.
6992,各バーまたはバーのグループの下にプロットされる名前のベクトル.  この引数が省略された場合、ベクトルであれば<code>height</code>の<code>names</code>属性から、行列であれば列名から取られます.
6993,プロットの凡例を構築するために使用されるテキストのベクトル、または凡例が含まれるべきかどうかを示す論理です。  その場合、与えられた凡例ラベルは<code>height</code>の行に対応する必要があります。<code>legend.text</code>が真の場合、<code>height</code>の行名が非NULLであればラベルとして使われます。
6994,論理値です。  <code>FALSE</code>の場合、<code>height</code>の列は積み上げられたバーとして描かれ、<code>TRUE</code>の場合、列は並べられたバーとして描かれる。
6995,論理値です。  <code>FALSE</code>の場合、バーは最初のバーが左になるように垂直に描かれます。  もし<code>TRUE</code>なら、バーは水平に描かれ、最初のバーが一番下に来る。
6996,バーまたはバーコンポーネントの陰影線の密度(inlines per inch)を示すベクトル。デフォルト値の<code>NULL</code>は陰影線が描かれないことを意味する。また、<code>density</code>の値が正でない場合は、シェーディングラインの描画が抑制されます。
6997,バーまたはバーコンポーネントのシェーディングラインの傾きを、角度indegrees(反時計回り)で指定します。
デフォルトでは、<code>height</code>がベクトルの場合はグレー、<code>height</code>がマトリックスの場合はagamma補正されたグレーパレットが使用されます.6998,バーまたはバーコンポーネントの色のベクトル。
6999,バーの境界線に使用される色。境界線を省略するには、<code>border = NA</code>を使用します。  網掛け線がある場合、<code>border = TRUE</code>は、網掛け線と同じ色を境界線に使用することを意味します。
7000,プロットの全体タイトルとサブタイトル。
7001,x軸のラベル.
7002,y軸のラベルです。
7003,x軸の限界値。
7004,y軸の限界値
7005,論理。バーが領域外に出ることを許可すべきか？
7006,軸のスケールを対数にするかどうかを指定する文字列; <code>plot.default</code> を参照して下さい。
7007,論理的.  <code>TRUE</code>の場合、垂直軸（<code>horiz</code>が真の場合、水平軸）が描画されます。
7008,論理的である。  <code>TRUE</code>の場合、そして<code>names.arg</code>がある場合(上記参照)、他の軸が(<code>lty = 0</code> で)描かれラベルが付けられます.
7009,数値軸ラベルの拡張係数 (<code>par('cex')</code> を参照).
7010,軸名(バーラベル)のための拡張係数。
7011,論理的。  <code>TRUE</code>の場合、隣接する(重なっていない!)バーを分割する線が描かれます。  <code>space = 0</code>の時のみ適用されます(<code>beside = TRUE</code>の時は一部適用されます)。
7012,論理的。  <code>FALSE</code>の場合、何も描画されない。
7013,グラフィックパラメータ <code>lty</code> (<code>par('lty')</code> 参照)は、カテゴリ軸(デフォルトは水平軸)の軸と目盛りに適用されます。  なお、デフォルトでは、軸は抑制されている。
7014,棒グラフがx軸に対してどの程度シフトされるべきかを示すベクトル.
7015,既に存在するプロットに棒グラフを追加するかどうかを指定する論理; デフォルトは <code>FALSE</code> です.
7016,デフォルトの注釈 (<code>main</code>,<code>sub</code>,<code>xlab</code>,<code>ylab</code>) がプロットに表示されるべきかどうかを指定する論理、 <code>title</code> を参照。
7017,<code>legend()</code>に渡す追加引数のリスト; リストの名前は引数名として使用されます.  <code>legend.text</code>が供給された場合のみ使用されます。
7018,<code>y</code>変数がカテゴリー変数<code>x</code>に対してプロットする数値データである式。  数式は、3つの形式のうちの1つを持つことができます：

7019,(例題を参照)。
7020,式中の変数を取得するデータフレーム（またはリスト）。
7021,使用する観測データのサブセットを指定するオプションのベクトル.
7022,データに<code>NA</code>値が含まれる場合にどうするかを示す関数。  デフォルトは、与えられた変数の欠損値を無視することである。
7023,他のメソッドとの間で受け渡しされる引数。  デフォルトのメソッドでは、これらの引数には、<code>axes</code>, <code>asp</code>, <code>main</code> などのさらなる引数と<code>par</code>を参照したグラフィカルなパラメータが含まれ、<code>plot.window() </code>, <code>title()</code> および <code>axis</code> に対して受け渡されます.
7024,文字, <code>"plot"</code>,<code>"figure"</code>,<code>"inner"</code>,<code>"outer"</code>から1つ。
7025,ボックスの線種。
7026,<code>bty</code>,<code>col</code>,<code>lwd</code>などの更なるグラフィックパラメータは、<code>par</code>を参照のこと。  なお、<code>xpd</code>は、クリッピングが常にデバイス領域に対して行われるため、受け入れられません。
7027,<code>y〜grp</code>のような式で、<code>y</code>はグループ化変数<code>grp</code>（通常は係数）に従ってグループに分割されるデータ値の数値ベクトルです。  なお、<code>~ g1 + g2</code> は <code>g1:g2</code> と等価である。
7028,data.frame(またはリスト)で、<code>formula</code>の変数を取得する必要があります。
7029,プロットに使用される観測値のサブセットを指定するオプションのベクトル.
7030,データに<code>NA</code>が含まれる場合にどうするかを示す関数です。  デフォルトは、応答またはグループのどちらかの欠損値を無視することです。
7031,X軸とY軸のアノテーションは、<span style="font-family：Courier New, Courier; color：<br>R</b></span> 3.6.0でデフォルトがanon-emptyになりました。  <code>ann=FALSE</code> で抑制することができます。
7032,<code>logical</code>は、軸が注釈されるべきかどうかを示します(<code>xlab</code>と<code>ylab</code>によって)。
7033,<code>split.default</code>に渡されます、そこを参照して下さい。
7034,箱ひげ図を作成するためのデータを指定する。数値ベクトルか、そのようなベクトルを含む単一のリストである。<code>NA</code>はデータ内で許可されます。
7035,<code>formula</code>メソッドでは、デフォルトのメソッドに渡す名前付き引数を指定します。

7036,デフォルトのメソッドでは、無名引数は追加のデータベクター（<code>x</code>がリストの場合は無視される）、名前付き引数は、引数<code>pars</code>で与えられたものに加えて<code>bxp</code>に渡される（そして<code>pars</code>のものをオーバーライド）引数とグラフィックパラメーターです。<code>bxp</code>は、渡されたグラフィカルパラメータを使用することもあれば、使用しないこともあることに注意して下さい: そのドキュメントを参照して下さい。
7037,これは、プロットのウィスカーがボックスからどの程度まで伸びるかを決定します。  <code>range</code>が正の場合、ウィスカはボックスから<code>range</code>の四分位数倍の範囲にある最も極端なデータ点まで伸びます。値がゼロの場合、ウィスカはデータの極端な部分まで伸びることになる。
7038,プロットを構成するボックスの相対的な幅を示すベクトル。
7039,<code>varwidth</code>が<code>TRUE</code>の場合、ボックスはグループ内のオブザベーション数の平方根に比例した幅で描かれます。
7040,<code>notch</code>が<code>TRUE</code>の場合、ボックスの各辺にノッチが描かれます。  2つのプロットのノッチが重ならない場合、これは2つの中央値が異なるという「強い証拠」である(Chambers <em>et al</em>, 1983, p. 62).  使用した計算は<code>boxplot.stats</code>を参照してください。
7041,<code>outline</code>がtrueでない場合、外れ値は描かれません（S+が線を使うのに対し、点として）。
7042,各Boxplotの下に表示されるグループラベル。文字ベクトルまたは式（seeplotmath）である。
7043,すべてのボックスに適用されるスケールファクターです。  グループの数が少ない場合、ボックスを狭くすることでプロットの見栄えを良くすることができます。
7044,ステープル線の幅の拡大、ボックスの幅に比例する。
7045,外れ線幅の拡大、ボックス幅に比例する。
7046,<code>TRUE</code>（デフォルト）の場合、ボックスプロットが作成されます。  もしそうでなければ、箱ひげ図に基づく要約が返されます。
7047,箱ひげ図の輪郭の色を指定するオプションのベクトルです。  <code>border</code>の値は、<code>border</code>の長さがプロットの数より小さい場合、再利用される。
7048,<code>col</code>が非NULLの場合、箱型プロットのボディを着色するために使用される色が入っていると仮定されます。デフォルトでは背景色になります.
7049,x、yまたは両方の座標を対数スケールでプロットするかどうかを示す文字.
7050,例えば、<code>boxwex</code>や<code>outpch</code>のような、より多くのグラフィックパラメータのリスト(潜在的に)。
7051,ボックスプロットが水平であるべきかを示す論理; デフォルトの<code>FALSE</code>は垂直なボックスを意味する.
7052,論理, もしtrueなら <em>add</em> boxplotを現在のプロットに追加します.
7053,特に<code>add = TRUE</code>の時にボックスプロットを描くべき場所を示す数値ベクトル; デフォルトは <code>1:n</code> (<code>n</code> はボックスの数)です.
7054,<code>y〜grp</code>のような式で、<code>y</code>はグループ化変数<code>grp</code>（通常は係数）に従ってグループに分割されるデータ値の数値ベクトルである。  なお、<code>~ g1 + g2</code> は <code>g1:g2</code> と等価である。
7055,data.frame(またはリスト)で、<code>formula</code>の変数を取得する必要があります。
7056,プロットに使用する観測値のサブセットを指定するオプションのベクトル.
7057,データに<code>NA</code>が含まれる場合にどうするかを示す関数です。  デフォルトは、応答またはグループのどちらかの欠測値を無視することです。
7058,x軸とy軸のアノテーションは、<span style="font-family：Courier New, Courier; color：<br>R</b></span> 3.6.0でデフォルトがanon-emptyになっています。  <code>ann=FALSE</code> で抑制することができます。
7059,<code>logical</code>は、軸が注釈されるべきかどうかを示す(<code>xlab</code>と<code>ylab</code>によって).
7060,<code>split.default</code>に渡されます、そこを参照して下さい。
7061,箱ひげ図を作成するためのデータを指定する。数値ベクトルか、そのようなベクトルを含む単一のリストである。<code>NA</code>はデータ内で許可されます。
7062,<code>formula</code>メソッドの場合、デフォルトのメソッドに渡される名前付き引数を指定します。

7063,デフォルトのメソッドでは、無名引数は追加のデータベクター（<code>x</code>がリストの場合は無視されます）、名前付き引数は、引数<code>pars</code>で与えられたものに加えて<code>bxp</code>に渡される（そして<code>pars</code>のものをオーバーライド）引数とグラフィックパラメータを指します。<code>bxp</code>は、渡されたグラフィカルパラメータを使用することもあれば、使用しないこともあることに注意して下さい: そのドキュメントを参照して下さい。
7064,これは、プロットのウィスカーがボックスからどの程度広がるかを決定します。  <code>range</code>が正の場合、ウィスカはボックスから<code>range</code>の四分位数倍の範囲にある最も極端なデータポイントまで伸びます。値がゼロの場合、ウィスカはデータの極端な部分まで伸びることになる。
7065,プロットを構成するボックスの相対的な幅を示すベクトル.
7066,<code>varwidth</code>が<code>TRUE</code>の場合、ボックスはグループ内のオブザベーション数の平方根に比例した幅で描かれます。
7067,<code>notch</code>が<code>TRUE</code>の場合、ボックスの各辺にノッチが描かれます。  2つのプロットのノッチが重ならない場合、これは2つの中央値が異なるという「強い証拠」である(Chambers <em>et al</em>, 1983, p. 62).  使用した計算は<code>boxplot.stats</code>を参照。
7068,<code>outline</code>がtrueでない場合、外れ値は描かれません（S+が線を使うのに対し、点として）。
7069,各Boxplotの下に表示されるグループラベル。文字ベクトルまたは式（seeplotmath）である。
7070,すべてのボックスに適用されるスケールファクターです。  グループ数が少ない場合、ボックスの幅を狭くすることにより、プロットの見栄えを良くすることができます。
7071,ステープル線の幅の拡大、ボックスの幅に比例する。
7072,外れ線幅の拡大、ボックス幅に比例する。
7073,<code>TRUE</code>（デフォルト）の場合、ボックスプロットが作成されます。  そうでない場合は、箱ひげ図が基づいている要約が返されます。
7074,箱ひげ図の輪郭の色を指定するオプションのベクトルです。  <code>border</code>の値は、<code>border</code>の長さがプロットの数より小さい場合、再利用される。
7075,<code>col</code>が非NULLの場合、箱型プロットのボディに色を付けるために使用される色が入っていると仮定されます。デフォルトでは背景色になります。
7076,x、yまたは両方の座標を対数スケールでプロットするかどうかを示す文字.
7077,例えば、<code>boxwex</code>や<code>outpch</code>のような、より多くのグラフィックパラメータのリスト(潜在的に)。
7078,boxplotsが水平であるべきかを示す論理; デフォルトの<code>FALSE</code>は垂直なボックスを意味する。
7079,論理、もしtrueなら<em>add</em> boxplotを現在のプロットに追加します。
7080,特に<code>add = TRUE</code>の時にボックスプロットを描くべき場所を示す数値ベクトル; デフォルトは <code>1:n</code> (<code>n</code> はボックスの数)です.
7081,数値行列。
7082,列(デフォルト)か行(<code>use.cols = FALSE</code>)をプロットするかどうかを示す論理。
7083,<code>boxplot</code>の更なる引数.
7084,プロットを作成する際に使用されるデータ要約を含むリスト。  これらは通常、<code>boxplot</code>の呼び出しの結果であるが、どのような方法でも生成することができる。
7085,<code>notch</code>が<code>TRUE</code>の場合、ボックスの両側にノッチが描かれます。  2つのプロットのノッチが重ならない場合、中央値は5％水準で有意に異なることになります。
7086,プロットを構成するボックスの相対的な幅を与えるベクトル。
7087,<code>varwidth</code>が<code>TRUE</code>の場合、ボックスはグループ内の観察数の平方根に比例した幅で描かれます.
7088,<code>outline</code>が真でない場合、外れ値は描かれません。
7089,数値は(0,1)である。<code>notch = TRUE</code>の場合、ノッチが使用すべきボックス幅の端数を指定します。
7090,characterまたはnumeric (vector), boxbordersの色。  複数のボックスの場合、リサイクルされます。  <code>boxcol</code>, <code>medcol</code>, <code>whiskcol</code>, <code>staplecol</code>, <code>outcol</code> オプション（下記参照）ではデフォルトとして使用されます。
7091,文字、<code>plot.default</code>のように、任意の軸が対数スケールで描かれるべきかどうかを指定します。
7092,logicalは、'frame'(<code>box</code>)が描画されるべきかどうかを示します; デフォルトは、<code>axes = FALSE</code> が指定されなければ、<code>TRUE</code>です。
7093,ボックスプロットが水平であるべきかを示す論理値; デフォルトの<code>FALSE</code>は垂直のボックスを意味します。
7094,デフォルトの注釈(タイトル、X軸とY軸のラベル)がプロットに表示されるべきかどうかを示す論理値です。
7095,論理値, もしtrueなら <em>add</em> boxplotを現在のプロットに追加します.
7096,特に<code>add = TRUE</code>の時にboxplotが描かれるべき場所を与える数値ベクトル; デフォルトは<code>1：n</code>で<code>n</code>はボックスの数である.
7097,<code>TRUE</code>または<code>FALSE</code>に設定すると、各グループに対してX軸ラベルを印刷するかどうかのデフォルトを上書きすることができます。
7098,グラフパラメータ（等）は、リスト（<code>pars</code>）または通常（<code>...</code>）として、この関数への引数として渡すことができます（以下を参照）。  (<code>...</code>内のものが<code>pars</code>内のものよりも優先されます)。

7099,現在、<code>yaxs</code>と<code>ylim</code>は、「boxplotに沿って」、すなわち、使用されます、<code>xaxt</code>, <code>yaxt</code>, <code>las</code>, <code>cex.axis</code>, <code>gap.axis</code>, <code>col.axis</code> は <code>axis</code>, <code>main</code>,<code>cex.xlim</code> に渡されます．main</code>、<code>col.main</code>、<code>sub</code>、<code>cex.sub</code>、<code>col.sub</code>、<code>xlab</code>、<code>lab</code>、<code>cex.lab</code>、<code>col.lab</code>は <codie> title</code> に引き渡します．

7100,また、<code>axes</code>を受け付け（<code>plot.window</code>参照）、デフォルトは<code>TRUE</code>である。

7101,以下の引数（または<code>pars</code>コンポーネント）は、boxplotグラフィックのさらなるカスタマイズを可能にします。  これらのデフォルトは、通常、指定された引数または<code>pars</code>コンポーネントまたは対応する<code>par</code>のいずれかから、非接頭辞バージョン（例えば、<code>lty</code>から<code>boxlty</code>）を決定されるものである。

7102,すべてのボックスに適用されるスケールファクターを指定します。  グループ数が少ない場合、ボックスの幅を狭くすることでプロットの見栄えを良くすることができます。  デフォルトは<code>at</code>に依存し、通常<i>0.8</i>となります。
7103,ステープル線と外れ線の幅の拡大、ボックスの幅に比例、どちらもデフォルトは0.5。
7104,ボックスの輪郭の種類、幅、色、塗りつぶし色（現在のデフォルトは<code>col</code>、将来のデフォルトは<code>par("bg")</code>となる予定です）。
7105,中央線タイプ、線幅、ポイント文字、ポイントサイズ拡張、色、および背景色。  デフォルトの<code>medpch = NA</code> はポイントを抑制し、<code>medlty = "blank"</code> はラインに対してそうします。<code>medlwd</code>は、デフォルトの<code>lwd</code>の3倍</i>になるので注意して下さい。
7106,ひげ線の種類(デフォルト:<code>"dashed"</code>)、幅、色.
7107,ステープル（＝ウィスカの終点）線種、幅、色.
7108,外れ線種、線幅、ポイント文字、ポイントサイズ拡張、色、背景色。  デフォルトの<code>outlty = "blank"</code> は線を抑制し、<code>outpch = NA</code> は点を抑制する。
7109,オブジェクト、デフォルトのメソッドは単一の数値変数(またはこれと互換性のあるオブジェクト)を期待する。
7110,a <code>"因子"</code>は従属変数と解釈される。
7111,単一の従属変数<code>"factor"</code>と単一の数値説明変数を持つ<code>y ~ x</code>型の<code>"formula"</code>.
7112,オプションのデータフレーム。
7113,論理的である。計算された条件密度はプロットされるべきか？
7114,y軸の注釈のための便宜的な許容パラメータ。2つのラベル間の距離がこの閾値を下回る場合、それらは等距離にプロットされる。
7115,従属変数のレベルをどの順番でプロットするかを指定する文字または数値ベクトル.
7116,<code>density</code>に渡される引数。
7117,<code>levels(y)</code>と同じ長さの塗り色のベクトル.デフォルトは<code>gray.colors</code>を呼び出すことです.
7118,シェーディングポリゴンのボーダーカラー.
7119,アノテーション用文字列
7120,y軸の注釈のための文字ベクトル、デフォルトは<code>levels(y)</code>です。
7121,感覚的なデフォルトを持つxとyの値の範囲です。
7122,プロットに使用される観測値のサブセットを指定するオプションのベクトル.
7123,クリッピング矩形のユーザー座標。
7124,画面行列<em>または</em>4列の行列の行数と列数を記述する2要素ベクトル。行列の場合、各行はNDC単位で画面の左、右、下、上（この順）の値を持つ画面を記述し、デバイス表面の左下隅では0、右上隅では1である。
7125,分割する画面を指定する番号です。  デフォルトは、現在のスクリーンがあればそのスクリーン、なければデバイスの全領域です。
7126,論理：選択された画面はクリアされるべきか？
7127,描画(<code>screen</code>)、消去(<code>erase.screen</code>)、閉じる(<code>close.screen</code>)にどの画面を準備するかを示す番号。  (<code>close.screen</code>は、スクリーン番号のベクトルを受け取ります)。
7128,スクリーンに描画する準備の一部として、スクリーンをビアベース化すべきかどうかを示す論理値である。
7129,全てのスクリーンを閉じるべきかどうかを示す論理値。
7130,コンディショニングプロットの形式を記述する式。  <code>y ~ x | a</code>の形式の数式は、<code>y</code>対<code>x</code>のプロットが変数<code>a</code>を条件として生成すべきことを示す。  <code>y ~ x| a * b</code>の形式の式は、<code>y</code>対<code>x</code>のプロットが、2つの変数<code>a</code>と<code>b</code>を条件として生成すべきことを示すものである。

<code>x</code>または<code>y</code>が因子の場合、結果はほぼ<code>as.numeric()</code>が適用されたかのようになり、一方、因子<code>a</code>または<code>b</code>では、条件付け（および<code>show.given</code> is trueならそのグラフィックス）は適応されます。
7132,式中の変数の値を含むデータフレーム。  デフォルトでは、<code>coplot</code>が呼び出された環境が使用されます。
7133,<code>a</code>と<code>b</code>の条件付けがどのように行われるかを決定する値または2つの値のリスト.

7134,<code>b</code>がない場合（つまり<code>a</code>にのみ条件付けする場合）、通常は2列の行列で、各行が条件となる区間を与えるが、単一の数値のベクトルや因子レベルのセット（条件となる変数が因子ならば）であってもよい。この場合（<code>b</code>がない）、<code>co.interval</code>の結果は<code>given.values</code>引数として直接使用することができる。
7135,ディスプレイの各パネルで実行されるアクションを与える<code>function(x, y, col, pch, ...)</code> がある。  デフォルトは<code>points</code>です。
7136,プロットのパネルは<code>rows</code> by<code>columns</code> arrayでレイアウトされます。  <code>rows</code>は、配列の行の数を示す。
7137,パネルレイアウト配列の列の数。
7138,論理（2つの条件付け変数に対して長さ2の可能性あり）：対応する条件付け変数に対して条件付けプロットを表示するかどうか（デフォルトは<code>TRUE</code>です）.
7139,点のプロットに使用される色のベクトル.  短すぎる場合、値はリサイクルされます。
7140,プロットするシンボルや文字のベクトルです。  短すぎる場合、値はリサイクルされます。
7141,成分<code>"num"</code>と<code>"fac"</code>を持つ名前付きベクトルで、それぞれ<b>num</b>ericと<b>fac</b>tor条件変数に対する（シングル）バーの背景色となるものです。
7142,character；x軸と最初の条件付け変数に使用するラベルを指定する。  ラベルが1つだけ与えられた場合、それがx軸に使用され、デフォルトのラベルが条件付け変数に使用されます。
7143,character；y軸と2番目の条件付け変数に使用されるラベル。
7144,logical:trueの場合、パネル関数に追加（第3）引数<code>subscripts</code>が与えられ、そのパネルに渡されたデータの添え字を与えます。
7145,xまたはyが因子の時、軸（目盛り）ラベルを作成する関数です。
7146,integer;a、bの条件付け区間の数、長さは2である可能性があります。
7147,数値 &lt; 1; xとydirectionの長さ2の条件付け変数の重なりの割合.  overlap &lt; 0の場合、データスライスの間に<em>gaps</em>が存在することになる。
7148,x軸の範囲。
7149,y軸の範囲.
7150,panel関数の追加引数。
7151,数値ベクトル.
7152,<code>z</code>の値が測定されたグリッド線の位置。  これらは昇順でなければならない。  デフォルトでは、0から1までの等間隔の値が使用されます。  <code>x</code> が <code>list</code> の場合、その構成要素 <code>x$x</code> と <code>x$y</code> はそれぞれ <code>x</code> と <code>y</code> に使われます。リストが成分<code>z</code>を持つ場合、これは<code>z</code>に使われる。
7153,プロットされる値を含む行列(<code>NA</code>は許可されている).  なお、便宜上、<code>z</code>の代わりに<code>x</code>を使用することができる。
7154,輪郭レベルの数 <b>iff</b><code>levels</code> が供給されない場合、希望する。
7155,輪郭線を描画するレベルの数値ベクトル.
7156,輪郭線のラベルを与えるベクトル。  もし<code>NULL</code>ならば、レベルがラベルとして使用され、そうでなければ<code>as.character</code>によって強制される。
7157,<code>cex</code>で輪郭線のラベリングに使用されます。  これは<code>par("cex")</code>の倍数ではなく、絶対値です。
7158,論理的である。  輪郭は、<code>TRUE</code>の場合にラベリングされます。
7159,ラベルを貼る場所を指定する文字列。可能な値は、<code>"simple"</code>、<code>"edge"</code>、<code>"flattest"</code>(デフォルト) です。  詳細」セクションを参照してください。
7160,もし<code>NULL</code>なら、輪郭ラベルには現在のフォントファミリーとフェイスが使われます。  長さ2の文字ベクトルであれば、Hersheyベクトルフォントが輪郭ラベルに使用されます。ベクトルの最初の要素は書体を選択し、2番目の要素はフォントインデックスを選択します（詳細は <code>text</code> を参照）。デフォルトは、テキストを高品質に回転するグラフィックデバイスでは <code>NULL</code> で、それ以外では <code>c("sans serif", "plain")</code> です。
7161,プロットのx-,y-,z-リミットを指定します。
7162,軸と箱のどちらを描くべきかを示す論理。<code>plot.default</code>を参照。
7163,描かれる線の色(複数可).
7164,描かれる線の種類(複数可)
7165,描かれる線の幅（複数可）.
7166,論理。もし<code>TRUE</code>なら、現在のプロットに追加されます.
7167,<code>plot.window</code>、<code>title</code>、<code>Axis</code>、<code>box</code>への追加引数、典型的には、<code>cex.axis</code>などのグラフィックパラメータ。
7168,<code>z</code>の値が測定されるグリッド線の位置。  これらは昇順である必要があります。  デフォルトでは、0から1までの等間隔の値が使用されます。  <code>x</code> が <code>list</code> の場合、その構成要素 <code>x$x</code> と <code>x$y</code> はそれぞれ <code>x</code> と <code>y</code> に使われます。リストが成分 <code>z</code> を持つ場合、これは <code>z</code> のために使われる。
7169,プロットされる値を含む行列 (<code>NA</code>s isallowed).  便宜上、<code>z</code>の代わりに<code>x</code>を使用することができることに注意されたい。
7170,輪郭レベルの数 <b>iff</b><code>levels</code> が供給されない場合、希望する輪郭レベルの数。
7171,輪郭線を描画するレベルの数値ベクトル。
7172,輪郭線のラベルを与えるベクトル。  もし<code>NULL</code>ならレベルがラベルとして使用され、そうでなければ<code>as.character</code>によって強制されます.
7173,<code>cex</code>で輪郭線のラベリングが行われます。  これは<code>par("cex")</code>の倍数ではなく、絶対値です。
7174,論理的である。  輪郭は<code>TRUE</code>の場合にラベリングされます.
7175,ラベルを貼る場所を指定する文字列。可能な値は、<code>"simple"</code>、<code>"edge"</code>、<code>"flattest"</code>(デフォルト) です。  詳細」セクションを参照してください。
7176,もし<code>NULL</code>なら、輪郭ラベルには現在のフォントファミリーとフェースが使われます。  長さ2の文字ベクトルであれば、Hersheyベクトルフォントが輪郭ラベルに使用されます。ベクトルの最初の要素は書体を選択し、2番目の要素はフォントインデックスを選択します（詳細は <code>text</code> を参照）。デフォルトは、テキストを高品質に回転するグラフィックデバイスでは <code>NULL</code> で、それ以外では <code>c("sans serif", "plain")</code> です。
7177,プロットのx-,y-,z-リミットを指定します。
7178,軸と箱のどちらを描くべきかを示す論理。<code>plot.default</code>を参照。
7179,描かれる線の色(複数可).
7180,描画される線の種類(複数可)
7181，描かれる線の幅（複数可
7182,論理。もし<code>TRUE</code>なら、現在のプロットに追加されます。
7183,<code>plot.window</code>,<code>title</code>,<code>Axis</code>,<code>box</code>への追加引数、典型的には<code>cex.axis</code>などのグラフィックパラメータです.
7184,コンディショニングプロットの形式を記述する式。  <code>y ~ x | a</code>の形式の数式は、<code>y</code>対<code>x</code>のプロットが変数<code>a</code>を条件として生成されるべきことを示します。  <code>y ~ x| a * b</code>の形式の式は、<code>y</code>対<code>x</code>のプロットが、2つの変数<code>a</code>と<code>b</code>を条件として生成すべきことを示すものである。

7185,3つまたは4つの変数はすべて数値または因子のいずれかである。<code>x</code>または<code>y</code>が因子の場合、結果は<code>as.numeric()</code>を適用した場合とほぼ同じであるが、因子<code>a</code>または<code>b</code>については、条件付け（および<code>show.given</code>が真の場合そのグラフィック）が適応される。
7186,式中の変数の値を含むデータフレーム。  デフォルトでは、<code>coplot</code>が呼び出された環境が使用されます。
7187,<code>a</code>と<code>b</code>の条件付けがどのように行われるかを決定する値または2つの値のリスト。

7188,<code>b</code>がない場合（つまり<code>a</code>にのみ条件付けする場合）、通常は2列の行列で、各行が条件となる区間を与えるが、単一の数値のベクトルや因子レベルのセット（条件となる変数が因子であれば）であってもよい。この場合（<code>b</code>がない）、<code>co.interval</code>の結果は<code>given.values</code>引数として直接使用することができる。
7189,ディスプレイの各パネルで実行されるアクションを与える<code>function(x, y, col, pch, ...)</code> があります。  デフォルトは<code>points</code>です。
7190,プロットのパネルは<code>rows</code> by<code>columns</code> arrayでレイアウトされます。  <code>rows</code>は、配列の行数を示す。
7191,パネルレイアウト配列の列の数。
7192,論理（2つの条件付け変数の場合は長さ2）：対応する条件付け変数について条件付けプロットを表示するかどうか（デフォルトは<code>TRUE</code>）.
7193,点のプロットに使用される色のベクトル.  短すぎる場合、値はリサイクルされます。
7194,プロット用のシンボルまたは文字のベクトル。  短すぎる場合、値は再利用されます。
7195,成分<code>"num"</code>と<code>"fac"</code>を持つ名前付きベクトルで、それぞれ<b>num</b>ericと<b>fac</b>tor条件変数に対する（シングル）バーの背景色とする。
7196,character;X軸と最初の条件付け変数に使用するラベルを指定する。  ラベルが1つだけ与えられた場合、それがx軸に使用され、デフォルトのラベルが条件付け変数に使用されます。
7197,character；y軸と2番目の条件付け変数に使用されるラベルです。
7198,logical:trueの場合、パネル関数に追加（第3）引数<code>subscripts</code>が与えられ、そのパネルに渡されたデータの添え字を与えます。
7199,xまたはyが因子の時、軸（目盛り）ラベルを作成する関数です。
7200,integer;a、bの条件付け区間の数、長さは2かもしれない。
7201,数値 &lt; 1; xとy方向について、長さ2の条件変数の重なりの割合を指定することができる。  overlap &lt; 0の場合、データスライスの間に<em>gaps</em>が存在することになる。
7202,x軸の範囲を指定します。
7203,y軸の範囲を指定します。
7204,panel関数の追加引数。
7205,数値ベクトル。
7206,関数の名前、または<code>x</code>の関数として書かれた呼び出しまたは式で、<code>x</code>と同じ長さのオブジェクトに評価される。
7207,「ベクトル化」する数値<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span>関数です。
7208,<code>plot</code>との互換性のために<code>from</code>のエイリアス。
7209,関数がプロットされる範囲。
7210,integer;評価するx値の数を指定します。
7211,logical; if <code>TRUE</code> add to already existing plot; if<code>NA</code> start a new plot taking the defaults for the limits andlog-scaling of the x-axis from the previous plot.  nographicsデバイスが開いている場合、<code>FALSE</code>として扱われます（異なる値が供給された場合、警告が表示されます）。
7212,<code>NULL</code>または長さ2の数値ベクトル。<code>NULL</code>でない場合、<code>c（from, to）</code>のデフォルトを提供し、<code>ad = TRUE</code> でない場合、プロットのx-limitsを選択する - <code>plot.window</code> を参照して下さい。
7213,プロットタイプ: <code>plot.default</code>を参照して下さい.
7214,x軸に使用される名前を与える文字列.
7215,ラベルとグラフパラメータは、引数として指定することもできます。  <code>log</code>のデフォルトの解釈については'詳細'を参照して下さい。

7216,<code>plot</code>の<code>"function"</code>メソッドの場合、<code>...</code>には<code>expr</code>以外の<code>curve</code>の引数を含むことができます。
7217,数値のベクトルまたは行列（<code>NA</code>は許可されている）.  <code>x</code>が行列の場合、全体のプロットは、各行の点描画を並べたものになります。  <code>is.numeric(x)</code>を満たすが<code>is.vector(x) || is.matrix(x)</code> ではない入力は、警告とともに<code>as.numeric</code>で強制される。
ベクターの場合、デフォルトは<code>names(x)</code>、行列の場合は行ラベル<code>dimnames(x)[[1]]</code>が使用されます.
7219,<code>x</code>の要素がどのようにグループ化されるかを示すオプションの係数。<code>x</code>が行列の場合、<code>groups</code>は<code>x<code>の列をデフォルトとする。
7220,グループのデータ値。これは通常、各グループの中央値や平均値のような要約である。
7221,<code>ylab</code>と<code>labels</code>のインチ単位のオフセット; <span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> 4.0.0.
7222,デフォルトの注釈(タイトルとX軸とY軸のラベル)をプロットに表示するかどうかを示す<code>logical</code>値。
7223,x軸のスタイルを示す文字列; <code>"n"</code>で抑制され、 <code>par("xaxt")</code> も参照して下さい.
7224,プロットの周囲にボックスを描くかどうかを示す論理です.
7225,どちらかの軸を対数にするかどうかを示す文字列、 <code>plot.default</code> を参照。
7226,使用される文字サイズ。  <code>cex</code>を1より小さい値に設定すると、ラベルの重なりを避けるのに有効です。  他の多くのグラフィック関数とは異なり、これは<code>par("cex")</code>の倍数ではなく、actualsizeを設定します。
これは、<code>plot()</code>の<code>cex</code>と同じように扱われます。
7228,使用されるプロット文字またはシンボル.
7229,グループ値に使用されるプロット文字またはシンボル.
7230,使用するプロット文字または記号の背景色; プロット全体の背景色を設定するには <code>par(bg= *)</code> を使用します.
7231,点とラベルに使用される色(複数可)
7232,グループラベルと値に使用される単一色。
7233,水平線に使用される色(複数可)
7234,プロットの水平範囲、例えば<code>plot.window</code>を参照して下さい.
7235,プロットの全体的なタイトル、<code>title</code>を参照してください。
7236,軸の注釈は<code>title</code>のように。
7237,グラフィカルパラメーターは、引数として指定することもできます。
7238,画面行列<em>または</em>4列の行列の行数と列数を記述する2要素ベクトル。行列の場合、各行はNDC単位で画面の左、右、下、上（この順）の値を持つ画面を記述し、デバイス表面の左下隅に0、右上隅に1であることを示します。
7239,分割する画面を指定する数字です。  デフォルトは、現在のスクリーンがあればそのスクリーン、なければデバイスの全領域です。
7240,論理：選択されたスクリーンをクリアすべきか？
7241,描画(<code>screen</code>)、消去(<code>erase.screen</code>)、閉じる(<code>close.screen</code>)にどの画面を準備すべきかを示す番号です.  (<code>close.screen</code>は、スクリーン番号のベクトルを受け取ります)。
7242,画面に描画するための準備の一部として、画面をビアベース化すべきかどうかを示す論理値。
7243,全てのスクリーンを閉じるべきかどうかを示す論理値。
7244,<code>z</code>の値を測定するグリッド線の位置。  これらは昇順でなければならない。  (この記述の残りの部分は<code>.filled.contour</code>には適用されません)デフォルトでは、0から1までの等間隔な値が使用されます.  <code>x</code> が <code>list</code> の場合、その成分 <code>x$x</code> と <code>x$y</code> はそれぞれ <code>x</code> と <code>y</code> に使われます。  リストがコンポーネント<code>z</code>を持つ場合、これは<code>z</code>に使用されます.
7245,プロットされる値を含む数値行列.  便宜上、<code>z</code>の代わりに<code>x</code>を使用することができることに注意して下さい。
7246,プロットのためのxの限界値.
7247,プロットのy限界値.
7248,プロットのz限界値.
7249,<code>z</code>の範囲を分割するために使用されるレベルのセットです。  <b>厳密に</b>増加する(そして有限である)必要があります。  連続するレベル間の<code>z</code>値を持つ領域は、同じ色で塗られます.
7250,<code>levels</code>が指定されない場合、<code>z</code>の値の範囲は、およそこの数のレベルに分割される。
7251,プロットで色を割り当てるために使用されるカラーパレット関数。
7252,プロットで使用される明示的な色のセット。この引数は、パレット関数の指定よりも優先される。  レベルより1つ少ない色であるべきです。
7253,メインプロットにタイトルを追加するステートメント。
7254,メインプロットに軸（と<code>ボックス</code>）を描くステートメントです。  これは、デフォルトの軸を上書きします。
7255,プロットキーにタイトルを追加するステートメント。
7256,プロットキーに軸を描画するステートメント.これはデフォルトの軸を上書きします。
7257,<i>y/x</i>アスペクト比、<code>plot.window</code>を参照して下さい。
7258,x軸のスタイル.  デフォルトは、インターナルラベルを使用することです。
7259,y軸のスタイル。  デフォルトはinternallabelingを使用することである。
7260,使用されるラベリングのスタイル。  デフォルトは、水平ラベルを使用することである。
7261,<code>plot.default</code>のように軸とボックスが描かれるべきかどうかを示す論理です。
7262,追加のグラフィック・パラメータ、現在は<code>title()</code>にのみ渡されます。
7263,配列形式の2×2×<i>k</i>分割表、または<i>k</i>が1の場合は2×2マトリックスとして。
7264,各2×2表の小さい方と大きい方の対角線に使用する色を指定する長さ2のベクトル.
7265,オッズ比の信頼輪に使用する信頼度。  1より小さい非負の数値でなければならない。0に設定すると、信頼度リングは抑制される。
7266,表を標準化する方法を指定する文字列。<code>"margin"</code>、<code>"ind.max"</code>、<code>"all.max"</code>のいずれかに一致しなければならず、最初の文字に省略することができる。<code>"margin"</code>に設定すると、2×2表それぞれは標準化して、確率比率を保持したまま<code>margin</code>によって指定したマージンに均すようにします。  <code>"ind.max"</code> または <code>"all.max"</code> の場合、表は個別に、または同時に、最大セル頻度1に標準化されます.
7267,等化する余白を表す数値ベクトルです。  <code>1</code>, <code>2</code>, <code>c(1, 2)</code> (デフォルト)のいずれかでなければならず、これは各2×2テーブルの行、列、または両方のマージンを標準化することに対応します。 <code>std</code> equal <code>"margins"</code> ならばのみ使用します。
7268,行と列のラベルに使われるスペースの量(四分円の最大半径の何分の一か)。
7269,4つ折りタイトルの文字列。
7270,2×2テーブルの表示が<code>nr</code>×<code>nc</code>のレイアウトで配置され、行で満たされるべきであることを示す、<code>c（nr，nc）</code>という形式の数値ベクトルを指定する。
7271,<code>c(nr,nc)</code>の形式の数値ベクトルであり、2×2テーブルのためのディスプレイが<code>nr</code>×<code>nc</code>レイアウトで配置されるべきで、列によって満たされることを指示する。
7272,座標を表す数値ベクトル。
7273,変換する座標系を示す文字列.
7274,座標の数値ベクトル.
7275,変換する座標系を示す文字列。
7276,x,y方向のグリッドのセル数.  <code>NULL</code>の場合、デフォルトでは、グリッドは対応する<em>default</em>軸の目盛り（すなわち、<code>axTicks</code>で計算される目盛り）に合わせます。  <code>NA</code>の場合、対応する方向にはグリッド線は引かれません。
7277,character or (integer) numeric; グリッド線の色。
7278,characterまたは(integer)数値; グリッド線の線種.
7279,非負の数値でグリッド線の線幅を指定します。
7280,論理、<em>log</em>座標と軸の目盛りマークとの整列が有効な場合にのみ使用されます。  この場合、<code>equilogs = FALSE</code> を設定すると、<em>non equidistant</em> tick aligned grid linesが得られる。
7281,ヒストグラムを作成するための値のベクトルです。
7282,そのうちの1つ：

7283, ヒストグラムのセル間のブレークポイントを与えるベクトル．
7284, ブレークポイントのベクトルを計算する関数、
7285, ヒストグラムのセル数を示す単一の数値．
7286: セル数を計算するアルゴリズムを示す文字列 (「詳細」を参照)．
7287,セル数を計算するための関数。
7288,最後の3つのケースでは、数は提案に過ぎません。ブレークポイントは<code>pretty</code>値に設定されるので、数は<code>1e6</code>に制限されます（これより大きい場合は警告が表示されます）。  <code>breaks</code>が関数である場合、<code>x</code>ベクトルは唯一の引数としてそれに供給されます（そして、ブレークの数は、利用可能なメモリの量によってのみ制限されます）。
7289,logical; <code>TRUE</code>の場合、ヒストグラムグラフィックは頻度、結果の<code>counts</code>成分で表現されます。<code>FALSE</code>の場合、確率密度、成分<code>density</code>は（ヒストグラムが1の合計面積となるよう）描かれます。  デフォルトは <code>TRUE</code> <em>if and only if</em> <code>breaks</code> areequidistant (and <code>probability</code> is not specified) です。
7290,S互換のため、<code>!freq</code>の<em>エイリアス</em>となる。
7291,論理; <code>TRUE</code> の場合、<code>x[i]</code> が <code>breaks</code> 値と等しければ、最初の (<code>right = FALSE</code> では最後の) バーに含まれることになります。  これは、<code>breaks</code>がベクトルでない限り、無視されます（警告付き）。
7292,論理; <code>TRUE</code>の場合、ヒストグラムのセルは右閉じ(左開き)の間隔になります。
7293,シェーディングラインの密度、単位はライン/インチ。デフォルト値の<code>NULL</code>は、シェーディングラインが描かれないことを意味します。また、<code>density</code>の値が正でない場合は、シェーディングラインの描画が抑制されます。
7294,シェーディングラインの傾きを、角度で示します。
7295,バーを塗りつぶすための色。デフォルトの<code>NULL</code>は、塗りつぶされていないバーを生成します。
7296,棒の周りの縁取りの色です。  デフォルトは、標準の前景色を使用します。
7297,メインタイトルと軸ラベル: <code>title()</code> へのこれらの引数は、ここで「賢い」デフォルトを得ます。例えば、<code>freq</code>が真ならば、デフォルト<code>yab</code> は <code>"Frequency"</code> です。
7298,xとyの値の範囲。<code>xlim</code>はヒストグラムの定義（ブレーク）には使われず、プロット（<code>plot = TRUE</code>時）のみに使われることに注意してください(sensible defaults).
7299,論理的。  <code>TRUE</code> (デフォルト)の場合、plotが描画されると軸が描画されます。
7300,論理的である。  <code>TRUE</code> (デフォルト)の場合、ヒストグラムがプロットされ、そうでない場合は、ブレークとカウントのリストが返されます.  後者の場合、<code>plot = TRUE</code>の場合にのみ適用される(通常グラフィカルな)引数が指定されると、警告が表示されます.
7301,論理文字列または文字列。  <code>FALSE</code>でない場合、棒グラフの上にラベルを描きます; <code>plot.histogram</code> を参照.
7302,数値(整数).  S(-PLUS)との互換性のためにのみ、<code>nclass</code>は、スカラーまたは文字引数のための<code>breaks</code>と同等です。
7303,論理的です。  <code>plot = FALSE</code> かつ <code>warn.unused = TRUE</code> の場合、<code>hist.default()</code>にgraphicalparametersが渡されると警告が出される。
7304,さらに引数とグラフパラメータが<code>plot.histogram</code>に渡され、そこから<code>title</code>と<code>axis</code>（<code>plot = TRUE</code> なら）へ渡されます。
7305,ヒストグラムを作成するための値のベクトル。
7306,どちらか一つ：

7307, ヒストグラムのセル間のブレイクポイントを与えるベクトル、
7308, ブレークポイントのベクトルを計算する関数、
7309, ヒストグラムのセル数を示す単一の数値．
7310: セル数を計算するアルゴリズムを示す文字列 (「詳細」を参照)、
7311,セル数を計算するための関数。
7312,最後の3つのケースでは、数は提案に過ぎません。ブレークポイントは<code>pretty</code>値に設定されるので、数は<code>1e6</code>に制限されます（それ以上の場合は警告されます）。  <code>breaks</code>が関数である場合、<code>x</code>ベクトルは唯一の引数としてそれに供給されます（そして、breakの数は利用できるメモリの量によってのみ制限されます）。
7313,論理; <code>TRUE</code>の場合、ヒストグラムは頻度、結果の<code>counts</code>成分で表現されます。<code>FALSE</code>の場合、確率密度、成分<code>density</code>がプロットされます（ヒストグラムは1つの総面積となるように）.  デフォルトは <code>TRUE</code> <em>if and only if</em> <code>breaks</code> areequidistant (and <code>probability</code> is not specified) です。
7314,S互換のため、<code>!freq</code>の<em>エイリアス</em>となる。
7315,論理; <code>TRUE</code> の場合、<code>breaks</code> 値と等しい <code>x[i]</code> が最初の (<code>right = FALSE</code> では最後の) バーに含まれることになります。  これは、<code>breaks</code> がベクトルでない限り、無視されます（警告付き）。
7316,論理; <code>TRUE</code>の場合、ヒストグラムのセルは右閉じ(左開き)の間隔になります。
7317,シェーディングラインの密度、単位はライン/インチ。デフォルト値の<code>NULL</code>は、シェーディングラインが描かれないことを意味します。また、<code>density</code>の値が正でない場合は、シェーディングラインの描画を抑制する。
7318,シェーディングラインの傾き(反時計回りの角度)を指定します。
7319,バーを塗りつぶすための色。デフォルトの<code>NULL</code>は、塗りつぶされていないバーを生成します。
7320,棒の周りの縁取りの色です。  デフォルトは、標準の前景色を使用します。
7321,メインタイトルと軸ラベル: <code>title()</code> へのこれらの引数は、ここで「賢い」デフォルトを得る。例えば、<code>freq</code>が真なら、<code>lab</code> は、デフォルト<code>「周波数」</code> となる。
7322,xとyの値の範囲。<code>xlim</code>はヒストグラムの定義（ブレーク）には使われず、プロット（<code>plot = TRUE</code>時）のみに使われることに注意してください(sensible defaults).
7323,論理的。  <code>TRUE</code> (デフォルト)の場合、plotが描画されると軸が描画されます。
7324,論理的.  <code>TRUE</code> (デフォルト)の場合、ヒストグラムがプロットされ、そうでない場合は、ブレークとカウントのリストが返されます.  後者の場合、<code>plot = TRUE</code>の場合にのみ適用される（一般にグラフィカルな）引数が指定されていると、警告が使用されます.
7325,論理文字列または文字列。  <code>FALSE</code>でない場合、棒グラフの上にラベルを描きます; <code>plot.histogram</code> を参照してください.
7326,数値(整数).  S(-PLUS)との互換性のためにのみ、<code>nclass</code>は、スカラーまたは文字引数のための<code>breaks</code>と同等です。
7327,論理的です。  <code>plot = FALSE</code> と <code>warn.unused = TRUE</code> の場合、<code>hist.default() </code> に graphicalparameters が渡されると、警告が出される。
7328,さらに引数とグラフパラメータが<code>plot.histogram</code>に渡され、そこから<code>title</code>と<code>axis</code>（<code>plot = TRUE</code> なら）へ渡されます.
7329,散布図における点の座標を指定します。  あるいは、座標を定義する任意のオブジェクト（プロット構造、時系列など： <code>xy.coords</code> を参照）は、<code>x</code> として与えられ、<code>y</code> は欠落したままであることができます。
7330,点のラベルを与えるオプションの文字ベクトル。  <code>as.character</code> を用いて強制され、必要に応じて <code>x</code> の長さまで再利用されます。  余分なラベルは、警告とともに破棄される。
7331,<code>pos</code>が<code>TRUE</code>の場合、テキストが各特定点に対してどこにプロットされたかを示す成分がターン値に追加されます：値を参照して下さい。
7332,識別される点の最大数.
7333,論理: <code>plot</code> が <code>TRUE</code> ならば、ラベルは点の近くに印刷され、<code>FALSE</code> ならば、それらは省略される.
7334,論理： <code>TRUE</code> と <code>plot = TRUE</code> の場合、ラベルの左下隅は、点からの相対位置ではなく、クリックした点の位置にプロットされます。
7335,識別された点からラベルを分離する距離（文字幅）を指定します。  負の値も許容される。  <code>atpen = TRUE</code>の場合は使用されません.
7336,ポインタがポイントに「十分に近い」ための最大距離(インチ単位)。
7337,<code>order</code>が<code>TRUE</code>の場合、ポイントが識別された順序を示す成分がturn値に追加される: Valueを参照。
7338,<code>cex</code>、<code>col</code>、<code>font</code>などの<code>par</code>に渡される追加の引数。
7339,<code>z</code>の値が測定されるグリッド線の位置。  これらは、有限で、欠落がなく、（厳密に）昇順でなければなりません。  デフォルトでは、0から1までの等間隔な値が使用されます。  <code>x</code> が <code>list</code> の場合、その成分 <code>x$x</code> と <code>x$y</code> はそれぞれ <code>x</code> と <code>y</code> に使われます。リストが構成要素 <code>z</code> を持つ場合、これは <code>z</code> のために使われる。
7340,プロットされる値を含む数値または論理行列(<code>NA</code>は許可される).  便宜上、<code>z</code>の代わりに<code>x</code>を使用することができることに注意してください。
7341,色をプロットするための最小値と最大値の<code>z</code>を指定します.与えられた色のそれぞれは、この範囲の等間隔の区間を彩るために使われます。区間の<em>中点</em>は範囲をカバーするので, 範囲のすぐ外側の値もプロットされる.
7342,プロットされる<code>x</code>と<code>y</code>の値の範囲は、デフォルトで<code>x<code>と<code>y<code>の範囲となる。
7343,色のリストは、<code>hcl.colors</code>, <code>gray.colors</code>または同様の関数によって生成されます。
7344,論理; <code>TRUE</code>の場合、現在のプロットに追加します(そして次の4つの引数は無視されます)。  これは、<code>image</code>が既存のグラフィックの上に「ペイント」するため、ほとんど役に立ちません。
7345,x軸とy軸のスタイル。  デフォルトの<code>"i"</code>は画像に適しています。  <code>par</code>を参照してください。
7346,各x軸とy軸のラベルを指定する文字列です。  デフォルトは<code>x</code>または<code>y</code>の「呼び出し名」、またはこれらが指定されていない場合は<code>""</code>となる。
7347,色のための有限の数値ブレークポイントのセット：色より1つ多いブレークポイントを持ち、増加する順序でなければならない。  ソートされていないベクトルは、警告を伴って、ソートされます。
7348,論理的。trueの場合、色間隔の中点は等間隔になり、<code>zlim[1]</code>と<code>zlim[2]</code>は中点とみなされた。  デフォルトは、限界の間に等しい長さの色間隔を持つようにする。
7349,logical;もし<code>TRUE</code>なら、ポリゴンの代わりにビットマップラスターが画像のプロットとして使われます。この場合、グリッドは規則的でなければならず、そうでない場合はエラーが発生します。   この指定がない場合の動作については、「詳細」を参照してください。
7350,<code>plot</code>のグラフィックパラメータは、この関数の引数として、プロットの縦横比<code>asp</code>と<code>axes</code>を渡すこともできます (<code>plot.window</code> を参照).
7351,<code>z</code>の値が測定されたグリッド線の位置。  これらは、有限で、欠落がなく、（厳密に）昇順でなければなりません。  デフォルトでは、0から1までの等間隔な値が使用されます。  <code>x</code> が <code>list</code> の場合、その成分 <code>x$x</code> と <code>x$y</code> はそれぞれ <code>x</code> と <code>y</code> に使われます。リストが構成要素 <code>z</code> を持つ場合、これは <code>z</code> のために使われる。
7352,プロットされる値を含む数値または論理行列(<code>NA</code>は許可される).  便宜上、<code>z</code>の代わりに<code>x</code>を使用することができることに注意してください。
7353,色をプロットするための最小値と最大値の<code>z</code>を指定します.与えられた色のそれぞれは、この範囲の等間隔の区間を彩るために使われます。区間の<em>中点</em>は範囲をカバーするので, 範囲のすぐ外側の値もプロットされます.
7354,プロットされる<code>x</code>と<code>y</code>の値の範囲は、デフォルトで<code>x<code>と<code>y<code>の範囲となる。
7355,色のリストは、<code>hcl.colors</code>, <code>gray.colors</code>または同様の関数によって生成されるようなものである。
7356,論理; もし<code>TRUE</code>なら、現在のプロットに追加します(そして次の4つの引数は無視されます)。  これは、<code>image</code>が既存のグラフィックの上に「ペイント」するため、ほとんど役に立ちません。
7357,x軸とy軸のスタイル。  デフォルトの<code>"i"</code>は画像に適しています。  <code>par</code>を参照してください。
7358,eachはx軸とy軸のラベルを示す文字列です。  デフォルトは<code>x</code>または<code>y</code>の「呼び出し名」、またはこれらが指定されていない場合は<code>""</code>となる。
7359,色のための有限の数値ブレークポイントのセット：色より1つ多いブレークポイントを持ち、増加する順序でなければならない。  ソートされていないベクトルは、警告を伴って、ソートされます。
7360,論理的。trueの場合、色間隔の中点は等間隔になり、<code>zlim[1]</code>と<code>zlim[2]</code>は中点とみなされた。  デフォルトは、限界の間に等しい長さの色間隔を持つようにする。
7361,logical;もし<code>TRUE</code>なら、ポリゴンの代わりにビットマップラスターがイメージのプロットに使われます。この場合、グリッドは規則的でなければならず、そうでない場合はエラーが発生します。   この指定がない場合の動作については、「詳細」を参照してください。
7362,<code>plot</code>のグラフィックパラメータは、この関数の引数として、プロットの縦横比<code>asp</code>と<code>axes</code>として渡すこともできます(<code>plot.window</code>参照).
7363,出力装置上の次の<i>N</i>個の図形の位置を指定するマトリックスオブジェクト.  行列の各値は、<code>0</code>または正の整数でなければならない。  もし<i>N</i>が行列の中で最大の正の整数であれば，整数<i>{1, ..., N-1}</i> も行列の中で少なくとも一度は現れなければならない。
7364,デバイス上の列の幅を表す値のベクトル.  相対的な幅は数値で指定します。    絶対幅(センチメートル単位)は<code>lcm()</code>関数で指定します(例参照)。
7365,デバイス上の行の高さを表す値のベクトル。相対的な高さと絶対的な高さを指定することができ、上記の<code>widths</code>を参照。
7366,論理値またはマトリックスオブジェクトのいずれか。  後者の場合、<code>mat</code>と同じ寸法を持ち、行列の各値は<code>0</code>または<code>1</code>でなければならない。
7367,プロットする図形の数.
7368,センチメートルの数として解釈される寸法。
7369,出力装置上の次の<i>N</i>個の図形の位置を指定する行列オブジェクト.  行列の各値は、<code>0</code>または正の整数でなければならない。  もし<i>N</i>が行列の中で最大の正の整数であれば、整数<i>{1, ..., N-1}</i> も行列の中で少なくとも一度は現れなければならない。
7370,デバイス上の列の幅を表す値のベクトル.  相対的な幅は、数値で指定される。    絶対幅（センチメートル単位）は<code>lcm()</code>関数で指定します（例参照）。
7371,デバイス上の行の高さを表す値のベクトル。相対的な高さと絶対的な高さを指定することができ、上記の<code>widths</code>を参照してください。
7372,論理値またはマトリックスオブジェクトのいずれか。  後者であれば、<code>mat</code>と同じ寸法を持ち、行列の各値は<code>0</code>または<code>1</code>でなければなりません.
7373,プロットする図形の数.
7374,センチメートルの数として解釈される寸法.
7375,出力装置上の次の<i>N</i>個の図形の位置を指定する行列オブジェクト.  行列の各値は、<code>0</code>または正の整数でなければならない。  もし<i>N</i>が行列の中で最大の正の整数であるならば，整数<i>{1, ..., N-1}</i> も行列の中で少なくとも一度は現れなければならない。
7376,デバイス上の列の幅を表す値のベクトル.  相対的な幅は数値で指定します。    絶対幅(センチメートル単位)は<code>lcm()</code>関数で指定します(例参照)。
7377,デバイス上の行の高さを表す値のベクトル。相対的な高さと絶対的な高さを指定することができ、上記の<code>widths</code>を参照してください。
7378,論理値またはマトリックスオブジェクトのいずれか。  後者であれば、<code>mat</code>と同じ寸法を持ち、行列の各値は<code>0</code>または<code>1</code>でなければなりません.
7379,プロットする図形の数.
7380,センチメートルの数として解釈される寸法。
7381,凡例を配置するために使用されるxとyの座標。それらは、キーワードで指定するか、<code>xy.coords</code>で受け入れられる任意の方法で指定することができる：「詳細」を参照。
7382,凡例に表示する長さ<i>≧1</i>の文字または式ベクトルです。  他のオブジェクトは<code>as.graphicsAnnot</code>によって強制されます.
7383,この引数が指定された場合、指定された色で塗られた（または指定された色で陰影が付けられた）ボックスが凡例テキストの横に表示されます。
7384,凡例に表示される点または線の色。
7385,ボックスのボーダー色（<code>fill</code>が指定された場合のみ使用される）。
7386,凡例に現れる線の種類と幅を指定します。  線描画の場合は、この2つのうちどちらかを指定しなければならない。
7387,凡例に現れるプロットシンボル、数値ベクトルまたは1文字文字列のベクトル(<code>points</code>を参照)。<code>points</code>とは異なり、これはすべて1つの複数文字列として指定することができます。  <em>シンボル描画の場合は必ず指定する必要があります</em>。
7388,陰影線の角度.
7389,濃淡線の密度(数値で正の場合)。<code>NULL</code>または負、<code>NA</code>の場合、色埋めが仮定されます。
7390,凡例の周囲に描かれるボックスの種類を指定します。  許容される値は、<code>"o"</code>(デフォルト)と<code>"n"</code>である。
7391,凡例ボックスの背景色を指定します。  (これは、<code>bty != "n"</code> の場合のみ使用されることに注意してください)。
7392,凡例ボックスの線種、幅、色(<code>bty = "o"</code> の場合).
7393,引数<code>bg</code>に対応する<code>points</code>の背景色.
7394,現在の<code>par("cex")</code>に対する<b>相対的</b>な文字拡張係数。  テキストに使用され、<code>pt.cex</code>のデフォルトを提供します。
7395,点の拡大係数（複数可）.
7396,点の線幅, デフォルトはlinesのもので、設定されていない場合は<code>par("lwd")</code>となります.
7397,凡例が凡例xの位置に対してどのように両端揃えされるかを指定します。  0は左寄せ、0.5は中央寄せ、1は右寄せを意味する.
7398,凡例yの位置に対する<code>xjust</code>と同じです。
7399,水平(x)方向の文字間隔を指定する。
7400,垂直(y)方向の行間についても同様である.
7401,長さ1または2の数値;legendtextの文字列調整。  <code>ラベル</code>がplotmath式である場合のy調整に有用である。
7402,凡例テキストの幅をx (<code>"user"</code>)座標で指定します。  (反転したx軸でも単一の正の数であるべきです。) デフォルトは、<code>strwidth(legend)</code>によって計算された適切な値です。
7403,凡例テキストに使用される色。
7404,凡例テキストに使用されるフォント、<code>text</code>を参照のこと。
7405,論理; <code>TRUE</code>の場合、点と線はマージするが、塗りつぶしたボックスはマージしない。  点と線がある場合、デフォルトは<code>TRUE</code>となる。
7406,logical;もし<code>TRUE</code>なら、<code>legend</code>がどのように魔法の計算を行うかを示す。
7407,論理的.  もし<code>FALSE</code>なら、何もプロットされないが、サイズは返される。
7408,凡例項目を設定する列の数(デフォルトは1、垂直凡例).
7409,論理; <code>TRUE</code>の場合、凡例を垂直ではなく水平に設定する(<code>horiz</code>を指定すると<code>ncol</code>指定が上書きされる).
7410,凡例の最上部に配置されるタイトルを与える文字列または長さ1つの式。  他のオブジェクトは、<code>as.graphicsAnnot</code>によって強制されます。
7411,凡例がキーワードで配置された時のプロット領域に対する割合として、マージンからの挿入距離（複数可）。
7412,与えられた場合、凡例が描かれている間に使用されるグラフィカルパラメータ<code>xpd</code>の値です。
7413,<code>title</code>の色。
7414,<code>title</code>の水平調整: <code>par("adj")</code>のヘルプを参照して下さい。
7415,<code>lty</code>及び/又は<code>lwd</code>を説明するために引く線の長さ(文字幅の単位).
7416,結合する点の座標ベクトル。
7417,プロットのタイプを示す文字; 実際には、<code>plot.default</code>のように<code>type</code>sのいずれかである。
7418,さらにグラフィカルなパラメータ(<code>par</code>を参照)も引数として与えられることがあり、特に、線種、<code>lty</code>、線幅、<code>lwd</code>、色、<code>col</code>、<code>type = "b"</code> では <code>pch</code> です.  また、線の特性<code>lend</code>、<code>ljoin</code>、<code>lmitre</code>があります。
7419,結合する点の座標ベクトル。
7420,プロットのタイプを示す文字; 実際には、<code>plot.default</code>のように<code>type</code>のいずれかを指定します。
7421,さらにグラフィカルなパラメータ(<code>par</code>を参照)も引数として与えられることがあり、特に、線種、<code>lty</code>、線幅、<code>lwd</code>、色、<code>col</code>、<code>type = "b"</code> では <code>pch</code> です。  また、ライン特性<code>lend</code>、<code>ljoin</code>、<code>lmitre</code>がある。
7422,位置決めするポイントの最大数です。  有効な値は 1 から始まる。
7423,<code>"n"</code>,<code>"p"</code>,<code>"l"</code>,<code>"o"</code>のいずれか一つを指定します。<code>"p"</code> または <code>"o"</code> の場合、点はプロットされ、<code>"l"</code> または <code>"o"</code> の場合、点は線によって連結される。
7424,<code>type != "n"</code> の場合、位置をプロットするために使用される追加のグラフィックパラメータ。
7425,プロットするためのデータのベクトルまたはマトリックス。  矢印の数は一致する必要があります。  もしどちらかが欠けていれば、もう一方を<code>y</code>とし、<code>1:n</code>の<code>x</code>ベクトルが使用されます.欠落値（<code>NA</code>s）は許されます。  というのも、<span style="font-family：Courier New, Courier; color：<span style="font: Courier New, Courier; color: #666666;"><b>R</b></span> 4.0.0 から、<code>"Date"</code>などの <code>x</code> と <code>y</code> の <code>class(.)</code>es は通常保存されます.
7426,文字列（長さ1ベクトル）または1文字列のベクトルは、<code>y</code>の各列のプロットのタイプを示す、すべての可能な<code>type</code>sについては<code>plot</code>を参照。  <code>type</code>の最初の文字は最初のプロットを定義し、2番目の文字は2番目のプロットを定義するなど、<code>type</code>の文字は循環します; 例えば、<code>「pl」</code>は点と線のプロットを交互に行います.
7427,線の種類、幅、端のスタイルのベクトル。最初の要素は最初の列、2番目の要素は2番目の列など、たとえすべての列に対して線がプロットされないとしても。線種は、すべてのプロットが描かれるまで、循環的に使用されます。
7428,character文字列または1文字または整数のベクトルで、文字をプロットします。詳細は<code>points</code>を参照してください。  デフォルトは、数字（1〜9、0）、小文字、大文字の順です。
7429,色のベクトル。  色は循環的に使用されます。
7430,文字拡張サイズのベクトル、循環的に使用されます。これは<code>par("cex")</code>の倍数として機能します.  <code>NULL</code>は<code>1.0</code>と等価です.
7431,<code>points</code>のように<code>pch = 21:25</code> で与えられるオープンプロット記号の背景色（塗りつぶし）のベクトル.  デフォルトの<code>NA</code>は、基礎関数<code>plot.xy</code>のものに対応します。
7432,x軸とy軸のタイトル、<code>plot</code>のように。
7433,x軸とy軸の範囲、<code>plot</code>のように。
7434,グラフィカル・パラメータ(<code>par</code>参照)と<code>plot</code>の追加引数、典型的には<code>plot.default</code>もこの関数への引数として供給することができます; <code>panel.first</code> 等も動作します.  したがって、<code>par</code>の下で説明された高レベルのグラフィックス制御引数と<code>title</code>への引数は、この関数に供給されてもよい。
7435,論理的である。  <code>TRUE</code> の場合、<code>points</code> と <code>lines</code> を使用して、現在のプロットに追加される。
7436,論理的。  もし<code>TRUE</code>なら、何が行われたかを1行で記述する。
7437,プロットするためのデータのベクトルまたはマトリックス。  行の数は一致しなければならない。  もしどちらかが欠けていれば、もう一方を<code>y</code>とし、<code>1:n</code>の<code>x</code>ベクトルが使われます。  というのも、<span style="font-family：Courier New, Courier; color：<br>R</b></span> 4.0.0以降、<code>"Date"</code>などの<code>x</code>と<code>y</code>のクラス(.)<code>は通常保持されます。
7438,文字列（長さ1ベクトル）または1文字列のベクトルは、<code>y</code>の各列のプロットのタイプを示す, すべての可能な<code>タイプ</code>sについては、<code>plot</code>を参照。  <code>type</code>の最初の文字は最初のプロットを定義し、2番目の文字は2番目のプロットを定義するなど、<code>type</code>の文字は循環します; 例えば、<code>「pl」</code>は点と線のプロットを交互に行います。
7439,線種、幅、終端スタイルのベクトル。最初の要素は1列目、2番目の要素は2列目など、たとえすべての列で線が描かれないとしても。線種は、すべてのプロットが描かれるまで、循環的に使用されます。
7440,character string or vector of 1-characters or integers for plotting characters, see <code>points</code> for details.The first character is the plotting-character for the first plot, the second for the second, etc.。  デフォルトは数字(1〜9、0)、そして小文字と大文字の順です。
7441,色のベクトル。  色は循環的に使用されます。
7442,文字拡張サイズのベクトル、循環的に使用されます。これは<code>par("cex")</code>の倍数として機能します.  <code>NULL</code>は<code>1.0</code>と等価です.
7443,<code>points</code>のように<code>pch = 21:25</code> で与えられるオープンプロットのシンボルの背景色（塗り）のベクトルです.  デフォルトの<code>NA</code>は、基礎関数<code>plot.xy</code>のものに対応します。
7444,x軸とy軸のタイトル、<code>plot</code>のように。
7445,x軸とy軸の範囲、<code>plot</code>のように。
7446,グラフィカルパラメータ (<code>par</code> を参照) と <code>plot</code> のその他の引数 (典型的には <code>plot.default</code>) もこの関数の引数として与えることができます; <code>panel.first</code> 等も動作します.  したがって、<code>par</code>の下で説明された高レベルのグラフィックス制御引数と<code>title</code>への引数は、この関数に供給されてもよい。
7447,論理的である。  <code>TRUE</code> の場合、<code>points</code> と <code>lines</code> を使用して、現在のプロットに追加されます(プロット)。
7448,論理的。  <code>TRUE</code>の場合、何が行われたかを1行で記述する。
7449,プロットするためのデータのベクトルまたはマトリックス。  行の数は一致しなければならない。  もしどちらかが欠けていれば、もう一方を<code>y</code>とし、<code>1:n</code>の<code>x</code>ベクトルが使われます。  というのも、<span style="font-family：Courier New, Courier; color：<span style="font: Courier New, Courier; color: #666666;"><b>R</b></span> 4.0.0 から、<code>"Date"</code>などの <code>x</code> と <code>y</code> の <code>class(.)</code>es は通常保存されます.
7450,文字列（長さ1ベクトル）または1文字列のベクトルは、<code>y</code>の各列のプロットのタイプを示します.  <code>type</code>の最初の文字は最初のプロットを定義し、2番目の文字は2番目のプロットを定義するなど、<code>type</code>の文字は循環します; 例えば、<code> "pl"</code> は点と線のプロットを交互に行います。
7451,線種、幅、終端スタイルのベクトル。最初の要素は最初の列、2番目の要素は2番目の列など、たとえすべての列に対して線がプロットされないとしても、です。線種は、すべてのプロットが描かれるまで、循環的に使用されます。
7452,character文字列または1文字または整数のベクトルで、文字をプロットするためのものです。  デフォルトは数字（1〜9、0）、小文字、大文字の順です。
7453,色のベクトル。  色は循環的に使用されます。
7454,文字拡張サイズのベクトル、循環的に使用されます。これは<code>par("cex")</code>の倍数として機能します.  <code>NULL</code>は<code>1.0</code>と等価です.
7455,<code>points</code>のように<code>pch = 21:25</code> で与えられるオープンプロットのシンボルの背景色（塗り）のベクトルです.  デフォルトの<code>NA</code>は、基礎関数<code>plot.xy</code>のものに対応します。
7456,x軸とy軸のタイトル、<code>plot</code>のように。
7457,X軸とY軸の範囲、<code>plot</code>のように。
7458,グラフィカルパラメータ (<code>par</code> 参照) と <code>plot</code> の追加引数 (典型的には <code>plot.default</code>) もこの関数への引数として与えられるかもしれません; <code>panel.first</code> 等も動作します.  したがって、<code>par</code>の下で説明された高レベルのグラフィックス制御引数と<code>title</code>への引数は、この関数に供給されてもよい。
7459,論理的である。  <code>TRUE</code> の場合、<code>points</code> と <code>lines</code> を用いて、現在のプロットに追加されます。
7460,論理的。  もし<code>TRUE</code>なら、何が行われたかを1行で記述する。
7461,配列形式の分割表で、<code>dimnames(x)</code>属性で指定された任意のカテゴリーラベルがあります。  このテーブルは、<code>table()</code>コマンドで作成するのが最適です。
7462,モザイクのタイトルの文字列。
7463,モザイクのサブタイトル(下)の文字列.
7464,プロットに使用するX軸とY軸のラベル。デフォルトでは、<code>names(dimnames(X))</code>の第1と第2の要素（すなわち、<code>X</code>の第1と第2の変数の名前）である。
7465,変数の並び順のベクトルで、整数<code>1:length(dim(x))</code>（デフォルト）の順列を含んでいます。
7466,モザイクの各レベルの間隔を決定するオフセットのベクトル(適切な値は0から20で、デフォルトは2次元テーブルの分割数の20倍、それ以外は10)。  最大で50にリスケーリングされ、必要に応じてリサイクルされる。
7467,モザイクの各レベルの分割方向（<code>"v"</code>は垂直方向、<code>"h"</code>は水平方向）のベクトルで、分割表の各次元に対して1方向ずつです。  デフォルトは、垂直方向の分割から始まる交互の方向で構成されています。
7468,論理または（リサイクル）カラーシェーディングのための色のベクトル、<code>shade</code>が<code>FALSE</code>または<code>NULL</code>（デフォルト）の場合にのみ使用されます.  デフォルトでは、グレーのボックスが描画されます。  <code>color = TRUE</code>は、ガンマ補正されたグレーパレットを使用します。  <code>color = FALSE</code>は、シェーディングのない空のボックスを描きます。
7469,拡張モザイクプロットを作成するかどうかを示す論理、または残差のカットポイントの絶対値を与える最大5つの明確な正数からなる数値ベクトルです。  デフォルトでは、<code>shade</code>は<code>FALSE</code>で、単純なモザイクが作成されます。  <code>shade = TRUE</code>を使用すると、2および4で絶対値がカットされます。
7470,対数線形モデルでフィットさせるマージナルトータルを持つベクトルのリストです。  デフォルトでは独立モデルが適用されます。詳細は<code>loglin</code>を参照してください。
7471,軸の注釈に使用する倍率を<code>par("cex")</code>の倍数として指定します。
7472,数値; 軸ラベルのスタイル、<code>par</code>を参照してください.
7473,セルの境界の色: <code>polygon</code>を参照して下さい.
7474,表現される残差のタイプを示す文字列.  <code>"pearson"</code>(ピアソンの<i>カイ二乗</i>の成分を与える)、<code>"deviance"</code>(尤度比<i>カイ二乗</i>の成分を与える)、Freeman-Tukey残差については<code>"FT" </code> のいずれかでなければなりません.  この引数の値は省略可能である。
7475,数式、例えば<code>y ~ x</code>.
7476,データフレーム（またはリスト）、または分割表で、<code>formula</code>の変数から取得する必要があります。
7477,メソッドに渡される、またはメソッドから渡される追加の引数。
7478,プロットに使用するデータフレーム内のオブザベーションのサブセットを指定するオプションのベクトル。
7479,データがクロス集計する変数を含み、これらの変数が<code>NA</code>を含む場合、何が起こるかを示す関数です。  デフォルトでは、いずれかの変数に<code>NA</code>が含まれるケースは省略されます。  集計は欠損値を含むすべてのケースを省略するので、これは<code>na.action</code>関数が欠損値を置き換える場合にのみ有用である。
7480,書き込まれる<em>テキスト</em>を指定する文字または式ベクトルです。  他のオブジェクトは<code>as.graphicsAnnot</code>で強制される。
7481,プロットのどの側か（1=下、2=左、3=上、4=右）。
7482,どのMARGIN線上に、0から始めて外側にカウントします。
7483,可能であれば外側の余白を使用する。
7484,各文字列の位置をユーザー座標で指定する.  特定のテキストアイテムに対応する<code>at</code>の成分が有限の値でない場合（デフォルト）、その位置は<code>adj</code>によって決定されることになる。
7485,読み方向の各文字列の調整。  軸に平行な文字列の場合、<code>adj = 0</code>は左またはボトムアライメントを意味し、<code>adj = 1</code>は右またはトップアライメントを意味しています。

7486,<code>adj</code>が有限の値でない場合（デフォルト）、<code>par("las")</code>の値で調整が決定されます。  軸に平行にプロットされた文字列の場合、デフォルトは文字列の中央に配置されます。
7487,読書方向に垂直な各文字列の調整(これは<code>adj</code>で制御されます)。  軸に平行な文字列の場合、<code>padj = 0</code> は右または上のアライメントを、<code>padj = 1</code> は左または下のアライメントを意味しています。

7488,<code>padj</code>が有限の値（デフォルト）でない場合、<code>par("las")</code>の値で調整が決定されます。  軸に垂直にプロットされた文字列の場合、デフォルトは文字列の中央に配置されます。
7489,文字拡大係数。  <code>NULL</code> と <code>NA</code> は <code>1.0</code> と同等です。  これは絶対的な尺度であり、<code>par("cex")</code>や<code>par("mfrow")</code>や<code>par("mfcol")<code>の設定によってスケールされない。  ベクターでも可。
7490,使用する色。  ベクトルでも可。  <code>NA</code>の値(デフォルト)は、<code>par("col")</code>を使用することを意味します。
7491,テキスト用フォント.  ベクトルでも可。  <code>NA</code>値(thedefault)は、<code>par("font")</code>を使用することを意味します。
7492,その他のグラフィックパラメータ(<code>par</code>を参照), <code>family</code>, <code>las</code>, <code>xpd</code> を含む.(後者は、<code>outer = TRUE</code>でない限り、図の領域がデフォルトで、それ以外の場合はデバイスの領域となります。  増やすことしかできない)
7493,マトリックスまたはデータフレームの数値列として与えられた点の座標。  論理列と因子列は、<code>data.matrix</code>が行うのと同じ方法で数値に変換されます。
7494、<code>~ x + y + z</code>のような数式です。  各項はペアプロットで別々の変数を与えるので、項は数値ベクトルであるべきです。  (応答は別の変数として解釈されるが、特別な扱いはされないので、1つを使用すると混乱する)。
7495,data.frame(またはリスト)で、<code>formula</code>の変数を取得する必要があります。
7496,プロットに使用する観測値のサブセットを指定するオプションのベクトル.
7497,データに<code>NA</code>が含まれる場合にどうするかを示す関数です。  デフォルトでは、パネル関数に欠損値を渡しますが、<code>na.action = na.omit</code> は、いずれかの変数に欠損値がある場合、完全に省略されるようにします。
7498,変数の名前。
7499,<code>function(x,y,・・・)</code>は、ディスプレイの各パネルの内容をプロットするために使用されるものです。
7500,メソッドに渡す、またはメソッドから渡される引数。

7501,また、<code>plot</code>の引数として、<code>main</code>のようなグラフパラメータを与えることができます。  <code>par("oma")</code>は指定されない限り、適切に設定されます。
7502,横軸と縦軸にそれぞれプロットされる変数の（数値）インデックス。
7503,対角線の下と上でそれぞれ使用される別々のパネル関数(または<code>NULL</code>)。
7504,オプションの<code>function(x, ...)</code>は対角線上に適用される。
7505,オプション <code>function(x、y、labels、cex、font、...)</code>を対角線上に適用する。
7506,<code>y</code>テキストパネル内のラベルの位置。
7507,<code>main</code>が指定された場合、<code>line.main</code>はタイトルを描く<code>mtext()</code>に<code>line</code>引数を与える。  <code>line.main</code>を変更する際には、<code>oma</code>を指定するとよいでしょう。
7508,テキストパネル用のグラフィックパラメータ。
7509,論理的である。  レイアウトは、1行目を上にしたマトリックス状にするか、1行目を下にしたグラフ状にするか。  後者(nondefault)は、基本的に対称な散布図行列になります。
7510,サブプロット間の距離(マージンライン)。
7511,対数軸を使用するかどうかを示す文字列。<code>plot.default</code>参照 <em>または</em> xとyの両方で対数軸を使用すべき変数のインデックスを指定するインデックスの数値ベクトル。 <code>log = "xy"</code> すべての変数に対して対数軸を指定する。
7512,<code>logical</code>（または整数）は、水平軸と垂直軸のラベリングがどのように行われるかを決定します。  trueの場合、軸のラベリングはそれぞれ最初の(左上から)行または列から始まる。
7513,マトリックスまたはデータフレームの数値列として与えられた点の座標を指定します。  論理列と因子列は、<code>data.matrix</code>が行うのと同じ方法で数値に変換されます。
7514,<code>〜 x + y + z</code>のような数式を指定します。  各項はペアプロットで別々の変数を与えるので、項は数値ベクトルであるべきです。  (応答は別の変数として解釈されるが、特別な扱いはされないので、1つを使用すると混乱する)。
7515,data.frame(またはリスト)で、<code>formula</code>の変数を取得する必要があります。
7516,プロットに使用する観測値のサブセットを指定するオプションのベクトル.
7517,データに<code>NA</code>が含まれる場合にどうするかを示す関数です。  デフォルトでは、パネル関数に欠損値を渡しますが、<code>na.action = na.omit</code> は、いずれかの変数に欠損値がある場合、完全に省略するようにします。
7518,変数の名前。
7519,<code>function(x,y,・・・)</code>は、ディスプレイの各パネルの内容をプロットするために使用されるものです。
7520,メソッドに渡す、またはメソッドから渡される引数。

7521,また、<code>plot</code>の引数として、<code>main</code>のようなグラフパラメータを与えることができます。  <code>par("oma")</code>は指定がない限り、適切に設定されます。
7522,横軸と縦軸にそれぞれプロットされる変数の（数値）インデックスを指定します。
7523,対角線の下と上でそれぞれ使用する別々のパネル関数(または<code>NULL</code>)を指定します。
7524,オプションの<code>function(x, ...)</code>は対角線上に適用されます。
7525,オプション <code>function(x、y、labels、cex、font、...)</code>を対角線上に適用します。
7526,<code>y</code>テキストパネル内のラベルの位置。
7527,<code>main</code>が指定された場合、<code>line.main</code>はタイトルを描く<code>mtext()</code>に<code>line</code>引数を与える。  <code>line.main</code>を変更する際には、<code>oma</code>を指定するのがよいかもしれません。
7528,テキストパネル用のグラフィックパラメータ。
7529,論理的です。  レイアウトは、1行目が上にあるマトリックス状にするか、1行目が下にあるグラフ状にするか。  後者(nondefault)は基本的に対称的な散布図行列をもたらします。
7530,サブプロット間の距離、マージンライン単位。
7531,対数軸を使用するかどうかを示す文字列。<code>plot.default</code>参照 <em>または</em> xとyの両方で対数軸を使用すべき変数のインデックスを指定するインデックスの数値ベクトル <code>log = "xy"</code> すべての変数に対して対数軸を指定する.
7532,<code>logical</code>（または整数）は、水平軸と垂直軸のラベリングがどのように行われるかを決定します。  trueの場合、軸のラベリングはそれぞれ最初の（左上から）行または列から開始されます。
7533,同じ長さの数値ベクトル
7534,<code>ポイントの色、ポイントタイプ、サイズを表す数値または文字コード; <code>par</code>も参照。
7535,スムージングの描画に<code>lines</code>で使用される色。
7536,<code>lowess</code>のスムージングパラメータ<code>f</code>, こちらを参照。
7537,<code>lowess</code>のロバストネス反復回数(Robustness Iterations)。
7538,<code>lines</code>のさらなる引数。
7539,<code>タグ = 値</code>形式の引数、またはタグ付き値のリスト。  タグは'グラフィカルパラメータ'セクションで説明されたグラフィカルパラメータの名前から来るものでなければならない。
7540,logical; <code>TRUE</code>で他の引数がない場合、同じデバイスで<em>par()</code>を呼び出すことで設定できるパラメータのみが返されます。
7541,<code>z</code>の値が測定されたグリッド線の位置。  これらは昇順でなければなりません。  デフォルトでは、0から1までの等間隔な値が使用されます。  <code>x</code> が <code>list</code> の場合、その成分 <code>x$x</code> と <code>x$y</code> はそれぞれ <code>x</code> と <code>y</code> に使われます。
7542,プロットされる値を含む行列 (<code>NA</code>s areallowed).  なお、便宜上、<code>z</code>の代わりに<code>x</code>を使用することができる。
7543,x-,y-,z-リミットを指定します。  これらはサーフェスの値の範囲をカバーするように選択されるべきです: '詳細'を参照してください.
7544,軸のタイトル.  注：これらは文字列でなければなりません；式は受け付けられません。  数値は文字列に強制されます。
7545,メインタイトルとサブタイトル、<code>title</code>の場合と同様です。
7546,見る方向を定義する角度。<code>theta</code>は方位角を、<code>phi</code>は北緯を示す。
7547,プロットボックスの中心からのアイポイントの距離.
7548,透視変換の強さを変化させるために使用できる値です。  <code>d</code>の値が1より大きいとパースペクティブ効果が弱くなり、1より小さいとパースペクティブ効果が誇張されます。
7549,表示前に、表面を定義する点のx、y、z座標は、間隔[0,1]に変換されます。  <code>scale</code> が <code>TRUE</code> の場合、x, y, z座標は別々に変換されます。  <code>scale</code>が<code>FALSE</code>の場合、座標はアスペクト比を保持するようにスケーリングされます。これは、DEM情報のようなものをレンダリングするのに便利です。
7550,<code>z</code>座標に適用される拡大係数です。<code>0 &lt; expand &lt; 1</code> と共に使用すると、プロットボックスを<code>z</code>方向に縮小することができます。
7551,表面のファセットの色です。  透明な色は無視されます。  これは<i>(nx-1)(ny-1)</i>ファセットにリサイクルされます。
デフォルトの<code>NULL</code>は<code>par("fg")</code>に対応します。<code>NA</code>の値は境界線を描かないようにします：これは表面が陰になっている場合に役立つことがあります.
7553,<code>lheta</code>と<code>lphi</code>に有限の値が指定された場合、方位<code>lheta</code>と子午線<code>lphi</code>で指定した方向から照射されているかのように表面はシェーディングする。
7554,表面ファセットでの陰影は<code>((1+d)/2)^shade</code>として計算され、<code>d</code>はファセットに垂直な単位ベクトルと光源の方向の単位ベクトルのドットプロダクトである。  <code>shade</code>の値が1に近いと点光源モデルに近いシェーディングが得られ、0に近いとシェーディングが得られない。  0.5から0.75の範囲の値は、昼間の照明に近似しています。
7555,サーフェスのバウンディングボックスを表示するかどうか。デフォルトは<code>TRUE</code>です。
7556,ボックスに目盛りとラベルを追加するかどうか。  デフォルトは<code>TRUE</code>です。  もし<code>box</code>が<code>FALSE</code>なら、刻み目やラベルは描かれない。
7557,文字です：<code>"simple"</code>は増加方向を示す軸と平行な矢印だけを描きます。<code>"detailed"</code>は2Dプロットのように通常の刻み目を描きます。
7558,軸に描く目盛りの数(概算)を指定します。  <code>ticktype</code> が <code>"simple"</code> の場合、効果はありません.
7559,追加のグラフィックパラメータ(<code>par</code>を参照).
7560,非負の数値のベクトル。<code>x</code>の値は、パイスライスの面積として表示されます。
7561,スライスの名前を与える1つ以上の式または文字列。  その他のオブジェクトは<code>as.graphicsAnnot</code>で強制されます。  空または<code>NA</code>（文字への強制の後）ラベルの場合、ラベルもポインティングラインも描かれない。
7562,パイの円形の輪郭は、この数の辺を持つ多角形によって近似される。
7563,パイは、<i>-1</i>から<i>-1</i>までの範囲の正方形の箱の中心に描かれます。  スライスを示す文字列が長い場合、より小さな半径を使用する必要があるかもしれない。
7564,スライスを時計回りか反時計回り(つまり数学的に正の方向)に描くかを示す論理値、後者がデフォルト。
7565,スライスの<em>開始角度</em>(indegrees)を指定する数値。<code>clockwise</code>が真で、<code>init.angle</code>が90度(12時)をデフォルトとしない限り、デフォルトは0(3時)である。
7566,シェーディングラインの密度を1インチあたりのラインで指定します。デフォルト値の<code>NULL</code>は、シェーディングラインを描かないことを意味します。また、<code>density</code>の値が正でない場合は、シェーディングラインの描画が抑制されます。
7567,シェーディングラインの勾配を、反時計回りの角度で指定します。
7568,スライスの塗りつぶしや陰影付けに使用される色のベクトルです。もし見つからない場合は、<code>par("fg")</code>が使われたときに<code>density</code>が指定されない限り、6つのパステルカラーのセットが使われます。
7569,各スライスを描画する<code>polygon</code>に渡される引数（ベクターもあり）。
7570,プロットの全体的なタイトルを指定します。
7571,グラフィカルパラメータは<code>pie</code>に引数として与えることができます。  それらはメインタイトルとラベルにのみ影響します。
7572,<code>x</code>と<code>y</code>の引数はプロットのxとy座標を提供します。  座標を定義する合理的な方法であれば何でもよい。  詳しくは関数 <code>xy.coords</code> を参照してください。  別々に提供される場合、それらは同じ長さでなければなりません。
7573,希望するプロットの種類を示す1文字の文字列。  詳細は<code>plot</code>を参照してください：<code>"p"</code> は点、<code>"l"</code> は線、<code>"b"</code> は点と線の両方、<code>"c"</code> は線に囲まれた空の点、<code>"o"</code> は点と線のオーバープロット、<code>"s"</code> と <code>"S"</code> は階段、<code>"h"</code> は縦線に似たヒストグラム、です。  最後に、<code>"n"</code>はポイントもラインも生成しない。
7574,プロットのx限界(x1, x2)を指定します。  <code>x1 &gt; x2</code>は許容され、「逆軸」をもたらすことに注意してください。

7575,デフォルト値の<code>NULL</code>は、プロットする無限大の値の範囲を使用することを示します。
7576,プロットのy限界値。
7577,x軸が対数の場合は<code>"x"</code>、y軸が対数の場合は<code>"y"</code>、両軸が対数の場合は<code>"xy"</code>または<code>"yx"</code>を含む文字列.
7578,プロットのメインタイトル、<code>title</code>も参照して下さい。
7579,プロットのサブタイトル.
7580,x軸のラベル、デフォルトは<code>x</code>の記述です.
7581,y軸のラベル、デフォルトは<code>y</code>の説明です.
7582,デフォルトの注釈（タイトル、x軸とy軸のラベル）がプロットに表示されるべきかどうかを示す論理値です.
7583,プロット上に両軸を描画するかどうかを示す論理値です。  片方の軸だけを抑制するには、グラフィカルパラメータ<code>"xaxt"</code>または<code>"yaxt"</code>を使用します。
7584,プロットの周囲にボックスを描画するかどうかを示す論理です。
7585,プロット軸が設定された後、プロットが行われる前に評価される「式」です。  これは、背景の格子や散布図の平滑化を描くのに便利です。  他の<code>plot</code>メソッドからこの引数を渡すと、早く評価されすぎてしまうため、うまくいかないかもしれません。
7586,プロットが行われた後、軸、タイトル、ボックスが追加される前に評価される式です。  <code>panel.first</code>に関するコメントを参照してください。
7587,<i>y/x</i>のアスペクト比、<code>plot.window</code>を参照してください。
7588,<i>x/y</i>軸のギャップ係数。<code>gap.axis</code>として2つの<code>axis()</code>呼び出しに渡されます（デフォルトで<code>axes</code>が真の時）。
7589,その他のグラフィックパラメータ(下記の<code>par</code>と「詳細」セクションを参照).
7590,<code>x</code>と<code>y</code>は、プロットのためのxとy座標を提供します。  座標を定義する合理的な方法であれば何でもよい。  詳しくは関数 <code>xy.coords</code> を参照してください。  別々に提供される場合、それらは同じ長さでなければなりません。
7591,希望するプロットの種類を示す1文字の文字列。  詳細は<code>plot</code>を参照してください：<code>"p"</code> は点、<code>"l"</code> は線、<code>"b"</code> は点と線の両方、<code>"c"</code> は線に囲まれた空の点、<code>"o"</code> は点と線のオーバープロット、<code>"s"</code> と <code>"S"</code> は階段、<code>"h"</code> は縦線に似たヒストグラム、です．  最後に、<code>"n"</code>は点にも線にもならない。
7592,プロットのx限界値(x1, x2)を指定します。  <code>x1 &gt; x2</code>は許容され、「逆軸」をもたらすことに注意してください。

7593,デフォルト値の<code>NULL</code>は、プロットする無限大の値の範囲を使用することを示します。
7594,プロットのy限界値。
7595,x軸が対数の場合は<code>"x"</code>、y軸が対数の場合は<code>"y"</code>、両軸が対数の場合は<code>"xy"</code>または<code>"yx"</code>を含む文字列.
7596,プロットのメインタイトル、<code>title</code>も参照して下さい。
7597,プロットのサブタイトル.
7598,x軸のラベル、デフォルトは<code>x</code>の記述です。
7599,y軸のラベル、デフォルトは<code>y</code>の説明です.
7600,デフォルトの注釈（タイトル、x軸とy軸のラベル）がプロットに表示されるべきかどうかを示す論理値です。
7601,プロット上に両軸を描画するかどうかを示す論理値です。  片方の軸だけを表示させないようにするには、グラフィカルパラメータ<code>"xaxt"</code>または<code>"yaxt"</code>を使用します。
7602,プロットの周囲にボックスを描画するかどうかを示す論理です。
7603,プロット軸が設定された後、プロットが行われる前に評価される'式'です。  これは、背景の格子や散布図の平滑化を描くのに便利です。  他の<code>plot</code>メソッドからこの引数を渡すと、早く評価されすぎてしまうため、うまくいかないかもしれません。
7604,プロットが行われた後、軸、タイトル、ボックスが追加される前に評価される式です。  <code>panel.first</code>に関するコメントを参照してください。
7605,<i>y/x</i>のアスペクト比、<code>plot.window</code>を参照のこと。
7606,<i>x/y</i>軸のギャップ係数。<code>gap.axis</code>として2つの<code>axis()</code>呼び出しに渡されます（デフォルトで<code>axes</code>が真の場合）。
7607,その他のグラフパラメータ(下記の<code>par</code>と「詳細」セクションを参照).
7608,設計因子と任意で応答を含むデータフレーム、または<code>formula</code>または<code>terms</code>オブジェクトのどちらか。
7609,応答(xで与えられていない場合).
7610,各サブセットに適用される関数（またはその名前）。  これは、数値（ベクトル）入力に対して1つの数値を返さなければならない。
7611,<code>x</code>で参照される変数を含むデータフレームで、それが数式的である場合。
7612,<code>col</code>のようなグラフパラメータは、<code>par</code>を参照して下さい。
7613,y値の範囲、<code>plot.default</code>のように。
7614,x軸ラベル, <code>title</code>を参照.
7615,y軸ラベル、'スマート'なデフォルトを持つ。
7616,メインタイトル, <code>title</code>を参照.
7617,新しいページが開始される前にユーザーに尋ねるべきかどうかを示す論理 - 複数のyの場合.
7618,x軸の種類を示す文字。
7619,軸が描かれるべきかどうかを示す論理的なものである。
7620,X軸に目盛りを付けるかどうかを示す論理です(1つの要素につき1つ)。
7621,関数の名前、または<code>x</code>の関数として書かれた呼び出しや式で、<code>x</code>と同じ長さのオブジェクトに評価される。
7622,「ベクトル化」する数値<span style="font-family：Courier New, Courier; color：#666666;"><b>R</b></span> 関数です。
7623,<code>plot</code>との互換性のために<code>from</code>のエイリアス。
7624,関数がプロットされる範囲。
7625,integer;評価するx値の数を指定します。
7626,logical; if <code>TRUE</code> add to already existing plot; if<code>NA</code> start a new plot taking the defaults for the limits andlog-scaling of the x-axis from the previous plot.  nographicsデバイスが開いている場合、<code>FALSE</code>として扱われます（異なる値が供給された場合、警告が表示されます）。
7627,<code>NULL</code>または長さ2の数値ベクトル。<code>NULL</code>でない場合、<code>c（from, to）</code>のデフォルトを提供し、<code>ad = TRUE</code> でない場合、プロットのx-limitsを選択する - <code>plot.window</code> を参照して下さい。
7628,プロットタイプ: <code>plot.default</code>を参照して下さい.
7629,x軸に使用される名前を与える文字列.
7630,ラベルとグラフパラメータは、引数として指定することもできます。  <code>log</code>のデフォルトの解釈については'詳細'を参照して下さい。

7631,<code>plot</code>の<code>"function"</code>メソッドでは、<code>...</code>には<code>expr</code>以外の<code>curve</code>の引数を含むことができます。
7632,長さ2の数値ベクトル,xとyの座標範囲を与える.
7633,character;どの軸が対数スケールであるべきかを示す。
7634,数値, <b>asp</b>ect ratio y/xを与える,「詳細」を参照。
7635,<code>par</code>のような更なるグラフィカルパラメータ。関連するものは、<code>xaxs</code>, <code>yaxs</code>と<code>lab</code>です。
7636,4要素リストは<code>xy.coords</code>の結果である。
7637,1文字コード: <code>plot.default</code> を参照。<code>NULL</code> は <code>"p"</code> の同義語として扱われます。
7638,点の種類を表す文字または整数コード、<code>points.default</code>を参照.
7639,線種コード, <code>lines</code>を参照.
7640,色コードまたは色名, <code>colors</code>,<code>palette</code> を参照のこと.  ここでは、<code>NULL</code>は色0を意味する。
7641,開いたプロットシンボル21:25の背景(塗り)色:<code>points.default</code>を参照して下さい.
7642,文字の拡大。
7643,線幅、(非塗りつぶし)プロットシンボルにも使用され、<code>lines</code>と<code>points</code>を参照してください。
7644,<code>xpd</code>,<code>lend</code>,<code>ljoin</code>,<code>lmitre</code>などのさらなるグラフィック・パラメータ。
7645,プロットする点の座標ベクトル。
7646,プロットのタイプを示す文字; 実際には、<code>plot.default</code>のように<code>type</code>のいずれかである。
7647,さらにグラフィカルなパラメータを引数として与えることもできる。  詳細'を参照。
7648,プロットする点の座標ベクトル。
7649,プロットのタイプを示す文字; 実際には <code>plot.default</code> にあるような <code>type</code>s のいずれかである。
7650,さらにグラフィカルなパラメータを引数として与えることができる。  詳細'を参照のこと。
7651,ポリゴンの頂点の座標を含むベクトル。
7652,シェーディングラインの密度を1インチあたりのライン数で指定します。  デフォルト値の<code>NULL</code>は、シェーディングラインが描かれないことを意味します。<code>density</code>のゼロ値は、シェーディングも塗りもしないことを意味し、負の値や<code>NA</code>は、シェーディング（つまり色塗りを許す）を抑制します。
7653,シェーディングラインの勾配を度単位で指定します(反時計回り)。
7654,ポリゴンを塗りつぶす色を指定します。デフォルトの<code>NA</code>は、<code>density</code>が指定されない限り、ポリゴンを塗りつぶさないようにするものです。  (互換性のため、<code>NULL</code>は<code>NA</code>と同等です。) <code>density</code>が正の値で指定されると、これは陰線の色となります。
7655,ボーダーを描画する色。  デフォルトの<code>NULL</code>は、<code>par("fg")</code>を使用することを意味します。  ボーダーを描かないためには、<code>border = NA</code>を使用します。

7656,Sとの互換性のために、<code>border</code>は論理的でもよく、その場合、<code>FALSE</code>は<code>NA</code>（ボーダー省略）と同等で、<code>TRUE</code>は<code>NULL</code>（前景色使用）と同等です、
7657,<code>par</code>のように使用される線種.
7658,<code>xpd</code>、<code>lend</code>、<code>ljoin</code>、<code>lmitre</code>などのグラフィックパラメータは引数として与えることができる。
7659,ポリゴンシェーディングモードを制御する論理：詳細は下記を参照して下さい。  デフォルトは<code>FALSE</code>です。
7660,パスの頂点の座標を含むベクター.
7661,パスを塗りつぶすための色。デフォルトは<code>NA</code>で、パスは塗りつぶされないままです。
7662,境界線を描画する色。  デフォルトの<code>NULL</code>は、<code>par("fg")</code>を使用することを意味します。  ボーダーを描かないようにするには、<code>border = NA</code> を使用します。

7663,Sとの互換性のために、<code>border</code>は論理的でもよく、その場合、<code>FALSE</code>は<code>NA</code>（ボーダー省略）と同等で、<code>TRUE</code>は<code>NULL</code>（前景色使用）と同等です、
7664,使用する線種を<code>par</code>のように指定します。
7665,パスの塗りつぶしモードを指定する文字値: <code>"winding"</code>または<code>"evenodd"</code>のいずれか.
7666,引数として<code>xpd</code>, <code>lend</code>,<code>ljoin</code>,<code>lmitre</code>などのグラフィックパラメータを与えることができます.
7667,<code>raster</code>オブジェクト、または<code>as.raster</code>によって1つに強制されることができるオブジェクト。
7668,左x位置のベクトル(またはスカラー).
7669,底辺のy位置のベクトル(またはスカラー)です。
7670,右x位置のベクトル(またはスカラー)。
7671,上端y位置のベクトル(またはスカラー)。
7672,回転角度（度数、正のX軸から反時計回りに、左下隅を中心に）。
7673,描画時に画像に線形補間を適用するかどうかを示す論理ベクトル（またはスカラ）。
7674,グラフィックパラメータ。
7675,左x位置のベクトル(またはスカラ)。
7676,底面y位置のベクトル(またはスカラー)です。
7677,右x位置のベクトル(またはスカラー)。
7678,上端y位置のベクトル(またはスカラー)です。
7679,シェーディングラインの密度(ライン/インチ)。デフォルト値の<code>NULL</code>はシェーディングラインを描かないことを意味し、<code>density</code>のゼロ値はシェーディングラインなしを意味し、負の値（および <code>NA</code> ）はシェーディング（したがって色充填を許す）を抑止します.
7680,シェーディングラインの角度(度)を指定します。
デフォルトの <code>NA</code> (または <code>NULL</code>) は、<code>density</code> が指定されない限り、充填しない、すなわち、透明な矩形を描くことを意味します。
7682,矩形の縁取りの色(複数可)。  デフォルトは<code>par("fg")</code>となります。  網掛け線がある場合、<code>border = TRUE</code>は、網掛け線と同じ色を枠に使用することを意味します。
7683,ボーダーとシェーディングの線種; デフォルトは <code>"solid"</code> です.
7684,ボーダーとシェーディングの線幅を指定します。  <code>lwd=0</code>の使用(例のように)は、デバイスに依存することに注意してください。
7685,<code>xpd</code>、<code>lend</code>、<code>ljoin</code>、<code>lmitre</code>などのグラフィックパラメータは引数として与えることができる。
7686,数値ベクトル
7687,ラグを構成する刻みの長さ。正の長さは内側への刻みを意味する。
7688,ラグをプロットボックスのどの側にプロットするか。通常、1（下）または3（上）です。
7689,目盛りの線幅を指定します。  デバイスによっては、デフォルトの幅を<code>1</code>に丸めるものもあります。
7690,目盛りをプロットする色を指定します。
7691,クリップした値について警告を出すかどうかを示す論理です.
7692,ラグの位置を指定するための<code>line</code>や<code>pos</code>など、<code>axis</code>に渡される追加の引数.
7693,画面行列<em>または</em>の行と列の数を記述する2要素ベクトル。行列の場合、各行は画面の左、右、下、上（この順）の値をNDC単位で記述し、デバイス表面の左下隅では0、右上隅では1であることを示しています。
7694,分割する画面を指定する番号です。  デフォルトは、現在のスクリーンがあればそのスクリーン、なければデバイスの全領域です。
7695,論理：選択された画面を消去するか？
7696,描画(<code>screen</code>)、消去(<code>erase.screen</code>)、閉じる(<code>close.screen</code>)にどの画面を準備するかを示す数。  (<code>close.screen</code>は、スクリーン番号のベクトルを受け取ります)。
7697,スクリーンに描画するための準備の一部として、スクリーンをビアリースすべきかどうかを示す論理値。
7698,全てのスクリーンを閉じるべきかどうかを示す論理的な値。
7699,描画する点の座標を示す。
7700,描画する点の座標<b>to</b>を指定する。  少なくとも1つは供給されなければならない。
7701,<code>par</code>にあるようなグラフィック・パラメータ、場合によってはベクター。  <code>col</code>の<code>NA</code>値は、セグメントを省略する原因となる。
7702,さらなるグラフィックパラメータ（<code>par</code>から）、例えば<code>xpd</code>及びライン特性<code>lend</code>、<code>ljoin</code>及び<code>lmitre</code>である。
7703、<code>x</code>と<code>y</code>の引数は、プロットのためのxとy座標を提供します。  座標を定義する合理的な方法であれば、どのようなものでもよい。  詳しくは関数 <code>xy.coords</code> を参照してください。  別々に提供される場合、それらは同じ長さでなければなりません。
7704,密度推定のための等間隔のグリッド点の数を指定する長さ1（両方向）または2（xとy別々に）の数値ベクトル; <code>bkde2D()</code> の<code>gridsize</code>として直接使用します.
7705,平滑化帯域幅の数値ベクトル(長さ1または2).不足すると, 多少なりとも有用なデフォルトが使用されます.<code>bandwidth</code>は、その後、関数<code>bkde2D</code>に渡されます.
7706,整数<code>n</code>を引数にとり、<code>n</code>色を返す関数です。
7707,密度画像に重ね合わせる点の数。  最も密度の低い領域から最初の<code>nrpoints</code>点がプロットされます。  プロットにポイントを追加することで、異常値を識別することができます。  すべてのポイントをプロットする場合は、<code>nrpoints = Inf</code>を選択します。
7708,<code>nrpoints &gt; 0</code> の場合、「低密度」点の順序付けられたインデックスを返すことを示す <code>logical</code>.
7709,<code>nrpoints&gt; 0</code>の時、<code>points</code>に渡される引数：点記号、文字拡大係数、色、<code>par</code>も参照。
7710,濃度スケールをカラースケールにマッピングする関数です。
7711,<code>NULL</code>または<code>image</code>の後に(引数無しで)呼び出される関数のいずれか.
7712,軸ラベルとして使用される文字列で、<code>image</code>に渡されます。
7713,軸の限界を指定する長さ2の数値ベクトル.
7714,<code>image</code>に渡される追加の引数、例えば、<code>add=TRUE</code>または<code>useRaster=TRUE</code>.
7715,オブジェクト、デフォルトのメソッドは、単一の変数（説明変数と解釈される）または2ウェイテーブルのいずれかを期待します。  Seedetailsです。
7716,依存変数と解釈される<code>"factor"</code>。
7717,単一依存の<code>"factor"</code>と単一の説明変数を持つ<code>y ~ x</code>型の<code>"formula"</code>です.
7718,オプションのデータフレーム。
7719,説明変数が数値の場合、どのように離散化されるかを制御します。<code>breaks</code>は<code>hist</code>に渡され、引数のリストとすることができます.
7720,y軸注釈の利便性許容パラメータ。2つのラベル間の距離がこの閾値を下回ると、それらは等距離にプロットされます.
7721,バー間の垂直オフセット(単位:パーセント)。スピノグラムでは<code>0</code>に固定され、スパインプロットでは<code>2</code>にデフォルト設定されます.
7722,従属変数のレベルをどの順番でプロットするかを指定する文字または数値ベクトル.
7723,<code>levels(y)</code>と同じ長さの塗りつぶし色のベクトル。デフォルトは<code>gray.cors</code>を呼び出すようになっています。
7724,注釈のための文字列
7725,x軸とy軸の注釈のための文字ベクトル。デフォルトは、スパインプロットの場合、それぞれ<code>levels（y）</code>と<code>levels（x）<code>になります.スピノグラムの<code>xaxlabels</code>では、breakが使用されます。
7726,感覚的なデフォルトを持つxとyの値の範囲。
7727,論理的である。  <code>FALSE</code>の場合、全ての軸(レベル名を与えるものを含む)は抑制されます。
7728,<code>rect</code>に渡される追加引数。
7729,プロットに使用される観測値のサブセットを指定するオプションのベクトル.
7730,因子は未使用のレベルを落とすべきか？デフォルトは<code>FALSE</code>です.
7731,スクリーン行列<em>または</em>4列の行列の行数および列数を記述する2要素ベクトル。行列の場合、各行はNDC単位でスクリーンの左、右、下、上（この順）の値を持つ画面を記述し、デバイス表面の左下隅には0、右上隅には1があることになります。
7732,分割する画面を指定する番号です。  デフォルトは、現在のスクリーンがあればそのスクリーン、なければデバイスの全領域です。
7733,論理：選択された画面をクリアすべきか？
7734,描画(<code>screen</code>)、消去(<code>erase.screen</code>)、閉じる(<code>close.screen</code>)にどの画面を準備するかを示す番号。  (<code>close.screen</code>は、スクリーン番号のベクトルを受け取ります)。
7735,スクリーンに描画する準備の一部として、スクリーンをビアライズすべきかどうかを示す論理値。
7736,全てのスクリーンを閉じるべきかどうかを示す論理的な値。
7737,データの行列またはデータフレーム。<code>x</code>の各行に対して1つのスターまたはセグメントプロットが生成されます。欠落値（<code>NA</code>）は許されますが、それらは（関連する場合、スケーリング後）0であるかのように扱われます。
7738,論理フラグ：<code>TRUE</code>の場合、セグメントプロットは全円を占めるようになります。  そうでない場合は、(上)半円のみを占有する。
7739,論理フラグ: <code>TRUE</code> の場合、データマトリックスの列は、各列の最大値が1、最小値が0となるように独立してスケーリングされます。 <code>FALSE</code> の場合、データは他のアルゴリズムによって範囲 <i>[0, 1]</i> にスケーリングされていると推定されます。
7740,論理フラグ： <code>TRUE</code>の場合、データ中の各変数に対応する半径が描画されます。
S関数<code>stars</code>とは異なり、<code>labels = NULL</code>の場合、ラベルの作成は試みられません.7741,プロットのラベル付け用の文字列のベクトル。
7742,各セグメントプロットを配置するためのxとyの座標を持つ2列の行列; または全てのプロットを重ね合わせる場合(「スパイダープロット」の場合)の長さ2の数値。デフォルトでは、<code>locations = NULL</code>, セグメントプロットは矩形のグリッドに配置される。
7743,整数で、<code>locations</code>が<code>NULL</code>の場合に使用する行と列の数を指定します。  デフォルトでは、<code>nrow == ncol</code>で、正方形のレイアウトが使用されます。
7744,半径やセグメントの長さを表すスケールファクター。
7745,単位キーのxとyの座標を持つベクトル。
7746,単位キーのこれらのセグメントにラベル付けするための文字列のベクトル。  省略された場合、<code>dimnames(x)</code>の第2成分が利用可能であれば、それが使用される。
7747,単位キーのクリッピングスイッチ(描画とラベル付け), <code>par("xpd")</code> を参照.
7748,プロットするx座標の範囲を持つベクトル。
7749,プロットするy座標の範囲を持つベクトル.
7750,ラベルの位置が図から図へ上下に反転させるかどうかを示す論理。デフォルトは、ある程度賢いヒューリスティックです。
7751,論理的である。もし<code>TRUE</code>ならセグメント図を描きます.
7752,色ベクトル(整数または文字、<code>par</code>参照)、それぞれセグメント(変数)の一つの色を指定する。  <code>draw.segments = FALSE</code>の場合は無視されます.
7753,色ベクトル（整数または文字、<code>par</code>参照）、それぞれが星（ケース）の1つの色を指定する。  <code>draw.segments = TRUE</code> の場合は無視されます.
7754,色ベクトル（整数または文字、<code>par</code>参照）、各々が線（ケース）の1つの色を指定する。  <code>draw.segments = TRUE</code> の場合は無視されます.
7755,論理フラグ: <code>TRUE</code> の場合、プロットに軸が追加されます。
7756,論理フラグ：<code>TRUE</code>の場合、プロット領域はフレーム化される。
7757,プロットのメインタイトル.
7758,プロットのサブタイトル.
7759,x軸のラベル.
7760,y軸のラベル.
7761,ラベルの文字拡大率.
7762,描画に使用される線幅。
7763,描画に使用される線種。
7764,クリッピングが行われるべきかどうかを示す論理またはNA、<code>par(xpd = .)</code> を参照。
7765,<code>par(mar=*)</code>への引数で、通常、デフォルトより小さいマージンを選択する。
7766,更なる引数は、<code>plot()</code>の最初の呼び出しに渡され、 <code>plot.default</code> と <code>frame.plot</code> が真の場合<code>box()</code> に参照。
7767,logical, if <code>TRUE</code> <em>add</em> stars to current plot.
7768,logical,もし<code>FALSE</code>なら、何もプロットされない。
7769,数値ベクトルです。
7770,これはプロットの長さを制御します。
7771,プロットの希望する幅。
7772,公差です。
7773,寸法が決定される文字または式ベクトル.  他のオブジェクトは<code>as.graphicsAnnot</code>で強制される。
7774,どの単位で<code>s</code>が測定されるかを示す文字;<code>"user"</code>, <code>"inch"<code>, <code>"figure"<code>のいずれかでなければなりません; 部分一致が行われます.
7775,数値の<b>c</b>文字の<b>ex</b>拡大係数; multipied by <code>par("cex")</code> y y yield the final character size; the default <code>NULL</code> is equivalent to <code>1</code>.
7776,フォントに関する追加情報(グラフィックパラメータ<code>"family"</code>を含む):<code>text</code>を参照.
7777,プロットを作成するためのデータ.  デフォルトの方法では、データは1つの数値ベクトルとして、または、それぞれが構成プロットに対応する数値ベクトルのリストとして指定することができます。  <code>formula</code>法では、<code>y ~ g</code>という形式の記号的指定が与えられ、ベクトル<code>y</code>の観測値が因子<code>g</code>のレベルに従ってグループ化されることを示すことができる。  <code>NA</code>はデータで許可されています。
7778,data.frame（またはリスト）<code>x</code>の変数が取り出されるべきものである。
7779,プロットに使用される観測データのサブセットを指定するオプションのベクトル.
7780,データに<code>NA</code>が含まれる場合にどうするかを示す関数です。  デフォルトは、応答またはグループのどちらかの欠測値を無視することである。
7781,デフォルトのメソッドに渡される追加パラメータ、または<code>plot.window</code>に渡される<code>points</code>、<code>axis</code>、<code>title</code>によりプロットの外観を制御する。
7782,一致する点を分離するために使用する方法。デフォルトの方法<code>"overplot"</code>はそのような点をオーバープロットするが、<code>"jitter"</code>を指定して点をずらすことも可能で、<code>"start"</code>一致する点を重ねることも可能である。  最後の方法は、非常に粒度の細かいデータに対してのみ意味を持つ。
7783,<code>method="jitter"</code>が使用された場合、<code>jitter</code>はジッターの適用量を与える。
7784,stackingが使用された場合、ポイントはこのmanyline-heights（シンボル幅）間隔で積み重ねられる(stacking)。
7785,verticalが<code>TRUE</code>の場合、プロットはデフォルトの水平ではなく、垂直に描かれます。
7786,各プロットの横(または下)に印刷されるラベルをグループ化します。
7787,logical,trueの場合、<em>add</em>で現在のプロットにチャートを追加します。
7788,特に<code>add = TRUE</code>の時、チャートが描かれるべき場所を示す数値ベクトル; デフォルトは<code>1:n</code>で、<code>n</code>はボックス数である.
7789,ラベル: <code>title</code>を参照して下さい。
7790,軸ラベルを指定する別の方法: '詳細'を参照してください。
7791,プロットの制限: <code>plot.window</code>を参照して下さい。
7792,どの軸で対数スケールを使うか: <code>plot.default</code> を見て下さい。
7793,グラフィカルパラメーター: <code>par</code>をご覧下さい。
7794,軸の制御：<code>plot.default</code>を参照して下さい。
7795,次元が決定される文字または式ベクトル。  他のオブジェクトは<code>as.graphicsAnnot</code>で強制される。
7796,どの単位で<code>s</code>が測定されるかを示す文字;<code>"user"</code>, <code>"inch"<code>, <code>"figure"<code>のいずれかでなければなりません; 部分一致が行われます.
7797,数値の<b>c</b>文字の<b>ex</b>拡大係数; multipied by <code>par("cex")</code> y yield the final character size; the default <code>NULL</code> is equivalent to <code>1</code>.
7798,フォントに関する追加情報(グラフィックパラメータ<code>"family"</code>を含む):<code>text</code>を参照.
7799,長さ<code>n</code>の<code>x</code>座標の数値ベクトル、または<code>plot.default</code>のように他の有効なプロット構造、<code>xy.coords</code>も参照して下さい.
7800,長さ<code>n</code>の<code>y</code>座標を表す数値ベクトル.
7801,長さ<code>n</code>の整数ベクトル.<code>number[i]</code> = <code>(x[i], y[i])</code> の複製数, 0かもしれません。<br>デフォルト (<code>missing(number)</code>): <code>x[], y[]</code> の点の正確な多重度を計算します(<br>proxyTable()</code>) 。
7802,対数座標スケールを示す文字、<code>plot.default</code>を参照して下さい。
7803,<code>number</code>が計算される時（つまり、指定されない時）、<code>x</code>と<code>y</code>は乗数が計算される前に<code>digits</code>有効数字に丸められます.
7804,x軸、y軸の文字ラベルをそれぞれ指定する。
7805,<code>numeric(2)</code>はx軸、またはy軸の範囲を限定する。
7806,logical;プロットは前のプロットの上に追加されるべきか？ デフォルトは<code>FALSE</code>です。
7807,logical;もし<code>TRUE</code>なら、ひまわりをランダムに回転させる(アーティファクトを防止する)。
7808,点(<code>number[i]==1</code>)とヒマワリの中心に使用するプロット文字.
7809,数値; 中心点の文字サイズ拡大(s. <code>pch</code>).
7810,数値 <em>shrinking</em> factor for the center points <em>when are flower leaves</em>, すなわち、これらには <code>cex / cex.fact</code> が使用される.
7811,プロットシンボルの色、<code>plot.default</code>に渡されます。
7812,ヒマワリの葉のインチ数, 1[in] := 2.54[cm].Default: 1/8", 約3.2mm.
7813,ひまわりの葉を作る<b>セグ</b>メントに使う色。<code>par(col=)</code>を参照; <code>col = "gold"</code> 本物のひまわりを思わせる。
7814,numeric;葉のセグメントのための線幅。
7815,<code>plot</code>への更なる引数 [if<code>add = FALSE</code>]、または他のメソッドに渡すか、または他のメソッドから渡される。
7816,<code>y〜x</code>のような<code>formula</code>を指定します。
7817,data.frame（またはリスト）で、<code>formula</code>の変数が取り出されるべきものです。
7818,フィッティング処理に使用する観測値のサブセットを指定するオプションのベクトル.
7819,データに<code>NA</code>が含まれる場合にどうするかを示す関数です。  デフォルトでは、欠損値がある場合は無視されます。
7820,記号の中心のxとyの座標。<code>xy.coords</code>が受け付ける任意の方法で指定することができる。
7821,円の半径を示すベクトル.
7822,正方形の辺の長さを示すベクトル.
7823,2つの列を持つ行列。  最初の列は長方形の幅を、2番目の列は高さを示す。
7824,星の中心からの光線の長さを示す3つ以上の列を持つマトリックス.  <code>NA</code>の値は0に置き換えられます.
7825,3列または4列のマトリックス。  最初の2列は温度計のシンボルの幅と高さである。3つの列がある場合、3番目の列は比率として扱われます：温度計は底辺から高さのこの比率まで（色<code>fg</code>を使用して）塗りつぶされています。  4つの列がある場合、3番目と4番目の列が比率として扱われ、サーモメーターは高さのこの2つの比率の間で満たされます。  <code>fg</code>で塗りつぶされなかった部分は、<code>bg</code>で与えられた背景色（デフォルトは透明）で塗りつぶされます。
7826,5つの列を持つ行列。  最初の2列はボックスの幅と高さ、次の2列は下ヒゲと上ヒゲの長さ、5列目は中央線が描かれるボックスの上方への割合(〔0,1〕でない場合は警告)である。
7827,<code>TRUE</code>、<code>FALSE</code>または正の数。「詳細」を参照。
7828,<code>add</code>が<code>TRUE</code>の場合、シンボルは既存のプロットに追加され、そうでなければ、新しいプロットが作成されます。
7829,シンボルが描かれる色(複数可)
7830,指定された場合、シンボルは色で塗りつぶされ、ベクトル<code>bg</code>はシンボルの数だけリサイクルされます.デフォルトはシンボルを塗りつぶさないままです.
7831,<code>add</code>がtrueでない場合のプロットのxラベル。デフォルトは<code>x</code>に使われる<code>deparse</code>d式である.
7832,プロットのyラベルを指定します。  <code>add = TRUE</code>の場合は未使用です.
7833,プロットのメインタイトル.  <code>add = TRUE</code>の場合は未使用です.
7834,長さ2の数値ベクトルで、プロットのx限界を指定します.  <code>add = TRUE</code>の場合は未使用です.
7835,長さ2の数値ベクトルで、プロットのy限界を指定します.  <code>add = TRUE</code>の場合は未使用です.
7836,グラフィックパラメータは、プロットのアスペクト比<code>asp</code>と同様にこの関数に渡すこともできます(<code>plot.window</code>参照)。
7837,テキスト<code>ラベル</code>を書き込むべき座標の数値ベクトル。  <code>x</code>と<code>y</code>の長さが異なる場合、短い方が再利用されます。
7838,書き込むべき<em>テキスト</em>を指定する文字ベクトルまたは式。  もし<code>labels</code>が<code>x</code>と<code>y</code>より長ければ、座標は<code>labels</code>の長さにリサイクルされる。
7839,ラベルのx(任意でy)調整('justification')を指定する<i>[0, 1]</i>の1つか2つの値で、0は左/下、1は右/上、0.5は中央を意味します.  ほとんどのデバイスでは、<i>[0, 1]</i>以外の値でも動作します。  下記参照。
7840,テキストの位置指定子。  指定された場合、これは与えられた<code>adj</code>値を上書きする。  <code>1</code>,<code>2</code>,<code>3</code>,<code>4</code> の値は、それぞれ指定された <code>(x,y)</code> 座標より下、左、上、右の位置を示す。
7841,<code>pos</code>が指定されると、この値は、指定された座標からのテキストラベルの距離（'オフセット'）を文字幅の端数で制御します。
7842,<code>NULL</code>で現在のフォントファミリーを、Hersheyベクターフォントでは長さ2の文字ベクトルを指定します。  ベクトルの最初の要素は書体を、2番目の要素はスタイルを選択する。  <code>labels</code> が式である場合は無視されます。
7843,数値の<b>c</b>文字の<b>ex</b>拡大係数; multiputed by <code>par("cex")</code> y yield the final character size.<code>NULL</code> and <code>NA</code> are equivalent to <code>1.0</code>.
7844,使用する色と(<code>vfont = NULL</code>の場合)フォント、場合によってはベクター。  これらのデフォルトは、<code>par()</code>のグローバルグラフィカルパラメータの値である。
7845,（<code>par</code>の）更なるグラフィックパラメータ、例えば<code>srt</code>, <code>family</code>と<code>xpd</code>.
7846,テキスト<code>ラベル</code>を書き込むべき座標の数値ベクトル.  <code>x</code>と<code>y</code>の長さが異なる場合、短い方が再利用される。
7847,書き込むべき<em>テキスト</em>を指定する文字ベクトルまたは式。  もし<code>labels</code>が<code>x</code>と<code>y</code>より長ければ、座標は<code>labels</code>の長さにリサイクルされる。
7848,<i>[0,1]</i>に1つまたは2つの値を指定し、ラベルのx（およびオプションでy）調整（'justification'）を指定します, 0は左/下, 1は右/上, そして 0.5 は中央.  ほとんどのデバイスでは、<i>[0, 1]</i>以外の値でも動作します。  下記を参照。
7849,テキストの位置指定子。  指定された場合、これは与えられた<code>adj</code>値を上書きする。  <code>1</code>,<code>2</code>,<code>3</code>,<code>4</code> の値は、それぞれ指定された <code>(x,y)</code> 座標より下、左、上、右の位置を示す。
7850,<code>pos</code>が指定された場合、この値は指定された座標からのテキストラベルの距離（'オフセット'）を文字幅の端数で制御します。
7851,<code>NULL</code>で現在のフォントファミリーを、Hersheyベクターフォントでは長さ2の文字ベクトルを指定します。  ベクトルの最初の要素は書体を、2番目の要素はスタイルを選択する。  <code>labels</code> が式である場合は無視されます。
7852,数値の<b>c</b>文字の<b>ex</b>拡大係数; multiputed by <code>par("cex")</code> y yes the final character size.<code>NULL</code> and <code>NA</code> are equivalent to <code>1.0</code>.
7853,使用する色と（<code>vfont = NULL</code>の場合）フォント、場合によってはベクター。  これらのデフォルトは、<code>par()</code>のグローバルグラフィカルパラメータの値である。
7854,さらなるグラフィカルパラメータ(<code>par</code>から)、例えば、<code>srt</code>、<code>family</code>、<code>xpd</code>など.
7855,メインタイトル(上)は、フォント、サイズ(文字拡張)、色を使用する <code>par(c("font.main", "cex.main", "col.main"))</code>.
7856,サブタイトル(下)のフォント、サイズ、色 <code>par(c("font.sub", "cex.sub", "col.sub")) </code>.
7857,フォント、サイズ、色を使ったX軸ラベル <code>par(c("font.lab", "cex.lab", "col.lab"))</code>.
7858,Y軸ラベル、<code>xlab</code>と同じフォント属性。
7859,<code>line</code>に値を指定すると、ラベルのデフォルトの配置を上書きし、プロットエッジからこの数行外側に配置します。
7860,論理値です。  <code>TRUE</code>の場合、タイトルはプロットの外側の余白に配置されます.
7861,<code>par</code>からさらにグラフィカルなパラメータを指定します。  例えば、<code>col.main</code>や<code>cex.sub</code>のように、<code>col</code>や<code>cex</code>だけの代わりに使用します。  <code>adj</code>はタイトルの両端揃えを制御します。<code>xpd</code>はクリッピング領域を設定するのに使われます: これは、<code>outer = TRUE</code> でなければ図領域に、さもなければデバイス領域に、増加できるのみというデフォルト値になっています。  <code>mgp</code>は、軸タイトルのデフォルトの配置を制御します。
7862,数値ベクトル
7863,長さ1または2の数値。
7864,論理; <code>TRUE</code>の場合、アクティブログスケールの場合、警告が表示されます。
7865,ポリゴンの頂点の座標を含むベクトル.代替案として<code>xy.coords</code>を参照してください。
7866,制御点に対するスプラインの形状を制御する-1から1までの値の数値ベクトル。
7867,スプラインが開いた形状か閉じた形状かを示す論理値です。
7868,オープンXスプラインの場合、曲線を描くために最初と最後の制御点を複製するかどうかを示す論理値である。閉じたX-スプラインの場合は無視されます。
7869,logical:Xスプラインを描くべきか？  falseの場合、曲線を描くための線分のセットが返され、何も描かれません。
7870,曲線を描画する色。   ボーダーは<code>border = NA</code>を使用することで省略可能です。
7871,図形を塗りつぶすための色です。デフォルトは<code>NA</code>で、塗りつぶさない。
7872,引数として<code>lty</code>, <code>xpd</code>,<code>lend</code>,<code>ljoin</code>,<code>lmitre</code>などの図形パラメータを与えることができる。
7873,数値ベクトル
7874,長さ1または2の数値。
7875,論理; <code>TRUE</code>の場合、アクティブなログスケールの場合に警告を表示します.
7876,数値ベクトル
7877,長さ1または2の数値.
7878,logical;もし<code>TRUE</code>なら、警告がアクティブログスケールの場合に表示されます。
7879,n×mの行列(m=1ならベクトル)
7880,m×pの行列(またはm=1の場合のベクトル)
7881,長方形の行列またはデータフレーム(おそらく相関行列)
7882,関数に応じたデータマトリックスまたはデータフレームまたはベクトル
7883,データマトリックスまたはデータフレームまたはベクトル
7884,因子分析(fa)又は主成分分析(principal)から返されるオブジェクトです。
7885,桁に丸める
7886,lowerCorでminlengthに省略される
7887,ペアワイズ削除を行うべきか、それともcorの他のオプションのいずれかを行うべきか
7888,相関行列の対角線上にNAがあるかどうか調べるべきか
7889，"pearson"、"kendall"、"spearman"
7890,ループする変数の現在値
7891,ループが達成する最大値
7892、どの関数がループしているか
7893,逆キーイングされる因子または成分(因子番号で)
7894,char2numericのflag=TRUEは、数値であった変数にフラグを立てます。
7895,この項目で可能な限りの情報を修正します。
7896,log関数のベースは何ですか（default=2, e implies base = exp(1))
7897,アクティブにしてから、すべての例をテストさせるパッケージ（またはパッケージのリスト）の名前。
7898,このパッケージの依存関係を見つける(例: psych)
7899,どのタイプの依存関係を調べるか？
7900,依存関係を調べ、そしてそのすべての例をテストする
7901,これらの依存関係をテストしないでください
7902,データフレームまたはマトリックスから選択する
7903,名前fromの列から名前toの列を選択する
7904,列から列を選択してください。
7905,正当なオブジェクトの任意の文字列
7906,データのdata.frameまたは行列、または共分散行列または相関行列
7907,キーが反転する項目がある場合、全ての項目の方向を指定するか、どの項目を反転させるかのベクトルだけを指定します。
7908,この実行を識別するための任意のテキスト文字列
7909,meanは項目の合計を反映するか、項目の平均を反映するか。  デフォルト値はmeansである。
7910,カテゴリー頻度を報告する場合に考慮すべきカテゴリー/アイテムの数。  デフォルトは10で、<code>link{response.frequencies}</code>に渡されます。
7911,デフォルトは欠損値を除去し、ペアワイズ相関を求める。
7912,TRUEの場合、第一主成分を見つけ、負の荷重を持つ主要な項目を逆に見つける。  この場合、警告を出す。
7913,ブートストラップ信頼区間が必要な場合の反復回数
7914,分散がない項目を削除し、警告を出します。
7915,cor関数に渡すオプション："everything", "all.obs", "complete.obs", "na.or.complete", または "pairwise.complete.obs".デフォルトは "pairwise "です。
7916,デフォルトでは、警告と項目が逆であったというメッセージを表示します。warnings = FALSEの場合、メッセージは表示されない。
7917,信頼区間に使用する値
7918,相関行列を入力として使う場合、観測点数を指定することで信頼区間を求めることができる
7919,欠損データをどのようにインプットすればよいですか？全くない、中央値、平均値
7920,尺度の項目数(r.barを求めるため)
7921,信頼区間の幅（pval/2～1-p.val/2)
7922,α.ciに使用する桁数
7923,データのdata.frameまたは行列、または共分散行列または相関行列
7924,キーが反転する項目がある場合、全ての項目の方向を指定するか、どの項目を反転させるかのベクトルだけを指定します。
7925,この実行を識別するための任意のテキスト文字列
7926,meansは項目の合計を反映するか、項目の平均を反映するかを指定します。  デフォルト値はmeansです。
7927,カテゴリー頻度を報告する場合に考慮すべきカテゴリー/アイテムの数。  デフォルトは10で、<code>link{response.frequencies}</code>に渡されます。
7928,デフォルトは欠損値を除去してペアワイズ相関を見つけることです
7929,TRUEの場合、第一主成分を見つけ、負の負荷量を持つ主要な項目を逆にする。  この場合、警告を出す。
7930,ブートストラップされた信頼区間が必要な場合の反復回数
7931,分散がない項目を削除し、警告を出します。
7932,cor関数に渡すオプション："everything", "all.obs", "complete.obs", "na.or.complete", または "pairwise.complete.obs".デフォルトは "pairwise "です。
7933,デフォルトでは、警告と項目が逆であったというメッセージを表示します。warnings = FALSEの場合、メッセージは表示されません。
7934,信頼区間に使用する値
7935,相関行列を入力として使う場合、観測点数を指定することで信頼区間を求めることができます。
7936,欠損データをどのようにインプットすればよいですか？全くない、中央値、平均値
7937,尺度の項目数(r.barを求めるため)
7938,信頼区間の幅（pval/2～1-p.val/2)
7939,α.ciに使用する何桁の数字か
7940,<code>setCor</code>、<code>mmediate</code>、<code>omega</code>、<code>fa</code>からのオブジェクト。
7941,同じタイプのより多くのオブジェクトをここで供給することができる。
7942,TP、FP、FN、TN値の4×1ベクトルまたは2×2テーブル（下記参照）カウントまたは比率であってもよい。
7943,成功した結果または実際の症状の基準率(tが指定されていない場合)
7944,候補または診断の選択率(tが特定されない場合)
7945,予測変数と結果変数の間のPhi相関係数(tが特定されない場合)
7946,ValidPositives（合格した選択された応募者；正しい診断）の数(tとPhiが指定されていない場合)
7947,変数1、2の名前
7948, "b"（両方）、"d"（決定理論）、"a"（Auc）、または "n "どちらでもない。
7949,真の場合、ノイズ分布はゼロに中心を置く。
7950,セルの値が0の場合、正解に置き換わる。(なぜこれが必要なのかについては<code>tetrachoric</code>を参照してください)
7951,VPとFPの色の選択、デフォルトは=c("blue", "red")ですが、色を避けたい場合はc("gray", "black")にすることができます。
7952,ベクトル、data.frameまたはマトリックス。
7953,<code>diff</code>を求める時に使うラグ。
7954,グループ分けに使用するx data.frameの列
7955,欠損データは削除すべきですか？
7956,autoRで欠損データを処理する方法について
7957,.
7958,相関行列または因数分解に適したデータ行列
7959,1からnfactorsまでの因子が抽出されます。nfactorsがベクトルの場合、ベクトルで指定された因子の数だけ抽出されます。(例参照)。
7960,因子法。  デフォルトは'minres'ファクタリングです。  ただし、元のGoldbergの論文と整合性をとるために、主成分を行うこともできます（fm ="pca"）。
7961,どのような回転を適用するか。  因子のデフォルトはobliminです。  デフォルトがvarimaxである通常のpcaの呼び出しとは異なり、bassAckwardではpcaのデフォルトはobliminである。
7962,どのような因子スコアリング・アルゴリズムを使用するか。デフォルトは "tenBerge "で、他の可能性としては "regression "や "bartlett "があります。
7963,tenBerge以外のスコアリング方法を使用する場合、因子スコア適合の欠如のために相関を調整する必要がありますか？
7964,デフォルトでbassAckwardダイアグラムを描画します。
7965,欠損データをどう扱うか。  Use='pairwise "はペアワイズ完全相関を求める。
7966,どのような相関を見つけるか。  デフォルトはPearsonです。
7967,ケースに重みをつけるか？  デフォルトでは、いいえです。
7968,テトラコリックまたはポリコリック相関を見つける場合、空のセルにどのような補正を適用するか (デフォルトは0.5)
7969,bassAckwardが返すオブジェクト
7970,各パスに表示する桁数
7971,abs(cut)よりも大きな値がパス図に表示されます。
7972,ラベルはbassAckward関数の出力から取るか、リストとして指定することができます。
7973,余白が通常より少し大きくなるように設定され、よりきれいなダイアグラムにすることができます
7974,図のメインタイトル
7975,TRUEの場合、因子に関連する項目を表示する
7976,TRUEの場合、因子負荷量によって項目をソートする
7977,図形を左から右へ描くか、上から下へ描くか
7978,同じレベルの因子間の相関を表示するかどうか
7979,より見やすい図にするために最低レベルの2つの因子の名前を変えて並べ替える
7980,TRUEの場合、この因子によって占められる分散のパーセントを表示する。
7981,その他のグラフィックパラメーター(例:cex)
7982,相関行列または因数分解に適したデータ行列
7983,1からnfactorsまでの因子が抽出されます。nfactorsがベクトルの場合、ベクトルで指定された因子の数だけ抽出されます。(例参照)。
7984,因子法。  デフォルトは'minres'ファクタリングです。  ただし、元のGoldbergの論文と整合性を取るために、主成分（fm ="pca"）を行うこともできる。
7985,どのような回転を適用するか。  因子のデフォルトはobliminです。  デフォルトがvarimaxである通常のpcaの呼び出しとは異なり、bassAckwardでは、pcaのデフォルトはobliminである。
7986,どのような因子スコアリング・アルゴリズムを使用するか。デフォルトは "tenBerge "で、その他に "regression "や "bartlett "がある。
7987,tenBerge以外のスコアリング方法を使用する場合、因子スコア適合の欠如のために相関を調整する必要がありますか？
7988,デフォルトでbassAckwardダイアグラムを描画します。
7989,欠損データをどう扱うか。  Use='pairwise "はペアワイズ完全相関を求めます。
7990,どのような相関を見つけるか。  デフォルトはPearsonです。
7991,ケースに重みをつけるか？  デフォルトはnoです。
7992,テトラコリックまたはポリコリック相関を見つける場合、空のセルにどのような補正を適用するか (デフォルトは0.5)
7993,bassAckwardが返すオブジェクト
7994,各パスに表示する桁数
7995,abs(cut)よりも大きい値がパス図に表示されます。
7996,ラベルはbassAckward関数の出力から取るか、リストとして指定することができます。
7997,余白が通常より少し大きくなるように設定され、よりきれいなダイアグラムにすることができます。
7998,図のメインタイトルを指定します。
7999,TRUEの場合、要因に関連する項目を表示する
8000,TRUEの場合、因子負荷量によって項目をソートする
